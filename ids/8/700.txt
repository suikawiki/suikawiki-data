
* 仕様書
[REFS[
- [7] [CITE@en-US[DOM Standard]] ([TIME[2013-04-26 20:00:45 +09:00]] 版) <http://dom.spec.whatwg.org/#interface-event>
]REFS]

* 状態

[8] [[イベント]]は次の状態を持ちます。
[FIG(list members)[
:[[インターフェイス]]:[CODE(DOMi)@en[[[Event]]]] か、それを[[継承]]した[[インターフェイス]]を使います。
:[9] [CODE(DOMa)@en[[[type]]]] [[属性]] ([[イベント型]]):
:[10] [CODE(DOMa)@en[[[target]]]] [[属性]]:
:[11] [CODE(DOMa)@en[[[currentTarget]]]] [[属性]]:
:[29] [CODE(DOMa)@en[[[bubbles]]]]:
:[30] [CODE(DOMa)@en[[[cancelable]]]]:
:[12] [[伝播停止フラグ]]:
:[13] [[直ちに伝播停止フラグ]]:
:[14] [[取り消し済みフラグ]]:
:[15] [[初期化済みフラグ]]:
:[16] [[派遣フラグ]]:
: [F[[[受動的リスナー内フラグ]]]] :
[[受動的]]な[[イベントリスナー]]の処理中かどうかのフラグです。
[CODE(DOMm)@en[[[preventDefault]]]] [[メソッド]]の動作に影響します。
:[17] [CODE(DOMa)@en[[[isTrusted]]]] [[属性]]:
:[18] [CODE(DOMa)@en[[[timeStamp]]]] [[属性]]:
]FIG]

[19] [CODE(DOMi)@en[[[Event]]]] を[[継承]]する子インターフェイスは、
それぞれの追加の状態を持ちます。

* 子インターフェイス

[20] [CODE(DOMi)@en[[[Event]]]] を[[継承]]した子インターフェイスはたくさんあります。
[FIG(short list)[
- [CODE(DOMi)@en[[[CloseEvent]]]]
- [CODE(DOMi)@en[[[CustomEvent]]]]
- [CODE(DOMi)@en[[[KeyboardEvent]]]]
- [CODE(DOMi)@en[[[MouseEvent]]]]
- [CODE(DOMi)@en[[[MutationEvent]]]]
- [CODE(DOMi)@en[[[ProgressEvent]]]]
- [CODE(DOMi)@en[[[UIEvent]]]]
- [CODE(DOMi)@en[[[ErrorEvent]]]]
- [CODE(DOMi)@en[[[PopStateEvent]]]]
- [CODE(DOMi)@en[[[HashChangeEvent]]]]
- [CODE(DOMi)@en[[[PageTransitionEvent]]]]
- [CODE(DOMi)@en[[[PromiseRejectionEvent]]]]
- [CODE(DOMi)@en[[[BeforeUnloadEvent]]]]
]FIG]

* イベントの生涯

[31] [[イベント]]は次のように進行します。
[FIG(steps)[
= [32] [[イベント]]オブジェクトの作成
= [33] 初期化 (>>21)
= [34] [[dispatch]]
= [35] [[既定動作]]
]FIG]

;; [36] >>35 は [[DOM3]] までは存在していましたが、 [[DOM Standard]] では明示的に言及していません。
ただし概念的に相当するものは現在も残っています。

[37] [[Webブラウザー]]により生成される[[イベント]]は通常「[[発火]]」によって >>32、>>33、>>34
が順に行われ、その後 >>35 が存在すれば実行されることになります。

[38] [[DOM2]] と [[DOM3]] の処理モデルによれば >>32 は [CODE(DOMm)@en[[[createEvent]]]]、
>>33 は [CODE(DOMm)@en[[[initEvent]]]] 系メソッド、 >>34 は [CODE(DOMm)@en[[[dispatchEvent]]]]
によって実行でき、 >>34 の返り値によって >>35 の実行可否を判断できることになっていました。
現在でも[[著者]]による [[JavaScript]] コードはこの流れで[[イベント]]を実行させられますが、
古い方法となっています。

[39] [[DOM Standard]] によれば >>32 と >>33 は [CODE(DOMi)@en[[[Event]]]] の[[コンストラクター]]により実行でき、
>>34 と >>35 は >>38 同様に [CODE(DOMm)@en[[[dispatchEvent]]]] を利用できます。ただし >>37
の場合とは [CODE(DOMa)@en[[[isTrusted]]]] の値が変わりますから、[[著者]]による [[JavaScript]]
が [[Webブラウザー]]と同一の[[イベント]]を発生させることは現在ではできなくなっています。

[40] [CODE(DOMi)@en[[[Event]]]] [[インターフェイス]]とそれを[[継承]]するほとんどの[[インターフェイス]]は、
[[コンストラクター]]を持ちます。

[41] [CODE(DOMi)@en[[[BeforeUnloadEvent]]]] [[インターフェイス]]は、
[[コンストラクター]]を持ちません。

* 初期化

[21] [[イベント]]は作成されたあと[DFN[[RUBYB[初期化]@en[initialize]]]]する必要があります。
初期化により [CODE(DOMa)@en[[[type]]]], [CODE(DOMa)@en[[[bubbles]]]],
[CODE(DOMa)@en[[[cancelable]]]] の値が設定されます。また[[イベント型]]依存の各種の値も同時に設定されます。

[22] 初期化すると[DFN[[RUBYB[[[初期化済みフラグ]]]@en[initialized flag]]]]が設定されます。

[23] 初期化は[[派遣フラグ]]が設定されるまでは何度でも行えます。

[24] 初期化は2通りの方法で実行できます。
[FIG(list)[
- [25] [CODE(DOMi)@en[[[Event]]]] や子インターフェイスの[[構築子]]により、オブジェクト生成と同時に行う
- [26] [CODE(DOMm)@en[[[initEvent]]]] メソッドで行う
]FIG]

[27] >>26 は [[DOM2]] から用意されていた方法です。また当初 [[DOM3]]
では [CODE(DOMm)@en[[[initEventNS]]]] メソッドも定義されていました。更に、
[CODE(DOMi)@en[[[Event]]]] の子インターフェイスはそれぞれ
[CODE(DOMm)@en[[[initMouseEvent]]]] や [CODE(DOMm)@en[[[initMouseEventNS]]]]
のようなメソッドを定義していました。

[28] >>26 は 2012年頃に [[DOM Standard]] に追加された方法です。初期の 
[[DOMイベント]]の実装には存在していません。現在ではこちらの方法を使うのが望ましいとされ、
[CODE(DOMm)@en[[[initEvent]]]] 系のメソッドは互換性のために必要なものを除き仕様からも削除されています。

* メンバー

[1]  
,[CODE(DOMa)@en[[[altKey]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[altLeft]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[behaviorCookie]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[behaviorPart]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[bookmarks]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[boundElements]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[button]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[cancelBubble]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[clientX]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[clientY]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[contentOverflow]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[ctrlKey]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[ctrlLeft]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[data]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[dataFld]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[dataTransfer]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[fromElement]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMm)@en[[[getAttribute]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[height]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[imeCompositionChange]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[imeNotifyCommand]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[imeNotifyData]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[imeRequest]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[imeRequestData]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[keyboardLayout]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[keyCode]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[layerX]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[layerY]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[modifiers]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[nextPage]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[offsetX]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[offsetY]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[pageX]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[pageY]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[propertyName]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[qualifier]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[reason]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[recordset]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMm)@en[[[removeAttribute]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[repeat]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[returnValue]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[screenX]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]]), [CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[screenY]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]]), [CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMm)@en[[[setAttribute]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[shiftKey]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[shiftLeft]]]],"[CODE(DOMi)@en[[[HTMLEventObj3]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[srcElement]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[srcFilter]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[srcUrn]]]],"[CODE(DOMi)@en[[[HTMLEventObj2]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[target]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[toElement]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[type]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]]), [CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[wheelDelta]]]],"[CODE(DOMi)@en[[[HTMLEventObj4]]]] ([[Trident]])"
,[CODE(DOMa)@en[[[which]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[width]]]],"[CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[x]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]]), [CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"
,[CODE(DOMa)@en[[[y]]]],"[CODE(DOMi)@en[[[HTMLEventObj]]]] ([[Trident]]), [CODE(DOMa)@en[[[event]]]] ([[JavaScript 1.2]])"


[2] [CITE[''''''[''''''whatwg'''''']'''''' Enhancement request: change EventSource to allow cross-domain access]]
( ([TIME[2011-06-18 08:38:12 +09:00]] 版))
<http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-June/032152.html>

[3] [CITE[Simplified initializing of synthetic events — Anne’s Blog]]
([TIME[2011-06-23 18:44:14 +09:00]] 版)
<http://annevankesteren.nl/2011/06/initializing-events>

[4] [CITE[Simplified initializing of synthetic events — Anne’s Blog]]
([TIME[2011-06-23 18:44:14 +09:00]] 版)
<http://annevankesteren.nl/2011/06/initializing-events>

[5] [CITE[IRC logs: freenode / #whatwg / 20110926]]
( ([TIME[2011-09-28 23:19:21 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20110926>

[6] [CITE@en-US[XBL 2.0]]
( ([TIME[2012-05-03 02:23:03 +09:00]] 版))
<http://dev.w3.org/2006/xbl2/Overview.html#the-eventxbl-interface>