[3] [DFN[[RUBY[開放型リダイレクト器][オープンリダイレクター][open redirector]]]]は、
任意の [[URL]] へと[[リダイレクト]]させることができる[[エンドポイント]]です。

[EG[
[4] 例えば <http://www.example.com/?url=http://example.net/> にアクセスすると
<http://example.net/> に[[リダイレクト]]されるように、任意の [CODE[url]]
の指定に対してそれを[[リダイレクト]]先の [[URL]] として使われるようになっている時、
これを[[開放型リダイレクト器]]といいます。
]EG]

[5] [[開放型リダイレクト器]]は、それが直ちに[[セキュリティー]]上の問題となるとは断言できません。
場合によっては必要があって[[開放型リダイレクト器]]が用意されていることもあります。
しかし意図せず[[開放型リダイレクト器]]となってしまっている[[エンドポイント]]も少なくなく、
その多くは[[セキュリティー]]上の問題を抱えています。

* セキュリティー上の問題の例

[6] 何らかの処理を行った後に指定した [[URL]] に[[リダイレクト]]する形の[[エンドポイント]]の場合、
当該サイトの続きであるように見せかけた[[フィッシング]]目的のサイトを作りやすくしてしまいます。
例えばある[[Webサービス]]の[[ログイン]]機能が[[開放型リダイレクト器]]となっている場合、
[[フィッシング]]サイトは正当なサイトへの[[ログイン]]後引き続き正当なサイトを利用しているかのように見せかけることができてしまいます。
[[CSRF]] のような他の[[脆弱性]]との組み合わせで、正当な[[ログイン]]後に正当なサイトに対して不正な利用をさせてしまう可能性もあります。

[7] 指定された [[URL]] に付加情報を含めて[[リダイレクト]]する形の[[エンドポイント]]では、
本来秘密であるべき付加情報を第三者に漏らしてしまうことになります。
例えば [[OAuth]] は[[リダイレクトURL]]に [[credentials]] を追加して[[リダイレクト]]するため、
これが[[開放型リダイレクト器]]となっていると[[認証]]に使われるトークンを第三者に送ってしまうことになります。

[8] [[リダイレクト]]先の [[URL]] の種類によっては、[[利用者]]の [[Webブラウザー]]に危険な動作をさせてしまうことがあります。
例えば [CODE(URI)@en[[[javascript:]]]] [[URL]] が指定されると、意図せず [[JavaScript]]
が自動的に実行されてしまうかもしれません。

* 開放型リダイレクト器への言及

[REFS[
- [1] [CITE@en[RFC 6749 - The OAuth 2.0 Authorization Framework]] ([TIME[2014-12-15 14:15:35 +09:00]] 版) <http://tools.ietf.org/html/rfc6749#section-3.1.2.2>
- [2] [CITE@en[RFC 6749 - The OAuth 2.0 Authorization Framework]] ([TIME[2014-12-15 14:15:35 +09:00]] 版) <http://tools.ietf.org/html/rfc6749#section-10.15>
]REFS]