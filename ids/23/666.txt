* 関連

[8] [[CBOR]] 版の [[CWT]] もあります。

* 歴史

[1] [CITE@en[draft-ietf-oauth-json-web-token-32 - JSON Web Token (JWT)]]
([TIME[2015-01-13 11:57:47 +09:00]] 版)
<https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32>

[2] [CITE@en[draft-ietf-oauth-jwt-bearer-12 - JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants]]
([TIME[2015-01-13 05:24:39 +09:00]] 版)
<http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-12>

[3] [CITE@en[RFC 7519 - JSON Web Token (JWT)]]
([TIME[2015-05-20 09:55:25 +09:00]] 版)
<https://tools.ietf.org/html/rfc7519>

[4] [CITE@en[RFC 7521 - Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants]] ([TIME[2015-05-28 13:43:35 +09:00]] 版) <https://tools.ietf.org/html/rfc7521>

[5] [CITE@en[RFC 7523 - JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants]] ([TIME[2015-05-28 13:43:53 +09:00]] 版) <https://tools.ietf.org/html/rfc7523>

[6] [CITE@en[RFC 7800 - Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)]]
([TIME[2016-04-14 20:45:18 +09:00]] 版)
<https://tools.ietf.org/html/rfc7800>

[FIG(quote)[
[FIGCAPTION[
[7] [CITE@en[Volkswagen Infotainment Web Interface protocol definition]]
([TIME[2016-12-24 01:55:51 +09:00]])
<https://www.w3.org/Submission/2016/SUBM-viwi-protocol-20161213/>
]FIGCAPTION]

> JWT tokens will be sent in the Authorization header, following with term JWT and a space character.
> Example that assumes eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSm9obiBEb2UifQ.xuEv8qrfXu424LZk8bVgr9MQJUIrp1rHcPyZw_KSsds is the actual token:
>   GET /<service>/<resource> HTTP/1.1
>   Host: 127.0.0.1:1337
>   Authorization: JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSm9obiBEb2UifQ.xuEv8qrfXu424LZk8bVgr9MQJUIrp1rHcPyZw_KSsds
> 

]FIG]


[9] [CITE[Stop using JWT for sessions - joepie91's Ramblings]]
( ([TIME[2016-08-16 04:42:57 +09:00]]))
<http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/>

[10] [CITE[Stop using JWT for sessions, part 2: Why your solution doesn't work - joepie91's Ramblings]]
( ([TIME[2016-08-16 04:42:57 +09:00]]))
<http://cryto.net/~joepie91/blog/2016/06/19/stop-using-jwt-for-sessions-part-2-why-your-solution-doesnt-work/>

[FIG(quote)[
[FIGCAPTION[
[11] [CITE@en[Mapbox API Documentation]]
([TIME[2017-05-10 01:21:59 +09:00]])
<https://www.mapbox.com/api-documentation/#the-token-format>
]FIGCAPTION]

> Mapbox uses JSON Web Tokens (JWT) as the token format. 

]FIG]


[FIG(quote)[
[FIGCAPTION[
[12] [CITE@ja[HipChat - API v2 - Webhooks]]
([TIME[2017-05-25 23:20:57 +09:00]])
<https://www.hipchat.com/docs/apiv2/webhooks>
]FIGCAPTION]

> Webhooks declared by an add-on can optionally receive a JWT authenticating the request. The JWT is sent in the Authorization header and has the same structure as the JWT sent in the signed_request query parameter for configuration pages and other UI elements:
> POST /echo HTTP/1.1
> Host: addon.example.com
> Authorization: JWT eyJhbGciOiAiSFMyNTYiLCAi...
> Content-Length: 646
> Content-Type: application/json

]FIG]


[FIG(quote)[
[FIGCAPTION[
[13] [CITE[Bitbucket API]]
([TIME[2017-09-08 16:52:25 +09:00]])
<https://developer.atlassian.com/bitbucket/api/2/reference/meta/authentication>
]FIGCAPTION]

> 5. Bitbucket Cloud JWT Grant (urn:bitbucket:oauth2:jwt)
> If your Atlassian Connect add-on uses JWT authentication, you can swap a JWT for an OAuth access token. The resulting access token represents the account for which the add-on is installed.
> Make sure you send the JWT token in the Authorization request header using the "JWT" scheme (case sensitive). Note that this custom scheme makes this different from HTTP Basic Auth (and so you cannot use "curl -u").
> $ curl -X POST -H "Authorization: JWT {jwt_token}" \
>   https://bitbucket.org/site/oauth2/access_token \
>   -d grant_type=urn:bitbucket:oauth2:jwt

]FIG]
