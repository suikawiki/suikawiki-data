
[1]
[[Unicode]] では[[結合文字]]に対応する[[前進文字]]
(例えば [CODE(charname)[[[ACUTE ACCENT]]]])
は[CODE(jcharname)[[[間隔]]]] + [[結合文字]]
(例えば [CODE(charname)[[[SPACE]]]] + 
[CODE(charname)[[[COMBINING ACUTE ACCENT]]]]) 
と[[互換等価]]になっています。

ですから [[NFC]] や [[NFD]] はよいのですが、 [[NFKC]]
や [[NFKD]] を適用してしまうと、 [[CSS]]
の [CODE(CSS)[[[white-space]]]] や各種[[プログラム言語]]の構文をはじめ、
元のものと違う結果が得られることになります。

([[名無しさん]] [sage])

[2]
ちなみに[[結合文字]]に対応する[[前進文字]]があればその[[文字]]に[[互換等価]]性が定義されているかというと必ずしもそうではなく、
例えば [CODE(charname)[[[GRAVE ACCENT]]]] は
[CODE(charname)[[[SPACE]]]] + [CODE(charname)[[[COMBINING GRAVE ACCENT]]]]
と[[互換等価]]ではありません。
[WEAK[([[ASCII]] [[文字]]から[[非ASCII文字]]への等価性を設定するのは憚られたのでしょうが、体系として美しいとはいえません。)]]

([[名無しさん]] [sage])

[3]
さらにちなみに、 [CODE(char)[U+02B0]] からのブロックには
[CODE(charname)[[[MODIFIER LETTER ACUTE ACCENT]]]]
など見るからに[[重複符号化]]なものが [[IPA]] 関連などと称して配置されていたりしますが、
この [CODE(charname)[MODIFIER LETTER]] の類には[[正準等価]]も[[互換等価]]も定義されていません。
こういう例は腐るほどあります。[[釣り詐欺]]には格好というか[[釣堀]]ですわな。
([[名無しさん]] [sage])

[4]
[[正規化]]で[[文字]]の[[数]]が変わってしまうのは大きな問題です。色々なものが色々なところで[[文字数]]に依存していますから。
([[文字]]に関して[[バイト数]]や[[オクテット数]]に依存しているものは問題外ということで。)

たとえば、[[正規表現]]の[[文字クラス]] [CODE(regexp example)['''['''がぎぐげご''']''']] は[[NFC]]なら機能しますが、[[NFD]]だと意味が変わってしまいます。

([[名無しさん]] [sage])

[5]
>>4 たとえば [[Mac OS X]] で[[ファイル名]] ([[NFD]]の亜種) に適用する[[正規表現]]を
[[NFC]] 推奨の[[プログラミング言語]]中に書く時はどうするの?
[[ファイル名]]はいちいち [[NFC]] に変換しないといけないの?
([[名無しさん]] [sage])


[6]
[[i18n folk]] は[[正規化転符号化器]]なるものを推し進めているらしいけど、
そんなものをつかったら一体何が起きるのだか?
([[名無しさん]] [sage])

