[1] 
[DFN[ETDS]]
は
[[SGML DTD]]
のモジュール化と再利用のための仕組みとして提案されていたものでした。

[15] [CITE[Draft Standard List]], [TIME[2010-01-06T13:13:23.000Z]], [TIME[2024-08-22T11:37:08.573Z]] <http://www.y-adagio.com/public/standards/std_lst.htm>


>JTTC 0003:1996 and 1998, Generic document type definition(G-DTD) for describing documents in a distributed information environment, Draft 1996-07-14(plain text 102KB) and 1998-01(ZIPed PDF 4.02MB), Post 2003-09-05 

[22] >>15 なんか :1996 と :1998 と全然違うんですけど・・・


[2] その :1996 が [[G-DTD]]。 :1998 が [[ETDS]]。

[3] [DFN[S-ETDS]] は [[SGML DTD]] の一部機能を取り出した簡易化したものです。
構文上は [[S-ETDS]] に適合すると [[SGML DTD]] としても適合するものになるようです。

[4] [DFN[AS-ETDS]] は [[S-ETDS]] を拡張したものです。 [[SGML]] にない構造が出てきます。

[5] [[AS-ETDS]] を更に拡張したのが一般の [[ETDS]] らしいのですが、
具体的な説明がなくよくわかりません。

[6] [[AS-ETDS]] を更に拡張したのが [DFN[ESDS]] です。


[7] [[DTD]] の[[モジュール化]]といえばまず思いつくのが [[XHTML m12n]]
ですが、あれは[[引数実体]]の命名規則の化け物みたいなやつで複雑なだけでただの
[[XML DTD]] なのですが、 [[ETDS]] はもっと凝ったことをやってます。

[8] なんとなく [[ETDS]] はいろいろ応用が効きそうに考えられてる雰囲気はありますが、
よく読み込んで考えてみないとどうかわかりませんね。実装可能なのかどうかなど、
どの程度練られているのかはちょっと怪しいかなとも思っています。

[9] 
おそらく[[体系DTD]]が対抗技術になるのだろうと思いますけど、
やたらと複雑な[[体系DTD]]よりはシンプルかもしれません。いやどうかな、どっちもどっちかな。
ただ[[体系DTD]]は理解しちゃえば仕組みはわかった気になれるんですけど、
ほんとにそれが実装可能なのか、ないし実装したとて役に立つのか、ってところで依然として引っかかりがありますよね。
[[ETDS]] はそういう意味の複雑さはないんじゃないかなあという感触が。




