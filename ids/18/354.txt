* 仕様書

[REFS[
- [7] [CITE@en[[[RFC 7515]] - JSON Web Signature (JWS)]], [TIME[2019-11-24 17:13:01 +09:00]] <https://tools.ietf.org/html/rfc7515>
-- [8] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-2>
-- [22] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-3>
-- [47] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-4>
--- [69] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-4.1.11>
-- [81] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-5>
-- [129] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-6>
-- [31] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-7>
-- [138] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-8>
-- [142] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-9>
-- [148] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-10>
-- [150] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#appendix-D>
-- [172] [CITE@en[RFC 7515 - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#appendix-F>
]REFS]

* 構文

[9] 
[DFN[JSON Web Signature]] ([DFN[JWS]])
は、
[[デジタル]]的に [[RFC 4949]] [[署名][デジタル署名]]されまたは [[RFC 4949]] [[MAC]]
された[[メッセージ]]です。
[SRC[>>8, >>22]]

;; [21] [[JWS]] には、[[一貫性]]保護のない[[非保安JWS]]が含まれます。

[23] [[JWS]] は、 [[RFC 7159]] [[JSON]] データや [[base64url]]
を使って記述されます。 [[JSON]] は、その定めるところにより、
値の前後に[[空白]]を挿入できます。 [SEE[ [[JSON]] ]]
[SRC[>>22]]

[24] [[JWS]] は、論理的に
[[JOSEヘッダー]]、[[JWSペイロード]]、
[[JWS署名]]で構成されます。

[FIG(list members)[ [25] [[JWS]]
: [[JOSEヘッダー]]: [[JWS保護ヘッダー]]、[[JWS非保護ヘッダー]]
: [[JWSペイロード]]:
: [[JWS署名]]:
]FIG]



-*-*-

[11] 
[DFN[[RUBYB[JWSペイロード][JWS Payload]]]]は、
[RUBYB[保安される][secured]][[オクテット列]]、[RUBYB[すなわち][[[aka]]]][RUBYB[[[メッセージ]]][message]]です。
[[ペイロード]]は、
任意の[[オクテット列]]を含められます。
[SRC[>>8]]

[12] 
[DFN[[RUBYB[JWS署名][JWS Signature]]]]は、
[[JWS保護ヘッダー]]と[[JWSペイロード]]に関する [[RFC 4949]] [[デジタル署名]]や 
[[RFC 4949]] [[MAC]]
です。
[SRC[>>8]]



[16] 
[DFN[[RUBYB[JWS署名入力][JWS Signing Input]]]]は、
[[RFC  4949]] [[デジタル署名]]または [[RFC 4949]] [[MAC]] 計算への[[入力]]です。
この値は、

= [[RFC 20 ASCII][ASCII()]] ([[RFC 7515 BASE64URL][BASE64URL()]] ([[RFC 3629 UTF8][UTF8()]] ([[JWS保護ヘッダー]])))
= [CODE[.][FULL STOP]]
= [[RFC 7515 BASE64URL][BASE64URL()]] ([[JWSペイロード]])

... を[[順に連結][文字列連結]]した結果です。
[SRC[>>8]]




[20] 
[DFN[StringOrURI]]
は、
[[JSON文字列]]値であって、
任意の[[文字列]]値であっても[MAY[構わない]]ものの、
[CODE[:]] が含まれる場合は
[[RFC 3986]] [[URI]]
でなければ[MUST[ならない]]ものです。
[[比較][文字列の比較]]は、
[[大文字・小文字区別あり]]で変形や[[正準化]]なく行います。
[SRC[>>8]]

[62] [CODE[alg]] は[[耐衝突名]]かつ [[StringOrURI]] とされています。

-*-*-

[173] 
[[JWS]] のうち [[JWSペイロード]]を含めない、
つまり [[JWS]] 生成後に [[JWS簡潔直列化]]にあっては該当部分を[[空文字列]]とし、
[[JWS JSON直列化]]にあっては [CODE[payload][JWSペイロード]]
を削除したものを扱うのが時に有用なのであって、
受信者も別の手段で [[JWSペイロード]]相当の情報を入手し、
容易に [[JWS]] を再構築し得るものである、
と[[仕様書]]に敢えて言及があります [SRC[>>172]]。

[174] 
しかしなぜか本体仕様とは別に簡単に説明されているに過ぎず、
しかも送受信者がそのような簡単な操作で標準的な [[JWS]] 
のライブラリーの入出力を改変して実現可能だ、
と [[JWS]] 本体ではなく[[応用]]側で実装するべきものとしています。
本当にそのような需要があるのなら、
こうした取ってつけた説明ではなく [[JWS]]
本体仕様に組み込んで詳細に規定するべきで、不可解です。


* 直列化

[27] 
[[JWS]]
は、
[[JWS簡潔直列化]]と
[[JWS JSON直列化]]の
2種類の表現方法があります [SRC[>>31]]。
[[JWS JSON直列化]]の方が高い記述能力を持ちます。

[32] 
[[JWS]] を使う[[応用]]は、
どちらの[[直列化]]を使うか、
どの[[直列化]][RUBYB[機能][feature]]を使うかを、
規定する必要があります。
[[JWS]] の実装は、
対応したい[[応用]]で必要な機能のみ実装する必要があります。
[SRC[>>31]]

[EG[
[33] 
例えば、
「[[JWS JSON直列化]]で署名か [[MAC]] の値は1つだけ対応する」
のような定めが可能です。
[SRC[>>31]]
]EG]


** JWS簡潔直列化

[17] 
[DFN[[RUBYB[JWS簡潔直列化][JWS Compact Serialization]]]]は、
[[JWS]]
を簡潔で [[URL]] 安全な[[文字列]]として表現したものです。
[SRC[>>8]]

[28] 
[[JWS簡潔直列化]]では、
[[JWS非保護ヘッダー]]を使うことが出来ません。
[[JOSEヘッダー]] = [[JWS保護ヘッダー]]です。
[SRC[>>8, >>22]]

[29] 
[[JWS簡潔直列化]]は、
次のものを[[順に連結][文字列連結]]したものです。
[SRC[>>22, >>31]]

= [[RFC 7515 BASE64URL][BASE64URL()]] ([[RFC 3629 UTF8][UTF8()]] ([[JWS保護ヘッダー]]))
= [CODE[.][FULL STOP]]
= [[RFC 7515 BASE64URL][BASE64URL()]] ([[JWSペイロード]])
= [CODE[.][FULL STOP]]
= [[RFC 7515 BASE64URL][BASE64URL()]] ([[JWS署名]])

[34] 
[[署名]]・[[MAC]] は1つだけしか指定できません。 [SRC[>>31]]

[145] 
[[MIME型]]は
[DFN[[CODE[application/jose]]]]
です。 [[JWS]] または [[JWE]] の簡潔直列化を表します。
[SRC[>>142]]

** JWS JSON直列化

[18] 
[DFN[[RUBYB[JWS JSON直列化][JWS JSON Serialization]]]]は、
[[JWS]]
を
[[JSONオブジェクト]]として表現したものです。
[[JWS簡潔直列化]]と違って、
複数の
[[RFC 4949]] [[デジタル署名]]と
[[RFC 4949]] [[MAC]]
の[[一方又は両方][及び/又は]]を同じ内容に適用できます。
簡潔性や [[URL]] 安全性は重視していません。
[SRC[>>8]]

[30] 
[[JWS JSON直列化]]では、
[[JWS保護ヘッダー]]と[[JWS非保護ヘッダー]]の両方を使うことができます
[SRC[>>8, >>22]]。
どちらか一方は存在しなければ[MUST[なりません]] [SRC[>>22]]。
[[JOSEヘッダー]]は両者全体で構成されます [SRC[>>8, >>22]]。

[35] 一般構文と呼ばれるものと、平坦化構文と呼ばれるものの2種類があります。
[SRC[>>31]]

[146] 
[[MIME型]]は
[DFN[[CODE[application/jose+json]]]]
です。 [[JWS]] または [[JWE]] の JSON 直列化を表します。
[[JSONオブジェクト]]は [[UTF-8]] で符号化する[SHOULD[べきです]]。
[SRC[>>142]]

;; [147] なぜ [[UTF-8]] 以外の余地を残しているのか謎です。

*** 一般構文

[36] 
[DFN[[RUBYB[(完全)一般JWS JSON直列化構文][(fully) general JWS JSON serialization syntax]]]]は、
次のような最上位の
[[JSONオブジェクト]]です。
[SRC[>>31]]

[FIG(list  members)[ [38] [[JSONオブジェクト]]
: [DFN[[CODE[payload][JWS Payload]]]] :
[[RFC 7516 BASE64URL][BASE64URL()]] ([[JWSペイロード]])。
[MUST[必須]]。
[SRC[>>31]]
: [DFN[[CODE[signatures]]]] :
[[JSONオブジェクト]]の[[配列]]でなければ[MUST[なりません]]。
[FIG(list members)[ [40] [[JSON配列]]

[41] 
各[[JSONオブジェクト]]は、
[[JWSペイロード]]と [[JWS保護ヘッダー]]の[[署名]]や [[MAC]] を表します。
[SRC[>>31]]
[FIG(list members)[ [39] [[JSONオブジェクト]]

: [DFN[[CODE[protected][JWS保護ヘッダー]]]] :
[[JWS保護ヘッダー]]値が空でない時、
[[RFC 7515 BASE64URL][BASE64URL()]] ([[RFC 3629 UTF8][UTF8()]] ([[JWS保護ヘッダー]]))
でなければ[MUST[なりません]]。
[[ヘッダー引数]]値は[[一貫性]]保護されます。
そうでないとき、
省略しなければ[MUST[なりません]]。
[SRC[>>31]]
: [DFN[[CODE[header][JWS非保護ヘッダー]]]] :
[[JWS非保護ヘッダー]]値が空でない時、
[[JWS非保護ヘッダー]]たる [[JSON]] 値でなければ[MUST[なりません]]。
[[ヘッダー引数]]値は[[一貫性]]保護されません。
そうでないとき、
省略しなければ[MUST[なりません]]。
[SRC[>>31]]
: [DFN[[CODE[signature][JWS Signature]]]] :
[[RFC 5715 BASE64URL][BASE64URL()]] ([[JWS署名]])
でなければ[MUST[なりません]]。
[SRC[>>31]]
: その他 :
他のメンバーを指定できます。
実装は、理解できないものを無視しなければ[MUST[なりません]]。
[SRC[>>31]]

]FIG]

[42] 
[CODE[protected][JWS保護ヘッダー]] または [CODE[header][JWS非保護ヘッダー]]
の一方または両方がなければ[MUST[なりません]]。
最低でも [CODE[alg]] [[ヘッダー引数]]が必要です。
[SRC[>>31]]

[43] 
[[署名]]や [[MAC]] 値の作成や[[検証]]に使う[[ヘッダー引数]]は、
[CODE[protected][JWS保護ヘッダー]] と
[CODE[header][JWS非保護ヘッダー]]
を[[合同]]して得られる
[[JOSEヘッダー]]です。
両者の[[ヘッダー引数]]の名前は、[[互いに素][disjoint]]でなければ[MUST[なりません]]。
[SRC[>>31]]


]FIG]
: その他 :
他のメンバーを指定できます。
実装は、理解できないものを無視しなければ[MUST[なりません]]。
[SRC[>>31]]
([CODE[protected][JWS保護ヘッダー]],
[CODE[header][JWS非保護ヘッダー]],
[CODE[signature][JWS Signature]]
も禁止はされていません。)

]FIG]




*** 平坦化構文

[37] 
[DFN[[RUBYB[平滑化JWS JSON直列化構文][flattened JWS JSON serialization syntax]]]]は、
単一の[[デジタル署名]]・ [[MAC]] の場合に最適化したもので、
次のような最上位
[[JSONオブジェクト]]です。
[SRC[>>31]]

[FIG(list  members)[ [44] [[JSONオブジェクト]]
: [CODE[payload][JWS Payload]] :
[[RFC 7516 BASE64URL][BASE64URL()]] ([[JWSペイロード]])。
[MUST[必須]]。
[SRC[>>31]]
: [CODE[protected][JWS保護ヘッダー]] :
[[JWS保護ヘッダー]]値が空でない時、
[[RFC 7515 BASE64URL][BASE64URL()]] ([[RFC 3629 UTF8][UTF8()]] ([[JWS保護ヘッダー]]))
でなければ[MUST[なりません]]。
[[ヘッダー引数]]値は[[一貫性]]保護されます。
そうでないとき、
省略しなければ[MUST[なりません]]。
[SRC[>>31]]
: [CODE[header][JWS非保護ヘッダー]] :
[[JWS非保護ヘッダー]]値が空でない時、
[[JWS非保護ヘッダー]]たる [[JSON]] 値でなければ[MUST[なりません]]。
[[ヘッダー引数]]値は[[一貫性]]保護されません。
そうでないとき、
省略しなければ[MUST[なりません]]。
[SRC[>>31]]
: [CODE[signature][JWS Signature]] :
[[RFC 5715 BASE64URL][BASE64URL()]] ([[JWS署名]])
でなければ[MUST[なりません]]。
[SRC[>>31]]
: その他 :
他のメンバーを指定できます。
実装は、理解できないものを無視しなければ[MUST[なりません]]。
[CODE[signatures]] があっては[MUST[なりません]]。
[SRC[>>31]]

]FIG]

[45] 
[CODE[protected][JWS保護ヘッダー]] または [CODE[header][JWS非保護ヘッダー]]
の一方または両方がなければ[MUST[なりません]]。
最低でも [CODE[alg]] [[ヘッダー引数]]が必要です。
[SRC[>>31]]

[46] 
[[署名]]や [[MAC]] 値の作成や[[検証]]に使う[[ヘッダー引数]]は、
[CODE[protected][JWS保護ヘッダー]] と
[CODE[header][JWS非保護ヘッダー]]
を[[合同]]して得られる
[[JOSEヘッダー]]です。
両者の[[ヘッダー引数]]の名前は、[[互いに素][disjoint]]でなければ[MUST[なりません]]。
[SRC[>>31]]


* JOSE ヘッダー


[10] 
[DFN[[RUBYB[JOSEヘッダー][JOSE Header]]]]は、
使用する
[[RFC 4949]] [[デジタル署名]]や
[[RFC 4949]] [[MAC]]
の[[演算]]や[[引数]]を記述する
[[JSONオブジェクト]]です。
[SRC[>>8, >>47]]
更に追加の情報も含めることが出来ます。
[SRC[>>47]]

[13] 
[DFN[[RUBYB[ヘッダー引数][Header Parameter]]]]は、
[[JOSEヘッダー]]の[[メンバー]]たる[RUBYB[[[名前]]][name]]と[RUBYB[[[値]]][value]]の[[組]]です。
[SRC[>>8]]

[48] 
[[ヘッダー引数]]の名前は、[[JOSEヘッダー]]内で固有でなければ[MUST[なりません]]。
[[JWS]] [[構文解析器]]は、
[[JWS]]
が[[ヘッダー引数]]の重複を含む時、
これを拒絶するか、
または重複するメンバー名について字句的に最後のもののみ採用する
[[JavaScript]] [CODE[JSON.parse]]
と同じ挙動の [[JSON]] [[構文解析器]]を使うかしなければ[MUST[なりません]]。
[SRC[>>47, >>148]]
さらに、
[[JWS保護ヘッダー]]と[[JWS非保護ヘッダー]]の間でも同名があってはなりません (>>43, >>46)。

;; [49] [[JSONオブジェクト]]は、
[CODE[{"name": "value1", "name": "value2"}]]
のごとく同名のメンバーを複数含めることが出来ます。
[[JWS]] はこれを拒絶するか、最後の [CODE[value2]] のみ採用することを求めています。
挙動に曖昧性が認められるのは、
[[相互運用性]]の火種であり、
とりわけ[[セキュリティー]]技術には好ましからざる性質です。
どちらとも実装し得る [[JSON]] 仕様側の問題といえなくもないですが。
[[JSON]] の標準的な実装である [CODE[JSON.parse]]
の挙動、すなわちエラーとせず最後のもののみを採用するのが好ましいと考えられます。

-*-*-

[26] [[JWS]] の [[JOSEヘッダー]]のメンバーは、
[[JWS保護ヘッダー]]と[[JWS非保護ヘッダー]]の各メンバーの[[合同]]です。
[SRC[>>22]]

[14] 
[DFN[[RUBYB[JWS保護ヘッダー][JWS Protected Header]]]]は、
[[JWS署名]]の [[RFC 4949]] [[デジタル署名]]または
[[RFC 4949]] [[MAC]]演算によって[[一貫性]]保護された[[ヘッダー引数]]を含む
[[JSONオブジェクト]]です。
[SRC[>>8]]

[15] 
[DFN[[RUBYB[JWS非保護ヘッダー][JWS Unprotected Header]]]]は、
[[一貫性]]保護されていない[[ヘッダー引数]]を含む
[[JSONオブジェクト]]です。
[SRC[>>8]]

-*-*-

[50] 
実装は、理解しなければ[MUST[ならない]]と規定された[[ヘッダー引数]]を、
理解し処理しなければなりません。
[SRC[>>47]]

[51] 
それ以外は、理解できない場合無視しなければ[MUST[なりません]]。
ただし、 [CODE[crit]] が適用されるものを除きます。
[SRC[>>47]]



** [CODE[crit]] ヘッダー引数

[70] 
[[ヘッダー引数]]
[DFN[[CODE[crit]]]]
(critical)
は、
[[JWS]] や [[JWA]] の[[仕様書]]に対する[[拡張][拡張性]]が使われていて、
これを理解して処理しなければ[MUST[ならない]]ことを示すものです。
[SRC[>>69]]

-*-*-

[71] 
値は、
当該[[拡張][拡張性]]を使う [[JOSEヘッダー]]の[[ヘッダー引数]]名の[[配列][JSON配列]]です。
[SRC[>>69]]

[73] 
[[生成器]]は、
[[JWS]] や [[JWA]] の[[仕様書]]で定められた[[ヘッダー引数]]名を指定しては[MUST[なりません]]。
[SRC[>>69]]

[74] 
[[生成器]]は、
[[ヘッダー引数]]名を重複して指定したり、
[[JOSEヘッダー]]内に出現しない[[ヘッダー引数]]名を指定したりしては[MUST[なりません]]。
[SRC[>>69]]

-*-*-

[79] 
[CODE[crit]] の使用は[MAY[任意]]です。
[SRC[>>69]]

[75] 
[[生成器]]は、
空の[[配列][JSON配列]]を指定しては[MUST[なりません]]。
[SRC[>>69]]

[78] 
[CODE[crit]] を使う場合、
[[JWS保護ヘッダー]]に含めなければ[MUST[なりません]]。
[SRC[>>69]]
[[JWS非保護ヘッダー]]では使えません。

-*-*-

[80] 
実装は、[[ヘッダー引数]]
[CODE[crit]] 
を理解し処理しなければ[MUST[なりません]]。
[SRC[>>69]]

[76] 
[[受信者]]は、
[CODE[crit]] の値が制約 (>>73, >>74, >>75) 違反のとき、
当該 [[JWS]] を[[非妥当]]とみなして[MAY[構いません]]。
[SRC[>>69]]

;; [77] なぜ[MUST[必須]]でないのか不明です。
これでは[[相互運用性]]の罠です。

[72] 
[[受信者]]が指定された[[ヘッダー引数]]のいずれかを理解対応していない場合には、
当該 [[JWS]] は[[非妥当]]です。
[SRC[>>69]]

** ヘッダー引数の一覧



[FIG(short list)[ [56] [[ヘッダー引数]]
- [CODE[alg]] (指定必須、対応必須)
- [CODE[jku]]
- [CODE[jwk]]
- [CODE[kid]]
- [CODE[x5u]]
- [CODE[x5c]]
- [CODE[x5t]]
- [CODE[x5t#S256]]
- [CODE[typ]]
- [CODE[cty]]
- [CODE[crit]] (対応必須)
]FIG]


** ヘッダー引数名の登録


[52] 
[[ヘッダー引数]]名には、
[[登録ヘッダー引数名]]、
[[公開ヘッダー引数名]]、
[[私的ヘッダー引数名]]の3[RUBYB[種類][class]]があります。
[SRC[>>47]]
この「class」は[[互いに素]]のようにも感じられますが、
[[仕様書]]の定義が曖昧で意図を掴みかねます。

[53] 
[DFN[[RUBYB[登録ヘッダー引数名][Registered Header Parameter name]]]]は、
[[IANA登録簿]]に登録されたものです [SRC[>>47]]。
[[IANA登録簿]]は [[JWS]] と [[JWE]]
で共通で、一方または両方で使用するかを指定できます [SRC[>>142]]。
[[JWS]] と [[JWE]] の両方で使うものを定める場合、用法が一貫していなければなりません
[SRC[>>47]]。

[143] 
登録する[[ヘッダー引数]]名は、
短く、原則として8文字[[以下]]である[SHOULD[べき]]とされています。
[SRC[>>142]]

[144] 
一般に[[ヘッダー引数]]名は[[大文字・小文字区別あり]]ですが、
登録時に[[指定専門家]]が必要と認めた場合を除き、
[[大文字・小文字不区別]]で既存の名称と一致するものは登録できません。
[SRC[>>142]]


[54] 
[DFN[[RUBYB[公開ヘッダー引数名][Public Header Parameter name]]]]
[SRC[>>47]]
が何であるか[[仕様書]]はなぜか明確に述べていませんが、
[[登録ヘッダー引数名]]でも[[私的ヘッダー引数名]]でもないものとみられます。

[57] 
[[公開ヘッダー引数名]]に関する[[仕様書]]の節には、
次のようにあります。
[[JWS]] 利用者は、 [[RFC 7515]] にない追加の[[ヘッダー引数]]名を定義できますが、
[[IANA登録簿]]に登録するか、
または Public Name ([[耐衝突名]]が含まれる値)
であるかとする[RUBYB[べき][should]]です。
いずれにせよ、
定義者は、
名前を定義するため使う名前空間の部分に関して、
制御下に置かれるべく十分に注意を払う必要があります。
[SRC[>>47]]
(この Public Name が[[公開ヘッダー引数名]]を指しているとも解せます。
主語の利用者が誰を指すか明らかではありませんが ([[私的ヘッダー引数名]]との違いに注意)、
[[JWS]] を利用する技術の仕様策定者とみるべきでしょうか。)

[58] 
新しい[[ヘッダー引数]]の追加は、[[相互運用性]]の低下を招き得るため、
慎重にする[RUBYB[べき][should]]です。
[SRC[>>47]]




[55] 
[DFN[[RUBYB[私的ヘッダー引数名][Private Header Parameter name]]]]
[SRC[>>47]]
が何であるか[[仕様書]]はなぜか不明瞭にしていますが、
[[仕様書]]の[[私的ヘッダー引数名]]の節には、
[[JWS]] の生成者と消費者は
Private Names ([[登録ヘッダー引数名]]でない名前)
や[[公開ヘッダー引数名]]を使うことに合意して構わない
[SRC[>>47]]
とあります。
この Private Names が[[私的ヘッダー引数名]]とも解し得ますが、
「[[登録ヘッダー引数名]]でない」
ならそれは[[公開ヘッダー引数名]]を含むとも考えられ、
だとすると敢えて[[公開ヘッダー引数名]]に言及しているのが不審です。
[[公開ヘッダー引数名]]と違って[[私的ヘッダー引数名]]は衝突の恐れがあり、
注意して使うべきである [SRC[>>47]]
とされており、だとすると両者は[[互いに素]]であるとも思われます。

[59] 
この通り[[ヘッダー引数]]名には3つの分類がありますが、
[[仕様書]]は注意せよと言っているだけで、
利用の制限も特になく、
定義も曖昧で、
実質的な違いはないといって良いでしょう。

[60] [[相互運用性]]を考慮すると、
[[JWS]]
を使う[[応用]]は、
それぞれどれを実装しなければならないか定め、
それ以外は実装してはならないと定める必要がありそうです。
[[JWS]]
の実装は、
その適用対象の[[応用]]に合わせ、
不要なものを生成せず、
対応が求められていないものを無視することを徹底するべきでしょう。

* 処理

** 作成

[82] 
[DFN[[RUBYB[JWSを作成][create a JWS]]]]するには、
[VAR[[[JWSペイロード]]]]、
[[JSONオブジェクト]]または [CODE[null]] [VAR[[[JWS保護ヘッダー]]]]、
[[JSONオブジェクト]]または [CODE[null]] [VAR[[[JWS非保護ヘッダー]]]]を、
次のようにします。
[SRC[>>81]]

[FIG(steps)[
= [87] [[Assert]]: [[JOSEヘッダー]] ([VAR[JWS保護ヘッダー]]と[VAR[JWS非保護ヘッダー]])
には [CODE[alg]] [[ヘッダー引数]]が含まれなければ[MUST[なりません]]。
= [83] [VAR[符号化ペイロード値]]を、
[[RFC 7515 BASE64URL][BASE64URL()]] ([VAR[JWSペイロード]]) の結果に設定します。
= [84] [VAR[符号化ヘッダー値]]を、[[空文字列]]に設定します。
= [85] [VAR[符号化ヘッダー値]]が [CODE[null]] で''ない''場合、
== [86] 
[[RFC 7515 BASE64URL][BASE64URL()]] ([[RFC 3629 UTF8][UTF8()]] ([VAR[JWS保護ヘッダー]]))
の結果に設定します。
= [88] 
[VAR[JWS署名]]を、[[JWS署名]]を計算した結果に設定します。
[FIG(list members)[

: [VAR[[[JWS署名入力]]]] :
[[RFC 20 ASCII][ASCII()]] ([VAR[符号化ヘッダー値]])、
[CODE[.][FULL STOP]]、
[VAR[符号化ペイロード値]]を[[順に連結][文字列連結]]した結果
: [VAR[[[JOSEヘッダー]]]] :  [VAR[JWS保護ヘッダー]]と[VAR[JWS非保護ヘッダー]]

]FIG]
= [89] 
[VAR[符号化署名値]]を、
[[RFC 7515 BASE64URL][BASE64URL()]] ([VAR[JWS署名]])
の結果に設定します。
= [90] 
[VAR[符号化保護ヘッダー]]、
[VAR[JWS非保護ヘッダー]]、
[VAR[符号化ペイロード値]]、
[VAR[符号化署名値]]について、
直列化した結果を返します。
]FIG]

[128] [[BOM]] を生成するべきか否か仕様書から明らかではありません。一般的には
[CITE[Encoding Standard]] の
[[UTF-8符号化]]のように [[BOM]] を生成しないものと解されています。

** 検証

[91] 
[[JWS]] を[RUBYB[検証][validate]]するには、
[VAR[JWS]] を、
次のようにします。
[SRC[>>81]]

[FIG(steps)[
= [92] 
[VAR[結果]]を、 [VAR[JWS]] を構文解析した結果に設定します。
= [93] [VAR[結果]]が[[失敗]]の場合、
== [94] [[偽]]を返し、ここで停止します。
= [95] [VAR[ヘッダーバイト列]]を、
[VAR[結果]]の[F[符号化ヘッダー値]]を [[RFC 7515 base64url復号]]した結果に設定します。
= [96] [VAR[ヘッダーバイト列]]が[[失敗]]の場合、
== [97] [[偽]]を返し、ここで停止します。
= [99] [VAR[ヘッダー文字列]]を、
[VAR[ヘッダーバイト列]]を 
[[RFC 3629]] [[UTF-8]]
[[復号]]した結果に設定します。
= [100] [VAR[ヘッダー文字列]]が[[失敗]]の場合、
== [101] [[偽]]を返し、ここで停止します。
= [98] [VAR[JWS保護ヘッダー]]を、
[VAR[ヘッダー文字列]]を [[RFC 7159]] [[JSON]] として構文解析した結果に設定します。
= [102] [VAR[JWS保護ヘッダー]]が[[JSONオブジェクト]]で''ない''場合、
== [103] [[偽]]を返し、ここで停止します。
= [104] [VAR[結果]]の [F[JWS非保護ヘッダー]]が [CODE[null]] で''ない''場合、
== [105] [VAR[結果]]の[F[JWS非保護ヘッダー]]のメンバーと[VAR[JWS保護ヘッダー]]のメンバーについて、
メンバー名 (= [[ヘッダー引数]]名) に重複がある場合、
=== [106] [[偽]]を返し、ここで停止します。
= [107] [VAR[結果]]の[F[JWS保護ヘッダー]]と[VAR[JWS保護ヘッダー]]について、
[[JWS]] の規定により対応しなければならないとされるもの、
指定された[[アルゴリズム]]により対応しなければならないとされるもの、
[CODE[crit]] [[ヘッダー引数]]で指定されたものについて、
実装が理解し処理できる[[ヘッダー引数]]であること、
その値もまた理解し処理できるものであることを確認します。そうでない場合、
== [108] [[偽]]を返し、ここで停止します。
= [109] [VAR[ペイロードバイト列]]を、
[VAR[結果]]の[F[符号化ペイロード値]]を [[RFC 7515 base64url復号]]した結果に設定します。
= [110] [VAR[ペイロードバイト列]]が[[失敗]]の場合、
== [111] [[偽]]を返し、ここで停止します。
= [112] [VAR[署名バイト列]]を、
[VAR[結果]]の[F[符号化署名値]]を [[RFC 7515 base64url復号]]した結果に設定します。
= [113] [VAR[署名バイト列]]が[[失敗]]の場合、
== [114] [[偽]]を返し、ここで停止します。
= [115] 
[VAR[JWS署名]]を、[[JWS署名]]を計算した結果に設定します。
[FIG(list members)[

: [VAR[[[JWS署名入力]]]] :
[[RFC 20 ASCII][ASCII()]] ([VAR[結果]]の[F[符号化ヘッダー値]])、
[CODE[.][FULL STOP]]、
[VAR[結果]]の[F[符号化ペイロード値]]を[[順に連結][文字列連結]]した結果
: [VAR[[[JOSEヘッダー]]]] :  [VAR[JWS保護ヘッダー]]と[VAR[結果]]の[F[JWS非保護ヘッダー]]

]FIG]
= [116] [VAR[署名バイト列]]が[VAR[JWS署名]]で''ない''場合、
== [117] [[偽]]を返し、ここで停止します。
= [119] [VAR[ペイロード文字列]]を、
[VAR[ペイロードバイト列]]を 
[[RFC 3629]] [[UTF-8]]
[[復号]]した結果に設定します。
= [120] [VAR[ペイロード文字列]]が[[失敗]]の場合、
== [121] [[偽]]を返し、ここで停止します。 [SRC[仕様書になし]]
= [122] [VAR[JWSペイロード]]を、
[VAR[ペイロード文字列]]を [[RFC 7159]] [[JSON]]として構文解析した結果に設定します。
= [123] [VAR[JWSペイロード]]が[[JSONオブジェクト]]で''ない''場合、
== [124] [[偽]]を返し、ここで停止します。 [SRC[仕様書になし]]
= [118] [[真]]、
[VAR[JWS保護ヘッダー]]、
[VAR[結果]]の[F[JWS非保護ヘッダー]]、
[VAR[JWSペイロード]]を返します。
]FIG]

[125] 
[[JWS署名]]が複数含まれる時、
どれを検証するか、すべてを検証するかは[[応用]]が決めることとされています。
最低でも1つは検証し[[真]]を返すことを確認しなければ[MUST[なりません]]。
[SRC[>>81]]

[126] 
検証結果が[[真]]であっても、
[[アルゴリズム]]が[[応用]]の期待するものでなければ、
非妥当とみなす[SHOULD[べきです]]。
[SRC[>>81]]

[127] 
[[UTF-8]] や [[JSON]] の[[復号]]について、参照している仕様が明確に方法を定めていないため、
[[相互運用性]]の問題が生じるおそれがあります。[[仕様書]]の厳密な解釈に従うことは避け、
明確な規定のある [CITE[Encoding Standard]] [[BOMなしUTF-8復号または失敗]]や 
[CITE[ECMAScript]] [CODE[JSON.stringify]] に倣うべきでしょう。

** アルゴリズムと鍵

[134] 
[[JWS署名]]の計算に使われる[[アルゴリズム]]は、
[CODE[alg]] [[ヘッダー引数]]に指定することになっています。
[[生成器]]は、これを指定しなければ[MUST[なりません]]。
[CODE[alg]] の値が[[受信器]]の[[対応]]している[[アルゴリズム]]でないとき、
[[妥当]]ではありません [SRC[>>47]]。
[[検証]]は[[失敗]]します。

;; [135] つまり、[[相互運用性]]のため、
[[応用]]は送受信者が対応しなければならない[[アルゴリズム]]を明確かつ限定的に規定しなければなりません。

[149] 
[[アルゴリズム]]の実装によっては[[JWS署名]]値内に含まれる[[アルゴリズム]]を使って検証する場合があります。
その場合でもそれが [CODE[alg]] と一致しているか確認しなければ[MUST[なりません]]。
さもなくば [CODE[alg]] に強いアルゴリズムを指定し、
実際には弱いアルゴリズムで攻撃することが可能となってしまいます。
[SRC[>>148]]

-*-*-

[132] 
[[RFC 4949]] [[デジタル署名]]または [[RFC 4949]] [[MAC]]
は、
必要な[[鍵]]を決定できないとき、[[失敗]]します。
[SRC[>>129, >>47]]

[130] 
[[受信器]]は、
[[JWS]] の演算で使用する[[鍵]]を、
[[ヘッダー引数]]
[CODE[jku]],
[CODE[jwk]],
[CODE[kid]],
[CODE[x5u]],
[CODE[x5c]],
[CODE[x5t]],
[CODE[x5t#S256]]
の値から決定することもできますし、
[[JWS]] [[仕様書]]の定めない別の方法で決めても構いません。


[131] 
[[生成器]]は、
他の方法によって[[鍵]]が決定されるべき場合を除き、
十分な情報を[[ヘッダー引数]]に含める[SHOULD[べきです]]。
[SRC[>>129]]

;; [137] [CODE[x5u]]、[CODE[jku]] のように、
[[鍵]]の決定に[[ネットワーク]]アクセスが発生し得るものもあります。
その場合、[[鍵]]の選択に不定の時間を要することがあり、
パフォーマンスや実装戦略上、[[エラー処理]]上の特段の配慮が必要となります。
また[[鍵]]の取得を試みた事実が送信者側または送信者の指定した第三者
(改竄を想定し得るケースでは、悪意ある第三者)
に伝わり得ることにも注意が必要となります。
こうした懸念を排除できる場合を除き、
[[応用]]は外部から[[鍵]]を取得する方法を認めるべきではありません。
汎用的な [[JWS]] の実装は、
明示的に求められない限り、
こうした手法を有効にするべきではありません。


[133] 
これら[[ヘッダー引数]]の情報を使って[RUBYB[信頼決定][trust decision]]する場合にあっては、
これら[[ヘッダー引数]]は[[一貫性]]保護しなければ[MUST[なりません]]
[SRC[>>129]]。
(つまり [[JWS保護ヘッダー]]としなければなりません。)
しかし信頼決定に使われる情報が[[鍵]]だけの場合にあっては、
これら[[ヘッダー引数]]を[[一貫性]]保護せずとも構いません
[SRC[>>129]]。
なぜなら、[[鍵]]が違えば[[検証]]が[[失敗]]するからです
[SRC[>>129]]。

;; [136] ところがこの要件が満たされない時[[受信者]]がこれを[[失敗]]とみなさなければならないという規定はありません。
[[セキュリティー]]の根幹に関わる部分がこんな曖昧でいいのでしょうか。

[151] 
[[鍵]]選択は、[[応用]]次第で異なる方法で行われ得るのであって、
[[仕様書]]には一定の指針が示されているものの、
すべての情報源を使う必要もなく、
適用し得るすべての[[鍵]]を使う必要もなく、
また順序もその通りである必要はないものとされています。
ともかく、指針として、次のようにします。
[SRC[>>150]]

[FIG(steps)[
= [152] 適用し得る[[鍵]]を探します。情報源には次のものが含まれ得ます。
-- [153] [[応用プロトコル]]で指定されるもの
-- [154] [CODE[jku]] で指定されたもの
-- [155] [CODE[jwk]] で与えられたもの
-- [156] [CODE[x5u]] で指定されたもの
-- [157] [CODE[x5c]] で与えられたもの
-- [158] その他[[応用]]で利用可能なもの
= [159] 集めた[[鍵]]から適切なものを選択します。
-- [160] 例えば、 [CODE[kid]] や [CODE[x5t]]
が合致するもののみを選ぶことができます。
-- [161] [[応用]]が
[CODE[alg]], [CODE[use]], [CODE[key_ops]]
を使う場合、これらの値に合わないものを除外します。
-- [162] その他[[応用]]規定の方法で適当なもののみ選んで構いませんし、
[[応用]]次第でまったく除外しなくても構いません。
= [164] [[鍵]]を[[整列]]します。
-- [165] 例えば、
[CODE[kid]] や [CODE[x5t]]
に合致するものを、それ以外より先に試すことにできます。
-- [163] その他特定条件のものを優先しても構いませんし、
[[応用]]次第でまったく順序を改めなくても構いません。
= [166] [[鍵]]について、信頼決定します。
-- [167] [[応用]]の信頼条件に満たない鍵を使った署名は、拒絶します。
-- [168] 信頼条件とは、例えば、
鍵の出所、
[[URL]] から取得した[[鍵]]にあっては[[TLS証明書]]が[[妥当]]であったか否か、
[[X.509証明書]]中の[[鍵]]にあっては妥当な[[証明書鎖]]に裏付けられたものか否か、
その他[[応用]]の有する情報を用い得ます。
= [169] [[鍵]]について、
[[JWS]] の [[RFC 4949]] [[デジタル署名]]や [[RFC 4949]] [[MAC]] の検証を試みたり、
[[JWE]] の[[解読]]を試みたりします。
-- [170] 得られた[[鍵]]をすべて試みても構いませんし、
上限数を設定しても構いません。
]FIG]

;; [171] 
[[デジタル署名]]や [[MAC]] の検証や[[解読]]に失敗するなら、
信頼決定するまでもありませんから、
[[応用]]次第で信頼決定を後回しにすることもできます。
[SRC[>>150]]


** 取得プロトコル

[63] [[JWS]] は [CODE[jku]], [CODE[x5u]] に [[URL]]
を指定して別ファイルを参照できます。
[DFN[JWSの取得プロトコル]]には次のような制約が規定されています。

[64] 
[[資源]]の[RUBYB[取得][acquire]]に使う[[プロトコル]]は、
[[一貫性]]保護を提供するものでなければ[MUST[なりません]]。
[SRC[>>47]]

[66] 
[RUBYB[取得][retrieve]]に使う [[HTTP]] [CODE[GET]] [[要求]]は、
[[TLS]] を使わなければ[MUST[なりません]] [SRC[>>47]]。
[CODE[jku]] や [CODE[x5u]] に対応する実装は、
[[TLS]] に対応しなければ[MUST[なりません]] [SRC[>>138]]。

[141] 
[[RFC 6125]] 
[[service identity]]
[[検証]]を実施しなければ[MUST[なりません]]。
[SRC[>>47, >>138]]


[67] 
ここで[[仕様書]]は [[TLS]] について [[RFC 2818]] ([[HTTPS]])
と 
[[RFC 5246]] ([[TLS/1.2]])
を参照していますが、その意図するところは不明です。
(他の理論上はあり得る方法ではなく) [[HTTPS]]
を使うことを要求するべきでしょうか。
さらに [[RFC 6125]] が参照されていますが、
[[RFC 6125]] 自身は [[HTTPS]] に適用されるとはしておらず、
適用する場合 [[HTTPS]] の[[仕様書]]の改訂が必要になることを述べています。
[SEE[ [[service identity]] ]]
現時点でそのような改訂版はありません。
これは [[JWS]]
に関して [[RFC 6125]] を適用するべき特別の規定と解すべきなのか、
勇み足なのか、判断しかねます。
(現実の実装状況がどうなっているのかはまた別の問題であります。)

[140] 
[[TLS]] については、
実装するべき版は時代により変化し得るものであって、執筆時点では
[[RFC 5246]] [[TLS/1.2]] である [SRC[>>138]]
と明記されています。

[139] 
[[TLS]]
では[RUBYB[[[機密性]]][confidentiality]]保護と[[一貫性]]保護を提供する
[[ciphersuite]]
を使わなければ[MUST[なりません]]。
適切な [[ciphersuite]]
については
[[RFC 6176]] 
その他現行の [[IETF TLS working group]]
出版物を参照するべきです。
[[RFC 7572]] も参照するべきです。
[SRC[>>138]]



[68] 
こうした要件を満たし現実的に運用可能な[[プロトコル]]となると、
[[HTTPS]] ([[URL scheme]] は [CODE[https:]])
をおいて他にはありません。
(理論上は [[FTP]] over [[TLS]] なども該当し得ますが、
[[相互運用性]]に問題があります。)

;; [65] 一昔前ならこうした要件は[[保安輸送路]]といわれていました。


* 応用

[FIG(short list)[ [6] [[JWS]] の[[応用]]
- [[JWT]]
-- [[VAPID]]
]FIG]

* 歴史

[1] [CITE@en[JSON Web Signature (JWS)]]
( ([TIME[2011-12-14 23:15:42 +09:00]] 版))
<http://openid.net/specs/draft-jones-json-web-signature-04.html>

[2] [CITE@en[draft-ietf-jose-json-web-signature-19 - JSON Web Signature (JWS)]]
( ([TIME[2013-12-29 22:15:32 +09:00]] 版))
<http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-19>

[3] 
[TIME[2015年5月][2015-05]]、
[[IETF]]
[[提案標準]]
[DFN[RFC 7515]]
として出版されました。

[4] [CITE@en[RFC 7797 - JSON Web Signature (JWS) Unencoded Payload Option]]
([TIME[2016-03-31 02:08:14 +09:00]] 版)
<https://tools.ietf.org/html/rfc7797>

[5] [CITE@en[RFC 8055 - Session Initiation Protocol (SIP) Via Header Field Parameter to Indicate Received Realm]]
([TIME[2017-02-03 01:02:37 +09:00]])
<https://tools.ietf.org/html/rfc8055>