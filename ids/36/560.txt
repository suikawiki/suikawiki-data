* 仕様書

[REFS[
- [1] [CITE@en[RFC 8030 - Generic Event Delivery Using HTTP Push]], [TIME[2020-03-09 00:13:33 +09:00]] <https://tools.ietf.org/html/rfc8030>
]REFS]

* 用途

[3] 
[[モバイル端末]]・[[埋め込み機器]]の[[応用]]で[[実時間]]イベントを[[ネットワーク]]から受け取りたい
(「[[プッシュ]]」されたい) 要求がある一方で、
[[電力]]制約があって通信を抑制したいです。
[[応用]]ごとに別個に通信するのではなく、
1つのサービスに集約するのが良いと考えられます。
そのような前提の元、
[[Push API]]
では従来[[独占的]]プロトコルが用いられてきましたが、
本手法は[[標準化]]された[[プロトコル]]として開発されたものです。
[SRC[>>1 1.]]

[5] 
と[[仕様書]]では説明されていますが、電力の制約を持ち出すまでもなく、
無数の [[Webアプリケーション]]を常時稼働させておくのは現実的とはいえません。
[[Webブラウザー]]で当該 [[Webアプリケーション]]を開いていないときでも[[プッシュメッセージ]]を受け取れるために
(そうでなければとても実用的とはいえません)、
[[ワーカー]]を常時動作させておくとか、
最低でも1つ[[HTTP接続]]を維持させておかなければならないとしたら、
[[計算機資源]]を無駄に消費し続けることになります。
賢い[[アーキテクチャー]]とはいえないでしょう。
[[Webプラットフォーム]]という[[分散システム]]な全体設計と矛盾するようですが、
特定少数個に集約した[[プロトコル]]になるのは必然といえます。


[4] 
理論上 [[Push API]]
と併用せず独自の方法と組み合わせることも可能ですが、
実例があるかは不明です。

* プロトコル

[6] 次の[[用語]]が定義されています。
この[[用語]]は他の関連仕様でも使われています。

[FIG(short list)[ [7] [[Web Push Protocol]] の用語
- [[アプリケーション][アプリケーション (プッシュ)]]
- [[アプリケーションサーバー][アプリケーションサーバー (プッシュ)]]
- [[プッシュメッセージ購読]]
- [[プッシュメッセージ購読集合]]
- [[プッシュメッセージ]]
- [[プッシュメッセージ受領証]]
- [[プッシュサービス]]
- [[利用者エージェント][利用者エージェント (プッシュ)]]
]FIG]

[11] [[プッシュメッセージ]]の送受信など多くの操作は、
[[プッシュメッセージ購読]]を使って行います。

* 歴史

[2] 
[TIME[2016年12月][2016-12]]に
[[IETF]]
の[[提案標準]]
[DFN[RFC 8030]]
として出版されました。
[SRC[>>1]]
