[2] 
[DFN[[RUBYB[プッシュメッセージ][push message]]]]は、
[[アプリケーションサーバー]]から[[利用者エージェント]]へと[[プッシュサービス]]を介して送られる[[メッセージ]]です。
[SRC[>>1 1.1.]]

[3] 
[[RFC 8030]] がただ「message」とのみ書いているときでも、多くは[[プッシュメッセージ]]とみられます。

[4] 
[DFN[[RUBYB[プッシュメッセージ資源][push message resource]]]]は、
[[プッシュサービス]]が、
配送を受理した[[プッシュメッセージ]]を識別するべく作成するものです。
[[利用者エージェント]]による[[プッシュメッセージ]]の受領肯定で、
削除されます。
[SRC[>>1 2.1.]]

* 仕様書

[REFS[
- [1] [CITE@en[RFC 8030 - Generic Event Delivery Using HTTP Push]], [TIME[2020-03-09 00:13:33 +09:00]] <https://tools.ietf.org/html/rfc8030>
]REFS]

* 特性

[5] [[プッシュメッセージ]]の本体は、
[[HTTPメッセージ]]の[[本体]]で与えられたデータです。
[[Web Push Protocol]] としては制限はないようです。

[6] [[プッシュメッセージ]]には、 
有効期限があります。
[SEE[ [[TTL:]] ]]
期限到来後未配送の[[プッシュメッセージ]]は捨てられます。
[[プッシュメッセージ資源]]も削除されるかもしれません。

[7] [[プッシュメッセージ]]には、
緊急度があります。
[SEE[ [[Urgency:]] ]]

* 作成

[10] [[プッシュメッセージ]]は、
[[アプリケーションサーバー]]が[[プッシュサービス]]の[[プッシュ資源]]へと送信することで作成されます。
受理した[[プッシュサービス]]は、対応する[[プッシュメッセージ資源]]を作成します。

* 受信

[8] [[プッシュメッセージ]]は、
[[プッシュサービス]]から[[利用者エージェント]]へと、
[[プッシュメッセージ購読]]や[[プッシュメッセージ購読集合]]の[[要求]]に対する
[[server push]] で配送されます。
[SEE[ [[プッシュメッセージ購読]] ]]

[9] 
理論上、[[プッシュメッセージ資源]]を直接 [CODE[GET]]
することでも[[プッシュメッセージ]]にアクセスできるはずですし、
[[server push]] の[[意味論]]的にはそちらでもアクセスできて然るべきですが、
プロトコル上特に必要性はありません。
実装がどうなっているか不明です。

* メモ
