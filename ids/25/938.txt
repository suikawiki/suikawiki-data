[FIG(quote)[
[FIGCAPTION[
[1] [CITE@en[REST API Design: Put the "Type" in "Content-Type" | ProgrammableWeb]]
([TIME[2016-01-15 22:03:49 +09:00]] 版)
<http://www.programmableweb.com/news/rest-api-design-put-type-content-type/2011/11/18>
]FIGCAPTION]

> To support and separate these design concerns, the "application/wrml" media type can be used to communicate both the "Format" and "Schema" of the data exchanged between a REST API and its clients. application/wrml; schema=URI; format=URI 

]FIG]


[FIG(quote)[
[FIGCAPTION[
[2] [CITE@en[REST API Design: Put the "Type" in "Content-Type" | ProgrammableWeb]]
([TIME[2016-01-15 22:04:21 +09:00]] 版)
<http://www.programmableweb.com/news/rest-api-design-put-type-content-type/2011/11/18>
]FIGCAPTION]

> The example below shows WRML's media type used to describe a Player form that is formatted using JSON. application/wrml; schema="http://api.schemas.wrml.org/soccer/Player"; format="http://api.formats.wrml.org/application/json" The application/wrml media type's required schema parameter's value identifies a separate document that details the Player resource type's form, which is independent of the media type's format parameter's value. The media type's required format parameter's value identifies a document resource that describes the JSON format itself. 

]FIG]


[3] [CITE@en[wrml/wrml - JavaScript]]
([TIME[2016-01-15 22:05:10 +09:00]] 版)
<https://github.com/wrml/wrml>