[26] [[バイト列]][VAR[列]]について、[VAR[列]][i] とは、
[VAR[i]] 番目の[[バイト]]を指します。 [VAR[列]][i..j]
とは、[VAR[i番目]]の[[バイト]]から始まり、[VAR[j]]番目の[[バイト]]で終わる列をいいます。
[VAR[i]] より [VAR[j]] が小さければ、空の[[バイト列]]とします。
なお[[バイト列]]の先頭の[[バイト]]は、0番目とします。

[20] [[フレーム]]には、次の欄があります。
[FIG(list members)[
:長さ: 非負整数。
:フラグ群: 長さ8のビットベクトル。
:ストリーム識別子: 非負整数。
:payload: バイト列。
:詰め長: 非負整数または null。初期値は null。
:誤り符号: 非負整数または null。初期値は null。
:排他的フラグ: 初期値は未設定。
:ストリーム依存性: 非負整数または null。初期値は null。
:約束ストリーム識別子: 非負整数または null。初期値は null。
:最終ストリーム識別子: 非負整数または null。初期値は null。
:重み: 非負整数または null。初期値は null。
:窓サイズ増分: 非負整数または null。初期値は null。
:データ: バイト列または null。初期値は null。
:追加デバッグデータ: バイト列または null。初期値は null。
:詰め: バイト列または null。初期値は null。
]FIG]

[21] [[ストリーム]]には、次の欄があります。
[FIG(list members)[
:ストリーム識別子: 非負整数。
:開始した peer: 「クライアント」または「サーバー」。
:状態: 初期値は idle。
:親ストリーム: ストリームまたは null。初期値は null。
:依存ストリーム群: ストリーム集合。初期値は空。
:重み: 非負整数。初期値は16。
:処理開始済みフラグ: 初期値は未設定。
:自身のフロー制御窓差分: 整数。初期値は 0。
:peerのフロー制御窓差分: 整数。初期値は 0。
]FIG]

[25] ストリーム集合は、[[ストリーム]]の[[集合]]です。ストリーム集合[VAR[集合]]について、
[VAR[集合]] ([VAR[ストリーム識別子]]) とは、[VAR[集合]]に含まれるストリームのうち、
ストリーム識別子が[VAR[ストリーム識別子]]と等しいものを指します。
そのようなストリームがなければ、 null を表します。

[6] 初期化は、次のようにします。
[FIG(steps)[
= [VAR[接続]]を、[[下位層の接続]]の端点とします。
= [VAR[自身の設定]]と[VAR[peerの設定]]を、次のようにします。
[FIG(list members)[
:[CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]: 2[SUP[14]]
:[CODE[[[SETTINGS_ENABLE_PUSH]]]]: 1
:[CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]]: 2[SUP[16]]-1
:[CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]]: ∞
]FIG]
= [VAR[バッファー]]を、空バイト列に設定します。
= [VAR[フレーム]]を、 null に設定します。
= [VAR[ストリーム群]]を、空のストリーム集合に設定します。
= [VAR[継続ストリーム識別子]]を、 null に設定します。
= [VAR[自身のフロー制御窓差分]]と[VAR[peerのフロー制御窓差分]]を、 0 に設定します。
]FIG]

[15] [VAR[接続]]のバイト受信の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= [VAR[緊急データ]]フラグが設定されていれば、ここで停止します。
= [VAR[バッファー]]の末尾に[VAR[バイト]]を追加します。
= [VAR[バッファー]]の長さが9なら、
== [VAR[フレーム]]を、新しいフレームに設定します。
== フレームヘッダーの処理を実行します。引数[VAR[ヘッダー]]は、[VAR[バッファー]]とします。
引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
==
@@ 例外
= [VAR[バッファー]]の長さが 9 [[以上]]で、 9 + [VAR[フレーム]]の長さ[[以下]]なら、
== [VAR[フレーム]]の検査済みフラグが設定されていなければ、
=== フレームの検査を実行して構いません。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
[WEAK[[[Chrome]] は長さ9で実行するようです。[[Firefox]] はここでは実行しないようです。]]
===
@@ 例外
=== 
@@ [VAR[フレーム]]の型が [CODE[[[DATA]]]] の場合、 ...
= [VAR[バッファー]]の長さが 9 + [VAR[フレーム]]の長さと等しければ、
== [VAR[フレーム]]の検査済みフラグが設定されていなければ、
=== フレームの検査を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
==
@@ 例外
== [VAR[フレーム]]の payload を、[VAR[バッファー]]の第10バイト以降末尾までに設定します。
== フレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
== [VAR[バッファー]]を、空バイト列に設定します。
== [VAR[フレーム]]を、 null に設定します。
== [VAR[継続ストリーム識別子]]を、 null に設定します。
]FIG]

[9] 適宜、[[接続エラー]] [CODE[[[ENHANCE_YOUR_CALM]]]] を投げても構いません。

[17] [VAR[接続]]の受信終了の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= [VAR[バッファー]]が空でなければ、
==
@@ エラーを通知します。
=
@@ GOAWAY NO_ERROR
= [VAR[接続]]の正常終了を指示します。
]FIG]

[18] [VAR[接続]]の中断の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= 
@@ エラーを通知します。
]FIG]

[1] フレームヘッダーの処理は、[VAR[フレーム]]と[VAR[ヘッダー]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の長さを、[VAR[ヘッダー]][0..2] をネットワークバイト順の符号無し24ビット整数として解釈した結果とします。
= [VAR[フレーム]]の型を、[VAR[ヘッダー]][3]を符号無し8ビット整数として解釈した結果とします。
= [VAR[フレーム]]のフラグ群を、[VAR[ヘッダー]][4]とします。
= [VAR[R]] を、[VAR[ヘッダー]][5] を符号無し8ビット整数として解釈した結果 & 128 とします。
= [VAR[R]] が 1 なら、不正な [VAR[R]] として警告します [SRC[仕様なし]]。
= [VAR[フレーム]]のストリーム識別子を、[VAR[ヘッダー]][6..9] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) とします。
= [VAR[フレーム]]の長さが[VAR[自身の設定]]の [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
== [[接続エラー]] [WEAK[[VAR[フレーム]]の型が [CODE[DATA]] と未知の場合 [[RFC]] ではストリームエラーでも可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
]FIG]

[2] フレームの検査は、[VAR[フレーム]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
== それ以外で、[VAR[継続ストリーム識別子]]が[VAR[フレーム]]のストリーム識別子と等しくなければ、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]] フラグが設定されていれば、
=== [VAR[継続ストリーム識別子]]を null に設定します。
= それ以外なら、
== [VAR[継続ストリーム識別子]]が null 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[フレーム]]の型が [CODE[[[DATA]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていて、
[VAR[フレーム]]の長さが0なら、
=== [[接続エラー]] [WEAK[RFC ではストリームエラー可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群に [CODE[[[END_STREAM]]]], [CODE[[[PADDED]]]]
以外が設定されているなら、未知のフラグとして警告します
[SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[HEADERS]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群に [CODE[[[END_STREAM]]]], [CODE[[[END_HEADERS]]]],
[CODE[[[PADDED]]]], [CODE[[[PRIORITY]]]] 以外のフラグが設定されていれば、未知のフラグを警告します
[SRC[仕様なし]]。
== [VAR[フレーム]]のフラグ群に [CODE[END_HEADERS]] フラグが設定されていなければ、
=== [VAR[継続ストリーム識別子]]を、[VAR[フレーム]]のストリーム識別子に設定します。
= [VAR[フレーム]]の型が [CODE[[[PRIORITY]]]] なら、
== [VAR[フレーム]]の長さが5以外なら、
=== [[接続エラー]] [WEAK[[[RFC]] では[VAR[フレーム]]のストリーム識別子が 0 以外の時[[ストリームエラー]]可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 以外なら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[RST_STREAM]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが4以外なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 以外なら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[SETTINGS]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] が設定されていれば、
=== [VAR[フレーム]]の長さが0以外なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== それ以外なら、
=== [VAR[フレーム]]の長さを6で割ると余るなら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] 以外が設定されているなら、
未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[PUSH_PROMISE]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されているなら、
=== [VAR[フレーム]]の長さが5未満なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== それ以外なら、
=== [VAR[フレーム]]の長さが4未満なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[仕様なし?]]。
== [VAR[自身の設定]]の [CODE[[[SETTINGS_ENABLE_PUSH]] が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[接続]]の種別が「サーバー」なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]], [CODE[[[PADDED]]]]
以外のフラグが設定されていれば、未知のフラグを警告します [SRC[仕様なし]]。
== [VAR[フレーム]]のフラグ群に [CODE[END_HEADERS]] フラグが設定されていなければ、
=== [VAR[継続ストリーム識別子]]を、[VAR[フレーム]]のストリーム識別子に設定します。
= [VAR[フレーム]]の型が [CODE[[[PING]]]] なら、
== [VAR[フレーム]]の長さが8以外なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] 以外が設定されているなら、
未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[GOAWAY]]]] なら、
== [VAR[フレーム]]の長さが8未満なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 でないなら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[WINDOW_UPDATE]]]] なら、
== [VAR[フレーム]]の長さが4でなければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 でないなら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]]
以外が設定されていれば、未知のフラグを警告します [SRC[仕様なし]]。
= それ以外なら、
== 未知の型として警告します [SRC[仕様なし]]。
]FIG]

[19] フレームの処理は、[VAR[フレーム]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の型が [CODE[[[DATA]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されているなら、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[0]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[フレーム]]の詰め長 + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のデータを、[VAR[フレーム]]の payload[1..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)] に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のデータを、[VAR[フレーム]]の payload に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[HEADERS]]]] なら、
== [VAR[i]] を、 0 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[i]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[i]] を、[VAR[i]] + 1 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PRIORITY]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の排他的を、[VAR[フレーム]]の payload[i] を符号無し8ビット整数として解釈した結果 & 128 に設定します。
=== [VAR[フレーム]]のストリーム依存性を、[VAR[フレーム]]の payload[i..(i+3)] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
=== [VAR[フレーム]]の重みを、[VAR[フレーム]]の payload[i+4] を符号無し8ビット整数として解釈した結果 + 1 に設定します。
=== [VAR[i]] を、 [VAR[i]] + 1 に設定します。
== [VAR[フレーム]]の詰め長が設定されていれば、
=== [VAR[フレーム]]の詰め長 + [VAR[i]] + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のヘッダーブロック素片を、[VAR[フレーム]]の 
payload[i..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の 
payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)]
に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のヘッダーブロック素片を、 [VAR[フレーム]]の
payload[i..([VAR[フレーム]]の長さ - 1)] に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[PRIORITY]]]] なら、
== [VAR[フレーム]]の排他的を、[VAR[フレーム]]の payload[0] を符号無し8ビット整数として解釈した結果 & 128 に設定します。
== [VAR[フレーム]]のストリーム依存性を、[VAR[フレーム]]の payload[0..3] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の重みを、[VAR[フレーム]]の payload[4] を符号無し8ビット整数として解釈した結果 + 1 に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[RST_STREAM]]]] なら、
== [VAR[フレーム]]の誤り符号を、[VAR[フレーム]]の payload を符号無し32ビット整数として解釈した結果に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[SETTINGS]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[ACK]] フラグが設定されていれば、
===
@@
== それ以外なら、
=== [VAR[フレーム]]の payload を先頭から順に6バイトずつ、
==== [VAR[識別子]]を、先頭2バイトを符号無し16ビット整数として解釈した結果とします。
==== [VAR[値]]を、末尾4バイトを符号無し32ビット整数として解釈した結果とします。
=== 
@@ [CODE[ACK]] フラグを設定した [CODE[[[SETTINGS]]]] フレームを送信します。
= [VAR[フレーム]]の型が [CODE[[[PUSH_PROMISE]]]] なら、
== [VAR[i]] を、 0 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[i]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[i]] を、[VAR[i]] + 1 に設定します。
== [VAR[R]] を、[VAR[フレーム]]の payload[i] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の約束ストリーム識別子を、[VAR[フレーム]]の payload[i..(i+3)] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の詰め長が設定されていれば、
=== [VAR[フレーム]]の詰め長 + [VAR[i]] + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のヘッダーブロック素片を、[VAR[フレーム]]の 
payload[i..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の 
payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)]
に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のヘッダーブロック素片を、 [VAR[フレーム]]の
payload[i..([VAR[フレーム]]の長さ - 1)] に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[PING]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] フラグが設定されていれば、
=== 
@@@
== そうでなければ、
=== 
@@@ [CODE[ACK]] [CODE[[[PING]]]] を送信します。 payload を同じ値とします。
= [VAR[フレーム]]の型が [CODE[[[GOAWAY]]]] なら、
== [VAR[R]] を、 [VAR[フレーム]]の payload[0] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の最終ストリーム識別子を、[VAR[フレーム]]の payload[0..3]
を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の誤り符号を、[VAR[フレーム]]の payload[4..7]
を符号無し32ビット整数として解釈した結果に設定します。
== [VAR[フレーム]]の追加デバッグデータを、[VAR[フレーム]]の 
payload[8..([VAR[フレーム]]の長さ -1)] に設定します。
==
@@@
= [VAR[フレーム]]の型が [CODE[[[WINDOW_UPDATE]]]] なら、
== [VAR[R]] を、 [VAR[フレーム]]の payload[0] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の窓サイズ増分を、[VAR[フレーム]]の payload
を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]のストリーム識別子が0なら、
=== [VAR[フレーム]]の窓サイズ増分が0なら、
==== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
=== [VAR[peerの設定]]の [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] +
[VAR[peerのフロー制御窓差分]] + [VAR[フレーム]]の窓サイズ増分が 2[SUP[31]]-1
より大きければ、
==== [[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
=== [VAR[peerのフロー制御窓差分]]に、 [VAR[フレーム]]の窓サイズ増分を足します。
== それ以外なら、
=== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
==
@@
]FIG]

[22] ストリームの作成は、[VAR[ストリーム識別子]]を引数とし、次のようにします。
[FIG(steps)[
= 
[FIG(list)[
- [VAR[ストリーム識別子]]が 0 か、
- [VAR[接続]]の種別が「サーバー」で[VAR[ストリーム識別子]]が偶数か、
- [VAR[接続]]の種別が「クライアント」で[VAR[ストリーム識別子]]が奇数
]FIG]
... なら、
== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[ストリーム識別子]] - 2 が[[正]]なら、
== [VAR[ストリーム]]を、[VAR[ストリーム群]]のうちストリーム識別子が[VAR[ストリーム識別子]] - 2
と等しいストリームとします。なければ null とします。
== [VAR[ストリーム]]が null なら、
=== ストリームの作成を行います。[VAR[ストリーム識別子]]は、
[VAR[ストリーム識別子]] - 2 とします。
[VAR[ストリーム]]を、得られたストリームとします。
== [VAR[ストリーム]]の状態が idle なら、 skipped に設定します。
= [VAR[ストリーム]]を、新しいストリームに設定します。
[FIG(list members)[
:ストリーム識別子: [VAR[ストリーム識別子]]
:開始した peer: [VAR[接続]]の種別が「サーバー」なら「クライアント」、そうでなければ「クライアント」
]FIG]
= [VAR[ストリーム群]]に[VAR[ストリーム]]を追加します。
= [VAR[ストリーム]]を返します。
]FIG]

[10] ストリームフレームの処理は、[VAR[フレーム]]を引数とし、
次のようにします。エラーが投げられたらそこで停止し、伝播させます。
[FIG(steps)[
= [VAR[ストリーム]]を、[VAR[ストリーム群]]のうちストリーム識別子が[VAR[フレーム]]のストリーム識別子と等しいものとします。なければ、 null とします。
= [VAR[ストリーム]]が非 null で状態が close received なら、
== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、 [[接続エラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
= [VAR[フレーム]]の型が [CODE[DATA]] なら、
== [VAR[ストリーム]]が null か状態が open, half-closed (local), half-closed (remote) 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の状態が half-closed (remote) なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、[[ストリームエラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
=== [VAR[ストリーム]]の状態が open なら、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
=== [VAR[ストリーム]]の状態が half-closed (local) なら、
==== [VAR[ストリーム]]の状態を、 close received に設定します。
== 
[FIG(list)[
- [VAR[フレーム]]のデータの長さが[VAR[自身の設定]]の [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]]
の値 + [VAR[自身のフロー制御窓差分]]より大きい
- [VAR[フレーム]]のデータの長さが[VAR[自身の設定]]の [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]]
の値 + [VAR[ストリーム]]の自身のフロー制御窓差分より大きい
]FIG]
... のいずれかなら、
===
@@ [[ストリームエラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げて構いません。
== [VAR[自身のフロー制御窓差分]]から、[VAR[フレーム]]のデータの長さを引きます。
== [VAR[ストリーム]]の自身のフロー制御窓差分から、[VAR[フレーム]]のデータの長さを引きます。
==
@@
= [VAR[フレーム]]の型が [CODE[HEADERS]] なら、
== [VAR[ストリーム]]が null か状態が idle なら、
=== [VAR[ストリーム群]]のうち状態が open, half-closed (local), half-closed (remote)
のいずれかのものの数が [CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]] 
と等しければ、
==== [[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] または 
[CODE[[[REFUSED_STREAM]]]] を選び、投げます。
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]のストリーム識別子とします。[VAR[ストリーム]]を、得られたストリームに設定します。
=== [VAR[ストリーム]]の状態を、 open に設定します。
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
=== [VAR[フレーム]]のフレーム優先度の処理を行います。
=== 
@@
== それ以外で、 [VAR[ストリーム]]の状態が reserved (remote) なら、
=== [VAR[ストリーム]]の状態を、 half-closed (local) に設定します。
=== [VAR[フレーム]]のフレーム優先度の処理を行います。
=== 
@@
== それ以外で、 [VAR[ストリーム]]の状態が open なら、
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
=== [VAR[フレーム]]のフレーム優先度の処理を行います。
===
@@
== それ以外で、 [VAR[ストリーム]]の状態が half-closed (local) なら、
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 closed に設定します。
=== [VAR[フレーム]]のフレーム優先度の処理を行います。
=== @@
== それ以外で、 [VAR[ストリーム]]の状態が half-closed (remote) なら、
=== [[ストリームエラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。
== それ以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[フレーム]]の型が [CODE[PRIORITY]] なら、
== [VAR[フレーム]]のフレーム優先度の処理を行います。
= [VAR[フレーム]]の型が [CODE[RST_STREAM]] なら、
== [VAR[ストリーム]]が null か状態が idle なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の状態を、 reset received に設定します。
==
@@
= [VAR[フレーム]]の型が [CODE[PUSH_PROMISE]] なら、
== [VAR[ストリーム]]が null か状態が idle なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の状態が half-closed (remote) なら、
=== [[ストリームエラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。
== [VAR[フレーム]]の約束ストリーム識別子が奇数なら、
=== 接続エラー [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[約束ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]の約束ストリーム識別子) とします。
== [VAR[約束ストリーム]]が null なら、
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]の約束ストリーム識別子とします。[VAR[約束ストリーム]]を、得られたストリームに設定します。
== [VAR[約束ストリーム]]のストリーム識別子が idle 以外なら、
=== 接続エラー [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[約束ストリーム]]の状態を、 reserved (remote) に設定します。
== [VAR[約束ストリーム]]の親ストリームを、 [VAR[ストリーム]]に設定します。
== [VAR[ストリーム]]の依存ストリーム群に、[VAR[約束ストリーム]]を追加します。
= [VAR[フレーム]]の型が [CODE[WINDOW_UPDATE]] なら、
== [VAR[ストリーム]]が null か状態が idle なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]の窓サイズ増分が0なら、
=== [[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[peerの設定]]の [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] +
[VAR[ストリーム]]のpeerのフロー制御窓差分 + [VAR[フレーム]]の窓サイズ増分が 2[SUP[31]]-1
より大きければ、
=== [[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の peerのフロー制御窓差分に、 [VAR[フレーム]]の窓サイズ増分を足します。
]FIG]

@@ 状態が skipped, reset received, reset sent, close sent

[23] [VAR[フレーム]]についてのフレーム優先度の処理は、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]のストリーム識別子と[VAR[フレーム]]のストリーム依存性が同じなら、
[[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム識別子) とします。
= [VAR[親ストリーム]]と[VAR[祖先ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム依存性) とします。
= 
@@ [VAR[親ストリーム]]が null で、[VAR[フレーム]]のストリーム依存性が 0 以外なら、
= [VAR[祖先ストリーム]]が[VAR[ストリーム]]と等しければ、
== [VAR[ストリーム]]の依存ストリーム群の各ストリームについて、
=== そのストリームの親ストリームを、[VAR[ストリーム]]の親ストリームに設定します。
=== [VAR[ストリーム]]の親ストリームの依存ストリーム群に、そのストリームを追加します。
== [VAR[ストリーム]]の依存ストリーム群を空にします。
= [VAR[フレーム]]の排他的フラグが設定されていれば、
== [VAR[親ストリーム]]の依存ストリーム群のストリームのうち、[VAR[ストリーム]]と等しくないものについて、
=== そのストリームの親ストリームを、[VAR[ストリーム]]に設定します。
=== [VAR[ストリーム]]の依存ストリーム群に、そのストリームを追加します。
= [VAR[ストリーム]]の親ストリームを、[VAR[親ストリーム]]に設定します。
= [VAR[ストリーム]]の重みを、[VAR[フレーム]]の重みに設定します。
]FIG]

[7] 設定の変更は、次のようにします。
[FIG(steps)[
= [VAR[識別子]]が [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]] なら、
== 2[SUP[14]] ≦ [VAR[値]] ≦ 2[SUP[24]]-1 でなければ、[[接続エラー]]
[CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[識別子]]が [CODE[[[SETTINGS_ENABLE_PUSH]]]] なら、
== [VAR[値]]が 0 か 1 でなければ、[[接続エラー]]
[CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[値]]が 1 で[VAR[接続]]の種別が「クライアント」なら、[[接続エラー]]
[CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[識別子]]が [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] なら、
== [VAR[値]]が 2[SUP[31]]-1 より大きければ、[[接続エラー]]
[CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
== [VAR[peerのフロー制御窓差分]] + [VAR[値]]が2[SUP[31]]-1 より大きければ、[[接続エラー]]
[CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
== [VAR[ストリーム群]]の各ストリームについて、
=== そのストリームのpeerのフロー制御窓差分 + [VAR[値]]が2[SUP[31]]-1 より大きければ、
[[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
= 
@@
= [VAR[識別子]]が [CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]] なら、
== 何もしません。
= それ以外なら、
== 未知の設定であると警告します [SRC[仕様になし]]。
== ここで停止します。
= [VAR[peerの設定]]の欄[VAR[識別子]]の値を、[VAR[値]]に設定します。
]FIG]

@@
[27] データの送信
= 長さ0で [CODE[RST_STREAM]] なら OK
= それ以外で
-- 初期 + [VAR[peerのフロー制御窓差分]]が負かに空きがなければ
-- 初期 + [VAR[ストリーム]]のpeerのフロー制御窓差分が負か空きがなければ
== エラー

@@
- 状態が idle で [CODE[HEADERS]] を送信したら、open に設定します。
- 状態が idle で [CODE[PUSH_PROMISE]] を送信したら、 ...
- 状態が open/half-closed (remote) で [CODE[END_STREAM]] を送信したら、 ...
- [CODE[RST_STREAM]] を送信したら、 ...

@@
[8] [[接続エラー]]を投げる

@@ [[ストリームエラー]]を投げる

@@ 警告

@@ 原因が [CODE[[[GOAWAY]]]] の場合

@@
[11] [CODE[[[SETTINGS]]]] フレームの送信
... [[接続エラー]] [CODE[[[SETTINGS_TIMEOUT]]]] を投げて構いません。

@@
[13] サーバーからの接続終了
[CODE[[[GOAWAY]]]] 最終ストリーム識別子=2[SUP[32]]-1 [CODE[[[NO_ERROR]]]]

@@
[12] 接続の中断
[CODE[[[CANCEL]]]] で [CODE[[[GOAWAY]]]]