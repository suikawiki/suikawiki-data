* 定義

[26] [[バイト列]][VAR[列]]について、[VAR[列]][i] とは、
[VAR[i]] 番目の[[バイト]]を指します。 [VAR[列]][i..j]
とは、[VAR[i]] 番目の[[バイト]]から始まり、[VAR[j]]番目の[[バイト]]で終わる列をいいます。
[VAR[i]] より [VAR[j]] が小さければ、空の[[バイト列]]とします。
なお[[バイト列]]の先頭の[[バイト]]は、0番目とします。

[20] [[フレーム]]には、次の欄があります。
[FIG(list members)[
:長さ: 非負整数。
:フラグ群: 長さ8のビットベクトル。
:ストリーム識別子: 非負整数。
:payload: バイト列。
:詰め長: 非負整数または null。初期値は null。
:誤り符号: 非負整数または null。初期値は null。
:排他的フラグ: 初期値は未設定。
:ストリーム依存性: 非負整数または null。初期値は null。
:約束ストリーム識別子: 非負整数または null。初期値は null。
:最終ストリーム識別子: 非負整数または null。初期値は null。
:重み: 非負整数または null。初期値は null。
:窓サイズ増分: 非負整数または null。初期値は null。
:データ: バイト列または null。初期値は null。
:追加デバッグデータ: バイト列または null。初期値は null。
:詰め: バイト列または null。初期値は null。
]FIG]

[21] [[ストリーム]]には、次の欄があります。
[FIG(list members)[
:ストリーム識別子: 非負整数。
:状態: 初期値は idle。
:メッセージ状態: 初期値は「初期」。
:親ストリーム: ストリームまたは null。初期値は null。
:依存ストリーム群: ストリーム集合。初期値は空。
:重み: 非負整数。初期値は16。
:処理開始済みフラグ: 初期値は未設定。
:自身のフロー制御窓差分: 整数。初期値は 0。
:peerのフロー制御窓差分: 整数。初期値は 0。
:バッファー: バイト列。
:要求: メッセージまたは null。初期値は null。
:メッセージ: メッセージまたは null。初期値は null。
]FIG]

[25] ストリーム集合は、[[ストリーム]]の[[集合]]です。ストリーム集合[VAR[集合]]について、
[VAR[集合]] ([VAR[ストリーム識別子]]) とは、[VAR[集合]]に含まれるストリームのうち、
ストリーム識別子が[VAR[ストリーム識別子]]と等しいものを指します。
そのようなストリームがなければ、 null を表します。

[36] メッセージには、次の欄があります。
[FIG(list members)[
:[CODE[1xx]] リスト: ヘッダーリストのリスト。初期値は空リスト。
:メソッド: バイト列または null。初期値は null。
:scheme: バイト列または null。初期値は null。
:authority: バイト列または null。初期値は null。
:path: バイト列または null。初期値は null。
:状態: バイト列または null。初期値は null。
:ヘッダー群: ヘッダーリストまたは null。初期値は null。
:payload body: バイト列。初期値は空。
:trailer: ヘッダーリストまたは null。初期値は null。
:push フラグ: 初期値は未設定。
]FIG]

* アプリケーションへの通知

@@
[46] push の通知
[FIG(list members)[
:ストリーム: ストリーム。
]FIG]

[47] アプリケーションは push の通知を受信したら、
通知された[VAR[ストリーム]]の要求のメソッド、scheme、authority、path
の組が既に push の通知で受信した組と一致していないか検査し、
一致していれば[VAR[誤り符号]]を [CODE[[[PROTOCOL_ERROR]]]]
として[VAR[ストリーム]]の中断を指示することが期待されています。

@@
[48] 
[FIG(list)[
- [VAR[要求]]についてヘッダーの通知
[FIG(list members)[
:ストリーム: ストリーム。
]FIG]
- [VAR[要求]]について中断の通知
[FIG(list members)[
:終了: 終了。
]FIG]
]FIG]

[49] アプリケーションは[VAR[要求]]についてヘッダーの通知を受信したら、
[VAR[要求]] の push フラグが設定されていれば、
[VAR[要求]]の scheme と authority が適切かどうか検査し、
不適切なら[VAR[誤り符号]]を [CODE[[[REFUSED_STREAM]]]]
として[VAR[ストリーム]]の中断を指示することが期待されています。

[41] アプリケーションは[VAR[要求]]について中断の通知を受信したら、
[VAR[終了]]の HTTP/1.1 切り替えフラグが設定されていれば、
[[HTTP/1.1]] で[VAR[要求]]を再送信することが期待されています。

* 初期化

[40] [VAR[接続]]の [[TLS]] の[[再折衝]]は、無効にします。 [WEAK[[[RFC]] では最初だけ折衝可能。]]

[6] 初期化は、次のようにします。
[FIG(steps)[
= [VAR[接続]]を、[[下位層の接続]]の端点とします。
= [VAR[自身の設定]]と[VAR[peerの設定]]を、次のようにします。
[FIG(list members)[
:[CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]: 2[SUP[14]]
:[CODE[[[SETTINGS_ENABLE_PUSH]]]]: 1
:[CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]]: 2[SUP[16]]-1
:[CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]]: ∞
:[CODE[[[SETTINGS_HEADER_TABLE_SIZE]]]]: 4096
:[CODE[[[SETTINGS_MAX_HEADER_LIST_SIZE]]]]: ∞
]FIG]
= [VAR[バッファー]]を、空バイト列に設定します。
= [VAR[フレーム]]を、 null に設定します。
= [VAR[ストリーム群]]を、空のストリーム集合に設定します。
= [VAR[継続ストリーム識別子]]を、 null に設定します。
= [VAR[自身のフロー制御窓差分]]と[VAR[peerのフロー制御窓差分]]を、 0 に設定します。
= [VAR[符号化用動的表]]を、空のリストに設定します。
= [VAR[符号化用動的表サイズ]]を、[VAR[peerの設定]]の欄 [CODE[[[SETTINGS_HEADER_TABLE_SIZE]]]]
の値に設定します。
= [VAR[復号用動的表]]を、空のリストに設定します。
= [VAR[復号用動的表サイズ]]を、[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_HEADER_TABLE_SIZE]]]]
の値に設定します。
= [VAR[受信状態]]を、[VAR[接続]]の種別が「クライアント」なら「[CODE[SETTINGS]] 前」、
「サーバー」なら「接続序文前」に設定します。
=
@@ TLS のオプションの検査を行います。問題があれば、[[接続エラー]]
[CODE[[[INADEQUATE_SECURITY]]]] を投げます。
= [VAR[要求締め切り]]フラグは設定しません。
]FIG]

* 接続からの通知の処理

[15] [VAR[接続]]のバイト受信の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= [VAR[緊急データ]]フラグが設定されていれば、ここで停止します。
= [VAR[バッファー]]の末尾に[VAR[バイト]]を追加します。
= [VAR[受信状態]]が「接続序文前」なら、
== [VAR[バッファー]]の長さが24なら、
=== [VAR[バッファー]]が [CODE[0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a]]
なら、
==== [VAR[受信状態]]を、「[CODE[SETTINGS]] 前」に設定します。
=== それ以外なら、
==== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げ、ここで停止します。
== それ以外なら、
=== ここで停止します。
= [VAR[バッファー]]の長さが9なら、
== [VAR[フレーム]]を、新しいフレームに設定します。
== フレームヘッダーの処理を実行します。引数[VAR[ヘッダー]]は、[VAR[バッファー]]とします。
引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
接続エラーが投げられたら、ここで停止します。
= [VAR[バッファー]]の長さが 9 [[以上]]で、 9 + [VAR[フレーム]]の長さ[[以下]]なら、
== [VAR[フレーム]]の検査済みフラグが設定されていなければ、
=== フレームの検査を実行して構いません。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
接続エラーが投げられたら、ここで停止します。
= [VAR[バッファー]]の長さが 9 + [VAR[フレーム]]の長さと等しければ、
== [VAR[フレーム]]の検査済みフラグが設定されていなければ、
=== フレームの検査を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
接続エラーが投げられたら、ここで停止します。
== [VAR[フレーム]]の payload を、[VAR[バッファー]]の第10バイト以降末尾までに設定します。
== フレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
== [VAR[バッファー]]を、空バイト列に設定します。
== [VAR[フレーム]]を、 null に設定します。
== [VAR[継続ストリーム識別子]]を、 null に設定します。
]FIG]

[9] 適宜、[[接続エラー]] [CODE[[[ENHANCE_YOUR_CALM]]]] を投げても構いません。

[17] [VAR[接続]]の受信終了の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= [VAR[バッファー]]が空でなければ、
== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げ、停止します。
= [CODE[GOAWAY]] フレームの処理を実行します。引数[VAR[フレーム]]は、次のようにします。
[FIG(list members)[
:型:[CODE[[[GOAWAY]]]]
:R: 設定しない
:最終ストリーム識別子: 0
:誤り符号:[CODE[[[NO_ERROR]]]]
:追加デバッグデータ: 空
]FIG]
]FIG]

[18] [VAR[接続]]の中断の通知は、次のように処理します [SRC[仕様なし]]。
[FIG(steps)[
= [CODE[GOAWAY]] フレームの処理を実行します。引数[VAR[フレーム]]は、次のようにします。
[FIG(list members)[
:型:[CODE[[[GOAWAY]]]]
:R: 設定しない
:最終ストリーム識別子: 0
:誤り符号:[CODE[[[CANCEL]]]]
:追加デバッグデータ: 空
]FIG]
]FIG]

* 指示の処理

[13] 接続の正常終了の指示は、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]を、次のような新しい[[フレーム]]とします。
[FIG(list members)[
:型: [CODE[[[GOAWAY]]]]
:長さ: 8
:フラグ: 0
:ストリーム識別子: 0
:最終ストリーム識別子: 2[SUP[32]]-1 [SRC[RFC]]
:誤り符号: [VAR[誤り符号]]
:追加デバッグデータ: 空
]FIG]
= 
@@ [VAR[フレーム]]を送信します。
= [CODE[GOAWAY]] フレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
]FIG]

[45] 接続の中断の指示は、次のようにします。
[FIG(steps)[
= [[接続エラー]] [CODE[[[CANCEL]]]] を投げ、停止します。
]FIG]

[50] 新しい要求[VAR[メッセージ]]のヘッダーの送信の指示は、次のようにします。
[FIG(steps)[
= 
@@ 新しいストリームを作成します。
=
@@ [CODE[[[HEADERS]]]] と [CODE[[[CONTINUATION]]]] を作成します。
= [VAR[ストリーム]]の送信状態を、「ヘッダー前」に送信します。
= [[並列に]]、
== [VAR[ストリーム]]の送信状態が「ヘッダー前」なら、
=== [VAR[ストリーム]]の状態を、 open に設定します。
=== [VAR[フレーム群]]のフレームを順に送信します。
=== [VAR[フレーム群]]の最初のフレームの [CODE[[[END_STREAM]]]] フラグが設定されていれば、
==== [VAR[ストリーム]]の送信状態を、「送信済み」に設定します。
====
@@ ストリーム終了
=== それ以外なら、
==== [VAR[ストリーム]]の送信状態を、「本体」に設定します。
= [VAR[ストリーム]]を返します。
]FIG]

[54] [VAR[ストリーム]]において長さ[VAR[長さ]]のバイト列が送信可能かどうかは、
次のように決定します。
[FIG(steps)[
= [VAR[長さ]]が 0 なら、[[真]]を返し停止します。
= 
@@ 長すぎ
なら、[[偽]]を返し停止します。
= [VAR[バイト列]]が空ではなく、
@@
[FIG(list)[
- 初期 + [VAR[peerのフロー制御窓差分]]が負か空きがなければ
- 初期 + [VAR[ストリーム]]のpeerのフロー制御窓差分が負か空きがなければ
]FIG]
... 、偽を返し停止します。
= [[真]]を返します。
]FIG]

@@
[27] サーバーからの約束要求の送信
- 状態が idle で [CODE[PUSH_PROMISE]] を送信したら、 ...

@@
[53] サーバーからの応答の送信

[51] [VAR[ストリーム]]におけるデータ[VAR[バイト列]]の送信の指示は、次のようにします。
[VAR[最終]]フラグが設定されて呼び出されることがあります。
[FIG(steps)[
= [VAR[ストリーム]]の送信状態が「本体」以外なら、例外を投げて停止します。
= [VAR[ストリーム]]において[VAR[長さ]]が[VAR[バイト列]]の長さのバイト列を送信可能でないなら、
例外を投げて停止します。
= 
@@ [CODE[DATA]] フレームを作成します。
:[CODE[END_STREAM]]: [VAR[最終]]フラグが設定されていれば 1、いなければ 0
:payload: [VAR[バイト列]]
= [VAR[フレーム]]を送信します。
= [VAR[最終]]フラグが設定されていれば、
== [VAR[ストリーム]]の送信状態を、「送信済み」に設定します。
== 
@@ ストリーム終了
]FIG]

[52] [VAR[ストリーム]]における正常終了の送信の指示は、
[VAR[ストリーム]]におけるデータの送信で[VAR[バイト列]]を空とし、
[VAR[最終]]フラグを設定するものとします。

@@
- 状態が open/half-closed (remote) で [CODE[END_STREAM]] を送信したら、 ...
- closed に遷移したら、[VAR[ストリーム]]についてストリーム終了の処理を実行します。

[12] [VAR[ストリーム]]における[[誤り符号]][VAR[誤り符号]]についての中断の指示は、
次のようにします。
[FIG(steps)[
= [VAR[誤り符号]]が指定されなければ、 [CODE[[[CANCEL]]]] とします。
= [VAR[ストリーム]]について[[ストリームエラー]] [VAR[誤り符号]]を投げ、停止します。
]FIG]

* フレームの処理

[1] フレームヘッダーの処理は、[VAR[フレーム]]と[VAR[ヘッダー]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の長さを、[VAR[ヘッダー]][0..2] をネットワークバイト順の符号無し24ビット整数として解釈した結果とします。
= [VAR[フレーム]]の型を、[VAR[ヘッダー]][3]を符号無し8ビット整数として解釈した結果とします。
= [VAR[フレーム]]のフラグ群を、[VAR[ヘッダー]][4]とします。
= [VAR[R]] を、[VAR[ヘッダー]][5] を符号無し8ビット整数として解釈した結果 & 128 とします。
= [VAR[R]] が 1 なら、不正な [VAR[R]] として警告します [SRC[仕様なし]]。
= [VAR[フレーム]]のストリーム識別子を、[VAR[ヘッダー]][6..9] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) とします。
= [VAR[フレーム]]の型が [CODE[[[SETTINGS]]]] 以外で[VAR[受信状態]]が「[CODE[SETTINGS]] 前」なら、
== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
== それ以外で、[VAR[継続ストリーム識別子]]が[VAR[フレーム]]のストリーム識別子と等しくなければ、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]] フラグが設定されていれば、
=== [VAR[継続ストリーム識別子]]を null に設定します。
= それ以外なら、
== [VAR[継続ストリーム識別子]]が null 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
]FIG]

[2] フレームの検査は、[VAR[フレーム]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の型が [CODE[[[DATA]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていて、
[VAR[フレーム]]の長さが0なら、
=== [[接続エラー]] [WEAK[RFC ではストリームエラー可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [WEAK[[[RFC]] ではストリームエラーでも可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群に [CODE[[[END_STREAM]]]], [CODE[[[PADDED]]]]
以外が設定されているなら、未知のフラグとして警告します
[SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[HEADERS]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群に [CODE[[[END_STREAM]]]], [CODE[[[END_HEADERS]]]],
[CODE[[[PADDED]]]], [CODE[[[PRIORITY]]]] 以外のフラグが設定されていれば、未知のフラグを警告します
[SRC[仕様なし]]。
== [VAR[フレーム]]のフラグ群に [CODE[END_HEADERS]] フラグが設定されていなければ、
=== [VAR[継続ストリーム識別子]]を、[VAR[フレーム]]のストリーム識別子に設定します。
= [VAR[フレーム]]の型が [CODE[[[PRIORITY]]]] なら、
== [VAR[フレーム]]の長さが5以外なら、
=== [[接続エラー]] [WEAK[[[RFC]] では[VAR[フレーム]]のストリーム識別子が 0 以外の時[[ストリームエラー]]可]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 以外なら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[RST_STREAM]]]] なら、
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが4以外なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 以外なら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[SETTINGS]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] が設定されていれば、
=== [VAR[フレーム]]の長さが0以外なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== それ以外なら、
=== [VAR[フレーム]]の長さを6で割ると余るなら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] 以外が設定されているなら、
未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[PUSH_PROMISE]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されているなら、
=== [VAR[フレーム]]の長さが5未満なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== それ以外なら、
=== [VAR[フレーム]]の長さが4未満なら、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[仕様なし?]]。
== [VAR[自身の設定]]の [CODE[[[SETTINGS_ENABLE_PUSH]] が 0 なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[接続]]の種別が「サーバー」なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]], [CODE[[[PADDED]]]]
以外のフラグが設定されていれば、未知のフラグを警告します [SRC[仕様なし]]。
== [VAR[フレーム]]のフラグ群に [CODE[END_HEADERS]] フラグが設定されていなければ、
=== [VAR[継続ストリーム識別子]]を、[VAR[フレーム]]のストリーム識別子に設定します。
= [VAR[フレーム]]の型が [CODE[[[PING]]]] なら、
== [VAR[フレーム]]の長さが8以外なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム識別子が 0 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] 以外が設定されているなら、
未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[GOAWAY]]]] なら、
== [VAR[フレーム]]の長さが8未満なら、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 でないなら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[WINDOW_UPDATE]]]] なら、
== [VAR[フレーム]]の長さが4でなければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群が 0 でないなら、未知のフラグを警告します [SRC[仕様なし]]。
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]]
以外が設定されていれば、未知のフラグを警告します [SRC[仕様なし]]。
= それ以外なら、
== [VAR[フレーム]]の長さが[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]]
の値より大きければ、
=== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
== 未知の型として警告します [SRC[仕様なし]]。
]FIG]

[19] フレームの処理は、[VAR[フレーム]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[フレーム]]の型が [CODE[[[DATA]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されているなら、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[0]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[フレーム]]の詰め長 + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のデータを、[VAR[フレーム]]の payload[1..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)] に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のデータを、[VAR[フレーム]]の payload に設定します。
== 
@@ streamability
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[HEADERS]]]] なら、
== [VAR[i]] を、 0 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[i]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[i]] を、[VAR[i]] + 1 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PRIORITY]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の排他的を、[VAR[フレーム]]の payload[i] を符号無し8ビット整数として解釈した結果 & 128 に設定します。
=== [VAR[フレーム]]のストリーム依存性を、[VAR[フレーム]]の payload[i..(i+3)] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
=== [VAR[フレーム]]の重みを、[VAR[フレーム]]の payload[i+4] を符号無し8ビット整数として解釈した結果 + 1 に設定します。
=== [VAR[i]] を、 [VAR[i]] + 1 に設定します。
== [VAR[フレーム]]の詰め長が設定されていれば、
=== [VAR[フレーム]]の詰め長 + [VAR[i]] + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のヘッダーブロック素片を、[VAR[フレーム]]の 
payload[i..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の 
payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)]
に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のヘッダーブロック素片を、 [VAR[フレーム]]の
payload[i..([VAR[フレーム]]の長さ - 1)] に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[PRIORITY]]]] なら、
== [VAR[フレーム]]の排他的を、[VAR[フレーム]]の payload[0] を符号無し8ビット整数として解釈した結果 & 128 に設定します。
== [VAR[フレーム]]のストリーム依存性を、[VAR[フレーム]]の payload[0..3] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の重みを、[VAR[フレーム]]の payload[4] を符号無し8ビット整数として解釈した結果 + 1 に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[RST_STREAM]]]] なら、
== [VAR[フレーム]]の誤り符号を、[VAR[フレーム]]の payload を符号無し32ビット整数として解釈した結果に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[SETTINGS]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[ACK]] フラグが設定されていなければ、
=== [VAR[フレーム]]の payload を先頭から順に6バイトずつ、
==== [VAR[識別子]]を、先頭2バイトを符号無し16ビット整数として解釈した結果とします。
==== [VAR[値]]を、末尾4バイトを符号無し32ビット整数として解釈した結果とします。
=== 
@@ [CODE[ACK]] フラグを設定した [CODE[[[SETTINGS]]]] フレームを送信します。
= [VAR[フレーム]]の型が [CODE[[[PUSH_PROMISE]]]] なら、
== [VAR[i]] を、 0 に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[PADDED]]]] フラグが設定されていれば、
=== [VAR[フレーム]]の詰め長を、[VAR[フレーム]]の payload[i]を符号無し8ビット整数として解釈した結果に設定します。
=== [VAR[i]] を、[VAR[i]] + 1 に設定します。
== [VAR[R]] を、[VAR[フレーム]]の payload[i] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の約束ストリーム識別子を、[VAR[フレーム]]の payload[i..(i+3)] を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の詰め長が設定されていれば、
=== [VAR[フレーム]]の詰め長 + [VAR[i]] + 1 が[VAR[フレーム]]の長さより大きければ、
==== [[接続エラー]] [CODE[[[FRAME_SIZE_ERROR]]]] を投げます。
=== [VAR[フレーム]]のヘッダーブロック素片を、[VAR[フレーム]]の 
payload[i..([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長 - 1)] に設定します。
=== [VAR[フレーム]]の詰めを、[VAR[フレーム]]の 
payload[([VAR[フレーム]]の長さ - [VAR[フレーム]]の詰め長)..([VAR[フレーム]]の長さ - 1)]
に設定します。
=== [VAR[フレーム]]の詰めに 0x00 以外のバイトが含まれていれば、警告します
[WEAK[[[RFC]] では[[接続エラー]]として構いません]]。
== それ以外なら、
=== [VAR[フレーム]]のヘッダーブロック素片を、 [VAR[フレーム]]の
payload[i..([VAR[フレーム]]の長さ - 1)] に設定します。
== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[PING]]]] なら、
== [VAR[フレーム]]のフラグ群の [CODE[[[ACK]]]] フラグが設定されていなければ、
=== 
@@@ [CODE[ACK]] [CODE[[[PING]]]] を送信します。 payload を同じ値とします。
= [VAR[フレーム]]の型が [CODE[[[GOAWAY]]]] なら、
== [VAR[R]] を、 [VAR[フレーム]]の payload[0] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の最終ストリーム識別子を、[VAR[フレーム]]の payload[0..3]
を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]の誤り符号を、[VAR[フレーム]]の payload[4..7]
を符号無し32ビット整数として解釈した結果に設定します。
== [VAR[フレーム]]の追加デバッグデータを、[VAR[フレーム]]の 
payload[8..([VAR[フレーム]]の長さ -1)] に設定します。
== [CODE[GOAWAY]] フレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[WINDOW_UPDATE]]]] なら、
== [VAR[R]] を、 [VAR[フレーム]]の payload[0] & 128 に設定します。
== [VAR[R]] が 0 でなければ、警告します [SRC[仕様なし]]。
== [VAR[フレーム]]の窓サイズ増分を、[VAR[フレーム]]の payload
を符号無し32ビット整数として解釈した結果 & (2[SUP[31]]-1) に設定します。
== [VAR[フレーム]]のストリーム識別子が0なら、
=== [VAR[フレーム]]の窓サイズ増分が0なら、
==== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
=== [VAR[peerの設定]]の欄 [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] +
[VAR[peerのフロー制御窓差分]] + [VAR[フレーム]]の窓サイズ増分が 2[SUP[31]]-1
より大きければ、
==== [[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
=== [VAR[peerのフロー制御窓差分]]に、 [VAR[フレーム]]の窓サイズ増分を足します。
== それ以外なら、
=== ストリームフレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= [VAR[フレーム]]の型が [CODE[[[CONTINUATION]]]] なら、
== [VAR[ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム識別子) とします。
== [VAR[ストリーム]]のバッファーの長さと[VAR[フレーム]]の payload の長さの和が
2[SUP[15]] を超えるなら、
=== [[接続エラー]] [CODE[[[COMPRESSION_ERROR]]]] を投げます。 [SRC[Chrome]]
== [VAR[ストリーム]]のバッファーの末尾に、[VAR[フレーム]]の payload を連結します。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]] フラグが設定されていれば、
=== [VAR[ヘッダーリスト]]を、[VAR[ストリーム]]について HPACK 復号した結果とします。
復号エラーが投げられた時は、[[接続エラー]] [CODE[[[COMPRESSION_ERROR]]]] を投げます。
=== [VAR[ストリーム]]についてストリームのヘッダーの処理を行います。
=== [VAR[ストリーム]]の状態が closed なら、
==== [VAR[ストリーム]]のストリーム終了の処理を実行します。
]FIG]

[7] 設定の変更は、次のようにします。
[FIG(steps)[
= [VAR[識別子]]が [CODE[[[SETTINGS_MAX_FRAME_SIZE]]]] なら、
== 2[SUP[14]] ≦ [VAR[値]] ≦ 2[SUP[24]]-1 でなければ、
=== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]。]]
=== 停止します。
= [VAR[識別子]]が [CODE[[[SETTINGS_ENABLE_PUSH]]]] なら、
== [VAR[値]]が 0 か 1 でなければ、
=== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]。]]
=== 停止します。
== [VAR[値]]が 1 で[VAR[接続]]の種別が「クライアント」なら、
=== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]。]]
=== 停止します。
= [VAR[識別子]]が [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] なら、
== [VAR[値]]が 2[SUP[31]]-1 より大きければ、
=== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]]。]]
=== 停止します。
== [VAR[peerのフロー制御窓差分]] + [VAR[値]]が2[SUP[31]]-1 より大きければ、
=== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]]。]]
=== 停止します。
== [VAR[ストリーム群]]の各ストリームについて、
=== そのストリームのpeerのフロー制御窓差分 + [VAR[値]]が2[SUP[31]]-1 より大きければ、
==== 警告します。 [WEAK[[[RFC]] では[[接続エラー]] [CODE[[[FLOW_CONTROL_ERROR]]]]。]]
==== 停止します。
= [VAR[識別子]]が [CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]],
[CODE[[[SETTINGS_HEADER_TABLE_SIZE]]]],
[CODE[[[SETTINGS_MAX_HEADER_LIST_SIZE]]]] のいずれでもなければ、
== 未知の設定を警告します [SRC[仕様なし]]。
== 停止します。
= [VAR[peerの設定]]の欄[VAR[識別子]]の値を、[VAR[値]]に設定します。
]FIG]

* ストリームの処理

[22] ストリームの作成は、[VAR[ストリーム識別子]]を引数とし、次のようにします。
[FIG(steps)[
= [VAR[ストリーム識別子]] - 2 が[[正]]なら、
== [VAR[ストリーム]]を、[VAR[ストリーム群]]のうちストリーム識別子が[VAR[ストリーム識別子]] - 2
と等しいストリームとします。なければ null とします。
== [VAR[ストリーム]]が null なら、
=== ストリームの作成を行います。[VAR[ストリーム識別子]]は、
[VAR[ストリーム識別子]] - 2 とします。
[VAR[ストリーム]]を、得られたストリームとします。
== [VAR[ストリーム]]の状態が idle なら、 closed に設定します。
= [VAR[ストリーム]]を、新しいストリームに設定します。
そのストリーム識別子は、[VAR[ストリーム識別子]]とします。
= [VAR[ストリーム群]]に[VAR[ストリーム]]を追加します。
= [VAR[ストリーム]]を返します。
]FIG]

[10] ストリームフレームの処理は、[VAR[フレーム]]を引数とし、
次のようにします。エラーが投げられたらそこで停止し、伝播させます。
[FIG(steps)[
= [VAR[ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム識別子) とします。
= [VAR[旧状態]]を、[VAR[ストリーム]]の状態に設定します。
= [VAR[フレーム]]の型が [CODE[DATA]] なら、
== [VAR[ストリーム]]が null か状態が open, half-closed (local), half-closed (remote) 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の状態が half-closed (remote) か closed なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、[[ストリームエラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
=== [VAR[ストリーム]]の状態が open なら、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
=== [VAR[ストリーム]]の状態が half-closed (local) なら、
==== [VAR[ストリーム]]の状態を、 closed に設定します。
==== [VAR[ストリーム]]のストリーム終了の処理を実行します。
== [WEAK[RFC では、[[ストリームエラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げて構いません。]]
== [VAR[自身のフロー制御窓差分]]から、[VAR[フレーム]]のデータの長さを引きます。
== [VAR[ストリーム]]の自身のフロー制御窓差分から、[VAR[フレーム]]のデータの長さを引きます。
== [VAR[旧状態]]が half-closed (remote)、closed 以外なら、
=== ストリームのデータの処理を[VAR[フレーム]]について行います。
= [VAR[フレーム]]の型が [CODE[HEADERS]] なら、
== [VAR[ストリーム]]が null か状態が idle なら、
=== [VAR[接続]]の種別が「クライアント」なら、
==== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[Chrome, Firefox]]。
=== 
[FIG(list)[
- [VAR[フレーム]]のストリーム識別子が 0 か、
- [VAR[接続]]の種別が「サーバー」で[VAR[フレーム]]のストリーム識別子が偶数か、
- [VAR[接続]]の種別が「クライアント」で[VAR[フレーム]]のストリーム識別子が奇数
]FIG]
... なら、
==== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]のストリーム識別子とします。[VAR[ストリーム]]を、得られたストリームに設定します。
=== [VAR[ストリーム群]]のうち状態が open, half-closed (local), half-closed (remote)
のいずれかのものの数が[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_MAX_CONCURRENT_STREAMS]]]] 
の値と等しければ、
==== [VAR[ストリーム]]について[[ストリームエラー]]を投げます。
[VAR[誤り符号]]は、 [CODE[[[PROTOCOL_ERROR]]]] または [CODE[[[REFUSED_STREAM]]]] とします。
=== [VAR[ストリーム]]の状態を、 open に設定します。
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
== それ以外で、 [VAR[ストリーム]]の状態が reserved (remote) なら、
=== [VAR[ストリーム]]の状態を、 half-closed (local) に設定します。
== それ以外で、 [VAR[ストリーム]]の状態が open なら、
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 half-closed (remote) に設定します。
== それ以外で、 [VAR[ストリーム]]の状態が half-closed (local) なら、
=== [VAR[フレーム]]のフラグ群の [CODE[END_STREAM]] フラグが設定されていれば、
==== [VAR[ストリーム]]の状態を、 closed に設定します。
==== [VAR[フレーム]]のフラグ群の [CODE[END_HEADERS]] フラグが設定されていれば、
===== [VAR[ストリーム]]のストリーム終了の処理を実行します。
== それ以外で、 [VAR[ストリーム]]の状態が half-closed (remote) か closed なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、 [[接続エラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== それ以外で、 [VAR[ストリーム]]の状態が closed 以外なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[フレーム]]のストリーム優先度の処理を行います。
== [VAR[ストリーム]]のバッファーを、[VAR[フレーム]]のヘッダーブロック素片に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]] フラグが設定されていれば、
=== [VAR[ヘッダーリスト]]を、[VAR[ストリーム]]について HPACK 復号した結果とします。
復号エラーが投げられた時は、[[接続エラー]] [CODE[[[COMPRESSION_ERROR]]]] を投げます。
=== [VAR[旧状態]]が half-closed (remote)、closed 以外なら、
==== [VAR[ストリーム]]についてストリームのヘッダーの処理を行います。
= [VAR[フレーム]]の型が [CODE[PRIORITY]] なら、
== [VAR[ストリーム]]が null か、[VAR[ストリーム]]のメッセージ状態が「初期」なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[[[Chrome]], [[Firefox]]]]。
== [VAR[ストリーム]]の状態が closed なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、 [[接続エラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== [VAR[フレーム]]のストリーム優先度の処理を行います。
= [VAR[フレーム]]の型が [CODE[RST_STREAM]] なら、
== [VAR[ストリーム]]が非 null で[VAR[ストリーム]]のメッセージ状態が「初期」なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[[[Chrome]], [[Firefox]]]]。
[WEAK[[[RFC]] では idle の時]]
== [VAR[ストリーム]]が null なら、
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]のストリーム識別子とします。[VAR[ストリーム]]を、得られたストリームに設定します。
== [VAR[ストリーム]]の状態が closed なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、 [[接続エラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== それ以外なら、
=== [VAR[ストリーム]]の状態を、 closed に設定します。
=== [VAR[ストリーム]]についてストリーム終了の処理を実行します。
= [VAR[フレーム]]の型が [CODE[PUSH_PROMISE]] なら、
== [VAR[ストリーム]]が null か[VAR[ストリーム]]のメッセージ状態が「初期」なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
[WEAK[[[RFC]] では idle の時]]
== [VAR[ストリーム]]の状態が half-closed (remote) か closed なら、
=== [[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]
[WEAK[[[RFC]] では [CODE[[[STREAM_CLOSED]]]]]] を投げます。
== [VAR[フレーム]]の約束ストリーム識別子が0か奇数なら、
=== 接続エラー [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[約束ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]の約束ストリーム識別子) とします。
== [VAR[約束ストリーム]]が null なら、
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]の約束ストリーム識別子とします。[VAR[約束ストリーム]]を、得られたストリームに設定します。
== [VAR[約束ストリーム]]のストリーム識別子が idle 以外なら、
=== 接続エラー [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[約束ストリーム]]の状態を、 reserved (remote) に設定します。
== [VAR[約束ストリーム]]のメッセージ状態を、「応答ヘッダー前」に設定します。
== [VAR[約束ストリーム]]の親ストリームを、 [VAR[ストリーム]]に設定します。
== [VAR[ストリーム]]の依存ストリーム群に、[VAR[約束ストリーム]]を追加します。
== [VAR[ストリーム]]のメッセージ状態を、「約束要求前」に設定します。
== [VAR[ストリーム]]のバッファーを、[VAR[フレーム]]のヘッダーブロック素片に設定します。
== [VAR[フレーム]]のフラグ群の [CODE[[[END_HEADERS]]]] フラグが設定されていれば、
=== [VAR[ヘッダーリスト]]を、[VAR[ストリーム]]について HPACK 復号した結果とします。
復号エラーが投げられた時は、[[接続エラー]] [CODE[[[COMPRESSION_ERROR]]]] を投げます。
=== [VAR[旧状態]]が half-closed (remote)、closed 以外なら、
==== [VAR[ストリーム]]についてストリームのヘッダーの処理を行います。
= [VAR[フレーム]]の型が [CODE[WINDOW_UPDATE]] なら、
== [VAR[ストリーム]]が null なら、
=== ストリームを作成します。[VAR[ストリーム識別子]]は[VAR[フレーム]]のストリーム識別子とします。[VAR[ストリーム]]を、得られたストリームに設定します。
== [VAR[ストリーム]]の状態が idle なら、
=== [VAR[ストリーム]]について[[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます [SRC[[[Firefox]]]]。 [WEAK[[[RFC]] では[[接続エラー]]。[[Chrome]] は無視。]]
== [VAR[ストリーム]]の状態が closed なら、
=== 不正なフレームを警告します。
[WEAK[[[RFC]] 上では、 [[接続エラー]] [CODE[[[STREAM_CLOSED]]]] を投げます。]]
== [VAR[フレーム]]の窓サイズ増分が0なら、
=== [VAR[ストリーム]]について[[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
== [VAR[peerの設定]]の欄 [CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]] の値 +
[VAR[ストリーム]]のpeerのフロー制御窓差分 + [VAR[フレーム]]の窓サイズ増分が 2[SUP[31]]-1
より大きければ、
=== [VAR[ストリーム]]について[[ストリームエラー]] [CODE[[[FLOW_CONTROL_ERROR]]]] を投げます。
== [VAR[ストリーム]]の peerのフロー制御窓差分に、 [VAR[フレーム]]の窓サイズ増分を足します。
]FIG]

[23] [VAR[フレーム]]についてのストリーム優先度の処理は、次のようにします。
[FIG(steps)[
= [VAR[ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム識別子) とします。
= [VAR[フレーム]]のストリーム識別子と[VAR[フレーム]]のストリーム依存性が同じなら、
== [VAR[ストリーム]]について[[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]] を投げます。
= [VAR[親ストリーム]]と[VAR[祖先ストリーム]]を、[VAR[ストリーム群]] ([VAR[フレーム]]のストリーム依存性) とします。
= [VAR[親ストリーム]]が null なら、 [WEAK[RFC には規定なし]]
== [VAR[フレーム]]のストリーム依存性が 0 以外なら、
=== ストリームを作成します。[VAR[ストリーム識別子]]は、[VAR[フレーム]]のストリーム依存性とします。
[VAR[親ストリーム]]を、その結果に設定します。
= [VAR[祖先ストリーム]]が[VAR[ストリーム]]と等しければ、
== [VAR[ストリーム]]の依存ストリーム群の各ストリームについて、
=== そのストリームの親ストリームを、[VAR[ストリーム]]の親ストリームに設定します。
=== [VAR[ストリーム]]の親ストリームの依存ストリーム群に、そのストリームを追加します。
== [VAR[ストリーム]]の依存ストリーム群を空にします。
= [VAR[フレーム]]の排他的フラグが設定されていれば、
== [VAR[親ストリーム]]の依存ストリーム群のストリームのうち、[VAR[ストリーム]]と等しくないものについて、
=== そのストリームの親ストリームを、[VAR[ストリーム]]に設定します。
=== [VAR[ストリーム]]の依存ストリーム群に、そのストリームを追加します。
= [VAR[ストリーム]]の親ストリームを、[VAR[親ストリーム]]に設定します。
= [VAR[ストリーム]]の重みを、[VAR[フレーム]]の重みに設定します。
]FIG]

[37] ストリームのデータの処理は、引数[VAR[フレーム]]について次のようにします。
[FIG(steps)[
= [VAR[ストリーム]]のメッセージの payload body の末尾に[VAR[フレーム]]のデータを追加します。
= [VAR[接続]]の種別が「クライアント」なら、
==
@@ 要求のデータの通知
= [VAR[ストリーム]]の状態が closed なら、
==
@@ 要求のデータ終了の通知
=
@@ フロー制御
]FIG]

* HTTP ヘッダーの処理

[28] 引数[VAR[ストリーム]]についてストリームのヘッダーの処理は、次のようにします。
[FIG(steps)[
= [VAR[ストリーム]]のメッセージ状態が「約束要求前」なら、
== [VAR[約束ストリーム]]を、[VAR[ストリーム群]] ([VAR[ストリーム]]の約束ストリーム識別子) に設定します。
== [VAR[約束ストリーム]]の要求を、新しいメッセージに設定します。
== [VAR[約束ストリーム]]の要求の push フラグを設定します。
== [VAR[約束ストリーム]]と[VAR[ヘッダーリスト]]についてヘッダーリストの処理を行います。
[VAR[種別]]は「要求」とします。
== [VAR[約束ストリーム]]の要求のメソッド、scheme、authority、path、ヘッダー群を、
ヘッダーリストの処理の結果の対応するものにそれぞれ設定します。
==
@@ push の通知
[FIG(list members)[
:ストリーム: [VAR[約束ストリーム]]
]FIG]
= それ以外で、[VAR[ストリーム]]のメッセージ状態が「初期」なら、
== [VAR[ストリーム]]のメッセージを、新しいメッセージに設定します。
== [VAR[接続]]の型が「クライアント」なら、
=== [VAR[対象ストリーム]]と[VAR[ヘッダーリスト]]についてヘッダーリストの処理を行います。
[VAR[種別]]は「応答」とします。
=== ヘッダーリストの処理の結果の[VAR[状態]]が
[[ASCII数字]]列で、それを十進整数として解釈すると100[[以上]]199[[以下]]なら、
==== [VAR[ストリーム]]のメッセージ状態を、「応答ヘッダー前」に設定します。
=== それ以外なら、
==== [VAR[ストリーム]]のメッセージ状態を、「本体前」に設定します。
==== [VAR[ストリーム]]のメッセージの状態とヘッダー群を、ヘッダーリストの処理の結果の[VAR[状態]]と[VAR[ヘッダー群]]にそれぞれ設定します。
====
@@ 要求についてヘッダーの通知
[FIG(list members)[
:ストリーム: [VAR[ストリーム]]
]FIG]
====
@@ 要求についてデータ開始の通知
== それ以外なら、
=== [VAR[対象ストリーム]]と[VAR[ヘッダーリスト]]についてヘッダーリストの処理を行います。
[VAR[種別]]は「要求」とします。
=== [VAR[ストリーム]]のメッセージ状態を、「本体前」に設定します。
=== [VAR[ストリーム]]のメッセージのメソッド、scheme、authority、path、ヘッダー群を、
ヘッダーリストの処理の結果の対応するものにそれぞれ設定します。
= それ以外で、[VAR[ストリーム]]のメッセージ状態が「応答ヘッダー前」なら、
== [VAR[対象ストリーム]]と[VAR[ヘッダーリスト]]についてヘッダーリストの処理を行います。
[VAR[種別]]は「応答」とします。
== ヘッダーリストの処理の結果の[VAR[状態]]が
[[ASCII数字]]列で、それを十進整数として解釈すると100[[以上]]199[[以下]]である場合を除き、
=== [VAR[ストリーム]]のメッセージ状態を、「本体前」に設定します。
=== [VAR[ストリーム]]のメッセージの状態とヘッダー群を、ヘッダーリストの処理の結果の[VAR[状態]]と[VAR[ヘッダー群]]にそれぞれ設定します。
===
@@ 要求についてヘッダーの通知、データ開始の通知
= それ以外なら、
== [VAR[ストリーム]]の状態が closed なら、
=== [VAR[ストリーム]]について奇形を投げます。
== [VAR[対象ストリーム]]と[VAR[ヘッダーリスト]]についてヘッダーリストの処理を行います。
[VAR[種別]]は「trailer」とします。
= [VAR[ストリーム]]の状態が closed なら、
== 
@@ 要求のデータ終了の通知
]FIG]

[35] [VAR[ストリーム]]について HPACK 復号は、次のようにします。
[FIG(steps)[
= [VAR[ヘッダーリスト]]を、空のヘッダーリストに設定します。
= [VAR[i]] を、 0 に設定します。
= [VAR[バイト]]を、[VAR[ストリーム]]のバッファー[i] に設定します。
= [VAR[i]] を、 [VAR[i]] + 1 に設定します。
= [VAR[バイト]]の先頭ビットが [CODE[001]] なら、
== [VAR[復号用動的表サイズ]]を、 HPACK整数 ([VAR[バイト]], 5) とします。
復号エラーが投げられたら、伝播させ、停止します。
== [VAR[復号用動的表最大サイズ]]が[VAR[自身の設定]]の欄 [CODE[[[SETTINGS_HEADER_TABLE_SIZE]]]] の値より大きければ、
=== 復号エラーを投げ、停止します。
== [VAR[復号用動的表]]の eviction を実行します。[VAR[最大値]]は[VAR[復号用動的表サイズ]]とします。
= それ以外で、[VAR[バイト]]の先頭ビットが [CODE[1]] なら、
== [VAR[索引]]を、HPACK整数 ([VAR[バイト]], 7) とします。
復号エラーが投げられたら、伝播させ、停止します。
== [VAR[ヘッダー]]を、 HPACKヘッダー ([VAR[索引]]) とします。
復号エラーが投げられたら、伝播させ、停止します。
== [VAR[ヘッダーリスト]]の末尾に[VAR[ヘッダー]]を追加します。
= それ以外なら、
== [VAR[バイト]]の先頭ビットが [CODE[01]] なら、
=== [VAR[索引]]を、 HPACK整数 ([VAR[バイト]], 6) とします。
復号エラーが投げられたら、伝播させ、停止します。
== それ以外なら、
=== [VAR[索引]]を、 HPACK整数 ([VAR[バイト]], 4) とします。
復号エラーが投げられたら、伝播させ、停止します。
== [VAR[索引]]が0なら、
=== [VAR[名前]]を、次のHPACK文字列とします。
== それ以外なら、
=== [VAR[名前]]を、HPACKヘッダー ([VAR[索引]]) とします。
復号エラーが投げられたら、伝播させ、停止します。
== [VAR[値]]を、次のHPACK文字列とします。
== [VAR[ヘッダー]]を、新しいヘッダーとします。
[FIG(list members)[
[FIGCAPTION[
ヘッダー
]FIGCAPTION]
:名前:[VAR[名前]]
:値:[VAR[値]]
:決して索引付けしないフラグ:[VAR[バイト]]の先頭ビットが [CODE[0001]] の時だけ設定する
]FIG]
== [VAR[バイト]]の先頭ビットが [CODE[01]] なら、
=== [VAR[復号用動的表]]の先頭に[VAR[ヘッダー]]を追加します。
=== [VAR[復号用動的表]]について eviction を実行します。
[VAR[最大値]]は[VAR[復号用動的表サイズ]]とします。
== [VAR[ヘッダーリスト]]の末尾に[VAR[ヘッダー]]を追加します。
]FIG]

[29] HPACK整数 ([VAR[バイト]], [VAR[ビット数]]) とは、次のようにします。
呼び出し元の変数[VAR[ストリーム]]、[VAR[i]] にアクセスします。
[FIG(steps)[
= [VAR[結果]]を、[VAR[バイト]]の下位[VAR[ビット数]]ビットとします。
= [VAR[結果]]が 2[SUP[[VAR[ビット数]]]]-1 と等しければ、
== [VAR[M]] を、0 に設定します。
== [VAR[繰り返し]]フラグを設定します。
== [VAR[繰り返し]]フラグが設定されている間、次の処理を繰り返し実行します。
=== [VAR[i]] が[VAR[ストリーム]]のバッファーの長さと等しければ、復号エラーを投げ、停止します。
=== [VAR[B]] を、[VAR[ストリーム]]のバッファー[i]に設定します。
=== [VAR[i]] を、 [VAR[i]] + 1 に設定します。
=== [VAR[結果]]に、 [VAR[B]] の下位7ビットを符号無し整数として解釈した結果 × 2[SUP[[VAR[M]]]]
を足します。
=== [VAR[M]] に、7 を足します。
=== [VAR[B]] の最上位ビットが0なら、[VAR[繰り返し]]フラグを未設定とします。
=== [VAR[結果]]が 2[SUP[32]]-1 [SRC[[[RFC]] では値の規定なし]]
を超えているなら、復号エラーを投げ、停止します。
= [VAR[結果]]を返します。
]FIG]

[33] 次のHPACK文字列とは、次のようにして得られるバイト列です。
呼び出し元の変数[VAR[ストリーム]]、[VAR[i]] にアクセスします。
[FIG(steps)[
= [VAR[i]] が[VAR[ストリーム]]の長さと等しければ、復号エラーを投げ、停止します。
= [VAR[H]] を、[VAR[ストリーム]][i] の最上位ビットとします。
= [VAR[i]] を、[VAR[i]] + 1 に設定します。
= [VAR[文字列長]]を、HPACK整数 ([VAR[ストリーム]][i-1], 7) に設定します。
復号エラーが投げられたら、伝播させ、停止します。
= i+[VAR[文字列長]]-1 が[VAR[ストリーム]]の長さ以上なら、復号エラーを投げ、停止します。
= [VAR[文字列データ]]を、[VAR[ストリーム]][i..i+[VAR[文字列長]]-1]に設定します。
= [VAR[H]] が1なら、
== [VAR[文字列データ]]を [[HPACK]] [[ハフマン符号化]]の符号化表に基づき[[復号]]し、
その結果とします。ただし、 EOS 記号が含まれる場合、末尾に8ビット以上残る場合、
末尾に残ったビット列が EOS 記号の先頭ビット列と異なる場合には、復号エラーを投げ、停止します。
= [VAR[文字列データ]]を返します。
]FIG]

[30] HPACKヘッダー ([VAR[索引]]) とは、次のようにして得られるものです。
[FIG(steps)[
= [VAR[索引]]が 0 なら、復号エラーとします。
= それ以外で、[VAR[索引]]が [[HPACK]] [[静的表]]の項目数以下なら、
[[静的表]]中の位置[VAR[索引]]の項目を返します。ただし先頭を位置1とします。
= それ以外で、[VAR[索引]]が [[HPACK]] [[静的表]]の項目数と[VAR[復号用動的表]]の項目数の和以下なら、
[VAR[復号用動的表]]中の位置[VAR[索引]] - [[HPACK]] [[静的表]]の項目数の項目を返します。
= それ以外なら、復号エラーとします。
]FIG]

[34] [VAR[動的表]]の eviction は、引数[VAR[最大値]]について、次のようにします。
[FIG(steps)[
= [VAR[動的表]]の項目の[VAR[名前]]の長さと[VAR[値]]の長さと32の和の総和が、
[VAR[最大値]]より大きければ、
== [VAR[動的表]]の末尾の項目を削除します。
== もう一度繰り返します。
]FIG]

[38] [VAR[ストリーム]]と[VAR[ヘッダーリスト]]について[VAR[種別]]を指定したヘッダーリストの処理は、
次のようにします。
[FIG(steps)[
= [VAR[メソッド]]を、 null に設定します。
= [VAR[scheme]] を、 null に設定します。
= [VAR[authority]] を、 null に設定します。
= [VAR[path]] を、 null に設定します。
= [VAR[状態]]を、 null に設定します。
= [VAR[ヘッダー群]]を、空のリストに設定します。
= [VAR[ヘッダーリスト]]の各項目について、
== 値の先頭と末尾から [CODE[0x09]], [CODE[0x0A]], [CODE[0x0D]], [CODE[0x20]]
をすべて削除します [SRC[Firefox]]。 [WEAK[[[RFC]] では違った条件で[[奇形]]とします。]]
== 名前が [CODE[:method]] なら、
=== [VAR[ヘッダー群]]が空でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[種別]]が「要求」でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[メソッド]]が null でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[メソッド]]を値に設定します。
== 名前が [CODE[:scheme]] なら、
=== [VAR[ヘッダー群]]が空でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[種別]]が「要求」でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[scheme]]が null でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[scheme]] を値に設定します。
== 名前が [CODE[:authority]] なら、
=== [VAR[ヘッダー群]]が空でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[種別]]が「要求」でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[authority]]が null でなければ、[VAR[ストリーム]]について奇形を投げます [SRC[仕様なし]]。
=== [VAR[authority]] を値に設定します。
== 名前が [CODE[:path]] なら、
=== [VAR[ヘッダー群]]が空でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[種別]]が「要求」でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[path]]が null でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[path]] を値に設定します。
== 名前が [CODE[:status]] なら、
=== [VAR[ヘッダー群]]が空でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[種別]]が「応答」でなければ、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[状態]]が null なら [SRC[Chrome]]、
==== [VAR[状態]]を値に設定します。
== 名前が [CODE[0x41]]-[CODE[0x5A]] を含むなら、
=== [VAR[ストリーム]]について奇形を投げます。
== 名前が [CODE[transfer-encoding]] なら、 [WEAK[[[RFC]] では他の幾つかの[[ヘッダー]]も。]]
=== [VAR[ストリーム]]について奇形を投げます。
== 名前が [[HTTP]] [[字句]]なら、
=== [VAR[ヘッダー群]]の末尾に本項目を追加します。
== 名前が [CODE[:]] から始まるなら、
=== [VAR[ストリーム]]について奇形を投げます。
== それ以外なら、
=== 不正なヘッダーを警告します。 [WEAK[[[RFC]] では奇形を投げます。]]
= [VAR[種別]]が「要求」なら、
== [VAR[メソッド]]が null なら、[VAR[ストリーム]]について奇形を投げます。
== [VAR[メソッド]]が [CODE[[[CONNECT]]]] なら、
=== [VAR[scheme]] が null でないなら、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[path]] が null でないなら、[VAR[ストリーム]]について奇形を投げます。
== それ以外なら、
=== [VAR[scheme]]が null なら、[VAR[ストリーム]]について奇形を投げます。
=== [VAR[path]]が null なら、[VAR[ストリーム]]について奇形を投げます。
= [VAR[種別]]が「応答」なら、
== [VAR[状態]]が null なら、[VAR[ストリーム]]について奇形を投げます。
= [VAR[メソッド]]、[VAR[scheme]]、[VAR[authority]]、[VAR[path]]、
[VAR[状態]]、[VAR[ヘッダー群]]を返します。
]FIG]

* 終了とエラーの処理

[42] [CODE[GOAWAY]] フレームの処理は、引数[VAR[フレーム]]について、次のようにします。
[FIG(steps)[
= [VAR[要求締め切り]]フラグを設定します。
= [VAR[ストリーム識別子]]を、[VAR[フレーム]]の最終ストリーム識別子に設定します。
= [VAR[フレーム]]の誤り符号が 0 でなければ、[VAR[ストリーム識別子]]を 0 に設定します。
= [VAR[ストリーム群]]のストリームのうち、そのストリーム識別子が[VAR[ストリーム識別子]]より大きいものについて、
==
@@ 完了済みでなければ、
=== 
@@ 要求について完了を通知します。失敗を真に設定します。
== [VAR[ストリーム]]の状態が closed 以外なら、
=== そのストリームの状態を、 closed に設定します。
=== そのストリームについてストリーム終了の処理を実行します。
[VAR[誤り符号]]は、[VAR[フレーム]]の誤り符号とします。
]FIG]

[8] 引数[VAR[誤り符号]]の[[接続エラー]]を投げるとは、次のようにします。
[FIG(steps)[
= [VAR[誤り符号]]が [CODE[[[FRAME_SIZE_ERROR]]]] なら、
[VAR[誤り符号]]を [CODE[[[PROTOCOL_ERROR]]]] に設定します [SRC[[[Chrome]], [[Firefox]]]]。
= [VAR[フレーム]]を、次のような新しい[[フレーム]]とします。
[FIG(list members)[
:型: [CODE[[[GOAWAY]]]]
:長さ: 8
:フラグ: 0
:ストリーム識別子: 0
:最終ストリーム識別子: 0
:誤り符号: [VAR[誤り符号]]
:追加デバッグデータ: 空
]FIG]
= 
@@ まだ読んでいないデータがなければ、[VAR[フレーム]]を送信します [SRC[Chrome, Firefox]]。
= [CODE[GOAWAY]] フレームの処理を実行します。引数[VAR[フレーム]]は、[VAR[フレーム]]とします。
= 本手順を直接または間接に呼び出した手順で、エラーが投げられた場合の処理が規定された場所に戻ります。その間の手順はすべて停止します。
]FIG]

[44] 引数[VAR[ストリーム]]のストリーム終了の処理は、次のようにします [SRC[仕様なし]]。
[FIG(steps)[
= [VAR[誤り符号]]が指定されなければ、 [CODE[[[NO_ERROR]]]] に設定します。
=
@@ [VAR[終了]] 正常終了 vs 中断の判定
= [VAR[誤り符号]]が [CODE[[[HTTP_1_1_REQUIRED]]]] で、
[VAR[ストリーム]]のメッセージ状態が「初期」なら、
== [VAR[終了]]の HTTP/1.1 切り替えフラグを設定します。
=
@@ [VAR[要求]]について中断の通知
[FIG(list members)[
:終了: [VAR[終了]]
]FIG]
= [VAR[要求締め切り]]フラグが設定されていれば、
== [VAR[ストリーム群]]のストリームのうち、状態が closed 以外のものがなければ、
=== [VAR[接続]]の正常終了を通知します。
]FIG]

[43] 引数[VAR[ストリーム]]、[VAR[誤り符号]]について[[ストリームエラー]]を投げるとは、
次のようにします。
[FIG(steps)[
= [VAR[フレーム]]を、次のような新しい[[フレーム]]とします。
[FIG(list members)[
:型: [CODE[[[RST_STREAM]]]]
:長さ: 4
:フラグ: 0
:ストリーム識別子: [VAR[ストリーム]]の識別子
:誤り符号: [VAR[誤り符号]]
]FIG]
= [VAR[ストリーム]]の状態が closed 以外なら、
== 
@@ [VAR[フレーム]]を送信します。
== [VAR[ストリーム]]の状態を、 closed に設定します。
== [VAR[ストリーム]]についてストリーム終了の処理を実行します。
= 本手順を直接または間接に呼び出した手順で、エラーが投げられた場合の処理が規定された場所に戻ります。その間の手順はすべて停止します。
]FIG]

[11] [VAR[ストリーム]]について[[奇形]]を投げるとは、
その[VAR[ストリーム]]について[[ストリームエラー]] [CODE[[[PROTOCOL_ERROR]]]]
を投げることをいいます。

[39] 警告とは、[[コンソール]]に実装依存のメッセージを追加することをいいます [SRC[仕様なし]]。

