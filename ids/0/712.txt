[1] 
[DFN[Korean mess]]
([DFN[ハングルの大移動]], 直訳 韓語混乱)
で、
[[ハングル]]は 
[CODE[U+3400]]
〜
[CODE[U+4DFF]]
から
[CODE[U+AC00]]
〜
[CODE[U+D7A3]]
にぶっとびますた。

[26] この改正は、

- [27] [TIME[1995-12-07]]制定 [[KS C 5700-1995]]
- [28] [TIME[1996-07]] [[Unicode 2.0]]
- [29] [TIME[1998-05-15]] [[ISO/IEC 10646-1:1993]]/Amd.5:1998

によって行われました。 [SRC[>>25]]

[25] [CITE@ja[PDF 千夜一夜: PDFと文字(26) – [[ハングル]]の扱い]], [TIME[2007-11-02T02:02:29.000Z]], [TIME[2022-11-09T08:56:03.775Z]] <https://blog.antenna.co.jp/PDFTool/archives/2006/01/pdf26_unicode.html>


[8] ハングル跡地には、「[[BMP]] にはこれで[[漢字]]は最後。」という約束で[[CJK統合漢字]]拡張Aが入りました。

[14] ですから単に[[文字]]が移動しただけではなく、更に [[83JIS]] のように「同じ[[文字概念]]」の場所を入れ替えたのでもなく、全く違うハングルが全く違う漢字に変わってしまったのです。

[15] [[JTC1/SC2/WG2]] と [[UTC][Unicode技術委員会]] は「この過ちを2度と繰り返さない」とその後決定したそうです。その舌の根も乾かないうちに、 [[BMP]] の全[[符号位置]]の数千倍の[[私用]]符號位置がばっさり削除されました ([[PrivateMess]])。

[16] また、目立たぬようにこっそりと2種類の「[[φ]]」の入れ替えが敢行されました。


[17] [CITE@en[Cannot Display Korean Windows NT 3.5 Programs Under Windows 3.51]] ([TIME[2006-11-27 09:00:55 +09:00]] 版) <http://support.microsoft.com/default.aspx?scid=kb;en;157447>




[7] 
韓国の圧力により、 [[ISO/IEC10646]]-1:1993 Ammendment 6
において、 ISO/IEC 10646-1:1993 で規定されていた[[ハングル]]
がばっさり削除され、代わりに全ての現代ハングルの完成形が
別の場所に登場したこと。 (See also [[組合型]])
(元のハングルは使用頻度が高いものだけ規定されていた。)

ちなみに、元のハングルの場所には後に追加漢字
(CJK UNIFIED IDOGRAPHS EXTENSION A) が割り当てられた。

[[Unicode]] で言えば 1.1 → 2.0 にあたる。

[2] 一歩間違えば [[83JIS]] の混乱のような事態になったでしょうが、
当時 [[UCS]] でハングルを使ってた人なんてそんないなかったらしいので、
[[コップの中の嵐]]で終わったみたいです。
(当時から UCS を使ってた忠実な [[Unicoder]] (など)
が被害を被ったわけです。)

[18] 
極めて稀にですけど、当時作られた文書に一部不審な[[漢字]]が混じっていて、
[[ハングル]]が[[CJK統合漢字拡張A]]に[[文字化け]]していたのだとわかるケースがあります。


[3] これを教訓に [[SC2]] と [[UTC]] は二度とこのようなことを
しないと決意した・・・と書いてある文書が幾つもあるんですが、
懲りずに 2.0 → 3.2 でギリシャ文字φの入れ替えを行ってみたり ([[PhiMess]])、
私用面・私用群をばっさり消したり (ISO/IEC 10646-1:2000
Ammendment 1) してます ([[PrivateMess]])。

- [4] 旧配置は [[KSX1001]] と [[KSX1002]] のハングル部分をそのまま置いた物でした。 (もしそのままだったら2000年くらいに[[北朝鮮]]になんとかしる!としつこく言われてただろうな。(変えても実際文句言ってるんだが。))
- [9] [[RFC2070]] は、混乱を避けたければ Hangul Jamo を使えとかのんきなことを言っています。これだから [[Unicoder]] は。
- [10] >>9 うんこーど中の組合型ハングルなんて誰が使うのでしょう? KS X 1001 組合型は結果16ビット符号になってるから使う人もいるってのに。
- [11] >>10 うんこーだーは今でも結合型ハングルから組合型に移行するぞゴラァと言ってるらしいぞ。カンコックも北チョソも、現代ハングルはともかく古ハングルは (どうせ使わないし?) 組合型でいいと思ってるっぽいし。
- [12] >>10-11 しかし組合型ハングルなんてどれだけ数があるんだか? 今でも片手で数えれるんじゃないかな。それに今の環境なら [[UTF-32]] で組合型使っても (頑張れば) 何とかやっていけそうだけど、九十何年の時点では夢物語もいいところだよな >>9
-[6] φ問題の話題は [[PhiMess]] に移しました。

[19] 
[[ISO/IEC 10646]] や [[Unicode]] の枠内の仕組みで[[ハングルの大移動]]前のデータか、
後のデータかを区別する方法はありません。頻度分析など[[発見的]]な方法で推測するか、
[[文字化け]]を[[人間]]に検査させるしかありません。

[20] 
[[BOM]] や [CODE[DOCS]] のような[[文字コード]]判別の役に立ちそうな
[[ISO/IEC 10646]] や [[Unicode]] や [[ISO/IEC 2022]] に備わった仕組みは、
こういう肝心なときには使えません。 ([[非互換変更]]がなされているにも関わらず、
旧規格と新規格で同じ識別子のままになっています。
この点は [[83JIS]] の方がマシだったといえます。目糞鼻糞とはいえw)

[21] 
[[MIME charset]] は [[UTF-8]] や [[UTF-7]] の [[Unicode 1.1]] (旧規格)
の名称が登録されているので、新旧規格を区別できます。
ただし、版指定がない方の名前 (昔からあって今も普段遣いされている方の名前)
が新規格を表していて、版指定があるのは旧規格の方だけです。
つまりわざわざ旧規格用の [[MIME charset]] 名に付け直したときだけ、
正しく判別できる、という微妙な扱いです。
([[メール]]などで使われていた場合、
[[過去に遡って][Dメール]]修正などできるわけがなく、
旧規格なのに版指定なしの [[MIME charset]] 名になっていたりするので、
送受信の日付からどちらか推測するしかありません。)
そして旧規格用の [[MIME charset]] 名にはあまり対応されていないようです。


[5] 関連:
[[ISO/IEC 10646におけるエスケープシーケンス]],
[[Unicode 1.1]]

[22] [CITE[Japanese Windows and hangul]], [TIME[2004-02-06T16:07:38.000Z]], [TIME[2022-10-11T03:37:38.784Z]] <https://ha1.seikyou.ne.jp/home/akairingosaita/hangul/hangul03.htm>

>完成型ユニコードは古いバージョンのものです。

[23] [CITE[17080-three-hangul-syl.pdf]], [TIME[2017-03-30T18:16:46.000Z]], [TIME[2022-10-15T10:40:34.912Z]] <https://unicode.org/L2/L2017/17080-three-hangul-syl.pdf>

[24] [CITE[Notes for HANGUL.TXT]], [TIME[2005-10-13T20:40:50.000Z]], [TIME[2022-10-16T14:19:38.224Z]] <https://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/KSC/HangulReadMe.html>