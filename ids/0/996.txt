* _charset_ hack

[1] [[IE]] には [CODE(HTML)[<[CODE(HTMLe)[[[input]]]] [CODE(HTMLa)[[[type]]]]="[[hidden]]" [CODE(HTMLa)[[[name]]]]="_charset_"/>]] を [CODE(HTMLe)[[[form]]]] 要素中に潜ませておくと [CODE(ABNF)[[[query]]]] や [CODE(MIME)[[[application/x-www-form-urlencoded]]]] に [CODE(URI)[_charset_=[VAR[charset 名]]]] を入れてくれるという機能があります。 ([[WinIE5]]+)

[2] ''Bug 18643 - add support for _charset_ field in form submissions [form sub]'' <http://bugzilla.mozilla.org/show_bug.cgi?id=18643> : [[Mozilla]] でも実装しようかどうしようか、という話題。
実装されたみたいです。

[3] この hack、 [[WinIE3]] とかの古いブラウザは黙って
[SAMP(URI)[_charset_=&other-param=value]]
にしてくれるから安心・・・と思いきや、
[[NC]] 4.01 で試してみたらなぜか
[SAMP(URI)[_charset_=++&other-param=value]]
になりました。
[WEAK[[CODE(HTMLa)[value]] なしの [CODE(HTML)[hidden]] form control はどんな [CODE(HTMLa)[name]] でもこうなります。]]

HTML の仕様上、この文脈で
[CODE(HTMLa)[value]]
は本来必須なのですから、それが欠けている場合にどうなろうと実装依存なのでしょうけど、
なんでわざわざ [SAMP(URI)[++]]
なんかを補うのか謎です。不具合でしょうかねぇ。

・・・という、未対応 UA
の挙動が確定しないという問題がありますから、
_charset_ hack の信頼は避けた方が無難です。

例えば、鯖内で動くスクリプトの文字コード変換ルーチンを通す時には、
あらかじめ _charset_ 値を確認して、
明らかに異常な場合は捨てないと、
誤動作する虞があるでしょう。

[4] [CITE@en-GB-x-Hixie[Web Forms 2.0]] ([TIME[2009-01-05 20:07:15 +09:00]] 版) <http://www.whatwg.org/specs/web-forms/current-work/#unacceptableCharacters>

[5] HTML5 に入ります <http://www.w3.org/TR/html5/forms.html#url-encoded-form-data>

[6] [CITE@en[HTML5 Revision Tracker]]
([TIME[2010-04-06 23:31:19 +09:00]] 版)
<http://html5.org/tools/web-apps-tracker?from=4976&to=4977>

[8] [[RFC 7578]] ([CODE(MIME)@en[[[multipart/form-data]]]]) も言及しています。

[7] [CITE@en[RFC 7578 - Returning Values from Forms: multipart/form-data]] ([TIME[2015-07-19 23:17:07 +09:00]] 版) <https://tools.ietf.org/html/rfc7578>

[9] [CITE@en[Fix #32: use the encoding name exposed by DOM and HTML <form> · whatwg/encoding@18bf4fa]]
([TIME[2016-02-11 11:49:15 +09:00]] 版)
<https://github.com/whatwg/encoding/commit/18bf4fa6f005a899696800a8f6b0d20f3a4c1c0e>