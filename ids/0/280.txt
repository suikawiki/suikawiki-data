[7] [DFN[[RUBYB[バイト]@en[byte]]]]は、処理上1単位とされる[[ビット列]]です。
現代では1[[バイト]]は、8[[ビット]]です。[DFN[[RUBYB[オクテット]@en[octet]]]]は、
8[[ビット]]の[[ビット列]]です。

;; [8] 本来[[バイト]]は8[[ビット]]とは限らないため、8[[ビット]]を意味する時[[オクテット]]と呼ぶのを好む人もいます。
8[[ビット]]以外の[[バイト]]は最早歴史的・理論上の存在に過ぎないため、
広く普及している[[バイト]]が好ましいとする人もいます。

[12] [[バイト]]は、通常、 0 [[以上]] 255 [[以下]]のいずれかの[[整数]]を表すものと解されます。

* 意味

[1]
>
:[INS[[[JIS X 0211]]‐1994]] 4.2.10 バイト (byte):
一つの[[単位]]として取り扱う[[ビット]]列。

[5]
>
:4.2 バイト (byte):一つの[[単位]]として[[操作]]する[[ビット列]]。
各[[ビット]]は、0又は1の[[値]]をもつ。
[SRC[[[JIS X 0202]]:1998 4.]]

[6] 
>
:オクテット (octet):
1単位として取り扱う8[[ビット]]長のビット順序列。
([[JIS X 0221]]‐1:2001 4.27)

[4]
> [[実行環境]]の[[基本文字集合]]の任意の要素を保持するために十分な大きさを持つ[[データ記憶域]]の[[単位]]。
[[オブジェクト]]の個々のバイトの[[アドレス]]を、
一意に表現できなければならない。
バイトは連続する[[ビット]]の列からなる。
1バイト中のビット数は、[[処理系定義]]とする。
最も[[重み]]の小さいビットを[DFN[[[下位ビット]]]]
(low-order bit) と呼び、最も重みの大きいビットを[DFN[[[上位ビット]]]]
(high‐order bit) と呼ぶ。 [INS[([[JISX3010]]-1993 3.4)]]

* メモ

[3] ''バイト''と併用される倍数接頭辞には、幾つかの流儀があります。

一番よく使われているのは、 1 [[KB]] (キロ・バイト) = 1024 B = 2[SUP[10]] B
とする方法です。[[ビット]]の2進性を中心に考えると自然な方法です。

しかし、これは [[SI]] の流儀 ([[k]] (キロ) = 1000 = 10[SUP[3]])
とは一致しません。日常的 (10進的) 感覚からすると 1024
という数は中途半端な感じがしますし、計算も面倒です。
(例えば 100,000 バイトは 100 キロ・バイトでは''ありません''。)
この方法は[[ハード・ディスク]]の製品案内などでよく使われます。

この問題を解決するための幾つかの提案があります。
まず、 KB の K と [[kg]] の k (SI のキロ) を別のものとしてしまうというものです。
この流儀の人の中には、 KB を「ケー・バイト」, MB
を「エム・バイト」のように読むべきだと言う人もいます。
(但しこの考え方は古めのもので、現在では廃れた感があります。)

しかしこの方法には致命的な欠点があります。 K と k
は区別できても、それ以上の単位, M や G は区別できません。
SI が既に大文字ですし、 SI には [[m]] (ミリ) や [[g]]
(グラム) が存在しますから、どうにもなりません。

他の回避法として、バイト系の接頭辞に i をつける方法と、
接頭辞を二重にする方法があります。前者では KiB, MiB, GiB
([RUBYB[ギビ] [gibi]]・バイト)、後者では KKB ([RUBYB[大] [large]]キロ・
バイト), MMB, TTB のような単位になります。 

しかし、これらの回避法はいずれも普及したものではありません。
普及する見通しも今のところありません。
今後も 10[SUP[3]] 系と 2[SUP[10]] 系の単位による混乱は続くでしょう。

[11] ''Large Disk HOWTO: 単位とサイズ'' <http://www.linux.or.jp/JF/JFdocs/Large-Disk-HOWTO-3.html>

[2] 8ビットに相当する単位としては[[バイト]]が有名ですが、バイトの長さは環境に依存するもので、 [CODE(math)[1 byte := 8bits]] と定義されているわけではありません。8ビット単位でデータを扱うことは非常に多いことは、1バイト ≒ 8ビットと考えられていることからも皮肉にも明らかですから、不便極まりありません。そこできっちり必ず8ビットをあらわす単位としてオクテットが使い出されました。

[9] こんにちでは依然バイト優位とはいえ、オクテットの知名度も徐々に上がっていますから、どうしてもバイトである必然性の無い限りオクテットに置換えていってよいと思われます。


[FIG(quote)[
[FIGCAPTION[
[13] [CITE@en[RFC 1951 - DEFLATE Compressed Data Format Specification version 1.3]]
([TIME[2016-01-10 18:30:17 +09:00]] 版)
<https://tools.ietf.org/html/rfc1951#section-1>
]FIGCAPTION]

> Byte: 8 bits stored or transmitted as a unit (same as an octet).
>       For this specification, a byte is exactly 8 bits, even on machines
>       which store a character on a number of bits different from eight.

]FIG]
