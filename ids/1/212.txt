[4] 
[[7ビット符号]]や[[8ビット符号]]において、
[[列]] [CODE(char)[00]] および [CODE(char)[01]]
(すなわち [CODE(char)[0x00]]〜[CODE(char)[0x1F]]) のことを、
[DFN[CL 領域]]といいます。 CL 領域は[[符号化制御機能基本集合]]
([[C0]] 集合) に使います。
[SRC[[[JIS X 0202]]:1998 8.1, 9.1]]

[1] [[ISO/IEC 2022]] 近辺の言葉で、 
[CODE(char)[0/0]]〜[CODE(char)[1/15]] 
([CODE(char)[0x00]]〜[CODE(char)[0x1F]]) のこと。 
Control Left の略。

通常は [[C0]] 制御文字集合がここに来る。というかそれしかない。
これ (と、歴史的事情) によって、しばしば用語 CL と C0 は混用される。
([[CR]] と [[C1]] も同様。)

[2]
[[C0]] に[[符号化制御機能基本集合]]がまだ[[指示]]されていなくても、
[[ビット組合せ]] [CODE(char)[01/11]] は[[制御文字]]
[CODE(charname)[[[ESCAPE]]]] を[[表現]]します。
[SRC[[[JIS X 0202]]:1998 8.5.1, 9.5.1]]

[[#comment]]

* 呼出し

[3] [[符号要素]] [[C0]] に[[符号化制御機能基本集合]]を[[指示]]すると、
同時に [[CL]] に[[呼出]]したことにもなります。
すなわち、 [CODE(char)[00]] 列と [CODE(char)[01]] 列
([CODE(char)[0x00]]〜[CODE(char)[0x1F]]) の[[制御文字]]として使用できるようになります。
[SRC[[[JIS X 0202]]:1998 8.5.1, 9.5.1]]

-*-*-

[6] 
[CODE[[[ecma35lib]]]]
の
"Plain extended ASCII" mode
([CODE(charname)@en[DOCS]] [N[3/3]])
では
[[C0制御文字]]の利用を[[終端バイト]]
[N[2/9]] [N[7/0]] ([DFN[[CODE[)p]]][CSI )p]])
の[[制御シーケンス]]で切り替えられます。
[SRC[>>5]]

[FIG(table)[

:Pn: [[引数バイト]]
:d:説明

:Pn: [N[3/1]]
:d: [[C0制御文字]]。 (既定値)

:Pn: [N[3/2]]
:d: [CODE(charname)@en[BEL]], [CODE(charname)@en[BS]], 
[CODE(charname)@en[BS]], [CODE(charname)@en[HT]],
[CODE(charname)@en[LF]], [CODE(charname)@en[CR]],
[CODE(charname)@en[ESC]]
は[[C0制御文字]]。
それ以外は[[図形文字]]。

:Pn:[N[3/4]]
:d: [CODE(charname)@en[ESC]] は[[C0制御文字]]。
それ以外は[[図形文字]]。

]FIG]

;; [7] ここでいう「[[C0制御文字]]」かどうかの判断が、
[[C0集合]]を一般的なもの以外に切り替えたときにどうなるのか
(そもそも切り替えできるのか) はよくわかりません。

[REFS[
- [5] 
[CITE@en[GitHub - harjitmoe/[[ecma35lib]]: Aspiring to implement ECMA-35, in its fullness, for a Unicode era. This repo may occasionally lag behind the one on Gitlab.]], [TIME[2022-12-04T05:36:57.000Z]] <https://github.com/harjitmoe/ecma35lib#plain-extended-ascii-mode>
]REFS]

* 関連

[SEE[ [[@ctrl]] ]]

* メモ