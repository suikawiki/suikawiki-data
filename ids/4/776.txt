* 仕様書

[REFS[
- [12] '''[CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2016-02-04 17:09:00 +09:00]] 版) <https://html.spec.whatwg.org/#the-location-interface>'''
- [11] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-11-04 19:30:07 +09:00]] 版) <https://html.spec.whatwg.org/#workerlocation>
]REFS]

* [CODE(DOMi)@en[Location]] オブジェクト

[23] [CODE(DOMi)@en[[[Location]]]] [[オブジェクト]]は、
[[閲覧文脈]]の[F[[[活性文書]]]]の[F[[[文書の番地]]]]を表します。
また、[[閲覧文脈]]の[F[[[セッション履歴]]]]を変更する [[API]]
を提供します。 [SRC[>>12]]

[FIG(list members)[
: [DFN[[F(ss)[DefaultProperties]]]] : 作成時点での自身の[[プロパティー]]のリストです [SRC[>>12]]。
: [F[文書]] :
当該[[オブジェクト]]が関連付けられた[[文書]]です。
: [DFN[[F[[RUBYB[[[関係する[CODE(DOMi)@en[Document]]]]][relevant [CODE(DOMi)@en[Document]]]]]]]] :
[F[文書]]の[F[閲覧文脈]]の[F[活性文書]]です [SRC[>>12]]。
: [DFN[[F[[RUBYB[URL][url]]]]]] :
[F[[[関係する[CODE(DOMi)@en[Document]]]]の[F[文書の番地]]です [SRC[>>12]]。
: [F[祖先起源群配列]] : [CODE(DOMa)@en[ancestorOrigins]] [[IDL属性]]の値です。
]FIG]

[7] [CODE(DOMi)@en[[[URLUtils]]]] としての動作は
[CODE(JS)@en[[[location.href]]]] を参照。

** メンバー

[1]
[FIG(list short)[
- [CODE(DOMa)@en[hash]]
- [CODE(DOMa)@en[host]]
- [CODE(DOMa)@en[hostname]]
- [CODE(DOMa)@en[href][location.href]]
- [CODE(DOMa)@en[pathname]]
- [CODE(DOMa)@en[port]]
- [CODE(DOMa)@en[protocol]]
- [CODE(DOMa)@en[search]]
- [CODE(DOMm)@en[reload]]
- [CODE(DOMm)@en[replace]]
- [CODE(DOMm)@en[assign]]
]FIG]

* [CODE(DOMi)@en[WorkerLocation]] インターフェイス (DOM)

[10] [CODE(DOMi)@en[[[WorkerLocation]]]] [[オブジェクト]]は、
[CODE(DOMi)@en[[[WorkerGlobalScope]]]] [[オブジェクト]]の[F[[[URL]]]]
を表します。

* [CODE(DOMa)@en[location]] IDL属性

[21] [DFN[[CODE(JS)@en[[[window.location]]]]]] [[IDL属性]]の[[取得器]]は、
次のようにしなければ[['''なりません''']] [SRC[>>12]]。
[FIG(steps)[
= [22] [[文脈オブジェクト]]の [F[[CODE(DOMi)@en[Location]]]]を返します。
]FIG]

[16] [DFN[[CODE(JS)@en[[[document.location]]]]]] [[IDL属性]]の[[取得器]]は、
次のようにしなければ[['''なりません''']] [SRC[>>12]]。
[FIG(steps)[
= [17] [[文脈オブジェクト]]が[F[完全に活性]]なら、
== [18] [[文脈オブジェクト]]の[F[関連大域オブジェクト]]の
[F[[CODE(DOMi)@en[Location]]]]を返します。
= [19] それ以外なら、
== [20] [CODE[null]] を返します。
]FIG]

* 文脈

[13] [CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]は、
固有の [CODE(DOMi)@en[[[Location]]]] [[オブジェクト]]を持ちます。
[CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]の作成時に
[CODE(DOMi)@en[[[Location]]]] [[オブジェクト]]が割り当てられます。 [SRC[>>12]]

[HISTORY[
[14] [CODE(JS)@en[[[document.open]]]] で [CODE(DOMi)@en[[[Location]]]]
[[オブジェクト]]は新しいものに差し替えられるとされていましたが、
その規定は削除されています。
]HISTORY]

* 作成

[24] [CODE(DOMi)@en[Location][Location (DOM)]] [[オブジェクト]]の作成は、次のようにします
[SRC[>>12]]。

[FIG(steps)[
= [25] [VAR[オブジェクト]]を、新しい [CODE(DOMi)@en[Location][Location (DOM)]]
[[プラットフォームオブジェクト]]に設定します。
[VAR[オブジェクト]]の [F(JS ss)@en[DefineOwnProperty]] を実行して次の通りメンバーを作成します。
[FIG(table)[
:name: 名前 (第1引数)
:Value: [F(ss)[Value]]
:Writable: [F(ss)[Writable]]
:Enumerable: [F(ss)[Enumerable]]
:Configurable: [F(ss)[Configurable]]

:name: [CODE[toString]]
:Value: [CODE[%ObjProto_toString%]]
:Writable: [CODE[false]]
:Enumerable: [CODE[false]]
:Configurable: [CODE[false]]

:name: [CODE[toJSON]]
:Value: [CODE[undefined]]
:Writable: [CODE[false]]
:Enumerable: [CODE[false]]
:Configurable: [CODE[false]]

:name: [CODE[valueOf]]
:Value: [CODE[%ObjProto_valueOf%]]
:Writable: [CODE[false]]
:Enumerable: [CODE[false]]
:Configurable: [CODE[false]]

:name: [CODE[@@toPrimitive]]
:Value: [CODE[undefined]]
:Writable: [CODE[false]]
:Enumerable: [CODE[false]]
:Configurable: [CODE[false]]

]FIG]
= [26] [VAR[オブジェクト]]の [F(ss)[DefaultProperties]] を、
[VAR[オブジェクト]]の [F(ss)[OwnPropertyKeys]] を実行した結果に設定します。
= [27] [VAR[オブジェクト]]を返します。
]FIG]

[31] 更に、 [F[祖先起源群配列]]を設定しなければ[MUST[なりません]]。

* 異なる起源からのアクセス

[42] [CODE(DOMi)@en[Location]] は、[[同じ起源]]でなくてもアクセスできる例外的な[[オブジェクト]]です。
(そのような性質を持つのは他に [CODE(DOMi)@en[WindowProxy]] だけです。)

[43] [[同じ起源]]からアクセスした時と、それ以外からアクセスした時とで、
動作がかなり変わります。

[44] [[JavaScript]] の[[内部メソッド]]は次のように動作しなければ[MUST[なりません]]
[SRC[>>12]]。

[FIG(table)[
:method: [[内部メソッド]]
:params: [[引数]]
:same: [CODE[[[IsPlatformObjectSameOrigin]]([[this]])]] が[[真]]
:cross: [CODE[[[IsPlatformObjectSameOrigin]]([[this]])]] が[[偽]]

:method: [60] [F(ss)[GetPrototypeOf]]
:same: [CODE[[[!][! (ECMAScript)]] [[OrdinaryGetPrototypeOf]]([[this]])]] を返します。
:cross: [[null]] を返します。

:method: [61] [F(ss)[SetPrototypeOf]]
:same: [[偽]]を返します。
:cross: [[偽]]を返します。

:method: [62] [F(ss)[IsExtensible]]
:same: [[真]]を返します。
:cross: [[真]]を返します。

:method: [63] [F(ss)[PreventExtensions]]
:same: [[偽]]を返します。
:cross: [[偽]]を返します。

:method: [64] [F(ss)[GetOwnProperty]]
:params: [VAR[P]]
:same:
[FIG(steps)[
= [32] [VAR[desc]] を、 [CODE[[[OrdinaryGetOwnProperty]]([[this]], [VAR[P]])]] に設定します。
= [33] [CODE[this]] の [F(ss)[DefaultProperties]] の値に [VAR[P]] が含まれるなら、
== [34] [VAR[desc]] の [F(ss)[Configurable]] を[[真]]に設定します。
= [35] [VAR[desc]] を返します。
]FIG]
:cross:
[FIG(steps)[
= [37] [VAR[特性]]を、 [CODE[[[!][! (ECMAScript)]] [[CrossOriginGetOwnPropertyHelper]]([[this]], [VAR[P]])]] に設定します。
= [38] [VAR[特性]]が[[未定義]]でなければ、
== [39] [VAR[特性]]を返します。
= [40] それ以外なら、
== [41] [CODE(DOMe)@en[SecurityError]] [[例外]]を[[投げ]]ます。
]FIG]

:method: [65] [F(ss)[DefineOwnProperty]]
:params: [VAR[P]], [VAR[Desc]]
:same:
[FIG(steps)[
= [46] [CODE[this]] の[F(ss)[DefaultProperties]]の値が [VAR[P]] を含むなら、
== [47] [[偽]]を返します。
= [48] それ以外なら、
== [49] [CODE[[[?][? (ECMAScript)]] [[OrdinaryDefineOwnProperty]]([[this]], [VAR[P]], [VAR[Desc]])]] を返します。
]FIG]
:cross: [[偽]]を返します。

:method: [66] [F(ss)[Get]]
:params: [VAR[P]], [VAR[Receiver]]
:same:
[CODE[[[?][? (ECMAScript)]] [[OrdinaryGet]]([[this]], [VAR[P]], [VAR[Receiver]])]]
を返します。
:cross:
[CODE[[[?][? (ECMAScript)]] [[CrossOriginGet]]([[this]], [VAR[P]], [VAR[Receiver]])]]
を返します。

:method: [67] [F(ss)[Set]]
:params: [VAR[P]], [VAR[V]], [VAR[Receiver]]
:same:
[CODE[[[?][? (ECMAScript)]] [[OrdinarySet]]([[this]], [VAR[P]], [VAR[V]], [VAR[Receiver]])]]
を返します。
:cross:
[CODE[[[?][? (ECMAScript)]] [[CrossOriginSet]]([[this]], [VAR[P]], [VAR[V]], [VAR[Receiver]])]]
を返します。

:method: [68] [F(ss)[Delete]]
:params: [VAR[P]]
:same:
[CODE[[[?][? (ECMAScript)]] [[OrdinaryDelete]]([[this]], [VAR[P]])]]
を返します。
:cross: [[偽]]を返します。

:method: [69] [F(ss)[OwnPropertyKeys]]
:same: [CODE[[[!][! (ECMAScript)]] [[OrdinaryOwnPropertyKeys]]([[this]])]]
を返します。
:cross:
[CODE[[[!][! (ECMAScript)]] [[CrossOriginOwnPropertyKeys]]([[this]])]]
を返します。
]FIG]

* 歴史

** JavaScript 1.0

[28] [[JavaScript 1.0]] で [CODE(DOMi)@en[Location][Location (DOM)]]
[[オブジェクト]]が導入され、[[URL分解属性]]が追加されました。

[FIG(list short)[
- [CODE(DOMa)@en[hash]]
- [CODE(DOMa)@en[host]]
- [CODE(DOMa)@en[hostname]]
- [CODE(DOMa)@en[href][location.href]]
- [CODE(DOMa)@en[pathname]]
- [CODE(DOMa)@en[port]]
- [CODE(DOMa)@en[protocol]]
- [CODE(DOMa)@en[search]]
]FIG]

** JavaScript 1.1

[29] [[JavaScript 1.1]] で [CODE(DOMm)@en[reload]] と
[CODE(DOMm)@en[replace]] が追加されました。

** 

@@

[30] [CODE(JS)@en[location.origin]] は10年代に追加されました。

* メモ

[2] [CITE@en[Re: WebIDL and prototype chains]]
([[Maciej Stachowiak]] 著, [TIME[2009-07-17 12:39:39 +09:00]] 版)
<http://lists.w3.org/Archives/Public/public-webapps/2009JulSep/0269.html>

[3] [CITE['''['''whatwg''']''' JS "redirects" and session history]]
([TIME[2010-07-28 08:22:37 +09:00]] 版)
<http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-July/027372.html>

[4] [CITE@en[Web Applications 1.0 r7512     Make sure <iframe name=location> doesn't override Document.location]]
( ([TIME[2012-11-20 03:47:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7511&to=7512>

[5] [CITE@en-US[Window Object 1.0]]
( ([TIME[2006-04-08 02:19:28 +09:00]] 版))
<http://www.w3.org/TR/Window/#window-location>

[6] [CITE[''''''[''''''whatwg'''''']'''''' Location object identity and navigation behavior]]
( ([TIME[2013-01-08 05:31:54 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-January/038527.html>


[319] [CITE[''''''[''''''whatwg'''''']'''''' Spec for location object needs to make some properties unforgeable; need supporting WebIDL changes]]
( ([TIME[2012-11-20 02:38:08 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-November/038015.html>

[320] [CITE[''''''[''''''whatwg'''''']'''''' Location object identity and navigation behavior]]
( ([TIME[2012-11-20 01:38:05 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-November/038014.html>

[321] [CITE[''''''[''''''whatwg'''''']'''''' Proposal: location.parentOrigin]]
( ([TIME[2012-11-20 06:25:14 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-November/038019.html>

[322] [CITE@en[Web Applications 1.0 r7513     Update Location's members to point to the right document.]]
( ([TIME[2012-11-20 09:15:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7512&to=7513>

[323] [CITE@en[Web Applications 1.0 r7514     Make Location be protected from cross-origin access like Window.]]
( ([TIME[2012-11-20 10:14:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7513&to=7514>

[324] [CITE@en[Web Applications 1.0 r7515     More security fixes: Location is now entirely Unforgeable, and wording for some other security paragraphs is now consistent.]]
( ([TIME[2012-11-20 10:42:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7514&to=7515>

[325] [CITE@en[Web Applications 1.0 r7516     Location's security model is actually different than Window's.]]
( ([TIME[2012-11-20 16:45:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7515&to=7516>

[326] [CITE@en-US[Window Object 1.0]]
( ([TIME[2006-04-08 02:19:28 +09:00]] 版))
<http://www.w3.org/TR/Window/#location>

[327] [CITE@en[Web Applications 1.0 r7758     Allow custom properties on Location objects to work for the Document whose Location object it originally was.]]
( ([TIME[2013-03-16 08:00:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7757&to=7758>

[328] [CITE@en[Web Applications 1.0 r7846     Try to match reality better for dynamic location.hash navigation.]]
( ([TIME[2013-04-23 03:01:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7845&to=7846>

[405] [CITE[IRC logs: freenode / #whatwg / 20131010]]
( ([TIME[2013-10-14 00:14:43 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20131010>

[407] [CITE[IRC logs: freenode / #whatwg / 20131213]]
( ([TIME[2013-12-15 23:01:08 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20131213>

[408] [CITE[IRC logs: freenode / #whatwg / 20140205]]
( ([TIME[2014-02-08 12:44:05 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20140205#l-961>

[409] [CITE@en[Cross-origin windows and how to explain them in ECMAScript semantics]]
( ([[David Bruant]] 著, [TIME[2014-02-08 21:16:11 +09:00]] 版))
<http://lists.w3.org/Archives/Public/public-script-coord/2014JanMar/0140.html>


[8] [CITE@en[Inline URLUtilsReadOnly · whatwg/html@32a7a20]]
([TIME[2015-09-26 11:27:43 +09:00]] 版)
<https://github.com/whatwg/html/commit/32a7a2092eeff52aca78a0224816a9b327893cc6>

[9] [CITE@en[Give workers a base URL and clean up shared workers · whatwg/html@b620471]] ([TIME[2015-11-06 22:23:05 +09:00]] 版) <https://github.com/whatwg/html/commit/b620471ff823e8e6507b077cf0785a530762f5e3>

[15] [CITE@en[Tie Location to the Window object · whatwg/html@fdd8216]]
([TIME[2016-02-04 21:08:58 +09:00]] 版)
<https://github.com/whatwg/html/commit/fdd8216a902a065dd3e205cbbc1b5a6b527970a2>

[36] [CITE@en[Cross-origin objects: do not wrap JavaScript functions]]
( ([[annevk]]著, [TIME[2016-06-22 00:21:17 +09:00]]))
<https://github.com/whatwg/html/commit/db361b608157b5cf9fd0d491d7dc76cdce80380b>

[45] [CITE@en[Explain why cross-origin properties are configurable]]
([[domenic]]著, [TIME[2016-09-09 05:18:17 +09:00]])
<https://github.com/whatwg/html/commit/7891ea33f643f2b6af18dacc532378671c922b76>

[50] [CITE@en[document.location requires document to be fully active]]
([[annevk]]著, [TIME[2016-09-09 05:23:02 +09:00]])
<https://github.com/whatwg/html/commit/126ec9eadb149285c8f41a40929ff53ca8112826>