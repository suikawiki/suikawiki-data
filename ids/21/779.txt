[3] [[Web]] における[[文字コード]]に関する[DFN[[RUBYB[[[参照処理モデル]]]@en[Reference Processing Model]]]]とは、
[[Unicode]] を用いて仕様本体を定義し、実際に使われている[[文字コード]]はその [[Unicode]]
の文字列を[[符号化]]したものとみなす、というものです。

[4] 実装は必ずしもこのモデルに従う必要はありませんが、従っているかのように振る舞うことが求められています。

[5] このモデルは [[HTML 2.x]] ([[RFC 2070]]) で導入され、 [[HTML4]]、[[CSS2]]、[[ECMAScript]]、[[DOM1]]、
[[XML]] などその後の [[Web]] 関連技術に広がっていきました。

[EG[
[10] 例えば [[HTML4]] の [[SGML]] [[文書文字集合]]は [[ISO/IEC 10646]] (≒ [[Unicode]]) でした。
[[HTML文書]]は [[UTF-8]] でも [[UTF-16]] でも [[Shift_JIS]] でも [[ISO-8859-1]] でも構いませんが、
いずれにせよ [[Unicode]] に変換してから解釈される、とされていました。
]EG]

[6] それ以前は、仕様は [[Latin-1]] ベースに定義されていることが多く、
実装はそのシステムの[[文字コード]]で実装されていて、
いくつかの[[文字コード]]の変換にも対応している、という感じでした。

[7] 90年代末には [[Windows]] が [[NT]] 系に移行してゆき、 [[UCS-2]]/[[UTF-16]]
を内部コードにして [[W]] 系 [[Win32 API]] を使う実装が ([[Webブラウザー]]に限らず)
増えていきました。他のシステムでも同様に [[Unicode]] の普及が進み、自然と[[参照処理モデル]]に沿った実装に収束していきました。

[8] [[参照処理モデル]]は、既存の[[文字コード]]の意味を変化させました。従来の[[文字コード]]は、
含まれる[[文字]]の集合も定義も、その[[符号化方式]]も独自に定義していました。[[参照処理モデル]]はその独自の集合と定義を無視し、
どの[[文字コード]]も[[Unicode]] という単一の[[符号化文字集合]]の[[符号化方式]]の違いに過ぎないものと読み替えていきました。

[EG[
[9] 例えば [[JIS X 0208:1997]] は「[[鴎]]」(に相当する [[JIS]] の[[区点位置]]) に「[[鴎]]」と「[[鷗]]」
を[[包摂]]していますから、 [[Shift_JIS]] の本来の定義からすると「[[鷗]]」 (に相当する[[Shift_JIS]]の[[符号]])
は「[[鴎]]」でも「[[鷗]]」でもあると解釈できます。[[参照処理モデル]]に従う解釈では
「[[鴎]]」(に相当する [[Shift_JIS]] の[[符号]]) は「[[鴎]]」でしかありません。
]EG]

* 歴史

[REFS[
- [1] [CITE@en[Character Model for the World Wide Web 1.0: Fundamentals]]
( ([TIME[2005-02-15 14:24:00 +09:00]] 版))
<http://www.w3.org/TR/charmod/#def-ref-proc-model>
- [2] [CITE@en[RFC 2070 - Internationalization of the Hypertext Markup Language]]
( ([TIME[2014-02-02 16:11:39 +09:00]] 版))
<http://tools.ietf.org/html/rfc2070#section-2.1>
]REFS]
