[5] 
[DFN[JOSE]]
は、
[[JSON]] 形式で[[署名]]や[[暗号化]]を扱う技術群や、
その[[標準化]]を担当した [[IETF]] のグループです。

* 仕様書

[8] 個別の[[仕様書]]は各技術の項を参照。

[REFS[
- [7] [CITE[JSON Object Signing and Encryption (JOSE)]], [TIME[2019-03-14 06:55:09 +09:00]] <https://www.iana.org/assignments/jose/jose.xhtml>
- [142] [CITE@en[[[RFC 7515]] - JSON Web Signature (JWS)]], [TIME[2020-03-29 16:13:43 +09:00]] <https://tools.ietf.org/html/rfc7515#section-9>
- [9] 
[CITE@en[[[RFC 7516]] - JSON Web Encryption (JWE)]], [TIME[2022-11-24T09:25:18.000Z]] <https://datatracker.ietf.org/doc/html/rfc7516#section-9>
- [26] [CITE@en[[[RFC 7517]]: JSON Web Key (JWK)]], [TIME[2022-12-15T11:34:06.000Z]] <https://www.rfc-editor.org/rfc/rfc7517.html#section-7>


]REFS]

* 技術

[6] [[JOSE]] 技術は「[DFN[JW[VAR[○]]]]」のような名称がついています。

[FIG(short list)[ [4] [[JOSE]]
- [[JWA]]
- [[JWS]]
- [[JWT]]
- [[JWE]]
- [[JWK]]
- [[JOSEヘッダー]]
- [[JOSE鍵識別]]
]FIG]

* JWS と JWE

[10] [[JWS]] と [[JWE]] は、それぞれ独自形式と [[JSON]] 
形式の合計6種類の[[直列化]]構文を規定しています。
[SEE[ [[JWS]], [[JWE]] ]]

[11] 
両者はよく似ていますが、 (合法な) 入力が [[JWS]] か [[JWE]]
のいずれであるかは、次のように区別できると説明されています。
[SRC[>>9]]

- [12] 
[[JWS簡潔直列化]]と [[JWE簡潔直列化]]は、
[CODE[.][FULL STOP]] 2つで3部に分けられるのが [[JWS]]、
[CODE[.][FULL STOP]] 3つで4部に分けられるのが [[JWE]]
です。
[SRC[>>9]]
- [13] 
[[JWS JSON直列化]]と [[JWE JSON直列化]]は、
-- [14] [CODE[payload]] があれば [[JWS]] です。 [SRC[>>9]]
-- [15] [CODE[ciphertext]] があれば [[JWE]] です。 [SRC[>>9]]
- [16] 
[[JOSEヘッダー]]において
[CODE[alg]]
[[ヘッダー引数]]が表すのが[[デジタル署名]]か[[MAC算法]]か
[CODE[none]]
なら、
[[JWS]]
です。
[CODE[alg]]
[[ヘッダー引数]]が表すのが[[鍵暗号化]]、
[[鍵包み]]、
[[直接鍵合意]]、
[[鍵包み付き鍵合意]]、
[[直接暗号化]]の[[算法]]なら、
[[JWE]]
です。
[SRC[>>9]]
- [17] 
[[JOSEヘッダー]]において
[CODE[enc]]
[[ヘッダー引数]]があれば、
[[JWE]]
です。
[SRC[>>9]]

[18] 
[[仕様書]]にはこのように区別のための特徴が列挙されているだけで、
区別が必要なときにどのように判断するべきか明確に規定しているわけではありません。
こんな具合で[[相互運用性]]は得られるのでしょうか?

[19] 
[[JWS]] や [[JWE]] のどちらかだけを使う[[応用]]は、
どちらであるかを明確に規定するべきです。

[20] 
[[JWS]] や [[JWE]] の両方を使い得る[[応用]]は、
どちらであるかを明確に区別する方法を定め、
実装がどのように出力するべきか、
実装がどのように入力を処理するべきかをエラー処理まで含めて明確に規定するべきです。

;; [22] その方法は仕様書が提示するようなものでも構いませんし、
外部情報を使うようなものでも構いませんが、
確実な方法を1つだけ明確に定めるべきです。

[21] 
[[JWS]] や [[JWE]] の両方に対応する実装は、
どちらか自動判定するような動作モードを提供するべきではありません。
便宜上の[[ヒント]]を提示するようなタイプの実装は仕様書にあるような特徴を検査してどちらか判定してもいいのでしょうが、
それに基づき勝手に処理を進行するようでは、
[[相互運用性]]と[[セキュリティー]]の問題の温床となりかねません。

** MIME 型


[145] 
簡潔直列化の
[[MIME型]]は
[DFN[[CODE[application/jose]]]]
です。 [[JWS]] または [[JWE]] の簡潔直列化を表します。
[SRC[>>142]]

[FIG(data list middle)[ [24] [[MIME型]]
:[[MIME型]]: [CODE[application/jose]]
:説明:[[JOSE]] 簡潔直列化
]FIG]



[146] 
[[JSON]]
直列化の
[[MIME型]]は
[DFN[[CODE[application/jose+json]]]]
です。 [[JWS]] または [[JWE]] の JSON 直列化を表します。
[[JSONオブジェクト]]は [[UTF-8]] で符号化する[SHOULD[べきです]]。
[SRC[>>142]]

;; [147] なぜ [[UTF-8]] 以外の余地を残しているのか謎です。

[FIG(data list middle)[ [25] [[MIME型]]
:[[MIME型]]: [CODE[application/jose+json]]
:説明:[[JOSE]] [[JSON]] 直列化
]FIG]

* メモ

[1] [CITE@en[[[RFC 7165]] - Use Cases and Requirements for JSON Object Signing and Encryption (JOSE)]]
( ([TIME[2014-04-15 15:05:12 +09:00]] 版))
<http://tools.ietf.org/html/rfc7165>

-[2] [CITE@en[[[RFC 7520]] - Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)]]
([TIME[2015-05-20 10:10:42 +09:00]] 版)
<https://tools.ietf.org/html/rfc7520>
--[23] [CITE[RFC Errata Report » RFC Editor]], [TIME[2022-11-24T13:29:55.000Z]] <https://www.rfc-editor.org/errata_search.php?rfc=7520>

[3] [CITE@en[[[JOSE]] (Javascript Object Signing and Encryption) is a Bad Standard That Everyone Should Avoid - Paragon Initiative Enterprises Blog]]
( ([TIME[2017-04-13 19:35:33 +09:00]]))
<https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid>