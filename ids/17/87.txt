* 仕様書

[REFS[
- [2] [CITE@en[RFC 7230 - Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing]] ([TIME[2014-06-07 01:59:35 +09:00]] 版) <https://tools.ietf.org/html/rfc7230#section-4.2.2>
- [6] [CITE@en[RFC 7230 - Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing]] ([TIME[2014-06-07 01:59:35 +09:00]] 版) <https://tools.ietf.org/html/rfc7230#section-8.5>
- [7] [CITE@en[RFC 7231 - Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content]] ([TIME[2014-06-07 01:55:45 +09:00]] 版) <https://tools.ietf.org/html/rfc7231#page-12>
- [13] [CITE@en[RFC 3229 - Delta encoding in HTTP]] ([TIME[2014-10-26 21:15:25 +09:00]] 版) <http://tools.ietf.org/html/rfc3229#section-10.1>
- [15] [CITE@en[RFC 3229 - Delta encoding in HTTP]] ([TIME[2014-10-26 21:15:25 +09:00]] 版) <http://tools.ietf.org/html/rfc3229#section-10.9>
]REFS]

* 文脈

[18] データ形式としての [[ZLIB]] は次の場面で用いられています。

[FIG(short list)[
- [[HTTP]] [CODE(HTTP)@en[[[deflate]]]]
- [[PNG]]
]FIG]


* 転送符号化 [CODE[deflate]]

[3] [[転送符号化]] [DFN[[CODE(HTTP)@en[[[deflate]]]]]] は、
[[LZ77]] 圧縮法と[[ハフマン符号化]]の組み合わせを用いた [[RFC 1951]]
「[[deflate]]」圧縮データストリームを含んだ [[RFC 1950]]
「[[zlib]]」データ形式を表します [SRC[>>2, >>6, >>7]]。

** 構文解析

[4] 実装によっては [[zlib]] を用いない [[deflate]] 圧縮データを
[CODE(HTTP)@en[[[deflate]]]] として送りますが、これは[[不適合]] [SRC[>>2]] とされています。

;; [5] それをどう扱うべきかは規定されていません。

* 実現値操作 [CODE(HTTP)@en[deflate]]

[14] [[実現値操作]] [DFN[[CODE(HTTP)@en[[[deflate]]]]]] は、
[[内容符号化]] [CODE(HTTP)@en[[[deflate]]]] と同じです [SRC[>>13]]。

[16] [CODE(HTTP)@en[[[gdiff]]]] や [CODE(HTTP)@en[[[diffe]]]] は[[圧縮]]によって大きくサイズを削減できますから、
[CODE(HTTP)@en[[[deflate]]]] も実装することが[RUBYB[強く推奨]@en[strongly recommended]]されています [SRC[>>15]]。

** 歴史

[89] [[IANA登録簿]]には [[RFC 2616]] を出典として登録されています [SRC[>>88]]。
[[RFC 723x]] 出版後も出典は更新されていません。 [TIME[2014-11-19T16:22:24.500Z]]

[REFS[
- [88] [CITE[Instance Manipulation Values]] ([TIME[2014-01-31 02:45:13 +09:00]] 版) <http://www.iana.org/assignments/inst-man-values/inst-man-values.xhtml>
]REFS]

* メモ

[11] [CITE[zlib Home Site]]
( ([TIME[2014-03-27 06:36:36 +09:00]] 版))
<http://www.zlib.net/>

[12] [CITE@ja[zlib - Wikipedia]]
([TIME[2016-01-10 16:10:12 +09:00]] 版)
<https://ja.wikipedia.org/wiki/Zlib>

[1] [CITE[java - Handling HTTP ContentEncoding "deflate" - Stack Overflow]]
([TIME[2011-01-23 19:18:41 +09:00]] 版)
<http://stackoverflow.com/questions/3932117/handling-http-contentencoding-deflate>

[8] [CITE@en-US[IE7 – Deflate or Not? – Subbu Allamaraju]]
([TIME[2015-08-05 00:10:34 +09:00]] 版)
<https://www.subbu.org/blog/2008/03/ie7-deflate-or-not>

[9] [CITE@ja[Deflate - Wikipedia]]
([TIME[2016-01-26 19:26:26 +09:00]] 版)
<https://ja.wikipedia.org/wiki/Deflate>

[10] [CITE@en[RFC 6713 - The 'application/zlib' and 'application/gzip' Media Types]]
([TIME[2015-09-27 13:20:11 +09:00]] 版)
<https://tools.ietf.org/html/rfc6713>


[FIG(quote)[
[FIGCAPTION[
[17] [CITE[Frequently Asked Questions about zlib]]
([TIME[2005-02-21 07:10:26 +09:00]] 版)
<http://www.gzip.org/zlib/zlib_faq.html#faq38>
]FIGCAPTION]

> "gzip" is the gzip format, and "deflate" is the zlib format. They should probably have called the second one "zlib" instead to avoid confusion with the raw deflate compressed data format. While the HTTP 1.1 RFC 2616 correctly points to the zlib specification in RFC 1950 for the "deflate" transfer encoding, there have been reports of servers and browsers that incorrectly produce or expect raw deflate data per the deflate specficiation in RFC 1951, most notably Microsoft. So even though the "deflate" transfer encoding using the zlib format would be the more efficient approach (and in fact exactly what the zlib format was designed for), using the "gzip" transfer encoding is probably more reliable due to an unfortunate choice of name on the part of the HTTP 1.1 authors.

]FIG]
