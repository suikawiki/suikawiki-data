[2] 複数の[[マーク付け言語]]が混在する場合にあって、[[文書型]]を全体として規定することとなる基調となる言語、
あるいは[[文書型]]として規定された全体としての言語を、[DFN[[RUBYB[ホスト言語]@en[host language]]]]といいます。

[EG[
[3] 例えば [[XHTML]] [[文書]]に、 [[SVG]] の[[要素]]を直接埋め込んで文書の一部を構成する画像として使うことができるとします。
この時、「[[XHTML]] を基本とし、一部に [[SVG]] を埋め込んでも良い言語」を [[SVG]] から見て[[ホスト言語]]といいます。
]EG]

[4] この語は [[XHTML m12n]] によって導入されたと思われます。ここでいう[[マーク付け言語]]は、
[[XHTMLモジュール]]の粒度のものであっても構いません。

[EG[
[5] 例えば [[XHTML Role Attribute Module]] から見て [[XHTML 1.2]] は[[ホスト言語]]です。
]EG]

* 現在

[6] [[XHTML m12n]] が失敗に終わり忘れ去られた現在では、[[ホスト言語]]という語を使うことも少なくなりました。
例えば [[HTML Standard]] に基づく [[HTML]] には [[SVG]] や [[MathML]] を埋め込むことがよくありますが、
[[HTML]] を指して[[ホスト言語]]ということは稀です。

[7] [[HTML]] のような[[固有名詞]]のかわりに[[ホスト言語]]と間接的に呼ぶからには、
色々な[[ホスト言語]]の存在が仮定されていました。例えば [[XHTML]] の他に [[DocBook]]
や [[RELAX NG]] や [[GML]] や実装独自の言語など色々な[[マーク付け言語]]が (理論上は) 
考えられますし、 [[XHTML]] だけでも [[XHTML 1.0]]、[[XHTML Basic]]、
[[XHTML-MP]] など色々な[[プロファイル]]がありました。

[8] しかしそうした世界観は [[XML]] と [[XHTML m12n]] の失敗で崩壊しました。
どんな言語とどんな言語も (やりたければ) 自由に組み合わせられる (細部は使いたい人ががんばって決めるべし)
との曖昧な説明だけの世界は成立せず、 [[HTML]] と [[SVG]] を組み合わせるなら[[著者]]はこう記述するべきで、
[[実装]]はこう処理するべきだ、と一々個別に詳細に規定して[[相互運用性]]の向上を目指す流れへと移、
[[ホスト言語]]のような曖昧な用語は不要となったのでしょう。

* メモ

[1] [CITE[Introduction – SVG Tiny 1.2]] ([TIME[2008-12-20 02:31:29 +09:00]] 版) <http://www.w3.org/TR/2008/REC-SVGTiny12-20081222/intro.html#TermHostLanguage>

>
:host language:    A host language is a syntax which incorporates one or more SVG document fragments by inclusion or by reference, and which defines the interactions between document fragments; an example of this is WICD Core 1.0, an XML framework which defines how XHTML, SVG, MathML, XForms, SMIL, and other syntaxes interact [WICD].

