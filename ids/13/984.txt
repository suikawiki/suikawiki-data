[9] [[DOMイベント]]における[DFN[[RUBYB[[[対象]]]@en[target]]]]とは、
[[イベント]]が[[ディスパッチ]]されたり、[[イベントリスナー]]が呼び出されたりする際の文脈として用いられる[[オブジェクト]]です。

* 仕様書

[REFS[
- [10] [CITE@en-US[DOM Standard]] ([TIME[2014-05-01 09:45:30 +09:00]] 版) <http://dom.spec.whatwg.org/#dom-event-target>
- [3] [CITE@en-US[DOM Standard]] ([TIME[2013-04-26 20:00:45 +09:00]] 版) <http://dom.spec.whatwg.org/#interface-eventtarget>
- [25] [CITE@en-US[DOM Standard]] ([TIME[2014-05-01 09:45:30 +09:00]] 版) <http://dom.spec.whatwg.org/#concept-event-dispatch>
]REFS]

* ディスパッチの対象

[22] [[イベント]]の[[対象]]は、仕様上は、
> [[disptch]] at [VAR@en[target]]
> [[fire]] at [VAR@en[target]]

... のような表現で記述されます。

[23] [CODE(DOMm)@en[[[dispatchEvent]]]] [[メソッド]]では、[[文脈オブジェクト]]が[[対象]]となります。

[24] 仕様書上の[[ディスパッチ]]には、[RUBYB[[[対象上書き]]]@en[target override]]という[[引数]]があります [SRC[>>25]]。
これが指定されていると、通常とは異なる[[オブジェクト]]が[[対象]]になります。
現在これが用いられているのは、
[FIG(list)[
- [29] [[stops parsing]] や [CODE(JS)@en[[[window.open]]]]
で発生する [CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]での [CODE(DOMe)@en[[[load]]]]
[[イベント]] ([CODE(DOMi)@en[[[Document]]]] が[[対象]])
- [30] [[stops parsing]] や [[traverse the history]] で発生する [CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]での [CODE(DOMe)@en[[[pageshow]]]]
[[イベント]] ([CODE(DOMi)@en[[[Document]]]] が[[対象]])
- [31] [[unload a document]] 中で発生する [CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]での [CODE(DOMe)@en[[[pagehide]]]]
[[イベント]] ([CODE(DOMi)@en[[[Document]]]] が[[対象]])
- [32] [[unload a document]] 中で発生する [CODE(DOMi)@en[[[Window]]]] [[オブジェクト]]での [CODE(DOMe)@en[[[unload]]]]
[[イベント]] ([CODE(DOMi)@en[[[Document]]]] が[[対象]])
]FIG]
... です。

* [CODE(DOMi)@en[Event]] インターフェイス [CODE(DOMi)@en[target]] 属性 (DOM)

[13] [CODE(DOMi)@en[[[Event]]]] [[インターフェイス]]の [DFN[[CODE(DOMa)@en[[[target]]]]]]
[[属性]]は、[[イベント]]の[[対象]]を返します。

[14] この[[属性]]の初期値は [[null]] です [SRC[>>3]]。[[ディスパッチ]]の際に値が[[ディスパッチ]]対象の
[CODE(DOMi)@en[[[EventTarget]]]] に設定されます。

* [CODE(DOMi)@en[Event]] インターフェイス [CODE(DOMi)@en[currentTarget]] 属性 (DOM)

[15] [CODE(DOMi)@en[[[Event]]]] [[インターフェイス]]の [DFN[[CODE(DOMa)@en[[[currentTarget]]]]]]
[[属性]]は、[[イベント]]の現在の[[対象]]を返します。

[16] この[[属性]]の初期値は [[null]] です [SRC[>>3]]。[[イベントリスナー]]が呼び出される際に登録元の
[CODE(DOMi)@en[[[EventTarget]]]] に設定されます。

[17] [[親]]がない [CODE(DOMi)@en[[[EventTarget]]]] なら普通 [CODE(DOMa)@en[[[target]]]] と
[CODE(DOMa)@en[[[currentTarget]]]] は一致しますが、[[DOM木]]中の[[節点]]など[[親子]]関係があると、
[[捕獲]]や [[bubble]] が発生するので、等しくないことがあります。

* [CODE(DOMi)@en[EventTarget]] インターフェイス (DOM)

[11] [[DOMイベント]]の[[対象]]となり得る[[オブジェクト]]は、すべて [DFN[[CODE(DOMi)@en[[[EventTarget]]]]]]
[[インターフェイス]]を[[継承]]しています。

;; [12] [[イベント鎖]]上の[[節点]]のすべてが [CODE(DOMi)@en[[[EventTarget]]]] であることは
[[DOM Standard]] 上明示的には要求されていないようですが、 [CODE(DOMi)@en[[[Event]]]]
[[インターフェイス]]の [CODE(DOMa)@en[[[currentTarget]]]] が [CODE(DOMi)@en[[[EventTarget]]]]
型となっているので、そうでなければ要件を満たせません。

[1] 次の[[メソッド]]が定義されています [SRC[>>10]]。
[FIG(short list)[
- [CODE(DOMm)@en[[[addEventListener]]]]
- [CODE(DOMm)@en[[[dispatchEvent]]]]
- [CODE(DOMm)@en[[[removeEventListener]]]]
]FIG]

[7] また [CODE(DOMi)@en[[[EventTarget]]]] は、それに関連付けられた[[イベントリスナー]]のリストを有します。

;; [8] このリストは[[イベント]]の[[発火]]の際に使われます。個々の[[イベントリスナー]]の追加や削除はできますが、含まれている[[イベントリスナー]]の一覧を取得したり、含まれているかチェックしたりはできません。
([[DOM3イベント]]で提案されていましたが、用途がないとして削除されています。)

[34] [[イベントリスナー]]のリストが空かどうかで動作が変化することがあります。

;; [[イベントリスナー]]を参照。

[33] [CODE(DOMm)@en[[[document.open]]]] は、登録された[[イベントリスナー]]をすべて削除することがあります。

;; [CODE(DOMm)@en[[[document.open]]]] 参照。

* [CODE(DOMi)@en[EventTarget]] の一覧

[27] 次の[[インターフェイス]]は [CODE(DOMi)@en[[[EventTarget]]]] を[[継承]]しています
(直接[[継承]]しているもののみ)。
[FIG(list)[
- [CODE(DOMi)@en[[[Node]]]] [SRC[[[DOM Standard]]]]
- [CODE(DOMi)@en[[[Window]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[WorkerGlobalScope]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[TextTrack]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[TextTrackCue]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[AudioTrackList]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[VideoTrackList]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[TextTrackList]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[MediaController]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[Notification]]]] [SRC[[[Notifications API Standard]]]]
- [CODE(DOMi)@en[[[ApplicationCache]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[EventSource]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[WebSocket]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[MessagePort]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[BroadcastChannel]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[Worker]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[SharedWorker]]]] [SRC[[[HTML Standard]]]]
- [CODE(DOMi)@en[[[XMLHttpRequestEventTarget]]]] ([CODE(DOMi)@en[[[XMLHttpRequest]]]], [CODE(DOMi)@en[[[XMLHttpRequestUpload]]]]) [SRC[[[XHR]]]]
- [CODE(DOMi)@en[[[RTCPeerConnection]]]] [SRC[[[WebRTC]]]]
- [CODE(DOMi)@en[[[RTCDataChannel]]]] [SRC[[[WebRTC]]]]
- [CODE(DOMi)@en[[[IDBRequest]]]] [SRC[[[IndexedDB]]]]
- [CODE(DOMi)@en[[[IDBDatabase]]]] [SRC[[[IndexedDB]]]]
- [CODE(DOMi)@en[[[IDBTransaction]]]] [SRC[[[IndexedDB]]]]
]FIG]

* エラーの報告における対象

[18] [[エラーの報告]]においては、 [CODE(DOMe)@en[[[error]]]] [[イベント]]が[[ディスパッチ]]される[[オブジェクト]]が[[対象]]と呼ばれています。

[19] [[エラーの報告]]の[[対象]]となるのは、[[大域オブジェクト]]のみです。

[20] [[エラーの報告]]の[[対象]]には、[[エラー報告モード]]フラグがあります。

;; [21] 詳細は、[[エラーの報告]]の項を参照してください。

* 歴史

[4] [[DOM2]] や [[DOM3]] の頃は [CODE(DOMi)@en[[[EventTarget]]]] は他の[[インターフェイス]]と[[継承]]関係になく、
[[言語束縛]]依存の[[キャスト]]によって取得できるとされていました。 [[JavaScript]]
の場合は関係する[[オブジェクト]]に [CODE(DOMi)@en[[[EventTarget]]]]
のメソッドも生えている形になっていました。 (実装上は [CODE(DOMi)@en[[[Node]]]]
などの親クラスとなっていたようです。)

[5] [[WebIDL]] の時代になって [CODE[[[implements]]]] によって [[IDL]]
中にこれを記述できるようになりました。

[6] 更に [[DOM Standard]] により [CODE(DOMi)@en[[[Node]]]] などが[[継承]]する親インターフェイスとして記述されるようになりました
[SRC[>>2]]。

[REFS[
- [2] [CITE@en[Web Applications 1.0 r6378     Move the Web to a world where things that implement EventTarget just inherit from it. I, for one, now welcome our new EventTarget overlords.]]
( ([TIME[2011-08-06 08:43:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=6377&to=6378>
- [26] [CITE@en[Web Applications 1.0 r8609     align 'load' and 'unload' events since they have similar quirks in practice]] ([TIME[2014-05-07 07:16:00 +09:00]] 版) <http://html5.org/tools/web-apps-tracker?from=8608&to=8609>
- [28] [CITE@en[Web Applications 1.0 r8710 Use the 'target override' where appropriate]]
( ([TIME[2014-08-06 04:57:00 +09:00]] 版))
<http://html5.org/r/8710>
]REFS]

[35] [CITE@en[EventListenerOptions]]
([TIME[2015-07-06 23:03:09 +09:00]] 版)
<http://rbyers.github.io/EventListenerOptions/EventListenerOptions.html>

[36] [CITE@en[''''''[''''''whatwg'''''']'''''' DOM Events Proposal: EventListenerOptions 'mayCancel' for  improved scroll performance]]
([[Rick Byers]] 著, [TIME[2015-07-09 04:12:36 +09:00]] 版)
<https://lists.w3.org/Archives/Public/public-whatwg-archive/2015Jul/0018.html>

[37] [CITE[on() / off() sketch.]]
([TIME[2015-07-10 00:13:26 +09:00]] 版)
<https://gist.github.com/annevk/5238964>