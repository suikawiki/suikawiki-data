* 仕様書

[REFS[
- [3] [CITE@en-US[DOM Standard]] ([TIME[2013-04-26 20:00:45 +09:00]] 版) <http://dom.spec.whatwg.org/#interface-eventtarget>
]REFS]

* メンバー

[1] 
[FIG[
- [CODE(DOMm)@en[[[addEventListener]]]]
- [CODE(DOMm)@en[[[dispatchEvent]]]]
- [CODE(DOMm)@en[[[removeEventListener]]]]
]FIG]

[7] また [CODE(DOMi)@en[[[EventTarget]]]] は、それに関連付けられた[[イベント・リスナー]]のリストを有します。

;; [8] このリストは[[イベント]]の[[発火]]の際に使われます。個々の[[イベント・リスナー]]の追加や削除はできますが、含まれている[[イベント・リスナー]]の一覧を取得したり、含まれているかチェックしたりはできません。
([[DOM3イベント]]で提案されていましたが、用途がないとして削除されています。)

* 歴史

[4] [[DOM2]] や [[DOM3]] の頃は [CODE(DOMi)@en[[[EventTarget]]]] は他の[[インターフェイス]]と[[継承]]関係になく、
[[言語束縛]]依存の[[キャスト]]によって取得できるとされていました。 [[JavaScript]]
の場合は関係する[[オブジェクト]]に [CODE(DOMi)@en[[[EventTarget]]]]
のメソッドも生えている形になっていました。 (実装上は [CODE(DOMi)@en[[[Node]]]]
などの親クラスとなっていたようです。)

[5] [[WebIDL]] の時代になって [CODE[[[implements]]]] によって [[IDL]]
中にこれを記述できるようになりました。

[6] 更に [[DOM Standard]] により [CODE(DOMi)@en[[[Node]]]] などが[[継承]]する親インターフェイスとして記述されるようになりました。

[REFS[
- [2] [CITE@en[Web Applications 1.0 r6378     Move the Web to a world where things that implement EventTarget just inherit from it. I, for one, now welcome our new EventTarget overlords.]]
( ([TIME[2011-08-06 08:43:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=6377&to=6378>
]REFS]
