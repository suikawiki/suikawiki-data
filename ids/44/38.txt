[1] [CITE[Substituting malformed UTF-8 sequences in a decoder]], [TIME[2023-05-25T03:51:44.000Z]], [TIME[2009-08-30T06:43:28.142Z]] <https://web.archive.org/web/20090830064219/http://mail.nl.linux.org/linux-utf8/2000-07/msg00040.html>

[2] [CITE@en[PEP 383 – Non-decodable Bytes in System Character Interfaces | peps.python.org]], [TIME[2023-05-23T10:49:36.000Z]], [TIME[2023-05-25T03:51:52.145Z]] <https://peps.python.org/pep-0383/>

[3] [CITE@ja[Tanaka AkiraさんはTwitterを使っています: 「Python ではこれを surrogateescape というもので解決している。これは解釈できないバイトを Low Surrogate の一部 (DC80..DCFF) で表現する。正しい Unicode 文字列では、Low Surrogate が文字として現れることはないので、正しい文字と衝突しないし、UTF-8, UTF-16 などの表現も自然に拡張できる。」 / Twitter]], [TIME[午後8:28 · 2023年5月23日][2023-05-23T11:28:11.000Z]], [TIME[2023-05-25T03:39:21.000Z]] <https://twitter.com/tanaka_akr/status/1660970879344599040>