[2] [CITE[技術セミナー 1997]], [TIME[2023-07-30T03:09:17.000Z]], [TIME[1997-10-15T22:24:32.178Z]] <https://web.archive.org/web/19971015214216/http://bishamon.on.cs.keio.ac.jp/miyake/jbms/semina~1.htm>

[3] 
>>2

>
[PRE[
3. 13:35 - 13:50   実装規約小委員会活動概要         小町祐史
						    (実装規約小委員会委員長)
]PRE]

[1] [CITE[3. 実装規約小委員会活動概要]], [TIME[2023-07-30T02:38:39.000Z]], [TIME[1997-10-15T22:44:31.496Z]] <https://web.archive.org/web/19971015224140/http://bishamon.on.cs.keio.ac.jp/miyake/jbms/komach~1.htm>

>
-漢字集合J-BUCS(Basic Unified Character Set)の完成 

[4] >>2

>
[PRE[
6. 16:00 - 16:40   WG4活動報告
                   SDATAエンティティ, BUCS 等を     奥井康弘 (日本ユニテック)
		   用いた多言語文書交換
]PRE]

- [5] 
[TIME[2023-07-30T03:11:07.800Z]]
<https://web.archive.org/web/19971015214216/http://bishamon.on.cs.keio.ac.jp/miyake/jbms/97wg4.ppt>

[6] 
>>5 >>4 の発表資料[[パワーポイント]]ファイル。
現在のツールでは[[文字化け]]しまくるか変換失敗で[[読めません][読めなくなったファイル]]。さすがに [[MS]] の純正ソフトウェアなら正しく読めると信じたいところですが。

[7] 
当時の[[パワーポイント]]ファイルには[[コードページ]]情報が入っていないのでしょうかね。
それとも今の欧米製変換ツールが[[文字コード]]変換を[[サボっている][欧米中心主義]]だけなのでしょうか。

[8] 
ネタがネタだけに、歴史の皮肉というべきか、現代人の愚かさというべきか。

[9] 
失敗せず変換できるツールでテキストなり [[HTML]] なりで保存して ([[UTF-8]] になる)、
[[UTF-8]] から [[Windows-1252]] に変換したものを[[シフトJIS]]で読み込むと、
所々化け化けながらなんとか文意がわからなくもない程度には読めるようになります。



[10] >>5 WG4 実装規約小委員会、というところが ([[SGML]] & [[HyTime]] の) CJK多言語文書の文字の交換、文字の表示について検討していた、と。

[11] >>5 の検討していたモデルでは、
外部表現は既存の[[文字コード]]体系を利用 & [[SGML]] [[実体参照]] ([[SDATA実体]])
で記述し、
[[応用]]はその[[文字コード]]を内部コードに変換、
更には内部コードの文字と[[SDATA実体]]を
「コード - 共通文字 - グリフ」の対応表を使って共通文字に変換して更に[[グリフ]]を使って表示する、
とされていました。
具体的には [[DSSSL]] での利用が想定されました。


[12] 
[[SGML]] & [[DSSSL]] のオリジナルモデルでは曖昧な外部表現と内部表現のところが少し具体化している (もののやっぱりなんかふわっとしている)
ものの、伝統的な [[SGML]] の世界の[[文字コード]]観とあまり変わっていない気もしますね。

[13] 
[[参照処理モデル]]と比べるとまだ [[SGML]] 色が強いのと、内部コードが [[Unicode]]
固定とは言っていません (が [[BUCS]] を使うので実質 [[Unicode]] ではあります)。


[14] 
対応表 (「マッピング表」) は「韓国語用」「日本語用」「中国語用」のように用意しておくとのこと。

;; [15] この辺は [[Adobe]] の [[CMap]] に近い世界観かもしれません。
