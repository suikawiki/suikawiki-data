[26] 
[DFN[[RUBYB[語句化内容][phrasing content]]]]は、
[[文章]]やそれに準ずる[[段落]]内の構造を記述する[[要素]]です。

[27] 
かつては[DFN[[RUBYB[[[行内要素]]][inline element]]]] ([DFN[インライン要素]])
と呼ばれることもありましたが、明確化のため現在の名称となりました。

* 仕様書

[REFS[

- [24] 
[CITE@en-US-x-hixie[HTML Standard]], [TIME[2024-09-26T13:34:36.000Z]], [TIME[2024-09-29T02:18:25.273Z]] <https://html.spec.whatwg.org/#phrasing-content>

]REFS]

* 意味

[25] 
[[語句化内容]]は、
[[文書]]の[RUBYB[[[文章]]][text]]や、
[[文章]]を[[段落]]内の水準において[[マーク付け]]する[[要素]]です。
[SRC[>>24]]

[28] 
[[語句化内容]]の[RUBYB[[[連なり]]][run]]は、[[段落]]を形成します。 [SRC[>>24]]

-*-*-

[29] 
[[English]] の語 [[phrase]] ([[語句]]) は、
一般的には高々数個の[[単語]]の[[連なり]]を指していいます。
その [[-ing形]] [[phrasing]] は、
[[文章]]の特定の法則性のもとで[[語句]]のまとまりに区切ること ([[句節]]) や、
[[語句]]で表される[[言い回し]]を表して使われます。

[30] 
対して [[HTML]] における[[語句化内容]]の「語句化」は、
こうした[[自然言語]]的な特性とは独立した、
[[文書構造]]としての構成単位に着目しています。従って、
[[語句化内容]]である[[要素]]は[[自然言語]]の[[語]]や[[文]]より大きな単位にも、小さな単位にも、
それらの境界とは無関係に使えます。

[40] なお、初期の [[HTML]] の [[DTD]] での[[要素]]の分類の1つである [CODE[%phrase;]]
と現在の[[語句化内容]]は意味が少し違っています (>>41)。 

-*-*-

[31] 
[[語句化内容]]という概念は [CITE[HTML5]] 
で[[要素]]の[[内容モデル]]や分類が整理された際に導入されました。
それ以前の [CITE[HTML4]] や初期 [CITE[HTML5]]
はほぼ同じものを[[行内要素]]、[DFN[[RUBYB[行内内容][inline content]]]]のように言っていました。

[32] 
ここでいう[[行内]]とは語句化とほぼ同じ意味で使われていた語ですが、
[[CSS]] でも [CODE[display: inline]] に代表される[[行内]]の概念があり、
紛らわしいため [[HTML]] では使わなくなりました。

[33] 
[[行]]は [[CSS]] の[[行箱]]のような表示上の概念で、 [[HTML]] 
の[[文書構造]]には [WEAK[([CODE[br]] のような例外を除き)]] 直接出現しません。
[[語句化内容]]である[[要素]]は、[[行]]の境界とは無関係に使えます。

* 特殊ケース

[15] [[内容モデル]]が[[語句内容]]だけの[[要素]]や[[語句付け内容]]の一部の[[要素]]が除外されている場合の他に複雑な[[内容モデル]]のものがいくつかあります。

[16] [CODE(HTMLe)@en[[[ruby]]]] [[要素]]は[[語句付け要素]]の部分と [CODE(HTMLe)@en[[[rt]]]] [[要素]]や
[CODE(HTMLe)@en[[[rp]]]] [[要素]]の部分が混在しています。

[17] [[HTML文書]]中の [[SVG]] [CODE(XMLe)@en[[[title]]]] [[要素]]の[[内容モデル]]は [[SVG]]
仕様上の制約に加えて [[HTML]] の[[語句化内容]]とされています。

[3] [CODE(HTMLe)@en[[[meta]]]] [[要素]]は、[[属性]]次第で[[語句化要素]]となることもあります。

[4] [[テキスト]]は、[[語句化内容]]です。

[5] [[自律カスタム要素]]は、[[語句化内容]]です。

* 文脈

[21] [[語句化内容]]またはそれに近いものが使える非 [[HTML]] 構造:

- [[SRT]]
- [[escaped markup]]
- [[IIIFのHTML]]

* 関連

[6] [[語句化内容]]は、すべて[[フロー内容]]でもあります。

[SEE[ [[表現と構造の分離]] ]]

* 歴史

** 前史

[23] 
[[SGML応用]]では[[語句化内容]]相当の[[要素]]の表現にいくつかの流儀がありました。
そのうちの一派は
[[CERN SGMLguid]]
のように
[CODE[hp[VAR[n]]]]
[[要素]]群を使う方式でした。
[SEE[ [[hpn]] ]]

[34] 
[CODE[hp[VAR[n]]]] 
は
[VAR[n]]
によって[[太字]], [[斜体]]などの表示効果を割り当てて使われました。

[35] 
誕生当初の [[HTML]] は [[CERN SGMLguid]] から [CODE[hp[VAR[n]]]]
を引き継いだものの、実装と仕様化は不完全のまま保留状態でした。
[SEE[ [[HTML 1991]] ]]

** 語句化要素の誕生


[39] 
予約されていた [CODE(HTMLe)[hp[VAR[n]]]] 要素型群に代わって
語句のマークに使う語彙として [[DocBook]] や [[MIME]]
のものなどが候補に挙がりましたが、結局 [[GNU]] [[Texinfo]]
のものが中心に採用されました。
[CODE(HTMLe)[[[code]]]], [CODE(HTMLe)[[[var]]]],
[CODE(HTMLe)[[[em]]]], [CODE(HTMLe)[[[strong]]]],
[CODE(HTMLe)[[[b]]]], [CODE(HTMLe)[[[i]]]]
などが [[HTML]] に取り入れられました。

-*-*-

[93] 
[[Dan Connolly]] は[TIME[西暦1992(平成4)年][1992]]の半ば頃から、
[[HTML]] の仕様書と [[SGML DTD]] の作成に取り組んでいました。
[SEE[ [[HTML2]] ]]
年末に差し掛かる頃には、
当時の仕様書に未使用とだけ書かれていた [CODE[hp[VAR[n]]]]
の処理に取り掛かりました。

-[1312] 
[CITE@en[HTML DTD issues]], 
[DATA(.author)[[[Dan Connolly]]]],
[TIME(.published)[Thu, 19 Nov 92 04:37:23 CST][1992-11-19T04:37:23-06:00]],
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-08-12T08:33:49.120Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0068.html>
-- [58] 
[CITE[EMail Msg <9211191037.AA16353@pixel.convex.com>]] ([CODE[2007-07-02 21:23:37 +09:00]] 版) <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/315.html>


[91] >>1312 は[TIME[1992-11-19]]の [[DanC]] の投稿。
[[TimBL]] の仕様書で未使用とされている
[CODE[hp1]],
[CODE[hp2]],
[CODE[hp3]],
[CODE[hp4]],
[CODE[hp5]]
をどうするかについて、

- [95] prefer: [[TeX]] より
[CODE[em]],
[CODE[tt]],
[CODE[cite]]
- [96] could: 
O'Reilly/Hal [[DocBook]]
より
[CODE[Emphasis]],
[CODE[OopsChar]], 
[CODE[wordasword]],
[CODE[CiteBook]],
[CODE[Subscript]],
[CODE[Superscript]]

の2系統の案を提示しています。 [SRC[>>1312]]
これに対する返信は >>2612 の [[TimBL]] の返答と、 [[DocBook]] に賛成するものの2件。

[36] [[DanC]] のメールでは [[TeX]] と書かれているが、正確には [[Texinfo]]。

- [2612] 
[CITE@en[Re: HTML DTD issues]], 
[DATA(.author)[[[Tim Berners-Lee]]]],
[TIME(.published)[Thu, 19 Nov 92 14:32:11 +0100][1992-11-19T14:32:11+01:00]],
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-28T13:16:58.618Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0072.html>
- [1412] 
[CITE@en[Future plans for HTML]], 
[DATA(.author)[[[Tim Berners-Lee]]]],
[TIME(.published)[1992-12-02T18:35:56.000Z]], [TIME[2024-08-12T09:20:27.147Z]] <https://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/Future.html>


[92] 
>>2612 は >>91 に対する[TIME[1992-11-19]]の
[[Tim Berners-Lee]]
の返信。
[CODE[hp[VAR[n]]]]
の番号システムはよくないとしつつも、
絶対に十分ではないこと、例えば
CiteBook 
があるのに
CiteProgram
がない、ということを指摘しました。また、
[[DocBook]] の名前は長いのではないかと書いています。

[97] 
これだけでは真意を把握しかねるところもありますが、
ファイル日付が[TIME[1992-12-02]]の >>1412 にはより詳しい記述があります。
すなわち:

- [98] [CODE[hp[VAR[n]]]] は未実装
- [99] bold / italic / fixed width の highlighting は有用
- [100] 3案ある:
-- [101] Numbered HPn tags
--- [102] 意味がない (meaningless)、みんなどれが bold でどれが italic か覚えないといけない
-- [103] Logical tags
--- [104] >>95 >>96
--- [105] 絶対に十分ではないのでこれは bold になるのでとの理解で再利用することになるのが問題
-- [106] Physical tags
--- [107] [[MIME]] の [CODE[Bold]], [CODE[italic]] など
--- [108] bold, italic が利用できない環境では他の表現に置き換えられると理解しなければならない

[109] 
つまり、
[[DocBook]] のように論理的な要素をいくら用意したところで、
いくらでも漏れは出てきます。
例えば[[船名]]を[[斜体]]にしたくても、専用の[[要素]]がありません。
[[斜体]]になるものといえば [CODE[var]] があります。
そうなると[[船名]]は [CODE[var]] で表せばいいということになってしまいます。


[37] この [[TimBL]] の指摘は慧眼というべきで、 [CODE[blockquote]] 
が[[字下げ]]に使われる事案など、
この後の時代にそういうものを嫌と言うほど見せつけられることになる。

[38] [CITE[HTML5]] の時代になって [[Ian Hickson]] が[[物理要素]]の完全排除を断念して
[CODE[b]] や [CODE[i]] を新しい意味で復活させたのも、このときの [[TimBL]]
と同じ判断。


- [110] 
[CITE[MIME, SGML, UDIs, HTML and W3]], 
[[Tim Berners-Lee]],
Thu, 11 Jun 92 12:22:56 -0400,
[TIME[2003-08-04T15:50:20.000Z]], [TIME[2024-09-29T13:19:56.283Z]] <https://lists.w3.org/Archives/Public/www-talk/1992MayJun/0038.html>

[111] >>1412 の [[MIME]] への言及は、 [[MIME]] [CODE[text/richtext]] に関するものですが、
[[MIME]] と [[HTML]] の関係をどうするかが議論になっていた半年前の >>110 
の [[TimBL]] 記事の理解が土台となっていると思われます。

- [112] [[MIME]] と [[HTML]] は同じ段階: [[SGML]] っぽいけど [[SGML]] ではないもの
-- [113] [[MIME]] [CODE[text/richtext]] も [[SGML]] にするべき、簡単にできる
- [114] [[MIME]] [CODE[text/richtext]] と [[HTML]] を比べると、
-- [115] BOLD と ITALIC が [[HTML]] に足りていない
-- [116] [[HTML]] の論理的な見出し水準やその他の構造の扱いは、
フォントサイズを明示的に半ば参照する方式より、
異なるプラットフォームにおける比較的柔軟な書式付けを提供できることがわかっている
--- [117] [[TeX]] のかわりに [[LaTeX]] や他のマクロを使う場合などなど、
明示的な書式付けのかわりに名前付きスタイルを使うすべてのシステムで実証されている
-- [118] 技術的には [[HTML]] はいくらかのものを [[MIME]] [CODE[text/richtext]]
に与えられる
--- [119] [[MIME]] の人々は追加を望むか?
--- [120] 望まないなら、
---- [121] [[HTML]] は [[MIME]] [CODE[text/richtext]] とは別にする
---- [122] [[HTML]] に BOLD と ITALIC (または2つの文字強調スタイル) を追加する
---- [123] [[HTML]] を [[MIME]] text standard の1つとして提案する
- [124] なお [[HTML]] 仕様の [CODE[hp0]], [CODE[hp1]] は未実装

[127] [CODE[text/richtext]] には [CODE[bold]], [CODE[italic]] の他にも文字サイズ、
改行改頁、ページヘッダー・フッター、下線などの機能がありますが、
[[HTML]] に欠けているのは [CODE[bold]] と [CODE[italic]] というのが [[TimBL]]
の判断だったようです。

[128] 
[[SGML]] の設計原理である[[一般化マーク付け]]の考え方が、ここで明確に [[HTML]]
の従うべき方針として言語化されていることに注意したいです。
これが初出でしょうか (探せばもっと前にもあるかも)。

[129] 
[[TimBL]] が [[SGML]] や [[LaTeX]] や [[Texinfo]]
の設計方針をよく理解していたのか、それとも
[[NeXTSTEP]] の [[WorldWideWeb]] と各[[プラットフォーム]]の
[[Line Mode Browser]] とその他の[[Webブラウザー]]が既にあって、
利用できる[[フォント]]その他の条件がまったく異なる環境でも機能しなければならない、
という現実的制約から必然的に同じ結論に導かれたのかはわかりませんが。
[[WorldWideWeb]] が[[スタイルシート]]機能を持っていたので、基礎的な考え方は
[[SGML]] から引き継いだのかもしれません。

;; [130] 逆に [[MIME]] がなんであれだけ思いっきり[[物理マーク付け]]に走ったのか。
やっぱり実装の容易さでしょうか。 [[MUA]] 
も負けず劣らずいろいろな環境を考慮しなければならなかったはずですが...
[[WWW]] は母体となる [[CERN SGMLguid]]
があったからというのは大きいのでしょうが、
[CODE[text/richtext]]
も思いっきり [[SGML]] 風の構文を採用したからには、設計者は何かしらの 
[[SGML応用]]に接する環境にはいたはずですよね。

;;
[132] 
[[WWW]] は最初から高度な [[GUI]] の [[NeXTSTEP]] と一般的なテキスト環境の両方があった、
というところで判断が分かれたのでしょうかね。


[94] 
[TIME[1992-11-30]]付仕様書、
[TIME[1992-12-03]]付 [[DTD]] が現存します ([SEE[ [[HTML2]] ]]) が、 [CODE[hp[VAR[n]]]]
も新要素も入っていません。



-[57] 
[CITE[EMail Msg <9211301327.AA05269@pixel.convex.com>]] ([CODE[2007-07-02 21:17:14 +09:00]] 版) <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/370.html>
-- [133] [CITE[An HTML specification and Implementors' Guide]], 
[[Dan Connolly]],
Mon, 30 Nov 92 07:27:01 CST,
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-29T14:14:20.340Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0123.html>

[134] >>133 の[TIME[1992-11-30]]付 [[DanC]] のメールには、
未決の課題が挙げられています。

>
[PRE[
Highlighting: Who's tags should we use? LaTeX seems to be an adequate
markup system for lots of folks. Its tags are
	em | it | bf | sf | sl | tt

The DocBook folks use only semantic tags: they don't have bold or italic
tags. The MIME richtext stuff has only typographic tags: no <emphasis>
or <booktitle> or any such thing.
]PRE]


[135] 
つまり、この時点ではまだ未決で、

- [136] [[LaTeX]] は多くの人に十分なもの : 
[CODE[em]], [CODE[it]], [CODE[bf]], [CODE[sf]], [CODE[sl]], [CODE[tt]]
- [137] [[DocBook]] は[RUBYB[意味的][semantic]]なものだけ
-- bold, italic がない
- [138] [[MIME]] [CODE[text/richtext]] は [[typographic]] なものだけ
-- emphasis, booktitle などがない

と決めかねていました。



- [139] 
[CITE[The spec evolves...]], 
[[Dan Connolly]],
Fri, 04 Dec 92 13:11:32 CST,
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-29T14:23:11.923Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0155.html>

[140] >>139 は[TIME[1992-12-04]]のメールですが、
[TIME[1992-12-02]]版 [[HTML]] 仕様をアップロードした旨の案内で、
[[DTD]] の変更を説明しています。

[142] >>139 は変更点として[[SGML宣言]]を変更して

>
[PRE[
	<bold/foo bar/   in stead of
	<bold>foo bar</bold>
]PRE]

のような省略形 ([CODE[SHORTTAG]]) を禁止することにしたとしています。
実態に合わせたものですが、 >>56 とも関係します。

[143] 
ここでなぜ [CODE[bold]] を例示に出したのかは謎です。
現存する前後の [[DTD]] には [CODE[bold]] の定義がありません (>>94)。
そのものが現存しない[TIME[1992-12-02]]版にはあるいは含まれていた可能性もありますが、
>>139 が変更点として挙げていないのでもっと前に追加されたことになり、
しかし[TIME[1992-11-30]]より後となりますから、かなり無理があります。

[144] ともかく追加候補として [CODE[bold]] が念頭にあったというくらいは言えるでしょうか。


-[59] 
[CITE[EMail Msg <9212070355.AA05717@pixel.convex.com>]] ([CODE[2007-07-02 21:27:49 +09:00]] 版) <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/412.html>
-- [76] 
[CITE[Re: The spec evolves...]], 
[[Dan Connolly]],
[TIME[Sun, 06 Dec 92 21:55:04 CST][1992-12-06T21:55:04-06:00]],
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-29T14:44:28.577Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0165.html>


[60] 
>>59 の[TIME[1992-12-06]]の [[DanC]] のメールは、
[TIME[1992-12-07]]の [[Texinfo]]
に言及したメール ([[時差]]の関係でこちらが先)
に触発されて次のように書いています。

> Yea! TeXinfo is a Good Thing, and I think it's highly appropriate
that W3 support it as an authoring environment. The beauty of TeXinfo
is that it's _not_ a programming language like TeX or troff. That
makes it possible to develop correct translators. (Otherwise you
run into the halting problem... it's everywhere!)
> I studied the TeXinfo documentation for a couple hours before I
released the last version of the HTML spec. The major feature
of TeXinfo lacking in HTML is character-level formatting (font
changes.)
> There were a few TeXinfo commands (@ctrl for one) that don't
fit the HTML mold. So I looked at the LaTeX options: em, tt, bd, sl, sf
and the DocBook options, and nroff, and decided I didn't have
time to choose the right set.
>[I'm also keeping MS Word (RTF) and FrameMaker (MIF) in mind.]

[90] これによると

- [145] HTML の仕様書の最新版を release した前の数時間で [[Texinfo]]
を研究した
-- [146] [[Texinfo]] にあって [[HTML]] に欠けたる大きな機能は文字レベルの書式付け
(フォント変更)
-- [147] [[HTML]] になじまないものもいくつかあった、例えば [CODE[@ctrl]]
--- [148] そこで [[LaTeX]] ([CODE[em]], [CODE[tt]], [CODE[bd]], [CODE[sl]], [CODE[sf]]),
[[DocBook]], [[nroff]] も見た
---- [149] が、どれがいいか選ぶ時間がなかったことにした
- [150] [[Microsoft Word]] [[RTF]] や [[FrameMaker]] [[MIF]] も念頭にある

とのことです。

[151] 
このメールの前に仕様書を公開したとのことですが、
それは送信の直前と解するべきでしょうか。
返信元のメールが [TIME[Mon, 07 Dec 1992 01:07:52 +0100][1992-12-07T01:07:52+01:00]],
このメールが [TIME[Sun, 06 Dec 92 21:55:04 CST][1992-12-06T21:55:04-06:00]]
で、この間4時間弱です。
一応このメールの内容とは合致します。

[152] 
それとも[TIME[1992-12-04]]の仕様公開前の数時間と解するべきなのでしょうか。
[TIME[1992-12-07]]付[[メール]]で [[Texinfo]] に思い至ったわけではなく、
元からちょうど調べていたところで、
その時は何も書かなかったものの、 [[Texinfo]] の話題が出たから詳しく書いたということでしょうか。

;; [159] 
この前後、仕様の新版公表時にメールで変更点を送っているので、このときだけサイレントで新版を公開したとは考えにくく、
となると[TIME[1992-12-04]]説が妥当か。


[153] >>148 の
「そこで」のつながりもあまりよくわかりません。
[[Texinfo]] が良さげだと思ったものの、
[CODE[@ctrl]] のように [[HTML]] に完全にはフィットしないので、
他にもっといいものがないか探したということでしょうか。

[154] 
この書き方だと、結局 [[Texinfo]] はこの時点でまだ仕様書に追加してはいなかったということになるのでしょうか。
だとすると[TIME[1992-12-04]]説の方が妥当な解釈でしょうか。

[155] 
とわからないことだらけではありますが、 [[DanC]] がこれまでに[[メーリングリスト]]で挙げられていたもの以外にもいろいろな[[文書形式]]を調べていた(調べようとしていた)ことがわかります。

;; [160] 他にこの時期に別言語から [[HTML]] に追加しようとしたものに、
[CODE[blockquote]],
[CODE[typewriter]] があります。 [SEE[ [[blockquote]], [[<typewriter>]] ]]

-[55] 
[CITE[EMail Msg <9212090000.AA00605@pixel.convex.com>]] ([CODE[2007-07-02 20:33:40 +09:00]] 版) <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/428.html>
-- [125] [CITE[HTML: use SGML keyboarding features?]], 
[[Dan Connolly]],
Tue, 08 Dec 92 18:00:38 CST,
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-29T13:59:21.639Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0181.html>


[56] >>55
[[Dan Connolly]] の、[[語句要素]]を入力するのが面倒なので
[CODE(SGML)@en[[[SHORTTAG]]]] を使えるようにしませんかという提案。
[[TimBL]] の返信は否定的で、採用されず。

[126] >>125 に示された[TIME[1992-12-08]]時点の [[DanC]] 案は、

>
[PRE[
As I was adding phrase-level elements (from TeXinfo:
em, strong, code, file, cite, etc.) [SNIP[]]
]PRE]

とあり、 [[Texinfo]] 由来で 
[CODE[em]],
[CODE[strong]],
[CODE[code]],
[CODE[file]],
[CODE[cite]]
等を追加しようとしていたそうです。


- [156] 
[CITE@en[new HTML spec, sample implementation]],
[[Dan Connolly]],
Wed, 06 Jan 93 19:23:43 CST,
[TIME[1995-08-08T03:09:16.000Z]], [TIME[2024-09-29T15:16:58.716Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/10.html>

[77] >>156
このときの仕様書は現存が確認されていませんが、 [[DTD]] は
[CODE[html.dtd,v]] に 1.3 93.01.07.00.38.36 があります。

>
[PRE[
 $Id: html.dtd,v 1.3 93/01/06 18:38:10 connolly Exp Locker: connolly $
]PRE]

とあります。

[75] >>156 には

>
[PRE[
Now about that last few changes to the HTML spec...

INLINE ELEMENTS

I added <em>, <samp>, <code>, and several other elements,
inspired by TeXinfo. We need these to support conventional
technical documentation. The list is not exhaustive, but
I think it's pretty good.
]PRE]

と変更点があり、このときの仕様書に初めて [[Texinfo]] に着想を得た要素群が追加されたようです。

[182] 
>>75 は inline elements という表現の初出でしょうか。

[157] >>77 によると [[DTD]] への追加分は

>
[PRE[
<!ENTITY % inline "EM | TT | STRONG | B | I | U |
                        CODE | SAMP | KBD | KEY | VAR | DFN | CITE "
        >
]PRE]

でした。


[78] 
この時に texinfo から Dan の html.dtd に輸入されたのは 
[CODE(HTMLe)[code]], [CODE(HTMLe)[[[samp]]]],
[CODE(HTMLe)[[[kbd]]]], [CODE(HTMLe)[[[key]]]], [CODE(HTMLe)[[[var]]]], [CODE(HTMLe)[[[dfn]]]], 
[CODE(HTMLe)[[[cite]]]] です。
そのうちの [CODE(HTMLe)[dfn]] と [CODE(HTMLe)[key]] は数奇な運命をたどっております。 
(それぞれの説明を参照されたし。)

[79] 
1992年12月3日 → 1993年1月6日で
[CODE(SGML)@en[%[[inline]];]] として追加されたのは:
[CODE(HTMLe)@en[[[em]]]], [CODE(HTMLe)@en[[[tt]]]],
[CODE(HTMLe)@en[[[strong]]]], [CODE(HTMLe)@en[[[b]]]],
[CODE(HTMLe)@en[[[i]]]], [CODE(HTMLe)@en[[[u]]]],
[CODE(HTMLe)@en[[[code]]]], [CODE(HTMLe)@en[[[samp]]]],
[CODE(HTMLe)@en[[[kbd]]]], [CODE(HTMLe)@en[[[key]]]],
[CODE(HTMLe)@en[[[var]]]], [CODE(HTMLe)@en[[[var]]]],
[CODE(HTMLe)@en[[[dfn]]]], [CODE(HTMLe)@en[[[cite]]]]。



-[158] 
[CITE@en[Re: new HTML spec, sample implementation]],
[[Dan Connolly]],
Date: Mon, 11 Jan 93 17:20:08 CST,
[TIME[1995-08-08T03:09:22.000Z]], [TIME[2024-09-29T15:31:02.858Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/36.html>


[161] >>158 の[TIME[1993-01-11]]の [[DanC]] の投稿は何気に重要記事で、
追加要素に関する [[GNU Texinfo]] のドキュメント該当部分を引用しています。
ここから追加当時の
[CODE[code]],
[CODE[samp]],
[CODE[kbd]],
[CODE[key]],
[CODE[var]],
[CODE[dfn]],
[CODE[cite]],
[CODE[@emph]] ([CODE[em]]),
[CODE[strong]],
[CODE[i]],
[CODE[b]]
の想定された用法を知ることができます。

[162] 注意したいのは、

- [163] [CODE[@ctrl]]
がこの引用には含まれない
- [164] 
「[I left @file out of HTML -- can't remember why.]」
- [165] [CODE[@emph]] があるが追加されたのは [CODE[em]]
- [166] [CODE[@t]] がこの引用にはある ([CODE[tt]] に相当するがこのとき
[CODE[tt]] は追加されていない)
- [167] [CODE[u]] がこの引用にはない

という点でしょうか。

[168] [CITE[EMail Msg <9301120436.AA00126@pixel.convex.com>]], [TIME[1995-08-08T03:09:23.000Z]], [TIME[2024-09-30T08:19:27.229Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/39.html>

>
[PRE[
42. (Definition of these and reference
- Dan?)
They come from TeXinfo.

43. I left the TeXinfo @file element out. I don't remember why.
It might have been an oversight. Do we want it in there?
]PRE]

[NOTE[
[169] 当項目の主題とは関係ないがこういうのも:

>
[PRE[
4. HTML should support QUESTION and RESPONSE elements to
support converting USENET FAQ's to HTML
]PRE]

- [170] [CITE[EMail Msg <9301121728.AA01295@www3.cern.ch>]], [TIME[1995-08-08T03:09:23.000Z]], [TIME[2024-09-30T08:24:59.165Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/44.html>
- [171] [CITE[EMail Msg <9301121901.AA15286@pixel.convex.com>]], [TIME[1995-08-08T03:09:24.000Z]], [TIME[2024-09-30T08:26:19.911Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/46.html>
- [172] 
[CITE[EMail Msg <9301122142.AA13427@soccer.cis.ohio-state.edu>]], [TIME[1995-08-08T03:09:24.000Z]], [TIME[2024-09-30T08:27:20.293Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/47.html>


]NOTE]


[173] >>177 [TIME[1993-01-14]]の [[TimBL]]:
>
[PRE[
> 43. I left the TeXinfo @file element out. I don't remember why.
> It might have been an oversight. Do we want it in there?

No too sepcific. We have enough.
]PRE]


;; [174] これが too specific だというなら、他のも too specific なのでは、
という疑問がないでもない。どこに線を引くのかは難しい問題。



[180] ちなみに >>177 は [[man]] の [[HTML]] 化のために
[CODE[pre]] の中で [CODE[b]], [CODE[i]], [CODE[u]]
が必要という [[TimBL]] の認識を示していて、これらの[[要素]]が必要と考えられた理由の1つが知られます。


[80] 
>>79
1993年5月の [[GNU]] [[Texinfo]] 3.1 のマニュアルの[[語句要素]]相当の部分と比較すると:
- [CODE@en[[[emph]]]] が [[HTML]] では [CODE(HTMLe)@en[[[em]]]]
- [CODE@en[[[t]]]] が [[HTML]] では [CODE(HTMLe)@en[[[tt]]]]
- [[Texinfo]] にはない [CODE(HTMLe)@en[[[u]]]]
- [[HTML]] にはない [CODE@en[[[file]]]] と
[CODE@en[[[ctrl]]]] (ただし [[Texinfo]] [[マニュアル]]では非表示になっている)
と [CODE@en[[[r]]]] と [CODE@en[[[sc]]]]

という違いがあります。 [CODE@en[[[ctrl]]]] は [[HTML]]
には相応しくなかろうと [[Dan Connolly]] が発言しています。
[CODE@en[[[r]]]] と [CODE@en[[[sc]]]] は
[[Texinfo]] 2 の新機能と [CODE(file)@en[[[NEWS]]]]
に書いてあるので、もしかすると Dan
が参照した版には入っていなかったのかもしれません
(し、入っていたけど[[フォント]]を直接指定するものはあえて除外したのかもしれません)。
([[名無しさん]])

[82] 
予想ですが、 [CODE(HTMLe)@en[[[em]]]] は
[CODE@en[[[emph]]]] では長すぎるから 
([[LaTeX]] より拝借)、 [CODE(HTMLe)@en[[[tt]]]] は
[CODE@en[[[t]]]] では短すぎるから (それほど使わなそうな割に)、
[CODE(HTMLe)@en[[[u]]]] は [[Microsoft Word]]
に [CODE(HTMLe)@en[[[b]]]] と [CODE(HTMLe)@en[[[i]]]]
と一緒にあるから、というような理由ではないでしょうか。
([[名無しさん]])

[83] 
んー、でも [[RTF 1.0]] に含まれているのは [CODE@en[\u]] ではなく
[CODE@en[\[[ul]]]] だ。。。
([[名無しさん]])

[84] 
[CODE(HTMLe)@en[[[em]]]] が略されて [CODE(HTMLe)@en[[[strong]]]]
が略されなかったのはなぜでしょう。 [[LaTeX]]
になかったから?

[179] 
>>148 にあるように [[DanC]] が [[LaTeX]] を検討していて、そこに
[CODE[em]] と [CODE[tt]] があります。理由はわかりませんが、
この2つだけは [[LaTeX]] から採られたと考えて間違いなさそうです。






[FIG(data)[ [43] [[HTML要素概説]]

:[F[要素名]]:[CODE[hp1]]
:[F[要素名]]:[CODE[hp2]]
:[F[要素名]]:[CODE[hp3]]
:[F[要素名]]:[CODE[hp4]]
:[F[要素名]]:[CODE[hp5]]
:[F[要素名]]:[CODE[em]]
:[F[要素名]]:[CODE[cite]]
:[F[要素名]]:[CODE[tt]]
:[F[要素名]]:[CODE[b]]
:[F[要素名]]:[CODE[i]]
:日付:[TIME[1992-11-19]]
:説明:
[TIME[1992-11-19]]、
[[Dan Connolly]]
は [[WWW-Talk]] への投稿で、
[CODE[hp1]],
[CODE[hp2]],
[CODE[hp3]],
[CODE[hp4]],
[CODE[hp5]]
を [[HTML DTD]] に含めるべきかと尋ねた。
[[Dan Connolly]] は、
[[Texinfo]] 風の
[CODE[em]],
[CODE[tt]],
[CODE[cite]]
を導入する案や、
[[DocBook]]
から
[CODE[Emphasis]],
[CODE[OopsChar]], 
[CODE[wordasword]],
[CODE[CiteBook]],
[CODE[Subscript]],
[CODE[Superscript]]
を借用する案を提示している。
[SRC[>>131]]
:説明:
[[Tim Berners-Lee]]
は、この方針に基本的には同意しながらも、それらだけではすべてを賄えず、
足りないものは
「これは太字になるから」
との思考で代用されるだろうと予想し、
[CODE[text/richtext]]
の
[CODE[bold]],
[CODE[italic]]
にも興味を示している。
[SRC[>>261]]
[SRC[>>141]]
:出典:
[REFS[

-[131] 
[DFN[HTMLDTDIssuesDanC]]:
[CITE@en[HTML DTD issues]], 
[DATA(.author)[[[Dan Connolly]]]],
[TIME(.published)[Thu, 19 Nov 92 04:37:23 CST][1992-11-19T04:37:23-06:00]],
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-08-12T08:33:49.120Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0068.html>
- [261] 
[DFN[HTMLDTDIssuesTimBL]]:
[CITE@en[Re: HTML DTD issues]], 
[DATA(.author)[[[Tim Berners-Lee]]]],
[TIME(.published)[Thu, 19 Nov 92 14:32:11 +0100][1992-11-19T14:32:11+01:00]],
[TIME[2003-08-04T15:50:21.000Z]], [TIME[2024-09-28T13:16:58.618Z]] <https://lists.w3.org/Archives/Public/www-talk/1992NovDec/0072.html>
- [141] 
[DFN[HTMLFuturePlans]]:
[CITE@en[Future plans for HTML]], 
[DATA(.author)[[[Tim Berners-Lee]]]],
[TIME(.published)[1992-12-02T18:35:56.000Z]], [TIME[2024-08-12T09:20:27.147Z]] <https://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/Future.html>

]REFS]


]FIG]




[FIG(data)[ [19] [[HTML要素概説]]

:[F[要素名]]:[CODE[em]]
:[F[要素名]]:[CODE[tt]]
:[F[要素名]]:[CODE[strong]]
:[F[要素名]]:[CODE[b]]
:[F[要素名]]:[CODE[i]]
:[F[要素名]]:[CODE[u]]
:[F[要素名]]:[CODE[code]]
:[F[要素名]]:[CODE[samp]]
:[F[要素名]]:[CODE[kbd]]
:[F[要素名]]:[CODE[key]]
:[F[要素名]]:[CODE[var]]
:[F[要素名]]:[CODE[dfn]]
:[F[要素名]]:[CODE[cite]]
:日付:[TIME[1993-01-06]]
:説明:
[TIME[1993-01-06]]版 [[HTML DTD]] に含まれていた。
[TIME[1992-12-03]]版 [[HTML DTD]] にはまだ含まれていなかった。
[SRC[HTML19921203]]
[SRC[HTML19930106]]

]FIG]

[42] [TIME[1993-01-06]]版 [[HTML DTD]] では
[DFN[[CODE[%inline;]]]]
に分類されていました。
[CODE[%inline;]] と [CODE[#PCDATA]] が [DFN[[CODE[%inline;]]]] とされていました。

[41] [TIME[1994-04-09]]版 [[HTML DTD]] から [CODE[%inline;]] が細分化されました。
これによって次のような階層関係になりました。

- [44] [CODE[%text;]]
-- [45] [CODE[#PCDATA]]
-- [46] [CODE[img]]
-- [47] [CODE[br]], [[お尻[CODE[p]]]]
-- [48] [DFN[[CODE[%font;]]]] - いわゆる[[物理要素]]
-- [49] [DFN[[CODE[%phrase;]]]] - いわゆる[[論理要素]]

[50] この [[DTD]] での使われ方を分析すると、どうやら [CODE[pre]] と[[物理要素]]、
[CODE[pre]] 以外と[[論理要素]]、という組み合わせに限定しようと考えていたようです。

[51] [CODE[pre]] との組み合わせはその後断念されますが、
このときの[[物理要素]]と[[論理要素]]の区別は [[HTML4]] まで残りました。


[86] 関連: [CODE[key][<key>]],
[CODE[cite]]

- [178] [CITE[EMail Msg <9301120436.AA00126@pixel.convex.com>]], [TIME[1995-08-08T03:09:23.000Z]], [TIME[2024-09-30T08:55:51.184Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/39.html>
- [177] [CITE@en[Re: HTML todo list]], 
[[Tim Berners-Lee]],
Thu, 14 Jan 93 18:02:07 +0100,
[TIME[1995-08-08T03:09:27.000Z]], [TIME[2024-09-30T08:52:00.112Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/64.html>
-[175] [CITE[EMail Msg <9301142323.AA26924@pixel.convex.com>]], [TIME[1995-08-08T03:09:27.000Z]], [TIME[2024-09-30T08:49:00.000Z]] <https://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/66.html>


[176] >>175 [CODE[pre]] の中で制限するしない問題


*** Texinfo からの借用

[201] 
[[DanC]] が明言しているように最初に追加された[[語句化内容]][[要素]]群は基本的に
[[Texinfo]] からの[[借用]]です (>>161)。  

[202] 
[[DanC]] が参照した [[Texinfo]] のドキュメントからの引用がありますが [SRC[>>158]]、
改めて当時のドキュメントを確認してみます。
[[DanC]] が参照したものがどのように入手したどのドキュメントだったのかまでは不明ですが、
当時の
[[GNU Texinfo]]
のドキュメントは
[[GNU Emacs]]
に同梱されて配布されていて、現在も近い時期のものが残っています。

- [203] 
[CITE@en[emacs-history/ftp.gnu.org/old-gnu/emacs/emacs-18.59.tar.gz at sources · larsbrinkhoff/emacs-history · GitHub]], [TIME[2024-09-30T13:44:44.000Z]] <https://github.com/larsbrinkhoff/emacs-history/blob/sources/ftp.gnu.org/old-gnu/emacs/emacs-18.59.tar.gz>

[204] >>203 のファイルの中身のファイルの日付は、 [CODE[ChangeLog]]
が[TIME[1992-10-31]]となっています。他はそれより古いファイルです。

[205] [CODE[man/texinfo.texi]] という日付が[TIME[1990-09-26]]のファイルがあります。
[CITE@en[Texinfo 1.1]]
と題されており、

>
[PRE[
This file documents Texinfo, a documentation system that uses a single
source file to produce both on-line help and a printed manual.  

This is edition 1.1 of the Texinfo documentation, and is for the Texinfo
that is distributed as part of Version 18 of GNU Emacs.

Copyright (C) 1988 Free Software Foundation, Inc.
]PRE]

>
[PRE[
@center The GNU Documentation Format
@sp 2
@center by Richard M. Stallman and Robert J. Chassell
@sp 2
@center Edition 1.1
@sp 2
@center May 1988
]PRE]

と冒頭にあります。

[206] その内容を見ると、 [[DanC]] の引用とよく似た箇所があります。
引用した部分以外にも多くの説明があります。分量が多いですが、
重要なので引いておきます。

[207] いわゆる[[論理要素]]に相当するもの:

>
[PRE[
@section Specifying Definitions, Files, Commands etc.
@cindex Highlighting
@cindex Specifying commands, files and the like
@cindex Definitions, specifying them within text
@cindex Commands, specifying them within text
@cindex Files, specifying them within text

Texinfo has a variety of commands for specifying just what kind of object a
piece of text refers to.  Metasyntactic variables, for example, are marked
by one @@-command and code by another.  Texinfo uses this information to
determine how to highlight the text.  Since the pieces of text are labelled
by commands that tell what kind of object they are, it is easy to change
the way Texinfo formats and typesets such text.  For example, code is
usually illustrated in a typewriter font, but it would be easy to change
the way Texinfo highlights code to use another font.  This change would not
effect how metasyntatic variables are highlighted.  If straight typesetting
commands were used in the body of the file, you would have to check every
single occurrence to make sure that you were changing code and not
something else that should not be changed.

In addition, the commands can be used to generate useful information from
the file, such as lists of functions or file names.  It is possible, for
example, to write code in Emacs Lisp (or a keyboard macro) to insert an
index entry after every paragraph that contains the text labelled by a
specified command.  You could do this to construct an index of functions if
you had not already made the entries.

The commands serve a variety of purposes:

@table @code
@item @@code
Indicates text that is a literal example of a piece of a program.@refill

@item @@samp
Indicates text that is a literal example of a sequence of characters.@refill

@item @@file
Indicates the name of a file.@refill

@item @@kbd
Indicates the names of keys on the keyboard or characters you type.@refill

@item @@key
Used for the conventional name for a key on a keyboard.@refill

@item @@ctrl
Indicates an ASCII control character.

@item @@var
Indicates a metasyntactic variable.

@item @@dfn
Indicates the introductory or defining use of a term.

@item @@cite
Indicates the name of a book.
@end table



@menu
* Code::	A literal example of a piece of a program.
* Samp::	A literal example of a sequence of characters.
* File::	The name of a file.
* Kbd::		The names of keys or else characters you type.
* Key::		The conventional name for a key on a keyboard.
* Ctrl::	Indicates the ASCII control character.
* Var::		A variable.
* Dfn::		The introductory or defining use of a term.
* Cite::	The name of a book.
@end menu

@node     Code, Samp, , Specifying
@comment  node-name,  next,  previous,  up
@subsection @@code
@findex code

@code{@@code} is used to indicate text that is a piece of a program which
consists of entire syntactic tokens.  The text follows, enclosed in braces.

For example, @code{@@code} is used for an expression in a program, the name
of a variable or function used in a program, or a keyword.  @code{@@code}
is not used for a piece of a token, such as when speaking about the
characters used in a token; for example, when you are explaining what
letters or printable symbols can be used in the names of functions.  It is
also not used for input to programs unless the input is written in a
language that is like a programming language.  For example, it is not used
for the single character commands of GNU Emacs although it is used for the
names of Emacs Lisp functions that the keyboard commands invoke.

You should also @code{@@code} for command names in command languages that
resemble programming languages, such as Texinfo or the shell.  Note,
however, that @code{@@code} is not used for options such as @samp{-c} when
such options stand alone.  There is some argument as to whether an entire
shell command incorporating an option should be written using @code{@@code}
or @code{@@samp}.@refill

It is an error to alter the case of a word inside an @code{@@code}
command.  This is a particularly insidious error if the language being
documented is case sensitive.  If the command is @code{printf}, then
@code{Printf} is a misspelling.  If you do not like having such a command
with lower case at the beginning of a sentence, you may wish to rearrange
the sentence.

In the printed manual, @code{@@code} puts the argument in bold face.
In the Info file, it uses `@dots{}' quotation.  For example:

@example
To compare two files, showing text inserted or removed, use @@code@{diff@}.
@end example

@noindent
produces

@quotation
To compare two files, showing text inserted or removed, use @code{diff}.
@end quotation

@iftex
In the Info file, it looks like this:

@example
@dots{}, use `diff'
@end example
@end iftex

@node     Samp, File, Code, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@samp
@findex samp

@code{@@samp} is used to indicate text that is a literal example of a
sequence of characters in a file, string, pattern, etc.  The text follows,
enclosed in braces.  The argument appears within `@dots{}' quotation in
both the Info file and the printed manual; in addition, it is printed in a
fixed-width font.

@example
To match @@samp@{foo@} at the end of the line, use the regexp @@samp@{foo$@}.
@end example

@noindent
produces

@quotation
To match @samp{foo} at the end of the line, use the regexp @samp{foo$}.
@end quotation

Any time you are referring to single characters, you should use @code{@@samp}
unless @code{@@kbd} is more appropriate.  Basically, @code{@@samp} is a
catchall for whatever is not covered by @code{@@code}, @code{@@file},
@code{@@kbd}.

Punctuation marks that are part of the English text that surrounds the
strings you are specifying are @emph{never} included within the braces.  In
the following sentence, for example, the commas and period are outside of
the braces:

@example
A symbol name ends in @@samp@{a@}, @@samp@{b@}, or @@samp@{c@}.
@end example

@node     File, Kbd, Samp, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@file
@findex file

@code{@@file} is used to indicate text that is the name of a file or
directory.  Currently, it is equivalent to @code{@@samp} in its effects on
the output.  For example,@refill

@example
The @@file@{.el@} files are in 
the @@file@{/gnu/emacs/lisp@} directory.
@end example

@noindent
produces

@quotation
The @file{.el} files are in 
the @file{/gnu/emacs/lisp} directory.
@end quotation

@node     Kbd, Key, File, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@kbd
@findex kbd

@code{@@kbd} is used much like @code{@@code}.  The difference is that
@code{@@kbd} is for names of keys on the keyboard, or of characters you can
type.  For example, to refer to the command @kbd{M-a}, you would use

@example
@@kbd@{M-a@}
@end example

@noindent
and to refer to @kbd{M-x shell}, you would use

@example
@@kbd@{M-x shell@}
@end example

The @code{@@kbd} command has the same effect as @code{@@code} in Info,
but may produce a different font in a printed manual.@refill

You can embed another @@-command inside the braces of a @code{@@kbd}
command.  This is the way to describe a command that would be described
more verbosely as ``press an @samp{r} and then press the @key{RET} key'__&&'&&__:

@example
@@kbd@{r @@key@{RET@}@}  
@end example

@noindent
This produces: @kbd{r @key{RET}}

You also use the @code{@@kbd} command if you are spelling out the letters
you type; for example:

@example
To give the @@code@{logout@} command, 
type the characters @@kbd@{l o g o u t @@key@{RET@}@}.
@end example

@noindent
This produces

@quotation
To give the @code{logout} command, 
type the characters @kbd{l o g o u t @key{RET}}.
@end quotation

@node     Key, Ctrl, Kbd, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@key
@findex key

@code{@@key} is used for the conventional name for a key on a keyboard, as
in

@example
@@key@{RET@}
@end example

Often, @code{@@key} is used within the argument of a @code{@@kbd}
command, whenever the sequence of characters to be typed includes one or
more keys that are described by name.@refill

For example, to produce @kbd{C-x @key{ESC}} you would use 

@example
@@kbd@{C-x @@key@{ESC@}@}
@end example


The recommended names to use for keys are in upper case and are

@table @t
@item SPC
Space.
@item RET
Return.
@item LFD
Linefeed.
@item TAB
Tab.
@item BS
Backspace.
@item ESC
Escape.
@item DEL
Delete.
@item SFT
Shift.
@item CTL
Control.
@item META
Meta.
@end table

There are subtleties to handling words like `meta' or `ctrl' which are
names of shift keys.  When mentioning a character in which the shift key is
used, such as @kbd{Meta-a}, use the @code{@@kbd} command alone without the
@code{@@key} command, but when you are referring to shift key in isolation,
use the @code{@@key} command.  For example, you would use
@samp{@@kbd@{Meta-a@}} to produce @kbd{Meta-a} and @samp{@@key@{META@}} to
produce @key{META}.

@node     Ctrl, Var, Key, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@ctrl
@findex ctrl

@code{@@ctrl} is used to describe an ASCII control character.  The pattern
of usage is @code{@@ctrl@{@var{ch}@}}, where @var{ch} is an ASCII character
whose control-equivalent is wanted.  Thus, you put in an @samp{f} when
you want to indicate a @samp{control-f}

Thus, to specify @samp{control-f}, you would enter

@example
@@ctrl@{f@}
@end example

@noindent
which produces

@quotation
@ctrl{f}
@end quotation

In the Info file, this generates the specified control character, output
literally into the file.  This is done so a user can copy the specified
control character (along with whatever else he or she wants) into another
Emacs buffer and use it.  Since the `control-h',`control-i', and
`control-j' characters are formatting characters, they should not be
indicated this way.@refill

In a printed manual, this generates text to describe or identify that
control character: an uparrow followed by the character @var{ch}.

@node     Var, Dfn, Ctrl, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@var
@findex var

@code{@@var} is used to indicate metasyntactic variables.  A metasyntactic
variable is something that stands for another piece of text.  You would use
a metasyntactic variable in the documentation of a function to describe the
arguments that are passed to that function.

@code{@@var} is not used for names of particular variables in programming
languages.  For example, the Texinfo variable @code{texinfo-tex-command} is
not a metasyntactic variable.

Its effect in the Info file is to upcase the argument; in the printed
manual, to italicize it.  Example:

@example
To delete file @@var@{filename@}, type @@code@{rm @@var@{filename@}@}.
@end example

@noindent
produces

@quotation
To delete file @var{filename}, type @code{rm @var{filename}}.
@end quotation

In some documentation styles, metasyntactic variables are shown with angle
brackets, for example: 

@example
@dots{}, type rm <filename>
@end example

@node     Dfn, Cite, Var, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@dfn
@findex dfn

@code{@@dfn} is used to identify the introductory or defining use of a
technical term.  The command should be used only in a passage whose purpose
is to introduce a term which will be used again or which the reader ought
to know.  Mere passing mention of a term for the first time doesn't deserve
@code{@@dfn}.  It generates italics in the printed manual, and double
quotation marks in the Info file.  Example:

@example
Getting rid of a file is called @@dfn@{deleting@} it.
@end example

@noindent
produces

@quotation
Getting rid of a file is called @dfn{deleting} it.
@end quotation

@node     Cite, , Dfn, Specifying
@comment  node-name,  next,  previous,  up
@subsection @@cite
@findex cite

@code{@@cite} is used for the name of a book.  It produces italics
in the printed manual, and quotation marks in the Info file.
]PRE]

[208] 
[[強調]]と[[物理要素]]に相当するもの:

>
[PRE[
@node     Emphasis, , Dots Bullets Tex, Marking Text
@comment  node-name,  next,  previous,  up
@section Emphasizing Text
@cindex  Emphasizing text

Usually, Texinfo changes the font automatically to mark words in the text
according to what category the words belong to.  The @code{@@code} command,
for example, does this.  Most often, this is the best way to mark specified
words.  However, sometimes you will want to emphasize text directly.
Texinfo has two ways to do this: commands that tell Texinfo to emphasize
the text but leave the method to the program, and commands that specify the
font to use.  The first method is generally the best and it makes it
possible to change the style of a document without have to re-edit it line
by line.

@menu
* Emph and Strong::	Emphasizing text.
* Fonts::		Selecting italic, bold or typewriter fonts.
@end menu

@node     Emph and Strong, Fonts, , Emphasis
@comment  node-name,  next,  previous,  up
@subsection @@emph and @@strong
@findex emph
@findex strong

@code{@@emph} and @code{@@strong} are two forms of emphasis.  @code{@@strong}
is stronger.

In printed output, @code{@@emph} produces @emph{italics} and @code{@@strong}
produces @strong{bold}.

In the Info file, both of these commands put asterisks around the
argument.

@node     Fonts, , Emph and Strong, Emphasis
@comment  node-name,  next,  previous,  up
@subsection @@i,  @@b and @@t
@findex i (italic font)
@findex b (bold font)
@findex t (typewriter font)

These three commands specify font changes in the printed manual and have no
effect in the Info file.  @code{@@i} requests @i{italic} font (in some
versions of @TeX{}, a slanted font is used), @code{@@b} requests @b{bold}
face, and @code{@@t} requests the @t{fixed-width} font used by
@code{@@kbd}.  All three commands apply to an argument that follows,
surrounded by braces.@refill

If possible, you should avoid using these three commands.  If you find a
need to use one, it probably indicates a lack in the Texinfo language.
]PRE]


[209] この詳細な説明が全文 [[HTML]] の要素一覧にも引かれていれば、
その後の展開もまた違ったものになっていたでしょうね。


*** LaTeX からの借用

[181] 
[CODE[em]] と [CODE[tt]] は、その[[要素名]]を [[LaTeX]] から[[借用]]したと考えられます
(>>148 >>179)。

- [183] [CITE@en[CTAN: /tex-archive/obsolete/macros/latex209/distribs]], [TIME[2024-09-30T12:43:22.000Z]] <https://ctan.org/tex-archive/obsolete/macros/latex209/distribs>
-- [184] [TIME[2024-09-30T12:43:35.200Z]]
<https://mirrors.ctan.org/obsolete/macros/latex209/distribs/latex209.tar.gz>

[185] >>184 に [TIME[1997-01-22 01:00][1997-01-22T01:00]] 付の
[CODE[latex209.tar.gz]]
があります。
中身のファイルの日付は[TIME[1992-03-19]], [TIME[1992-03-20]], 
[TIME[1992-04-01]]のいずれかの[[正時]]に揃っています。
どうにも不自然ですが、[TIME[1997-01-22]]に過去のファイルを集めて作成した[[tar玉]]なのでしょう。

[186] [[DanC]] が参照したものが何だったのか、 [[LaTeX]] という以外に情報がありませんが、
この [[tar玉]]の中身とそう遠くはないものだろうと期待されます。

[187] 
[CODE[general/latex.tex]] という[TIME[1992-04-01]]のファイル
[CITE[LATEX VERSION 2.09 <25 March 1992>]]
には、

>
[PRE[
%     ****************************************
%     *           COMMAND LIST               *
%     ****************************************
[SNIP[]]
%  IN DOCUMENT :
%    FONT SELECTION:
%         SIZE: \normalsize \small \footnotesize \scriptsize \tiny
%               \large \Large \LARGE \huge \Huge
%         STYLE: \bf \it \rm \sl \ss \tt \mit[math mode only]
]PRE]

とあります。

[188] 
[CODE[general/sfonts.tex]] という[TIME[1992-03-19]]のファイル
[CITE[File SFONTS - Version of 25 November 1991]]
には、

>
[PRE[
% protected font names
\def\rm{\protect\prm}
\def\it{\protect\pit}
\def\bf{\protect\pbf}
\def\tt{\protect\ptt}
\def\sl{\@subfam\sl\it}
\def\sf{\@subfam\sf\rm}
\def\sc{\protect\psc}
 
\def\em{\protect\pem{}}
\def\pem{\relax\ifdim \fontdimen\@ne\font >\z@ \rm \else \it \fi}
]PRE]

とあります。

[189] 
[CODE[general/lfonts.tex]] という[TIME[1992-03-19]]のファイル
[CITE[File LFONTS - Version of 25 November 1991]]
には、

>
[PRE[
% \em is defined to be \it inside an unslanted style and \rm inside a
% slanted style.  An \em command in a section title will produce a \pem
% command in the table of contents.
%

\def\em{\protect\pem{}}
\def\pem{\relax\ifdim \fontdimen\@ne\font >\z@ \rm \else \it \fi}
]PRE]

>
[PRE[
% protected font names
\def\rm{\protect\prm}
\def\it{\protect\pit}
\def\bf{\protect\pbf}
\def\sl{\protect\psl}
\def\sf{\protect\psf}
\def\sc{\protect\psc}
\def\tt{\protect\ptt}
]PRE]

とあります。

[190] 
[CODE[general/local.tex]] という[TIME[1992-03-19]]のファイル
[CITE[local.tex -- released 26 February 1992]]
には、

>
[PRE[
[SNIP[]]Table~\ref{tab:fonts}
tells, for every type size, to which class of fonts each type style
belongs.  For example, in 14pt type, \verb|\bf| uses a preloaded
font and the other five type-style commands use load-on-demand fonts.
Roman (\verb|\rm|) and math italic (\verb|\mit|) fonts are all
preloaded; the \hbox{\verb|\em|} declaration uses either italic
(\verb|\it|) or roman.
]PRE]

とあってフォントとサイズの表があります。

[191] 
以上、 [[DanC]] の引用 (>>138) と若干違うのが気になりますが、
[CODE[\tt]] を含む7種類のフォントスタイルがあり、 [CODE[\em]] 
が [CODE[\it]] または [CODE[\rm]] のどちらかとして実装されていることがわかります。

[192] 
[CODE[local.tex]] には [CODE[\tt]] や [CODE[\em]] が大量に使われているので、
いくつか用法を見ておきましょう。

[193] [CODE[\em]] で書名を強調

>
[PRE[
computers at SRC. It is not about \LaTeX\ itself, which is described by
the manual---{\em \LaTeX: A Document Preparation System}, published by
Addison-Wesley, available at fine book stores everywhere.
]PRE]

[194] [CODE[\em]] で入力する文字列を強調、 [CODE[\tt]] でファイル名

>
[PRE[
(You must type the space followed by the period at the end.  This
and all other Ultrix commands are ended by typing {\em return}.)
A copy of the file \mbox{\tt sample.tex} is now in your current
directory; you can edit it just like any other file.  If you destroy or
]PRE]

[195] [CODE[\em]] で文書名を強調

>
[PRE[
You must use a text editor to prepare an input file for \LaTeX. The
document {\em Welcome to SRC\/} describes the text editors available
at SRC.  The easiest way to start learning about \LaTeX\ is by 
]PRE]

[196] [CODE[\em]] で[[打鍵]]列を強調

>
[PRE[
because it is printing a seemingly unending string of uninformative
error messages, type {\em Control-C\/} (press $C$ while holding down
the key labeled {\em CTRL\/}).  This will make \LaTeX\ stop as if it
]PRE]

[197] [CODE[\em]] で文中の語を強調、 [CODE[\tt]] で [[LaTeX]] の機能名

>
[PRE[
Except for these differences, a \SLiTeX\ input file prepared for the
ordinary {\tt slides} style {\em should\/} work with the {\tt
ps-slides} style.  There are probably some \SLiTeX\ commands that will
]PRE]

[198] [CODE[\em]] で可変部分を強調、 [CODE[\tt]] で実行するコマンド

>
[PRE[
\begin{quote} \tt
     aptex -Pcolor {\em file-name}.dvi
\end{quote}
]PRE]

[199] 他にも用例が多数あります。 [CODE[\tt]] はおおむね現在の [[HTML]] の [CODE[code]]
の役割で使われています。 [CODE[\em]] はいろいろな意味で[[強調]]、
周りとの区別を表すために使われていて、現在の [[HTML]] 
でいえば [CODE[em]], [CODE[strong]], [CODE[var]], [CODE[kbd]]
など幅広く応用されています。

[200] 
これを現在視点から見ると [CODE[code]] があるのに [CODE[tt]] は要らなそうにも感じますが、
当時の [CODE[code]] の意味と比べると、 [CODE[\tt]] がないと困りそうです。
[CODE[@file]] が省かれて [CODE[\tt]] が採用された理由もこの辺りにあるのかもしれません。


**

[52] 
[CITE[Netscape Navigator Extensions to HTML]] 
<http://web.archive.org/web/20000415023954/http://www.netscape.com/home/services_docs/html-extensions.html>

[[HTML 2.0]] に対する拡張と称して、
[CODE(HTMLe)@en[[[b]]]] や [CODE(HTMLe)@en[[[i]]]]
を[[入れ子]]にしても [[Netscape Navigator]]
がその通りに[[レンダリング]]するようになったことを紹介しています。

[53] [SRC[>>52]]
[PRE(HTML example deprecated code)[
<i><tt><font size=6><b>Text here</b></font></tt></i>
]PRE]

[54] 
[CITE[A Beginner's Guide to HTML]] ([CODE[2003-08-15 22:48:58 +09:00]] 版) <http://ccat.sas.upenn.edu/jod/primer.html#CharFormat>

意外なことに

> For HTML-coded documents, you should use logical styles whenever possible. Future implementations of HTML may not implement physical styles at all.

なんて書いてあります。

もっとも、それでいて
[CODE(HTMLe)@en[[[em]]]] と [CODE(HTMLe)@en[[[code]]]]
の意味が説明されていないわけですが。

** HTML3




[FIG(data)[ [20] [[HTML要素概説]]

:[F[要素名]]:[CODE[i]]
:[F[要素名]]:[CODE[b]]
:[F[要素名]]:[CODE[u]]
:[F[要素名]]:[CODE[s]]
:[F[要素名]]:[CODE[sup]]
:[F[要素名]]:[CODE[sub]]
:[F[要素名]]:[CODE[tt]]
:[F[要素名]]:[CODE[em]]
:[F[要素名]]:[CODE[strong]]
:[F[要素名]]:[CODE[q]]
:[F[要素名]]:[CODE[cite]]
:[F[要素名]]:[CODE[person]]
:[F[要素名]]:[CODE[cmd]]
:[F[要素名]]:[CODE[arg]]
:[F[要素名]]:[CODE[kbd]]
:[F[要素名]]:[CODE[var]]
:[F[要素名]]:[CODE[dfn]]
:[F[要素名]]:[CODE[code]]
:[F[要素名]]:[CODE[samp]]
:日付:[TIME[1993-10-28]]
:説明:
[TIME[1993-10-28]]時点で [CITE[HTML+]] 仕様書に含まれていた。
[SRC[[[draft-raggett-www-html-00]]]]


]FIG]

[22] [[HTML+]] に [CODE[acronym]], [CODE[abbrev]] もありました。

[FIG(data)[ [216] [[HTML要素概説]]

:[F[要素名]]:[CODE[u]]
:[F[要素名]]:[CODE[s]]
:[F[要素名]]:[CODE[tt]]
:[F[要素名]]:[CODE[b]]
:[F[要素名]]:[CODE[i]]
:[F[要素名]]:[CODE[big]]
:[F[要素名]]:[CODE[small]]
:[F[要素名]]:[CODE[em]]
:[F[要素名]]:[CODE[strong]]
:[F[要素名]]:[CODE[code]]
:[F[要素名]]:[CODE[samp]]
:[F[要素名]]:[CODE[kbd]]
:[F[要素名]]:[CODE[var]]
:[F[要素名]]:[CODE[cite]]
:[F[要素名]]:[CODE[q]]
:[F[要素名]]:[CODE[lang]]
:[F[要素名]]:[CODE[au]]
:[F[要素名]]:[CODE[dfn]]
:[F[要素名]]:[CODE[person]]
:[F[要素名]]:[CODE[acronym]]
:[F[要素名]]:[CODE[abbrev]]
:日付:[TIME[1995-03-01]]
:説明:
[TIME[1995-03-01]]版 [[HTML 3.0]] DTD
にある。
[SRC[HTML3-19950301]]

]FIG]

[74] [[HTML 3.0]] では [CODE[ins]], [CODE[del]] も追加されました。






** HTML4


[11] [[HTML 4]] の[[要素型級]] [DFN[[CODE(SGML)[%inline]]]]:
- [CODE(SGML)[%[[fontstyle]]]]
- [CODE(SGML)[%[[formctrl]]]]
- [CODE(SGML)[%[[phrase]]]]
- [CODE(SGML)[#[[PCDATA]]]]
- [CODE(SGML)[%[[special]]]]

[[DTD]] の[[注釈]]には[Q[行内要素 ([Q[文水準]]要素)]]と書かれています。

仕様書:
- [[HTML 4]]
-- [[厳密DTD]]: <IW:HTML4:"sgml/dtd.html#inline">
-- [[移行用DTD]]: <IW:HTML4:"sgml/loosedtd.html#inline">

[12]
また、 DTD の注釈には[Q[文字水準要素および文字列]]とも書かれています。


[61] [[HTML 4]] の[[要素型級]] [DFN[[CODE(SGML)[%phrase]]]]:
- [CODE(HTMLe)[[[abbr]]]]
- [CODE(HTMLe)[[[acronym]]]]
- [CODE(HTMLe)[[[cite]]]]
- [CODE(HTMLe)[[[code]]]]
- [CODE(HTMLe)[[[dfn]]]]
- [CODE(HTMLe)[[[em]]]]
- [CODE(HTMLe)[[[kbd]]]]
- [CODE(HTMLe)[[[samp]]]]
- [CODE(HTMLe)[[[strong]]]]
- [CODE(HTMLe)[[[var]]]]

仕様書:
- [[HTML 4]]
-- [[厳密DTD]]: <IW:HTML4:"sgml/dtd.html#phrase">
-- [[移行用DTD]]: <IW:HTML4:"sgml/loosedtd.html#phrase">

-*-*-

[12]
[CITE[Matthew Thomas &#187; Blog Archive &#187; When semantic markup goes bad]] <http://mpt.net.nz/archive/2004/05/02/b-and-i>


[13] [CITE@en[XSLT 2.0 and XQuery 1.0 Serialization (Second Edition)]]
( ([TIME[2010-12-17 00:08:20 +09:00]] 版))
<http://www.w3.org/TR/2010/REC-xslt-xquery-serialization-20101214/#HTML_INDENT>

[8] [CODE[op]]

** HTML 以外

[9] 
[[HTMLもどき]]の [[DTBook]] にも同じような [CODE[%inline;]] がありました。

[10] 
[[HTML]] とは違って [CODE[%inlineinblock;]] もありました。


[FIG(data)[ [81] [[HTML要素概説]]

:[F[要素名]]:[CODE[b]]
:[F[要素名]]:[CODE[i]]
:[F[要素名]]:[CODE[u]]
:[F[要素名]]:[CODE[em]]
:[F[要素名]]:[CODE[strong]]
:[F[要素名]]:[CODE[big]]
:[F[要素名]]:[CODE[small]]
:借用先:[[WML1]]

]FIG]



** HTML5





[87] 
[CITE[Re: contenteditable, <em> and <strong>]] ([[Henri Sivonen <hsivonen@...>]] 著, [CODE[2007-01-09 17:19:43 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/8338>

> <em>, <strong>, <i> and <b> have all been in HTML for over a decade.  
I think that’s long enough to see what happens in the wild. I think  
it is time to give up and admit that there are two pairs of visually- 
oriented synonyms instead of putting more time, effort, money, blog  
posts, spec examples and discussion threads into educating people  
about subtle differences in the hope that important benefits will be  
realized once people use these elements the “right” way.

([[名無しさん]] [WEAK[2007-01-12 15:36:16 +00:00]])



- [88] 
[CITE@en[inter-element whitespace and comments should not affect algorithms; b…]], [[Hixie]], [TIME[2006-12-22 10:07:05 +09:00]], [TIME[2022-11-13T05:27:11.000Z]] <https://github.com/whatwg/html/commit/7f75de99cdef5686b5812ce14c88759aa70ab207#diff-41cf6794ba4200b839c53531555f0f3998df4cbb01a4d5cb0b94e3ca5e23947d>

[89] >>88
[CODE[i]], [CODE[b]], [CODE[div]] が同時追加




[14] [CITE@en[Web Applications 1.0 r7238 Clean up content model descriptions.]]
( ([TIME[2012-08-10 08:03:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7237&to=7238>

[1] [CITE@en[HTML5 Revision Tracker]]
([TIME[2010-07-15 07:45:21 +09:00]] 版)
<http://html5.org/tools/web-apps-tracker?from=5157&to=5158>

[2] [CITE['''['''whatwg''']''' Various HTML element feedback]]
([TIME[2012-06-06 09:05:01 +09:00]] 版)
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-June/036283.html>


[62] 
[CITE['''['''whatwg''']''' contenteditable, <em> and <strong>]] ([CODE[2007-01-22 21:07:39 +09:00]] 版) <http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-January/009060.html>

[63] 
[CITE['''['''whatwg''']''' contenteditable, <em> and <strong>]] ([CODE[2007-01-22 21:07:39 +09:00]] 版) <http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-January/009060.html>

[64] 
[CITE['''['''whatwg''']''' contenteditable, <em> and <strong>]] ([TIME[2007-01-22 21:07:39 +09:00]] 版) <http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-January/009060.html>

[65] [CITE[Re: Deprecating <small>, <b> ?]] ([[Lachlan Hunt <lachlan.hunt@...>]] 著, [TIME[2008-11-24 16:36:53 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/16742>

[67] [CITE[''''''[''''''whatwg'''''']'''''' Various HTML element feedback]]
( ([TIME[2012-08-28 00:34:50 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-August/036998.html>

[66] [CITE[''''''[''''''whatwg'''''']'''''' Various HTML element feedback]]
( ([TIME[2012-08-28 00:34:50 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2012-August/037000.html>

[85] 関連:
[CODE[samp]],
[CODE[var]],
[CODE[b]],
[CODE[i]]

-*-*-


[68] 
[CITE@en[HTML Italic and Bold Elements as regards Web Standards | The Elementary Standards]] ([[Sean Fraser]] 著, [CODE[2007-05-22 11:09:10 +09:00]] 版) <http://www.elementary-group-standards.com/web-standards/html-presentation-elements-web-standards.html>
([[名無しさん]] [WEAK[2007-05-25 01:05:19 +00:00]])

[69] 
[CITE[カナかな団首領の自転車置き場 - 物理要素とか]] ([CODE[2007-07-08 14:49:00 +09:00]] 版) <http://d.hatena.ne.jp/kana-kana_ceo/20070706/1183719689>
([[名無しさん]])

[70] 
[CITE@ja[HTML に装飾要素は必要]] ([CODE[2007-07-03 09:56:06 +09:00]] 版) <http://deztec.jp/design/07/07/02_html5.html>
([[名無しさん]])

[71] 
[[HTML 5]] の中の人の意図を推測したいならせめて
Design Principle くらい読んでおいて欲しいものですな。

[CITE@en-US[HTML Design Principles]] ([CODE[2007-06-27 01:27:04 +09:00]] 版) <http://dev.w3.org/cvsweb/~checkout~/html5/html-design-principles/Overview.html#separation-of-concerns>

> However, structural markup is a means to an end such as media independence. Profound and detailed semantic encoding is not necessary if the end can be reached otherwise.

いつの間にか一部の人から絶対的なものと妄信されるまでに至った[[表現と構造の分離]]はそもそも手段であって、
目的ではなかったのです。
([[名無しさん]])

[72] [CITE[HTML 5のi要素とb要素、sup要素とsub要素、small要素:メモランダム]] ([CODE[2007-07-09 20:54:42 +09:00]] 版) <http://mynotes.jp/blog/2007/07/html5_elements>
([[名無しさん]])

[73] 
[CITE[構造と見た目の分離:メモランダム]] ([CODE[2007-07-09 20:54:42 +09:00]] 版) <http://mynotes.jp/blog/2007/07/separate_structure_and_presentation>
([[名無しさん]])



**




[18] [CITE@en[XSLT and XQuery Serialization 3.0]]
( ([TIME[2014-04-07 23:19:15 +09:00]] 版))
<http://www.w3.org/TR/xslt-xquery-serialization-3/#XHTMLPHRASING>

[FIG(quote)[
[FIGCAPTION[
[7] [CITE@en[OSLC Core Version 3.0. Part 6: Resource Shape]]
([TIME[2017-04-05 01:00:00 +09:00]])
<http://docs.oasis-open.org/oslc-core/oslc-core/v3.0/cs01/part6-resource-shape/oslc-core-v3.0-cs01-part6-resource-shape.html#dcterms:title>
]FIGCAPTION]

> dcterms:title is used to provide a summary of oslc:ResourceShape and oslc:Property resources. Its value should be a literal of type rdf:XMLLiteral that is valid content for an XHTML <span> element. If the value contains no XML markup then it may be represented as a plain text literal or xsd:string.

]FIG]
