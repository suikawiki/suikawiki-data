

* visibility 属性 (CSS)

[1] 当該要素が可視かどうかを指定します。
この属性を使って不可視にした場合、 [[display]]
が [CODE(CSS)[none]] である場合とは異なり、
可視である場合と同じように配置されます。
(そこに内容が存在すると仮定した空間が出来ます。)

この属性は [[CSS2]] で追加されました。

[2] 値:
,[[visible]]	,可視	,[CSS 2]
,[[hidden]]	,隠す	,[CSS 2]
,[[collapse]]	,隠す (表系)	,[CSS 2]
,[[hide]]	,隠す	,[NC4]
,[[show]]	,表示	,[NC4]
,[[inherit]]	,継承	,[CSS 2]
,[CODE(CSS)@en[[[-oxy-collapse-text]]]]

- [3] ''CSS2 visibilityプロパティ・ノート'' <http://is.vis.ne.jp/notes/css2_visufx/visibility>
- [4] ''CSS2 視覚効果関連プロパティ・対応表'' <http://is.vis.ne.jp/charts/css2_visufx/#visibility>

[5] [CITE@ja-jp[DHTML ページのパフォーマンス向上]] ([TIME[2009-01-31 21:31:07 +09:00]] 版) <http://msdn.microsoft.com/ja-jp/library/bb264005.aspx>

>配置された要素の非表示と表示を切り換えて、興味深い効果を作り出すということがよく行われます。絶対配置された要素の表示と非表示の切り換えには、visibility CSS プロパティを使用するようにしてください。 display CSSプロパティを使用する必要はありません。絶対配置された要素では、display と visibility はまったく同じ効果を持っています。display と visibility はどちらも要素を非表示にする機能を持っています。両者の違いは、要素が display: none に設定されると、その要素はドキュメント フローの中でスペースを占有しなくなります。一方、visibility: hidden に設定された要素は非表示になりますが、ドキュメント フローの中で依然としてスペースを占有しています。しかし、絶対配置された要素は、ドキュメントフローのスペースをそもそも占有しません。このため、display と visibility の間には違いがないのです。この2つの CSS プロパティの間では、display の方がコストが高いので、要素の表示と非表示を頻繁に切り換えるときには visibility を使った方が高速になります。
