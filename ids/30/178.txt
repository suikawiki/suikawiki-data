* 仕様書

[REFS[
- [44] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-05-06 10:42:35 +09:00]] 版) <https://html.spec.whatwg.org/#dom-workerglobalscope-close>
- [202] [CITE@en-US-x-hixie[HTML Standard]] ([TIME[2016-12-06 07:17:59 +09:00]]) <https://html.spec.whatwg.org/#worker-event-loop>
- [48] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-05-06 10:42:35 +09:00]] 版) <https://html.spec.whatwg.org/#run-a-worker>
- [77] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-05-06 10:42:35 +09:00]] 版) <https://html.spec.whatwg.org/#kill-a-worker>
- [78] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-05-06 10:42:35 +09:00]] 版) <https://html.spec.whatwg.org/#terminate-a-worker>
- [95] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2015-05-06 10:42:35 +09:00]] 版) <https://html.spec.whatwg.org/#dom-worker-terminate>
- [1] [CITE@en[Service Workers Nightly]] ([TIME[2017-02-16 20:10:49 +09:00]]) <https://w3c.github.io/ServiceWorker/#service-worker-lifetime>
- [5] [CITE@en[Service Workers Nightly]] ([TIME[2017-03-02 15:00:14 +09:00]]) <https://w3c.github.io/ServiceWorker/#terminate-service-worker>
]REFS]

* 閉じ中フラグ

[203] [CODE(DOMi)@en[WorkerGlobalScope]] [[オブジェクト]]は、
[DFN[[F[[RUBYB[[[閉じ中]]]@en[closing]]]]]]フラグを持ちます。
初期状態は[[偽]]です。 [SRC[>>202]]

;; [[タスクをキューに追加]]等[[タスクキュー]]への追加の発生時に参照されます。

[45] [CODE(DOMi)@en[[[WorkerGlobalScope]]]] [[インターフェイス]]の
[DFN[[CODE(DOMm)@en[[[close]]]]]] [[メソッド]]は、次のようにしなければ[['''なりません''']]
[SRC[>>44]]。
[FIG(steps)[
= [99] [[原子的]]に:
== [46] [[文脈オブジェクト]]の[F[[[イベントループ]]]]の[F[[[タスクキュー]]]]の[[タスク]]をすべて捨てます。
== [47] [[文脈オブジェクト]]の [F[[[closing flag]]]] を[[真]]に設定します。
]FIG]

* ワーカーの終了

[84] [[利用者エージェント]]は、いつでも[[ワーカーを殺す]]処理を実行して構いません。
例えば次の時に実行できます。 [SRC[>>77]]
[FIG(list)[
- [85] [[利用者]]に要求された時
- [86] [[CPU]] の [[quota]] 超過時
- [87] [F[[[closing flag]]]] が[[真]]に設定されてもなお走り続けている場合で、
[[active needed worker]] でなくなった時
]FIG]

[79] [DFN[[RUBYB[ワーカーを殺す]@en[kill a worker]]]]には、
[[並列に]]次のようにしなければ[['''なりません''']] [SRC[>>77]]。
[FIG(steps)[
= [80] [[ワーカー]]の [F[[CODE(DOMi)@en[[[WorkerGlobalScope]]]]]]
の [F[[[closing flag]]]] を[[真]]に設定します。
= [81] [[ワーカー]]の [F[[CODE(DOMi)@en[[[WorkerGlobalScope]]]]]]
の[F[[[イベントループ]]]]の[F[[[タスクキュー]]]]の[[タスク]]をすべて捨てます。
= [82] [[利用者エージェント]]定義の時間、待ちます。
= [83] [[ワーカー]]で動作中の[[スクリプト]]について、
[[走っているスクリプトの実行中断]]を実行します。
]FIG]

;; [93] [[run a worker]] のメインの[[スクリプト]]や [CODE(DOMm)@en[[[importScripts]]]]
の[[スクリプト]]が実行停止されることがあります。
その他の[[スクリプト]]も (明記されていませんが) 停止するはずです。

[96] [CODE(DOMi)@en[[[Worker]]]] [[インターフェイス]]の 
[DFN[[CODE(DOMm)@en[[[terminate]]]]]] [[メソッド]]は、
[F[関連付けられた[[ワーカー]]]]について[[ワーカーを停止]]しなければ[['''なりません''']]
[SRC[>>95]]。

;; [97] [CODE(DOMi)@en[[[SharedWorker]]]] にはありません。

[88] [DFN[[RUBYB[ワーカーを停止]@en[terminate a worker]]]]するには、
[[並列に]]次のようにしなければ[['''なりません''']] [SRC[>>78]]。
[FIG(steps)[
= [89] [[ワーカー]]の [F[[CODE(DOMi)@en[[[WorkerGlobalScope]]]]]]
の [F[[[closing flag]]]] を[[真]]に設定します。
= [90] [[ワーカー]]の [F[[CODE(DOMi)@en[[[WorkerGlobalScope]]]]]] 
の[F[[[イベントループ]]]]の[F[[[タスクキュー]]]]の[[タスク]]をすべて捨てます。
= [91] [[ワーカー]]で動作中の[[スクリプト]]について、
[[走っているスクリプトの実行中断]]を実行します。
= [92] [[ワーカー]]の [F[[CODE(DOMi)@en[[[WorkerGlobalScope]]]]]]
が [CODE(DOMi)@en[[[DedicatedWorkerGlobalScope]]]] なら、
[[ワーカー]]の[F[暗示的なポート]]が [[entangle]] されている [[port message queue]]
を空にします。
]FIG]

;; [94] [[run a worker]] のメインの[[スクリプト]]や [CODE(DOMm)@en[[[importScripts]]]]
の[[スクリプト]]が実行停止されることがあります。
その他の[[スクリプト]]も (明記されていませんが) 停止するはずです。

[73] [[ワーカーの終了]]の処理は、次のようにしなければ[MUST[なりません]] [SRC[>>48]]。

[FIG(steps)[
= [74] [VAR[内側設定群]]の[F[[[活性タイマーのリスト]]]]を空にします。
= [75] [VAR[ワーカー大域適用範囲]]の[F[ポート群][ワーカーのポート群]]の各[VAR[ポート]]について、
== [201] [VAR[ポート]]の [[disentangle]] を実行します。
= [76] [[ワーカーの[CODE(DOMi)@en[Document]]群]]を空にします。
]FIG]

[40] [F[[[Blob URL Store]]]] 内の [[Blob URL]] は (暗黙に) 破棄されると思われます。

[7] [[ワーカーを走らせる]]処理から呼び出されます。

[111] [CODE(DOMi)@en[[[Worker]]]] や [CODE(DOMi)@en[[[SharedWorker]]]]
への参照を破棄すると、その[[ワーカー]]に[[スクリプト]]からアクセスする手段がなくなるかもしれませんが、
それによって[[ワーカー]]が破棄されるわけではありません。

* サービスワーカーの終端

[4] 実行中の [[handle fetch]] を失敗させることになる場合があります。

;; [[handle fetch]] 参照。

** 文脈

[2] [[利用者エージェント]]は、処理する[[イベント]]がなくなったとき、
[[サービスワーカーを終端]]させて構いません。 [SRC[>>1]]

[3] [[利用者エージェント]]は、[[無限ループ]]や割当時間超過など、
異常を検知したとき、[[イベント]]の処理中であっても[[サービスワーカーを終端]]させて構いません。 [SRC[>>1]]

* 歴史

[6] [[ワーカー]]の歴史も参照。
