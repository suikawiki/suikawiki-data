* 仕様書

[REFS[
- [1] [CITE@en[Cooperative Scheduling of Background Tasks]] ([TIME[2016-12-21 17:01:17 +09:00]]) <https://w3c.github.io/requestidlecallback/#idl-def-idlerequestcallback>
- [63] [CITE@en[Cooperative Scheduling of Background Tasks]] ([TIME[2016-12-15 02:40:48 +09:00]]) <https://w3c.github.io/requestidlecallback/#dfn-invoke-idle-callback-timeout-algorithm>
]REFS]

* [CODE(IDL)@en[IdleRequestCallback]]

[60] [[コールバック関数]]は、 [[Web IDL]] では[[コールバック関数]]の[[データ型][データ型 (Web IDL)]]
[DFN[[CODE(DOMi)@en[IdleRequestCallback]]]] [SRC[>>1]]
と呼ばれています。

[61] [[コールバック関数]]は、引数として [CODE(DOMi)@en[IdleDeadline]] を1つ受け取ります
[SRC[>>1]]。

[62] [[コールバック関数]]の[[返し値]]は使われません [SRC[>>1]]。

* 処理

[64] [VAR[ハンドル]]と[VAR[窓]]について[DFN[[RUBYB[アイドルコールバックタイムアウトアルゴリズムを呼び出す]@en[invoke idle callback timeout algorithm]]]]には、
次のようにします [SRC[>>63]]。
[FIG(steps)[
= [65] [VAR[項目]]を、[VAR[窓]]の[F[アイドル要求コールバック群のリスト]]から[F[ハンドル]]が[VAR[ハンドル]]の項目を取得し、削除した結果に設定します。
= [66] [VAR[項目]]が [CODE[null]] なら、
== [67] [VAR[項目]]を、[VAR[窓]]の[F[走らせられるアイドルコールバック群のリスト]]から[F[ハンドル]]が[VAR[ハンドル]]の項目を取得し、削除した結果に設定します。
= [68] [VAR[項目]]が [CODE[null]] 以外なら、
== [70] [VAR[アイドル締切]]を、新しい [CODE(DOMi)@en[IdleDeadline]] に設定します。
[FIG(list members)[
: [F[締切]] : [[現在時刻]]
: [F[[CODE(DOMa)@en[didTimeout]]]] : [[真]]
]FIG]
== [69] [[コールバック関数の実行]]をします。
[FIG(list members)[
: [VAR[呼び出し可能]] : [VAR[項目]]の[F[コールバック]]
: [VAR[引数リスト]] : ([VAR[アイドル締切]])
: [VAR[this]] : 
@@
]FIG]
[[例外]]が[[投げ]]られたら、[[例外を報告]]します。
@@ [[仕様書]]では[[誤りを報告]]
]FIG]

[2] [CODE(DOMm)@en[requestIdleCallback]] から呼び出されます。