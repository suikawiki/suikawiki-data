[1] [CITE@en[Peeling out import() · Issue #149 · whatwg/loader]]
([TIME[2017-01-31 13:10:57 +09:00]])
<https://github.com/whatwg/loader/issues/149>

[FIG(quote)[
[FIGCAPTION[
[2] [CITE@en[tc39/proposal-dynamic-import: import() proposal for JavaScript]]
([TIME[2017-01-31 13:11:26 +09:00]])
<https://github.com/tc39/proposal-dynamic-import>
]FIGCAPTION]

> This repository contains a proposal for adding a "function-like" import() module loading syntactic form to JavaScript. It is currently in stage 3 of the TC39 process. Previously it was discussed with the module-loading community in whatwg/loader#149.

]FIG]


[3] [CITE[import()]]
([TIME[2016-12-08 00:57:43 +09:00]])
<https://tc39.github.io/proposal-dynamic-import/>

[4] [CITE@en[proposal-dynamic-import/HTML Integration.md at master · tc39/proposal-dynamic-import]]
([TIME[2017-01-31 13:15:29 +09:00]])
<https://github.com/tc39/proposal-dynamic-import/blob/master/HTML%20Integration.md>

[5] [CITE@en[Discussion: Towards a module map proposal · Issue #2547 · whatwg/html]]
([TIME[2017-04-22 15:22:42 +09:00]])
<https://github.com/whatwg/html/issues/2547>

[6] [CITE@en[Editorial: refactor classic and module scripts to be more alike]]
([[domenic]]著, [TIME[2017-09-07 05:40:50 +09:00]])
<https://github.com/whatwg/html/commit/dce999aac4d9deeefa3b338dd2aeb30c17669bc8>

[7] [CITE@en[Editorial: move base URL from "module script" to "script"]]
([[domenic]]著, [TIME[2017-09-14 20:28:50 +09:00]])
<https://github.com/whatwg/html/commit/5458513792ab00d58e6c91ba48faaa611d034a2e>

[8] [CITE@en[Add integrity="" for module scripts, and integrate dynamic import() by domenic · Pull Request #3044 · whatwg/html]]
([TIME[2017-10-04 22:45:17 +09:00]])
<https://github.com/whatwg/html/pull/3044>

[9] [CITE@en[Make integrity="" work on module scripts]]
([[domenic]]著, [TIME[2017-09-14 18:00:24 +09:00]])
<https://github.com/whatwg/html/commit/9275d955dcd604e959cfcc672e0c234b1b8c00db>

[10] [CITE@en[Integrate dynamic import()]]
([[domenic]]著, [TIME[2017-09-14 21:11:01 +09:00]])
<https://github.com/whatwg/html/commit/d4d1704f9c0efbeed78b885d566af17545b8b5fe>

[11] [CITE@en[Adds "audioworklet" and "paintworklet" as destinations. by bfgeek · Pull Request #527 · whatwg/fetch]]
([TIME[2017-11-02 17:58:21 +09:00]])
<https://github.com/whatwg/fetch/pull/527>

[12] [CITE@en[Dynamic import()  |  Web  |  Google Developers]]
([TIME[2017-11-23 00:46:57 +09:00]])
<https://developers.google.com/web/updates/2017/11/dynamic-import>

[13] [CITE@en[Peeling out import() · Issue #149 · whatwg/loader]]
([TIME[2017-12-07 02:35:27 +09:00]])
<https://github.com/whatwg/loader/issues/149>

[14] [CITE@en[New in Chrome 63  |  Web  |  Google Developers]]
([TIME[2017-12-08 00:12:30 +09:00]])
<https://developers.google.com/web/updates/2017/12/nic63?utm_source=feed&utm_medium=feed&utm_campaign>

[15] [CITE@en[Fix import() inside setTimeout()/setInterval() strings]]
([[domenic]]著, [TIME[2017-12-18 15:08:32 +09:00]])
<https://github.com/whatwg/html/commit/12cdfefad607fc824e6ea64a4b967fc24043f684>

[16] [CITE@en[setTimeout() base URL/script fetch options behavior seems wrong · Issue #3116 · whatwg/html]]
([TIME[2017-12-21 17:53:12 +09:00]])
<https://github.com/whatwg/html/issues/3116>

[17] [CITE@en[Fix import() inside setTimeout()/setInterval() strings by domenic · Pull Request #3117 · whatwg/html]]
([TIME[2017-12-21 17:56:17 +09:00]])
<https://github.com/whatwg/html/pull/3117>

[18] [CITE@en[DOM handler and import · Issue #32 · tc39/proposal-dynamic-import]]
([TIME[2017-12-21 17:57:52 +09:00]])
<https://github.com/tc39/proposal-dynamic-import/issues/32>

[19] 今まで [[JavaScript]] [[API]] の [[URL]] は原則的に[[文書]]の[[基底URL]]
を使っていたので、その原則が崩れてしまうのは微妙。
でも外部スクリプトファイルの [CODE[import]] が自身の [[URL]]
じゃなくて使っている[[文書]]の[[基底URL]]を使うようになると、
この上なく使いにくくなりそうだ。じゃあ [CODE[import()]]
もそれと一貫してほしいってことになるのは自然。

[20] 
[CODE[eval "import()"]] と [CODE[ setTimeout ("import()", ...) ]]
は含まれているスクリプトファイルの[[基底URL]]を引き継ぐ。
[CODE[element.onclick = function () { import () }]]
もそう。一方
[CODE[element.setAttribute ("onclick", "import()")]]
は文書の[[基底URL]]になる、のかな。
でも[[Webブラウザー]]が[[発火]]させるより前に
[CODE[element.onclick]] にアクセスしたら、その時点でコンパイルされるけど、
どうなるのか。