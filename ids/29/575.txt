[5] 便宜上[[日]]や[[秒]]を[[単位]]とする[[整数]]や[[実数]]で[[時刻]]や[[時間]]を表すことがよくあります。
[[元期]]に対する[[相対時刻]]ともいえます。

* 一覧

[1] [[日]]単位のもの ([DFN[通日]]):

[FIG(list short)[
- [[ユリウス日]]
- [[修正ユリウス日]]
- [[リリウス日]]
- [[TJD]]
- [[RD][Rata Die]]
- [[REXX DATE]]
- [[COBOL整数日付]]
- [[MJED]]
- [[1900 date system]]
- [[1904 date system]]
- [CODE[datenum]]
]FIG]

[2] [[秒]]単位のもの:
[FIG(short list)[
- [[Unix time]]
- [[ASCAT]]
- [[ZigBee UTCTime]]
- [CODE[NSDate]]
]FIG]

[3] その他:
[FIG(middle list)[
- [[JavaScript時刻]] / [CODE(DOMi)@en[DOMTimeStamp]] ([[ミリ秒]])
- [[Go時刻]] ([[ナノ秒]])
- [[EBML]] [CODE[Date Element]] ([[ナノ秒]])
- [[Windows時刻]] ([[ナノ秒]])
- [CODE[SYSTIM]] ([[ミリ秒]])
- [CODE[SYSTIM_U]] ([[マイクロ秒]])
- [[VMS時刻]] (100[[ナノ秒]])
- [[[CODE[DateTime]] (.NET)]] (100[[ナノ秒]])
- [[RISC OS時刻]] (10[[ミリ秒]])
- [[絶対時間 (CICS)]] ([[ミリ秒]])
]FIG]

[10] [[フィクションの暦]]にも[[宇宙暦]]の一種など1つの[[数]]で[[日時]]を表すものがあります。

* 元期

[6] 起算点を[[元期]]といいます。

* 応用

[11] 
[[日時計算]]に便利で、[[天文学]]などを中心に古くから使われてきました。

[EG[
[13] [[日付]]を使うと2つの[[日]]の間の[[期間]]の長さを求めるのはかなり難しいですが、
両者を[[通日]]に変換しておけば、簡単な[[減算]]になります。
]EG]

[EG[
[14] [[日付]]から[[曜日]]を求めるのは[[ツェラーの公式]]がありますが、
[[通日]]なら[[剰余]]を求めるだけでもっと簡単にわかります。
]EG]

[12] 
[[計算機]]処理のための[[日時]]の記憶・[[交換][情報交換]]形式としてもよく使われています。



* 関連

[4] [[十進化時刻]]、[[閏秒のないUTC]]も参照。

[9] [[ISO 8601]] のいう[[通日日付]]や日常の場面で稀に用いられる[[通日][通日日付]]とは、
[TIME[1月1日][--01-01]]に起算する[[年]]の[[日]]の数です。

[7] [[TLEの日時形式]]は[[2桁西暦年号]]と[[元日]]から起算した[[日]]単位の[[小数]]の組を使っています。

[8] [[DOSの日時形式]]には[[日付]]部分を[[日]]単位の[[整数]]で表すものもありました。
