[7] [DFN[[[ALPN]]]] は、[[アプリケーション層プロトコル]]の[[折衝]]を行う 
[[TLS拡張]]です。 [[TLS]] 上で利用する[[アプリケーション層プロトコル]]を選択するために使うことができます。

[9] [[鯖]]が同じ [[TCP]] [[ポート]]上で [[TLS]] を介して複数の[[アプリケーション層プロトコル]]の通信を受け付けている場合に、
そのいずれを用いるかを決定するために使います。

* 仕様書

[REFS[
- [4] '''[CITE@en[RFC 7301 - Transport Layer Security (TLS) Application-Layer Protocol Negotiation Extension]] ( ([TIME[2014-07-12 02:05:37 +09:00]] 版)) <http://tools.ietf.org/html/rfc7301>'''
- [5] [CITE[Transport Layer Security (TLS) Extensions]] ([TIME[2014-12-12 17:25:31 +09:00]] 版) <http://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids>
]REFS]

* 構文

[18] [[TLS]] の[[拡張型]]は、 
[DFN[[CODE[[[application_layer_protocol_negotiation]]]]]] ([CODE[[[16]]]])
です [SRC[>>4]]。

[20] [CODE(TLS)@en[[[ClientHello]]]] および [CODE[[[ServerHello]]]] における[[拡張データ]]は、
[CODE[[[ProtocolNameList]]]] でなければ[['''なりません''']] [SRC[>>4]]。

[21] [DFN[[CODE[[[ProtocolNameList]]]]]] は、 2[[バイト]][[以上]]2[SUP[16]]-1[[バイト]][[以下]]で構成される欄
[DFN[[CODE[[[protocol_name_list]]]]]] であり、 [CODE[[[ProtocolName]]]]
のリストです。 [SRC[>>4]]

[FIG(packet)[
:width:16

=2 長さ
=14... [CODE[[[ProtocolName]]]] の列
]FIG]

[23] [[クライアント]]の [CODE[[[ProtocolNameList]]]] は、[[クライアント]]が[[広告]]する[[プロトコル]]のリストを、
優先度の[[降順]]で示したものです。 [SRC[>>4]]

[29] [[サーバー]]の [CODE[[[ProtocolNameList]]]] は、[[プロトコル]]を1つだけ含まなければ[['''なりません''']] [SRC[>>4]]。

[22] [DFN[[CODE[[[ProtocolName]]]]]] は、1[[バイト]][[以上]]2[SUP[8]]-1[[バイト]][[以下]]の[[バイト列]]です [SRC[>>4]]。

[FIG(packet)[
:width:16

= 1 長さ
= 15... プロトコル名
]FIG]

[24] [CODE[[[ProtocolName]]]] は、 [[IANA]] に登録された不透明の[[バイト列]]です [SRC[>>4]]。

;; [45] 現実には登録されていない値も使われています。

* 文脈

[19] [[TLS]] の[[クライアント]]は、 [CODE(TLS)@en[[[ClientHello]]]]
で本 [[TLS拡張]]を使うことができます [SRC[>>4]]。

[35] [[TLS]] の[[サーバー]]は、 [CODE(TLS)@en[[[ClientHello]]]] での指定に対して
[CODE(TLS)@en[[[ServerHello]]]] で本 [[TLS拡張]]を使うことができます [SRC[>>4]]。

;; [36] [CODE[[[ClientHello]]]] で [[ALPN]] が使われなかった場合に使って良いのかは謎です。

[38] なお [[ALPN]] は[[折衝]]時に使われるので、[[プロトコル]]は[[平文]]でやりとりされます。
[[プロトコル]]を隠す必要があるなら、[[接続]]確立後に[[再折衝]]するなど対策が必要です [SRC[>>4]]。

[39] [[ALPN]] は、 [[HTTP/2]] を利用する際に使われています。

;; [[HTTPS]] を参照。

* 処理

[25] [[サーバー]]は、 [CODE[[[ClientHello]]]] で [[ALPN]] を受信したら、
適当な[[プロトコル]]を選択して、 [CODE[[[ServerHello]]]] に [[ALPN]]
[[TLS拡張]]によって含めて構いません。 [SRC[>>4]]

;; [30] [[ALPN]] は [[TLSセッション]]ではなく[[接続]]の特性であり、
[[セッション再開]]や[[セッションチケット]]を使う場合でも、
以前の [[ALPN]] 折衝結果は影響しません [SRC[>>4]]。

[31] [[サーバー]]は、対応する[[プロトコル]]の一覧を保持しており、
[[クライアント]]が対応している[[プロトコル]]のみを選ぶことが期待されています。
その場合には、[[クライアント]]が[[広告]]した[[プロトコル]]の中で[[サーバー]]が最も好ましいとかんがえるものを選ぶ[['''べき''']]です。 [SRC[>>4]]

[26] [[サーバー]]は、認識しないプロトコル名は無視します。 [SRC[>>4]]

[34] [[サーバー]]が [CODE[[[ServerHello]]]] の [[ALPN]] 拡張で示したプロトコルは
([[再折衝]]まで) 当該[[接続]]で
[[definitive]] なものでなければ[['''なりません''']]。[[サーバー]]は示したプロトコルと異なるものを使っては[['''なりません''']]。 [SRC[>>4]]

[37] [[サーバー]]でプロトコル選択を行うため、[[サーバー]]は[[証明書]]の選択や[[接続]]の
[[rerouting]] を必要に応じて行えます [SRC[>>4]]。

[32] [[サーバー]]は、[[クライアント]]が[[広告]]した[[プロトコル]]のいずれも対応していない場合は、
[DFN[[CODE[[[no_application_protocol]]]]]] [[fatal alert]]
を返す[['''べきです''']] [SRC[>>4]]。

;; [33] [[alert]] の [[IANA登録簿]]にはなぜかこの値は掲載されていません。 [TIME[2015-05-28T09:41:53.400Z]]

[40] [[ALPN]] により[[クライアント]]が指定する[[プロトコル]]のリストは、
[[fingerprinting vector]] です。

* プロトコル名

[10] [[プロトコル名]]としては、通常は名前を [[UTF-8]] で[[符号化]]した[[バイト列]]を使うこととなっています。

[11] [[IANA登録簿]] (>>5) があります。

[12] 次の値が使われています。
[FIG(short list)[
- [CODE@en[[[http/1.1]]]]
- [CODE@en[[[spdy/1]]]]
- [CODE@en[[[spdy/2]]]]
- [CODE@en[[[spdy/3]]]]
- [CODE@en[[[spdy/3.1]]]]
- [CODE@en[[[stun.turn]]]]
- [CODE@en[[[stun.nat-discovery]]]]
- [CODE@en[[[h2]]]]
- [CODE@en[[[h2c]]]]
- [CODE@en[[[h2-11]]]]
- [CODE@en[[[h2-12]]]]
- [CODE@en[[[h2-13]]]]
- [CODE@en[[[h2-14]]]]
- [CODE@en[[[h2-15]]]]
- [CODE@en[[[h2-16]]]]
]FIG]

;; [28] >>27 に [[JSON]] 形式の一覧データファイルがあります。
[REFS[
- [27] [CITE@en[data-web-defs/tls.txt at master · manakai/data-web-defs]] ([TIME[2015-05-28 13:20:43 +09:00]] 版) <https://github.com/manakai/data-web-defs/blob/master/doc/tls.txt>
]REFS]

* 歴史

** NPN

[42] [DFN[[CODE[[[13172]]]]]] ([DFN[[CODE[[[next_protocol_negotiation]]]]]])

[1] [CITE@en[draft-agl-tls-nextprotoneg-00 - Transport Layer Security (TLS) Next Protocol Negotiation Extension]]
([TIME[2010-07-24 08:19:18 +09:00]] 版)
<http://tools.ietf.org/html/draft-agl-tls-nextprotoneg>

[2] [CITE@en[HTML5 Revision Tracker]]
([TIME[2010-08-13 22:20:59 +09:00]] 版)
<http://html5.org/tools/web-apps-tracker?from=5287&to=5288>

[3] [CITE@en[HTML5 Revision Tracker]]
([TIME[2010-08-14 10:48:51 +09:00]] 版)
<http://html5.org/tools/web-apps-tracker?from=5288&to=5289>

[6] >>2, >>3 この [[Web Socket]] の [[NPN]] 対応、[[IETF]] に移管された後いつの間にか消えてなくなったようですね。。。
[[Web Socket]] は [[HTTP]] から移行するモードで独立したプロトコルではない、
というのが [[IETF]] の主張だからなのでしょうか。

[43] [[Firefox]] も [[Chrome]] も、まだ [CODE[[[ClientHello]]]] に [[NPN]]
を含めています。 [TIME[2015-08-15T03:15:28.100Z]]

[44] 廃案になったためか、実際に使われている値であるにも関わらず、
[[IANA登録簿]]には掲載されていません。 [TIME[2015-08-15T03:16:14.400Z]]

** ALPN

[8] [[ALPN]] は [[HTTP/2]] のために [[IETF]] [[HTTPbis WG]] からの要求で開発されました [SRC[>>4]]。

[13] [CITE[SPDY - OpenSSL の ALPN/NPN API の使い方 - Qiita]]
( ([TIME[2014-12-13 20:30:42 +09:00]] 版))
<http://qiita.com/tatsuhiro-t/items/dea3fb279ad265681049>

[14] [CITE@en[1047698 – ALPN advertisment order may be wrong]] ([TIME[2014-12-13 20:32:49 +09:00]] 版) <https://bugzilla.mozilla.org/show_bug.cgi?id=1047698>

[15] [CITE@en[Chromium Blog: Hello HTTP/2, Goodbye SPDY]]
( ([TIME[2015-02-10 03:03:41 +09:00]] 版))
<http://blog.chromium.org/2015/02/hello-http2-goodbye-spdy-http-is_9.html>

[16] [CITE@en[RFC 7443 - Application-Layer Protocol Negotiation (ALPN) Labels for Session Traversal Utilities for NAT (STUN) Usages]]
([TIME[2015-01-23 14:56:59 +09:00]] 版)
<https://tools.ietf.org/html/rfc7443>

* 関連

[17] [[HTTPS]] も参照。

[41] [CITE@en[draft-ietf-httpbis-tunnel-protocol-05 - The ALPN HTTP Header Field]]
([TIME[2015-07-09 12:21:49 +09:00]] 版)
<https://tools.ietf.org/html/draft-ietf-httpbis-tunnel-protocol-05>

[46] [CITE@en[861266 – Implement TLS 1.2 (RFC 5246) in Gecko (Firefox, Thunderbird), on by default]]
([TIME[2015-08-28 11:49:39 +09:00]] 版)
<https://bugzilla.mozilla.org/show_bug.cgi?id=861266>

[47] [CITE@en[996238 – ALPN identifiers for WebRTC]]
([TIME[2015-08-28 11:51:56 +09:00]] 版)
<https://bugzilla.mozilla.org/show_bug.cgi?id=996238>

[48] [CITE@en[959664 – Add ALPN (RFC 7301) support to NSS]]
([TIME[2015-08-28 11:57:54 +09:00]] 版)
<https://bugzilla.mozilla.org/show_bug.cgi?id=959664>

[49] [CITE@en[1047698 – ALPN advertisment order may be wrong]]
([TIME[2015-08-28 11:58:39 +09:00]] 版)
<https://bugzilla.mozilla.org/show_bug.cgi?id=1047698>

[50] [CITE@en[1125292 – Support Tunnel-Protocol for WebRTC]]
([TIME[2015-09-24 20:36:41 +09:00]] 版)
<https://bugzilla.mozilla.org/show_bug.cgi?id=1125292>

[51] [CITE[Issue 497770 - chromium - BoringSSL ALPN callback cannot send SSL ALERT 120 (no application protocol found) - An open-source project to help move the web forward. - Google Project Hosting]]
([TIME[2015-09-24 20:45:48 +09:00]] 版)
<https://code.google.com/p/chromium/issues/detail?id=497770>

[FIG(quote)[
[FIGCAPTION[
[52] [CITE@en[ALPN Status · http2/http2-spec Wiki]]
([TIME[2015-09-24 20:58:32 +09:00]] 版)
<https://github.com/http2/http2-spec/wiki/ALPN-Status>
]FIGCAPTION]

> Note that some client implementations deal very poorly if a server sends both ALPN and NPN in the ServerHello. When a server responds negotiating a protocol via ALPN in the ServerHello, it must not also send a list of protocols for NPN negotiation as well.

]FIG]
