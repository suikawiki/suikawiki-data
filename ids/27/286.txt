[14] [[計算機システム]]では、[DFN[時間帯のない日時]]を扱うことがよくあり、
[[浮動時]]や[[地方時]]などと呼ばれています。

[15] これは当該[[計算機]]の動作している地域で使われる[[時刻]]を表していることが多いですが、 
文脈により決まるその他の地域の時刻を表していたり、 
どこの時刻であるか不明であることを表していたりする場合もあります。

[16] [[将来の日時]]の記述のために敢えて用いることもあります。

[FIG(quote)[
[FIGCAPTION[
[1] [CITE@en-US[Floating time zone support? | Communities]]
( ([TIME[2016-06-15 12:46:58 +09:00]]))
<https://discussions.apple.com/thread/1080972?start=0&tstart=0>
]FIGCAPTION]

> iCal has a handy feature where you can set the time zone of an event to "Floating". What this means is that the event is no longer tied to a specific time zone. So, let's say you want to schedule lunch at 12pm every day no matter where in the world you are, you set the time zone to floating, and that way you don't get an alert to have lunch at 4am if you're visiting another country.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[2] [CITE[DateTime::TimeZone::Floating - search.cpan.org]]
( ([TIME[2016-06-15 12:47:27 +09:00]]))
<http://search.cpan.org/dist/DateTime-TimeZone/lib/DateTime/TimeZone/Floating.pm>
]FIGCAPTION]

> This class is used to provide the DateTime::TimeZone API needed by DateTime.pm, but for floating times, as defined by the RFC 2445 spec. A floating time has no time zone, and has an effective offset of zero.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[3] [CITE[DateTime::TimeZone - search.cpan.org]]
( ([TIME[2016-06-15 12:48:15 +09:00]]))
<http://search.cpan.org/dist/DateTime-TimeZone/lib/DateTime/TimeZone.pm#USAGE>
]FIGCAPTION]

> If the "name" parameter is "floating", then a DateTime::TimeZone::Floating object is returned. A floating time zone does have any offset, and is always the same time. This is useful for calendaring applications, which may need to specify that a given event happens at the same local time, regardless of where it occurs. See RFC 2445 for more details.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[4] [CITE@en-US[Working with Time Zones]]
( ([TIME[2011-07-05 21:14:06 +09:00]]))
<https://www.w3.org/TR/timezone/#floating>
]FIGCAPTION]

> Some observed time values are not related to a specific moment in incremental time. Instead, they need to be combined with local information to determine a range of acceptable incremental time values. We refer to these sorts of time values as "floating times" because they are not fixed to a specific incremental time value. Floating times are not attached and should never be attached to a particular time zone.
> Some examples of floating time events include a user’s birth date, a document's publication date, a list of official holidays, or the expiration date for an offer (if not tied explicitly to a time zone).
> Example 4:  
> Suppose that your application delivers newspapers to users. Your application wants to show the publication date of each issue so that, for example, The Sunday News is always shown as being published on a Sunday. The publication date is thus a "floating time" value.
> 

]FIG]


[FIG(quote)[
[FIGCAPTION[
[5] [CITE@en-US[Working with Time Zones]]
( ([TIME[2011-07-05 21:14:06 +09:00]]))
<https://www.w3.org/TR/timezone/#guidelinessummary>
]FIGCAPTION]

> When comparing times, floating times with no time zone information should use UTC as the time zone.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[6] [CITE@en[RFC 5545 - Internet Calendaring and Scheduling Core Object Specification (iCalendar)]]
( ([TIME[2016-06-05 16:19:53 +09:00]]))
<https://tools.ietf.org/html/rfc5545#section-3.3.5>
]FIGCAPTION]

>       FORM #1: DATE WITH LOCAL TIME
>       The date with local time form is simply a DATE-TIME value that
>       does not contain the UTC designator nor does it reference a time
>       zone.  For example, the following represents January 18, 1998, at
>       11 PM:
>        19980118T230000
>       DATE-TIME values of this type are said to be "floating" and are
>       not bound to any time zone in particular.  They are used to
>       represent the same hour, minute, and second value regardless of
>       which time zone is currently being observed.  For example, an
>       event can be defined that indicates that an individual will be
>       busy from 11:00 AM to 1:00 PM every day, no matter which time zone
>       the person is in.  In these cases, a local time can be specified.
>       The recipient of an iCalendar object with a property value
>       consisting of a local time, without any relative time zone
>       information, SHOULD interpret the value as being fixed to whatever
>       time zone the "ATTENDEE" is in at any given moment.  This means
>       that two "Attendees", in different time zones, receiving the same
>       event definition as a floating time, may be participating in the
>       event at different actual times.  Floating time SHOULD only be
>       used where that is the reasonable behavior.
>       In most cases, a fixed time is desired.  To properly communicate a
>       fixed time in a property value, either UTC time or local time with
>       time zone reference MUST be specified.
>       The use of local time in a DATE-TIME value without the "TZID"
>       property parameter is to be interpreted as floating time,
>       regardless of the existence of "VTIMEZONE" calendar components in
>       the iCalendar object.

]FIG]

[7] [CODE(HTML)@en[<input type=datetime-local>]] が扱うのも[[浮動時]]です。
[CODE(JS)@en[Date]] への変換では、 [[UTC]] とみなされた値になります。

[8] [CITE@ja['''['''perl''']'''DateTimeのtimezoneについてのメモ - $shibayu36->blog;]]
( ([TIME[2016-06-15 13:01:25 +09:00]]))
<http://blog.shibayu36.org/entry/20111002/1317542196>

[9] [CITE[time - The Go Programming Language]] ([TIME[2017-03-10 18:06:12 +09:00]]) <https://golang.org/pkg/time/#Location>

[DFN[Local]]

[10] [[T2EX]] ([TIME[2015-03-28 15:58:08 +09:00]]) <http://www.tron.org/ja/wp-content/themes/dp-magjam/pdf/specifications/ja/TEF020-S009-02.00.00_ja.pdf#page=107>

[DFN[ローカル時刻]]

[11] [CODE[-00:00]] も参照。

[12] [[[CODE[DateTime]] (.NET)]] には、[[地方時]]でも [[UTC]]
でもないことを表す [DFN[[CODE[Unspecified]]]] という指定があります。

[CITE@en[DateTimeKind Enumeration (System)]] ([TIME[2017-06-01 22:21:51 +09:00]]) <https://msdn.microsoft.com/en-us/library/shx7s921(v=vs.110).aspx>


[13] [CITE@en[RFC 4791 - Calendaring Extensions to WebDAV (CalDAV)]]
([TIME[2017-09-24 16:22:36 +09:00]])
<https://tools.ietf.org/html/rfc4791#section-7.3>

[17] [CITE['''['''tz''']''' DST ends 2040 in Oracle database]]
([TIME[2019-01-30 07:08:42 +09:00]])
<https://mm.icann.org/pipermail/tz/2019-January/027453.html>

[18] [CITE@en[houseabsolute/DateTime.pm: A date and time object for Perl]]
([TIME[2019-06-10 09:56:53 +09:00]])
<https://github.com/houseabsolute/DateTime.pm#floating-datetimes>


[24] 
[DFN[概念時刻]]なる語を使う人達がいます。
通用範囲は極めて限られていて、
現時点で見つかったものは次のものだけでした。
[TIME[2019-09-30T11:41:32.300Z]]

[FIG(quote)[
[FIGCAPTION[
[21] [CITE@ja[.Net FrameworkのDateTime型 - C Sharpens you up]],
[[Sampo]],
2014-02-13
([TIME[2019-09-30 20:35:07 +09:00]])
<http://cs.hatenablog.jp/entry/2014/02/13/180213>
]FIGCAPTION]

> 絶対時刻であるUtc, Localと概念時刻であるUnspecifiedを同じクラスで扱おうとしたあたりが闇の起源くさいですね。

;; >>19 と同じ[[著者]]。

]FIG]

[FIG(quote)[
[FIGCAPTION[
[19] [CITE[timestamp with time zone型はタイムゾーン情報を持っていない - [[Qiita]]]],
@yuba,
2014年11月18日に投稿
([TIME[2019-09-30 20:29:47 +09:00]])
<https://qiita.com/yuba/items/7852a29d63d6279c6f6e>
]FIGCAPTION]

> 2015年1月1日00:00:00 という時刻表記は、地球上のどこで読んだかによって意味が変わってしまいます。このような時刻のことを [B[概念時刻]] と呼ぶことにしましょう。ボジョレー・ヌーボーの解禁時刻、11月第3木曜日00:00:00も概念時刻だからこそ世界各地で解禁時刻が違い、バブル期は日本が世界で最初に解禁されるって盛り上がったものです。

]FIG]

- [22] [CITE@ja[Sadayuki Furuhashiさんのツイート: "UNIX時刻を純粋に表現するのはInstant。LocalDateTimeは[[概念時刻]]を表すので後付けされるタイムゾーンによって表す絶対時刻が異なるやつ。OffsetDateTimeも絶対時刻を表すけども、Instantと違ってタイムゾーンを所有している… "]],
[[Sadayuki Furuhashi]],
午前11:31 · 2017年6月15日 ([TIME[2019-09-30 20:37:10 +09:00]]) <https://twitter.com/frsyuki/status/875179040809734144>

[FIG(quote)[
[FIGCAPTION[
[20] [CITE@ja[MessagePackフォーマット仕様にTimestamp型を追加 - Blog by [[Sadayuki Furuhashi]]]],
[[frsyuki]],
2017-08-10
([TIME[2019-09-30 20:31:26 +09:00]])
<http://frsyuki.hatenablog.com/entry/2017/08/10/144310>
]FIGCAPTION]

> [B[概念時刻]]は、世界のどこのタイムゾーンで扱うかによって別の瞬間を示します。例えば 2017-08-09 18:25:00 は、どのタイムゾーンで解釈するかによって実際の時刻が変わるため、概念時刻です。概念時刻は、理論上は暦(calendar system)に依存していくつかの表現方法がありますが、普通はグレゴリオ暦(西暦)を使います。

;; >>19 を参照。

]FIG]

- [23] [CITE@ja[焼元大事件: "DBに概念時刻使わないで" - [[mikutter]]]],
[[焼元大事件]],
2018年1月18日 9:33 ([TIME[2019-09-30 20:39:05 +09:00]]) <https://social.mikutter.hachune.net/@ahiru/99368017199165758>


