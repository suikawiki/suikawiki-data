[1] [DFN[[RUBY[窓][ウィンドウ]@en[window]]]]は、 [[Webブラウザー]]において[[利用者]]に[[レンダリング]]を提示するための基本的な単位です。

* 仕様書

[REFS[
- [15] [CITE@en[WebDriver]] ([TIME[2016-07-22 07:24:31 +09:00]]) <https://w3c.github.io/webdriver/webdriver-spec.html#h-resizing-and-positioning-windows>
]REFS]

* 構成要素

[3] [[窓][窓 (Web)]]は、次の構成要素を持ちます。

[FIG(list members)[
: [[アドレスバー]] :
: [[タイトルバー]] :
: [[メニューバー]] :
: [F[機能[[ツールバー]]]] :
: [F[リンク[[ツールバー]]]] :
: [[状態バー]] :
: [[busy indicator]] :
: [[サイドバー]] :
: [F[最上位閲覧文脈]] :
[[最上位閲覧文脈]]への[[強い参照]]を保持します ([[最上位閲覧文脈]]参照)。
: [[viewport]] :
]FIG]

[5] 実装によっては、相当するものが存在しないかもしれません。例えば、
[F[サイドバー]]に相当するものが無いかもしれません。

[6] 実装によっては、複数の[[窓][窓 (Web)]]でこれら構成要素の一部を共有しているかもしれません。
例えば[[タブブラウザー]]では、ここでいう[[窓][窓 (Web)]]は[[タブ]]に当たり、
[[アドレスバー]]はその[[タブ]]を含む[[窓]]全体で共有しているかもしれません。
[[Mac OS]] では、[[メニューバー]]は[[プラットフォーム]]全体で共有しているかもしれません。

[8] 一般的な[[Webブラウザー]]では、[F[最上位閲覧文脈]]が[[補助閲覧文脈]]かどうかで、
構成要素の表示の有無や機能が変化します。例えば[F[アドレスバー]]は、
[[補助閲覧文脈]]なら[[利用者]]が書き換えできなくなります。

* レンダリング

[2] そのまま[[窓]]として実装するのが初期の方法でしたが、
現在では[[タブ]]として実装するのが一般的になっています。
あるいは [[MDI]] における[[サブウィンドウ]]として表現されることもあります。
その他の表現方法も可能でしょう。
いずれにせよ、 [[CSSOM]] の定義上は一括して[[窓][窓 (Web)]]と呼ばれています。

[HISTORY[
[7] かつては、[[モーダルダイアログ]]として表示される[[窓][窓 (Web)]]もありました
([CODE(DOMm)@en[showModalDialog]])。

[9] かつては、[[二次的閲覧文脈]]として、1つの[[窓][窓 (Web)]]に複数の[[最上位閲覧文脈]]が存在する形態も想定されていました。
これは本体の画面の他に[[サイドバー]]にも別の画面が埋め込まれた状態を表していました。

;; [10] この[[仕様]]は削除されましたが、1つの[[窓]]に複数の[[最上位閲覧文脈]]を埋め込むこと自体が禁止されたわけではありません
(どのような[[窓]]の構成にし、どのように[[利用者]]に提供するかは、
[[Webブラウザー]]の裁量の範囲内です)。ただ、それは何らかの関係を持った[[閲覧文脈]]同士ではなく、
たまたま画面表示上並んでいるだけの別個の[[閲覧文脈]]でしかないものとしなければならない、ということです。
]HISTORY]

* 閉じる

[11] [[窓][窓 (Web)]]には、「閉じる」操作が必要です。

[12] [[窓][窓 (Web)]]を閉じることを選択すると、[F[最上位閲覧文脈]]について[[閲覧文脈を捨てる]]操作を実行することが期待されています。

[4] 実際上、これは[[タブブラウザー]]なら[[タブ]]を閉じる操作かもしれませんし、
[[窓]]を閉じる操作によりその[[窓]]のすべての[[タブ]]を同時に閉じるのかもしれません。

[13] [[閲覧文脈を捨てる]]際に、[[スクリプトを無効]]にしても構わないとされています
([[閲覧文脈を捨てる]]参照)。つまり[[スクリプト]]実行中など[[閲覧文脈]]が通常の[[利用者]]の操作を直ちに受け付けない状態であっても、
[[閲覧文脈を捨てる]]機能を提供できます。実際、[[スクリプト]]の暴走や、
[[モーダルダイアログ]]の乱用、 [CODE[onbeforeunload]] や [CODE[onunload]]
の処理が長い場合などを想定すると、通常の「閉じる」操作と、
それにより閉じられない場合に強制的に「閉じる」操作の両方を[[利用者]]に提供する方が良さそうです。

* 関連

[14] [CODE(DOMi)@en[Window]] は、[[窓]]に対応する機能として作られたものですが、
現在では[[閲覧文脈]]に近いものとして規定されています。

* 歴史
