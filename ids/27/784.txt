[62] [DFN[閏秒のないUTC]]は、 [[UTC]] の[[閏秒]]を「無視」したものです。厳密に言えば [[UTC]]
とは異なる (し [[TAI]] や [[UT]] や [[GMT]] とも異なる) [[時刻系]]ですが、
便宜上 [[UTC]] と呼ばれることがよくあります。

[3] [[計算機システム]]上では[[閏秒]]を正確に扱うのは煩雑で、大多数の場合、無視されます。
また[[日数による日時表現]]も、
1[[日]]を固定長と仮定しており、原理的に[[閏秒]]を扱えません。
こうした文脈で用いられていると考えられるのが[DFN[閏秒のない時刻系]]です。
現在、そのような場合のほとんどが、 [[UTC]] に近いが [[UTC]] 
ではない[[時刻系]]を使っているといえます。

* UTC との違い

[4] [[UTC]] で[[正閏秒]]が挿入された場合、[[閏秒のないUTC]]では、[[閏秒]]が存在しなかったものとみなします。
ここで、存在しなかったとは、そもそもその[[秒]]が[[時間軸]]上に存在しないとみなすのであって、
その前後の[[秒]]の[[時刻]]は [[UTC]] と同じとします。

;; [5] すなわち、 [[UTC]] で 59秒、60秒、0秒と3つの[[秒]]が順に存在する時、
[[閏秒のないUTC]] では59秒、0秒と2つしか[[秒]]が存在しなかったとみなします。

[6] [[UTC]] で[[負閏秒]]が実施された例はありませんが、仮に実施されたとすると、
[[閏秒のないUTC]]では、その[[秒]]が存在したものとみなします。

;; [7] 実際には[[時刻系]]によって[[時間軸]]上の[[秒]]が消失したり出現したりするはずもなく、
前後数分間の[[秒]]の長さが改変されたり、[[時計]]の誤差とみなされていずれかのタイミングで補正されたりするものです。
[[閏秒]]参照。

* 閏秒のない時刻を扱う方式

[8] 原理的に[[閏秒]]を表現できないもの:
[FIG(middle list)[
- [[日]]単位の[[整数時刻系]]
]FIG]

[9] [[閏秒]]を無視しているもの:
[FIG(short list)[
- [[秒]][[以下]]の[[単位]]の[[整数時刻系]]のほとんど
- [[GPS時]]
]FIG]

[1] 構文的に[[閏秒]]を認めていないもの:
[FIG(list middle)[
- [[HTMLの日付形式]]
- [[XML Schemaの日付形式]]
- [[RFC 822の日付形式]]
- [[RFC 1123の日付形式]]
- [[Syslogの日時形式]]
]FIG]

* 時刻同期

[10] [[閏秒]]のある [[UTC]] と比較的正確に[[時刻同期]]されたシステムでは、
[[閏秒]]の存在する [[UTC]] と[[閏秒のない時刻系]]を採用した[[システム時計]]との整合性が問題になります。

[11] [[秒]]の長さを変化させて見かけ上[[閏秒]]が無かったことにする [[leap smear]]
法が広く用いられています。

[12] それほど正確に[[時刻同期]]されていない (がある程度は[[時刻同期]]された)
システムでは、[[閏秒]]を過ぎた次の同期タイミングで適切な[[時刻]]に再設定されることになります。
しかし同期の精度とタイミングによっては、同じ[[秒]]が2度実施されたり、
1秒戻ったりすることもあり、それによりシステムの動作が不安定になる場合もあります。

* 関連

[2] [[閏秒]]、 [CODE[right/]] も参照。

* メモ
