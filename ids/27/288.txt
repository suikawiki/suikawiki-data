[5] [DFN[TZID]] は、 [[iCalendar]] における[[時間帯の識別子]]です。

[FIG(quote)[
[FIGCAPTION[
[2] [CITE@en[RFC 5545 - Internet Calendaring and Scheduling Core Object Specification (iCalendar)]]
( ([TIME[2016-06-05 16:19:53 +09:00]]))
<https://tools.ietf.org/html/rfc5545#section-3.2.19>
]FIGCAPTION]

>       The presence of the SOLIDUS character as a prefix, indicates that
>       this "TZID" represents a unique ID in a globally defined time zone
>       registry (when such registry is defined).
>          Note: This document does not define a naming convention for
>          time zone identifiers.  Implementers may want to use the naming
>          conventions defined in existing time zone specifications such
>          as the public-domain TZ database '''['''TZDB''']'''.  The specification of
>          globally unique time zone identifiers is not addressed by this
>          document and is left for future study.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[3] [CITE[vCalendar/iCalendar parsing timezone - Stack Overflow]]
( ([TIME[2016-06-15 13:04:15 +09:00]]))
<http://stackoverflow.com/questions/11439948/vcalendar-icalendar-parsing-timezone>
]FIGCAPTION]

> Actually, all Calendar apps/parsers recognize the TZID timezones as defined originally by Microsoft. And you can generate the file yourself, it doesn't have to come from Outlook. – Noah David Aug 5 '15 at 19:14
>   	 	
> This is far from the thruth. I would say most people use and support the olson timezones, with the exception of microsoft products. You'll get a wider coverage if you use just olson timezone names. – Evert Aug 5 '15 at 20:53
>   	 	
> I don't know about that... to create a properly recognized Outlook Calendar ICS file, that works with Timezones, you MUST use the TZID as I documented here on a blog years ago when I worked for Nokia Siemens Networks: hello-dot-wordpress.blogspot.com/2009/10/… Google Calendar, Apple Calendar, and every other calendar product I've used over the years respects the TZID entry in the ICS files -- so it's probably best to use the method that's supported across ALL platforms, not "most" of them as you described above. – Noah David Aug 6 '15 at 17:49 

]FIG]


[4] [CITE[iCal4j Timezones not compatible with Microsoft Outlook Timezones? - Stack Overflow]]
( ([TIME[2016-06-15 13:04:09 +09:00]]))
<http://stackoverflow.com/questions/11873976/ical4j-timezones-not-compatible-with-microsoft-outlook-timezones>


[1] [CITE@en[RFC 4324: Calendar Access Protocol (CAP)]], [TIME[2023-12-02T07:30:13.000Z]], [TIME[2023-12-02T13:49:36.680Z]] <https://www.rfc-editor.org/rfc/rfc4324.html#section-8.13>