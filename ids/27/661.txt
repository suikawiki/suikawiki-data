[2] [DFN[[RUBY[取扱器][ハンドラー]@en[handler]]]]は、
特定の [[URL scheme]] や[[MIME型]]の[[資源]]の処理を行う[[ソフトウェア部品]]です。

[3] 普通、[[Webブラウザー]]や[[プラグイン]]以外の[[ネイティブアプリケーション]]や
[[Webアプリケーション]]として実装されているものをいいます。

* 仕様書

[REFS[
- [1] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2016-07-19 18:13:57 +09:00]]) <https://html.spec.whatwg.org/#custom-handlers>
]REFS]

* 分類

[4] [[URL scheme]] ごとに登録される[[プロトコル取扱器]]と、
[[MIME型]]ごとに登録される[[内容取扱器]]があります。

[5] [[ネイティブアプリケーション]]の[[取扱器]]は、伝統的に[[ヘルパーアプリケーション]]と呼ばれています。

[6] [[プラットフォーム]]側で管理される場合もあれば、
[[Webブラウザー]]独自で管理している場合、両方の機構を併用している場合もあります。

* API

[7] [[Webページ]]から[[著者]]が[[利用者]]に[[取扱器]]を提示する次の [[DOM API]]
が用意されています。
[FIG(list middle)[
- [CODE(DOMm)@en[registerProtocolHandler]]
- [CODE(DOMm)@en[isProtocolHandlerRegistered]]
- [CODE(DOMm)@en[unregisterProtocolHandler]]
- [CODE(DOMm)@en[registerContentHandler]]
- [CODE(DOMm)@en[isContentHandlerRegistered]]
- [CODE(DOMm)@en[unregisterContentHandler]]
]FIG]

* 文脈

[8] [[navigate]] から呼び出されます。

[9] [[プラットフォーム]]の [[URL]] を開く [[API]] や[[ファイル]]を開く [[API]] は、
([[プラットフォーム]]側で管理されている) [[取扱器]]を呼び出します。

* 取扱器データベース

[10] [[Webブラウザー]]は、[DFN[[F[取扱器データベース]]]]を持ちます。

;; [11] 実際には[[Webブラウザー]]独自で管理していることもあれば、
[[プラットフォーム]]に一部または全部を委ねていることもあります。

[12] [[取扱器データベース]]は、[F[[[プロトコル取扱器]]群]]と[F[[[内容取扱器]]群]]の
2つの[[集合]]を持ちます。前者は[[プロトコル取扱器]]の、後者は[[内容取扱器]]の[[集合]]です。

[17] 同じ[F[scheme][URL scheme]]や[F[MIME型]]の (処理が異なる) 
[[取扱器]]を[[集合]]中に複数含められるかどうかは、実装によります。
実装によっては、複数含まれていれば、[[利用者]]にどれを選択するかを都度問い合わせたり、
いずれかを[[既定]]のものと選ぶことができたりするかもしれません。

* 取扱器オブジェクト

[13] [[取扱器]]は、次の状態を持ちます。
[FIG(list members)[
: [F[種別]] : [[プロトコル取扱器]]または[[内容取扱器]]
]FIG]

[14] [[Webアプリケーション]]の場合、次の状態を持ちます。
[FIG(list members)[
: [F[proto-URL]] :
: [F[題名]] :
]FIG]

[15] [[プロトコル取扱器]]の場合、次の状態を持ちます。
[FIG(list members)[
: [F[scheme][URL scheme]] :
]FIG]

[16] [[内容取扱器]]の場合、次の状態を持ちます。
[FIG(list members)[
: [F[MIME型]] :
]FIG]
