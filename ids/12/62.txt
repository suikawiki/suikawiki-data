
[1]
[CITE@en[ECS]]
<http://www.topologi.com/public/ECS.pdf>
([[名無しさん]])


[2]
[CITE[ECS - Moving from Well-Formed XML to Amply-Tagged XML - O'Reilly XML Blog]] ([[Rick Jelliffe]] 著, [TIME[2007-02-07 08:47:16 +09:00]] 版) <http://www.oreillynet.com/xml/blog/2007/02/ecs_moving_from_wellformed_xml.html>

[FIG(quote)[
[FIGCAPTION[
[3] [CITE[ECS - Moving from Well-Formed XML to Amply-Tagged XML]]
([TIME[2015-08-21 10:59:28 +09:00]] 版)
<http://archive.oreilly.com/pub/post/ecs_moving_from_wellformed_xml.html>
]FIGCAPTION]

> Opera's Anne van Kesteren has blogged that HTML browser makers should "define graceful error handling for XML, put some IETF, W3C or WHATWG sticker on it, label it XML 2.0 and ship it." It has been widely reported.
> My company, Topologi, has been using exactly such a grammar for five years in some of our products. We use it as our HTML and SGML editing mode, its not perfect but perfectly workable in most cases. It seems to be in Ann's ballpark for an "XML 2.0". 
> ECS ("Editor's Concrete Syntax") takes XML and puts back the forms of end-tag minimization and close-delimiter omission (which is what Ann is calling "graceful error handling" AFAICS) that XML removed from SGML under the mantra 'terseness is of minimal importance." This moves it much closer to idiomatic HTML; it is Forgiving XML rather than Superbitch XML, and this is far more suitable for just folks to use.

]FIG]


[4] [CITE[Container Instance Draining - Amazon Elastic Container Service]]
([TIME[2017-11-22 17:38:55 +09:00]])
<http://docs.aws.amazon.com/AmazonECS/latest/developerguide/container-instance-draining.html>