
* 仕様書

[REFS[
- [31] [CITE@en-US-x-hixie[HTML Standard]] ([TIME[2016-12-05 14:51:53 +09:00]]) <https://html.spec.whatwg.org/#channel-messaging>
-- [26] [CITE@en-US-x-hixie[HTML Standard]] ([TIME[2016-12-05 14:51:53 +09:00]]) <https://html.spec.whatwg.org/#message-channels>
-- [32] '''[CITE@en-US-x-hixie[HTML Standard]] ([TIME[2016-12-05 14:51:53 +09:00]]) <https://html.spec.whatwg.org/#message-ports>'''
]REFS]

* 作成

[36] [CODE(DOMi)@en[MessagePort]] [[インターフェイス]]は[[コンストラクター]]を持ちません。

[37] 作成するには、 [CODE(DOMi)@en[MessageChannel]] [[オブジェクト]]などを作成する必要があります。

-*-*-

[39] [[環境設定群オブジェクト]][VAR[所有者]]に関する[DFN[[RUBYB[新しい[CODE(DOMi)@en[MessagePort]]オブジェクトの作成]@en[create a new [CODE(DOMi)@en[MessagePort]] object]]]]は、
次のようにしなければ[MUST[なりません]] [SRC[>>32]]。

[FIG(steps)[
= [41] [CODE(DOMi)@en[MessagePort]] を返します。
[FIG(list members)[ [42] [CODE(DOMi)@en[MessagePort]]
: [F[所有者][MessagePort]] : [VAR[所有者]]
]FIG]
]FIG]

[40] この処理は、次の場面から呼び出されます。
[FIG(list middle)[
- [CODE(DOMi)@en[MessageChannel]] [[コンストラクター]]
- [CODE(DOMi)@en[Worker][new Worker]] [[コンストラクター]]
- [CODE(DOMi)@en[SharedWorker]] [[コンストラクター]]
- [[ワーカーを走らせる]]処理
]FIG]

* 文脈

[33] [CODE(DOMi)@en[MessagePort]] [[インターフェイス]]は、
[[文書環境]]と[[ワーカー環境]]に[[晒され]]ています [SRC[>>32]]。

* 状態

[38] [CODE(DOMi)@en[EventTarget]] としての状態に加えて、
次の状態を持ちます。
[FIG(list members)[
: [F[[[entangle]] されたポート]] [SRC[>>32]] :
他の [CODE(DOMi)@en[MessagePort]] [[オブジェクト]]。
: [F[ポートメッセージキュー]] :
[[タスク源]]。初期状態は空。 
[SRC[>>32]]
: [DFN[[F[[RUBYB[既に出荷済み][has been shipped]]][has been shipped]]]]フラグ :
初期状態は[[偽]]。 
[SRC[>>32]]
: [DFN[[F[[RUBYB[所有者]@en[owner]]][MessagePort]]]] :
[[環境設定群オブジェクト]]。
[SRC[>>32]]

]FIG]

* メンバー

[34] [CODE(DOMi)@en[EventTarget]] を[[継承]]しています [SRC[>>32]]。

[35] 加えて、次の[[メンバー][インターフェイスメンバー]]があります。
[FIG(short list)[
- [CODE(DOMm)@en[close]]
- [CODE(DOMm)@en[postMessage]]
- [CODE(DOMm)@en[start]]
- [CODE(DOMa)@en[onmessage]]
]FIG]

* 処理

** entangle

[43] [VAR[ポート1]]と[VAR[ポート2]]の [DFN[entangle]] は、次のようにしなければ[MUST[なりません]]
[SRC[>>32]]。

[FIG(steps)[
= [44] [VAR[ポート1]]の [F[[[entangle]] されたポート]]が [CODE[null]] でなければ、
== [45] [VAR[ポート1]]の [F[[[entangle]] されたポート]]の[F[[[entangle]] されたポート]]を、
[CODE[null]] に設定します。
= [46] [VAR[ポート2]]の [F[[[entangle]] されたポート]]が [CODE[null]] でなければ、
== [47] [VAR[ポート2]]の [F[[[entangle]] されたポート]]の[F[[[entangle]] されたポート]]を、
[CODE[null]] に設定します。
= [48] [VAR[ポート1]]の [F[[[entangle]] されたポート]]を、[VAR[ポート2]]に設定します。
= [49] [VAR[ポート2]]の [F[[[entangle]] されたポート]]を、[VAR[ポート1]]に設定します。
]FIG]

[51] この処理は次の場面で呼び出されます。
[FIG(middle list)[
- [CODE(DOMi)@en[MessagePort]] の [F(ss)[Transfer]]
- [CODE(DOMi)@en[MessageChannel]] [[コンストラクター]]
- [[ワーカーを走らせる]]
- [CODE(DOMi)@en[SharedWorker]] [[コンストラクター]]
]FIG]

[50] この処理が済んだ状態を、[VAR[ポート1]]と[VAR[ポート2]]が 
[DFN[[RUBYB[entangle されている]@en[entangled]]]]といいます [SRC[>>32]]。

* [CODE(DOMi)@en[MessageChannel]] インターフェイス [CODE(DOMa)@en[port1]] 属性、 [CODE(DOMa)@en[port2]] 属性

[27] [CODE(DOMi)@en[MessageChannel]] [[インターフェイス]]の
[DFN[[CODE(DOMa)@en[port1]]]] [[IDL属性]]と
[DFN[[CODE(DOMa)@en[port2]]]] [[IDL属性]] [SRC[>>26]]
は、それぞれ[[文脈オブジェクト]]の[F[ポート1]]と[F[ポート2]]を返します。

[28] [CODE(DOMi)@en[MessageChannel]] [[オブジェクト]]の[DFN[[F[ポート1]]]]と[DFN[[F[ポート2]]]]は、
[[コンストラクター]]によって新たに作成された [CODE(DOMi)@en[MessagePort]]
[[オブジェクト]]がそれぞれに設定されます。これらの値は変化することはありません。

[29] 2つのポートは、作成された時点では (異なる[[オブジェクト]]であることを除けば)
まったく同じ初期状態です。どちらをどう使うかは、[[著者]]が決めることができます。

[EG[
[30] 例えば [CODE[port1]] の側を [CODE[postMessage]] で通信の相手先に渡したら、
以後のこちら側の送受信には [CODE[port2]] を使うことになります。
逆に [CODE[port2]] を渡したら、 [CODE[port1]] を使うことになります。
]EG]

** transfer

[52] [CODE(DOMi)@en[MessagePort]] [[オブジェクト]]は、 [[transferable object]]
です。 [SRC[>>32]]

[53] [CODE(DOMi)@en[MessagePort]] [[オブジェクト]]の
[F(ss)[Transfer]] [[内部メソッド]]は、 [VAR[対象realm]]について、
次のようにしなければ[MUST[なりません]] [SRC[>>32]]。
[FIG(steps)[
= [54] [[文脈オブジェクト]]の[F[既に出荷済み]]フラグを、[[真]]に設定します。
= [55] [VAR[新]]を、 [CODE(DOMi)@en[MessagePort]] [[オブジェクト]]に設定します。
[FIG(list members)[ [56] [CODE(DOMi)@en[MessagePort]]
: [F[realm][Realm]] : [VAR[対象realm]]
: [F[所有者][MessagePort]] : [VAR[対象realm]]の[F[設定群オブジェクト]]
: [F[既に出荷済み]]フラグ : [[真]]
]FIG]
= [57] [[文脈オブジェクト]]の[F[ポートメッセージキュー]]内の[[タスク]]を、
すべて[VAR[新]]の[F[ポートメッセージキュー]]に移動します。
この時、移動した[[タスク]]の[F[文書]]を、
[VAR[新]]の[F[所有者][MessagePort]]の[F[有責文書]]に設定します。
= [58] [VAR[遠隔ポート]]を、
[[文脈オブジェクト]]の [F[[[entangle]] されたポート]]に設定します。
= [59] [VAR[遠隔ポート]]が [CODE[null]] 以外なら、
== [60] [VAR[遠隔ポート]]の[F[既に出荷済み]]フラグを、[[真]]に設定します。
== [61] [VAR[遠隔ポート]]と[VAR[新]]を [[entangele]] します。
= [62] [[文脈オブジェクト]]の [F(ss)[Detached]] [[内部スロット]]を、[[真]]に設定します。
= [63] [VAR[新]]を返します。
]FIG]

* 歴史

[1] [CITE[IRC logs: freenode / #whatwg / 20130604]]
( ([TIME[2013-06-06 22:25:38 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20130604>

[2] [CITE[''''''[''''''whatwg'''''']'''''' onclose events for MessagePort]]
( ([TIME[2013-10-29 23:45:30 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-October/041298.html>

[3] [CITE@en[Web Applications 1.0 r8306     People apparently don't like it when the spec requires things that are impossible to implement, go figure. (In this case, synchronously detecting that one of the MessagePorts being Transferred in the MessagePort message is actually the target of the message. You can't necessarily know this synchronously, since if the port has been shunted around between workers, you might only discover who the final target actually is after the message has itself bounced between threads for a while.)]]
( ([TIME[2013-11-22 08:48:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=8305&to=8306>

[4] [CITE[''''''[''''''whatwg'''''']'''''' onclose events for MessagePort]]
( ([TIME[2013-12-07 10:22:36 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-December/041739.html>

[5] [CITE@en[Web Applications 1.0 r8336     Add a way to catch the other side of a port having a catastrophic death.]]
( ([TIME[2013-12-07 10:22:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=8335&to=8336>

[6] [CITE@en[Web Applications 1.0 r8341     Updates for r8297, fixing <option> to treat 'dirtiness' correctly, and r8336, fixing 'error' events sent to MessagePort objects to not race messages sent from those ports (or, worse, the event that the port is delivered on...).]]
( ([TIME[2013-12-12 02:41:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=8340&to=8341>

[7] [CITE[IRC logs: freenode / #whatwg / 20131218]]
( ([TIME[2013-12-20 09:03:33 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20131218>

[8] [CITE@en[Web Applications 1.0 r8342     Make sure subsequent owners of an ill-fated port's friend can know about that fate]]
( ([TIME[2013-12-12 04:51:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=8341&to=8342>

[9] [CITE[''''''[''''''whatwg'''''']'''''' onclose events for MessagePort]]
( ([TIME[2014-01-31 18:43:03 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2014-January/041953.html>

[10] [CITE@en[Web Applications 1.0 r2020 Make MessagePort objects not be owned by Windows necessarily, and remove ownerWindow.]]
( ([TIME[2008-08-06 09:25:00 +09:00]] 版))
<https://html5.org/r/2020>

[11] [CITE@en[Web Applications 1.0 r2116 Change 'unload' to 'close' for MessagePorts.]]
( ([TIME[2008-08-26 19:36:00 +09:00]] 版))
<https://html5.org/r/2116>

[12] [CITE@en[Web Applications 1.0 r2531    Simplify the way messages in ports are handled when the destination's document is not available.]]
( ([TIME[2008-12-16 10:01:00 +09:00]] 版))
<https://html5.org/r/2531>

[13] [CITE@en[Web Applications 1.0 r2032 Remove redundant event listeners on MessagePort.]]
( ([TIME[2008-08-08 13:14:00 +09:00]] 版))
<https://html5.org/r/2032>

[14] [CITE@en[Web Applications 1.0 r2031 MessagePort should implement EventTarget.]]
( ([TIME[2008-08-07 07:56:00 +09:00]] 版))
<https://html5.org/r/2031>

[15] [CITE@en[Web Applications 1.0 r3346   Allow cloning and posting of closed ports. (credit: dw)]]
( ([TIME[2009-07-01 12:55:00 +09:00]] 版))
<https://html5.org/r/3346>

[16] [CITE@en[Web Applications 1.0 r2885 postMessage() methods that take MessagePort objects now take MessagePortArray objects.]]
( ([TIME[2009-03-21 06:09:00 +09:00]] 版))
<https://html5.org/r/2885>

[17] [CITE@en[Web Applications 1.0 r2024 Simplify garbage collection for ports even further. Define dicarding of Document objects better for ports. Prevent inactive documents from receiving messages.]]
( ([TIME[2008-08-06 16:57:00 +09:00]] 版))
<https://html5.org/r/2024>

[18] [CITE@en[Web Applications 1.0 r3227 Fix the garbage collection rules for ports to actually make sense, and add a note for authors urging them not to rely on the gc for ports.]]
( ([TIME[2009-06-12 12:22:00 +09:00]] 版))
<https://html5.org/r/3227>

[19] [CITE@en[Web Applications 1.0 r3147 Clarify MessagePort GC rules.]]
( ([TIME[2009-05-29 09:38:00 +09:00]] 版))
<https://html5.org/r/3147>

[20] [CITE@en[Web Applications 1.0 r2358    MessagePorts shouldn't be GCed even when their queue is closed if they have events targetted at them. (credit: ap)]]
( ([TIME[2008-10-21 19:24:00 +09:00]] 版))
<https://html5.org/r/2358>

[21] [CITE@en[Web Applications 1.0 r2023 Simplify message ports: use queueing instead of transient 'active' functionality. Also, make localStorage use the same mechanism for obtaining origin as openDatabase().]]
( ([TIME[2008-08-06 16:24:00 +09:00]] 版))
<https://html5.org/r/2023>

[22] [CITE@en[Web Applications 1.0 r2357    Define MessagePort such that they won't be garbage collected while a message is outstanding. (credit: ap)]]
( ([TIME[2008-10-21 04:18:00 +09:00]] 版))
<https://html5.org/r/2357>

[23] [CITE@en[Add <script type="module"> and module resolution/fetching/evaluation · whatwg/html@cd1a9fb]]
([TIME[2016-01-29 22:56:17 +09:00]] 版)
<https://github.com/whatwg/html/commit/cd1a9fb1e83f7d0bc30be8b34ecdaf444a0b19a4>

[24] [CITE@en[Write structured clone algorithm in terms of ECMAScript · whatwg/html@bfb960c]]
([TIME[2016-03-02 16:39:51 +09:00]] 版)
<https://github.com/whatwg/html/commit/bfb960c938580c95e77365e614218b952f96375b>

[25] [CITE@en[Use FrozenArray for Navigator#languages and MessageEvent#ports · whatwg/html@e4df68a]]
([TIME[2016-03-25 13:56:53 +09:00]] 版)
<https://github.com/whatwg/html/commit/e4df68a41b86753c7fcdd0d8ea4615f63ffc87e9>