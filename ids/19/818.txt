[1] 本項では [[CSS]] の[DFN[[RUBY[直列化][シリアライゼーション]@en[serialization]]]]、すなわち [[CSSOM]] (ないしその他の内部データ構造)
を[[文字列]]としての [[CSS]] に変換する操作について述べます。

* 仕様書

[REFS[
- [2] '''[CITE@en-US[CSS Object Model (CSSOM)]] ([TIME[2013-08-24 02:14:10 +09:00]] 版) <http://dev.w3.org/csswg/cssom/>'''
- [3] [CITE@en[CSS Syntax Module Level 3]] ([TIME[2013-08-25 18:30:07 +09:00]] 版) <http://dev.w3.org/csswg/css-syntax/#serialization>
]REFS]

[4] [[CSS]]、[[選択子]]、[[媒体クエリー]]の[[直列化]]は [[CSSOM]] で規定されています。 [[css-syntax]] にも言及がありますが、
一般論に留まっています。

* スタイルシートの直列化

[5] 現時点で[[スタイルシート]]全体の[[直列化]]は規定されていません。

[6] 自然に考えれば、 [CODE(DOMi)@en[[[CSSStyleSheet]]]] の [CODE(DOMa)@en[[[cssRules]]]]
に含まれる各[[規則]]をそれぞれ[[直列化]]して順に連結したものとなるでしょう。

* 選択子の直列化

[7] [[選択子]]の[[直列化]]は [[CSSOM]] で規定されています。

[9] [CODE(CSS)@en[[[<an+b>]]]] の[[直列化]]は [[css-syntax]] で規定されています。

* 媒体クエリーの直列化

[8] [[媒体クエリー]]の[[直列化]]は [[CSSOM]] で規定されています。

* 規則の直列化

[10] [[スタイル規則]]、[CODE(CSS)@en[[[@charset]]]]、[CODE(CSS)@en[[[@import]]]]、
[CODE(CSS)@en[[[@namespace]]]] については [[CSSOM]] で規定されています。

[11] [[宣言ブロック]]、[[プロパティー]]を表す[[宣言]]については [[CSSOM]] で規定されています。

* 値の直列化

[12] [[CSS]] の[[値]]の[[直列化]]は [[CSSOM]] で規定されています。ただし基本的なものだけで、規定がないものもあります。

* 名前空間の直列化

[13] [[選択子]]における[[名前空間接頭辞]]の扱いは、 [[CSSOM]] によれば [[null名前空間]]を除き元々の値 (構文解析時のもの)
を踏襲することになっています。 [[CSSOM]] では[[スタイル規則]]が存在する状態で [CODE(CSS)@en[[[@namespace]]]] 
を編集、追加、削除などできないことになっているので、不整合が生じることはありません。

[14] [[Chrome]] は >>13 のように動作します。 [[Firefox]] は構文解析結果として[[名前空間接頭辞]]を保持していないようで、
最後に宣言されたものに正規化されて[[直列化]]されます。 [[Firefox]]
では[[規則]]が親から削除されると[[名前空間接頭辞]]を取得できなくなり、
[CODE(DOMa)@en[[[selectorText]]]] は[[空文字列]]になります。
([[Chrome]] と [[CSSOM]] では元の値のままです。) [TIME[2013-08-26T13:51:25.600Z]]

* 数値の直列化

;; [15] 構文解析して内部データ構造に変換する時点で起こっているのか、直列化の時点で起こっているのか外部からは判別しがたいですが。

[16] [[CSSOM]] 的には精度には特に言及がないので、素直に解釈すれば内部的に保持している値そのものを直列化するべきですが、
[[ハードウェア等の制約に関する条項]]が適用されると解するべきとも考えられます。 (少なくても、内部表現はおそらく2進数ベースの[[浮動小数点数]]で、
[[CSS]] は10進数なので、その変換誤差はどうしても生じます。)

[17] 
[[Firefox]] は 0.000001px まで小数表現で正しく直列化でき、更に 0.000000000000000000000000000000000000000000001px 
まで指数表現で直列化しますが、それより細かい数は 0px になります。 (現時点で指数表現は字句化の仕様上は認められるようになりましたが、
[[css-values]] 的に、あるいは [[CSSOM]] の直列化の仕様的にはまだ認められていません。更に [[Firefox]]
自体も構文解析できません。) [TIME[2013-08-27T02:17:09.700Z]]

[18] 
[[Chrome]] は 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001px まで小数表現で正しく直列化できます。それより細かい数は 0px になります。 [TIME[2013-08-27T02:17:53.900Z]]

;; [19] いずれも実行する [[OS]] や [[CPU]] によって異なる結果になるかもしれません。 >>17 と >>18 は64ビット版 [[Windows]] です。