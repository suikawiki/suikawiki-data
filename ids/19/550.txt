[1] [CITE[IRC logs: freenode / #whatwg / 20130519]]
( ([TIME[2013-05-21 07:58:14 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20130519>

[2] [CITE[More about devicePixelRatio - QuirksBlog]]
( ([TIME[2013-05-20 23:07:00 +09:00]] 版))
<http://www.quirksmode.org/blog/archives/2012/07/more_about_devi.html>

[3] [CITE[ハマリメモ:Android の devicePixelRatio 1.5 問題【その仕事、蠍は留守です】]]
( ([TIME[2012-11-02 14:57:02 +09:00]] 版))
<http://www.hitoyam.com/web/2011/03/06_2359.html>

[FIG(quote)[
[FIGCAPTION[
[4] [CITE@en[Safari 7.0]]
([TIME[2015-11-04 23:10:22 +09:00]] 版)
<https://developer.apple.com/library/safari/releasenotes/General/WhatsNewInSafari/Articles/Safari_7_0.html#//apple_ref/doc/uid/TP40014305-CH5-SW18>
]FIGCAPTION]

> Rendering sharp, high-resolution images on a Retina display requires a “doubled” backing store with twice the width and height (four times the number of pixels) as on a non-Retina display. Safari 6 supported this by auto-doubling the specified dimensions of the backing store when rendering to a Retina display. However, because of memory constraints, iOS does not perform this auto-doubling, leading to resolution mismatches, confusion, and inconvenience. To alleviate the difficulties, Safari 7 no longer auto-doubles the backing store, but matches the iOS behavior by honoring the requested dimensions as specified.
> Note: Existing code using the devicePixelRatio and webkitBackingStorePixelRatio properties to match the resolution of the backing store to that of the device will continue to work correctly without modification. Code that does not rely on these properties may have to be modified to accommodate the new behavior.
> 

]FIG]


[5] [CITE@en['''['''css-paint-api''']''' Add devicePixelRatio property to PaintRenderingContex…]]
([[xidachen]]著, [TIME[2017-09-09 01:31:07 +09:00]])
<https://github.com/w3c/css-houdini-drafts/commit/70d944c680e91add5257ef5cc5529b47e684366d>