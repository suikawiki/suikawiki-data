[6] 
[[文書体系]]という概念は一応 [[SGML]] 本体規格にもあるのですが、
概念だけでほぼほぼ実態はありませんでした。

[7] 
[[ISO/IEC 10744]] で[[体系]]が [[SGML]] 本体とどう関係し、
技術的にどう記述するかを定めています。

[8] 
実のところ [[SGML]] 本体の体系と [[ISO/IEC 10744]] の体系が意味的に同じといえるのか
(等しいとするべきか、
1種とするべきか、
同名類義の別概念と考えるべきか)
どうかは、
検討の余地があります。

[9] 
[[体系DTD]]は元は[[メタDTD]]と呼ばれていましたが、
適切な命名とは言い切れないとして[[体系DTD]]に改められました
([SEE[ [[体系DTD]] ]])。
新たに選ばれた[[体系]] ([[アーキテクチャー]], architecture),
[[体系的]] (architectural)
の語の方も、
[[情報科学]]分野で[[アーキテクチャー]]は色々な意味で使われていますから、
本当にわかりやすい用語だったか疑義がないでもありません。

[10] 
[[体系]], メタ (高次) とは、
通常の [[SGML文書]]の[[要素]]等の構造に対して、
より抽象化された構造を指しています。

[11] 
例えばソフトウェアマニュアル用の[[文書型]]にも論文用の[[文書型]]にも
「見出し」
「段落」
といった共通性のある構造が出現します。
ところが [[SGML]] の[[文書型]]だけではソフトウェアマニュアルの「段落」
と論文の「段落」が同じなのか (または違うのか) 
が記述できません。
「段落」くらいならまあわかってもわからなくてもいいのかもしれませんが、
「ハイパーリンク」
であるかどうかはわかると便利です。
[[ハイパーリンク]]閲覧ソフトウェアはどの[[文書型]]のどの[[要素型]]が
「ハイパーリンク」
なのか事前に知らなくても、
「ハイパーテキスト文書体系」に属する「ハイパーリンク要素体系」
に相当するものがどの[[要素]]かさえわかれば適切に処理できるからです。
[[文書型]]の自由度はそのまま残しつつ、
[[文書型]]を超えた共通の機能性を実現できるのが[[体系]]なのです。


[2] '''体系の適合性''':
[[体系DTD]] や[[体系][SGML体系]]から派生した[[体系][SGML体系]]や[[クライアント文書]]の[[適合性]]に関しては、
[[体系DTD]] の項を参照して下さい。

[4] [[体系機関]]の[[適合性]]に関しては、[[体系機関]]の項を参照して下さい。



[1]
''A Tutorial Introduction to SGML Architectures'' <http://www.isogen.com/papers/archintro.html#div-1>

[3]
>>1 は[[体系使用宣言処理指令]]の構文が古い。


[5] 
[[体系]]の具体例:

- [[一般体系]]
- [[HyTime]]
