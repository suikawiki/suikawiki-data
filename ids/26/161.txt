[3] [[データ]]の保存・交換のための形式は、色々あります。

[PREAMBLE[
[11] 本項では主として汎用[[データ形式]]を扱います。
ある目的に特化した[[データ形式]]については、[[画像形式]]、
[[動画形式]]、[[ファイル形式]]などを参照。
]PREAMBLE]

* 汎用データ形式

[5] [[XML]] や [[JSON]] などを [[MIME型]]では[DFN[[RUBYB[構造化構文]@en[structured syntax]]]]と呼んでいます。

[8] [[構造化構文]]のことを[DFN[[RUBYB[メタ書式]@en[metaformat]]]]ともいいます [SRC[>>6]]。

[7] [[MIME型]]では、[[構造化構文接尾辞]]によって[[メタ書式]]を明示できます。

[FIG(short list)[ [1] 色々な汎用[[データ形式]]
- [[JSON]]
- [[XML]]
- [[Protocol Buffers]]
- [[CBOR]]
- [[MessagePack]]
- [[INI]]
- [[CSV]]
- [[TSV]]
- [[LTSV]]
- [[RDF]]
- [[ASN.1]]
- [[TEON]]
- [[TOML]]
- [[Thrift]]
- [[Avro]]
- [[YAML]]
- [[Netstrings]]
- [[SGML]]
- [[EBML]]
- [[S式]]
- [[JSON-Base64]]
- [[AMF]]
- [[XDR]]
- [[Concise Encoding]]
- [[FlatBuffers]]
- [[Amazon Ion]]
- [[Dhall]]
- [[HCL]]
- [[Liaison]]
- [[Vili]]
- [[RON]]
- [[Flexbuffers]]
- 各種[[JSONの変種]]
]FIG]

[REFS[
- [6] [CITE@en[Best Practices for Fragment Identifiers and Media Type Definitions]] ([TIME[2013-04-29 23:11:19 +09:00]] 版) <http://www.w3.org/2001/tag/doc/mimeTypesAndFragids#dfn-metaformat>
]REFS]

* 応用

[9] 特定目的のための[[構造化構文]]の使い方の制約や意味の規定のことを、
[[応用]]といいます。 [[SGML]] における [[SGML応用]]、 [[XML]] における
[[XML応用]]のように呼ばれています。

[10] [[応用]]を[[形式的]]に記述するために[[スキーマ]]などの技術が用いられることがあります。
[[XML Schema]]、[[JSON Schema]] など[[構造化構文]]ごとに色々な手法があります。

* 追加機能

[4] [[データ形式の追加機能]]も参照。

* 関連

[SEE[ [[マーク付け言語]]、[[データベース]]、[[データ構造]]、[[データ型]]、[[ファイル形式]] ]]

* メモ