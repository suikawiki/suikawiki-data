[1] To [DFN[process a feed resoonse]] [VAR[res]], run these steps:
[FIG(steps)[
= [9] If [VAR[res]] is a [[network error]] or
[VAR[res]]'s [F[status][status code]] is not [CODE(HTTP)[200]],
return [[null]] and abort these steps.
= [2] Let [VAR[type]] be [VAR[res]]'s [F[computed MIME type]].
= [3] If [VAR[type]] is an [[XML MIME type]]:
== [7] Let [VAR[doc]] be a [CODE(DOMi)@en[Document]].
== [6] Let [VAR[parser]] be an [[XML parser]] associated with [VAR[doc]].
The [[XML parser]] [MUST[MUST]] implement [[XML5]].
== [8] Parse [VAR[res]]'s [F[body]] using [VAR[parser]].
The [CODE(MIME)@en[charset]] parameter value in the 
[CODE(HTTP)@en[Content-Type]] [[header value]] of [VAR[res]], if any, is used as
the [[encoding label]] provided by the underlying transport.
== [11] Set [VAR[doc]]'s [F[address][document's address]] to
[VAR[res]]'s [F[url][response's URL]].
== [5] Return the result of [[processing a feed document][process a feed document]] [VAR[doc]].
= [4] Otherwise, return [[null]].
]FIG]

[15] A [DFN[feed]] has an ordered list of [[entries][entry]] [DFN[entries][feed's entries]],
which is initially empty.

[10] To [DFN[process a feed document]] [VAR[doc]], run these steps:
[FIG(steps)[
= [14] Let [VAR[feed]] be a [[feed]].
= [12] Let [VAR[root]] be [VAR[doc]]'s [F[root element]].
= [17] Switch by [VAR[root]]:
[FIG(switch)[
: [16] If it is a [CODE(XMLe)@en[feed]] element in the [[Atom namespace]] :
@@
: [19] If it is an [CODE(XMLe)@en[rss]] element in the [[null namespace]] :
@@
: [18] If it is an [CODE(XMLe)@en[RDF]] element in the [[RDF namespace]] :
@@
: [13] Otherwise :
Return [VAR[feed]] and abort these steps.
]FIG]
]FIG]
