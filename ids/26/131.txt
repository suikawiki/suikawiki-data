* 仕様書

[REFS[
- [4] [CITE@en-GB-x-hixie[HTML Standard]] ([TIME[2016-02-16 01:30:20 +09:00]] 版) <https://html.spec.whatwg.org/#fetching-scripts>
]REFS]

* 古典スクリプト

[12] [DFN[[RUBYB[古典スクリプトのfetch]@en[fetch a classic script]]]] [SRC[>>4]] は、
次の[[引数]]を受け取ります。

[FIG(list members middle)[
: [VAR[URL]] : [[URL]]。
: [VAR[CORS設定]] : [[CORS設定群属性]]の指示。
: [VAR[設定群オブジェクト]] : [[環境設定群オブジェクト]]。
: [VAR[文字符号化]] : [[文字符号化]]。
: [VAR[続きの処理]] : 処理。
]FIG]

[13] 次のようにします [SRC[>>4]]。

[FIG(steps)[
= [14] [VAR[要求]]を、 [VAR[URL]] と [VAR[CORS設定]]に関する[[潜在的CORS要求の作成]]の結果に設定します。
= [15] [VAR[要求]]の[F[[[クライアント]]]]を、[VAR[設定群オブジェクト]]に設定します。
= [16] [VAR[要求]]の[F[[[型]]]]を、 [CODE[[[script]]]] に設定します。
= [17] [VAR[要求]]を [[fetch]] します。 [[process response]] は、 >>18 とします。
]FIG]

[18] [[fetch]] の [[process response]] は、[VAR[応答]]について次のようにします [SRC[>>4]]。
[FIG(steps)[
= [19] [VAR[応答]]の[F[[[型]]]]が [CODE[[[error]]]] か、
[VAR[応答]]の[F[[[状態]]]]が [[OK状態]]''以外''なら、
== [21] [VAR[スクリプト]]を、 null に設定します。
= [22] それ以外の場合、
== [23] 
[FIG(list)[
- [24] [VAR[応答]]に[F[[[内容型メタデータ]]]]があり、
- [25] [VAR[応答]]の[F[[[内容型メタデータ]]]]に[F[[[文字符号化]]]]が指定されており、
- [26] [[利用者エージェント]]が[VAR[応答]]の[F[[[内容型メタデータ]]]]の[F[[[文字符号化]]]]に対応している
]FIG]
... なら、
=== [27] [VAR[文字符号化]]を、[VAR[応答]]の[F[[[内容型メタデータ]]]]の[F[[[文字符号化]]]]に設定します。
== [28] [VAR[ソーステキスト]]を、[VAR[[[フォールバック符号化]]]]を[VAR[文字符号化]]として[VAR[応答]]の[F[[[本体]]]]を[[復号]]した結果に設定します。
== [30] [VAR[応答]]が[[CORS交差起源]]なら、
=== [31] [VAR[エラーミュートフラグ]]を設定します。
== [32] それ以外なら、
=== [33] [VAR[エラーミュートフラグ]]を未設定とします。
== [29] [VAR[スクリプト]]を、[VAR[ソーステキスト]]と[VAR[設定群オブジェクト]]、
[VAR[エラーミュートフラグ]]について[[古典スクリプトを作成]]した結果に設定します。
= [20] [VAR[スクリプト]]について[VAR[続きの処理]]を実行します。
]FIG]

;; [34] [[復号]]は[VAR[[[フォールバック符号化]]]]よりも [[BOM]] を優先します。

* 古典ワーカースクリプト

[6] [DFN[[RUBYB[古典ワーカースクリプトのfetch]@en[fetch a classic worker script]]]]
[SRC[>>4]] は、次の[[引数]]を受け取ります。

[FIG(list members middle)[
: [VAR[URL]] : [[URL]]。
: [VAR[リファラー]] : [[URL]]。
: [VAR[設定群オブジェクト]] : [[環境設定群オブジェクト]]。
: [VAR[共有である]] : [[boolean]]。
: [VAR[続きの処理]] : 処理。
]FIG]

[7] 次のようにします。

[FIG(steps)[
= [54] 新しい[[要求]]を [[fetch]] します。
[FIG(list members)[
[FIGCAPTION[
[[要求]]
]FIGCAPTION]
:[F[[[URL]]]]: [VAR[URL]]
:[F[[[クライアント]]]]: [VAR[設定群オブジェクト]]
:[F[[[型]]]]: [CODE[[[script]]]]
:[F[[[終点]]]]: [VAR[共有である]]なら [CODE(DOMi)@en[[[sharedworker]]]]、
そうでないなら [CODE[[[worker]]]]
:[F[[[リファラー]]]]: [VAR[リファラー]]
:[F[[[同期フラグ]]]]: 設定する
:[F[[[モード]]]]: [CODE[[[same-origin]]]]
:[F[[[credentialsモード]]]]: [CODE[[[same-origin]]]]
:[F[[[URL credentials利用フラグ]]]]: 設定する
]FIG]
[[process response]] は、 >>56 とします。
]FIG]

[56] [[process response]] は、[VAR[応答]]を次のように処理します。
[FIG(steps)[
= [5] [VAR[応答]]の[F[[[型]]]]が [CODE[[[error]]]] であるか、
[VAR[応答]]の[F[[[状態]]]]が[[OK状態]]''以外''なら、
== [8] [VAR[スクリプト]]を、 null に設定します。
= [9] それ以外なら、
== [63] [VAR[スクリプト]]を、 [VAR[応答]]の[F[[[本体]]]]を [[UTF-8復号]]した結果と[VAR[設定群オブジェクト]]について[[古典スクリプトを作成]]した結果に設定します。
= [10] [VAR[スクリプト]]について[VAR[続きの処理]]を実行します。
]FIG]

;; [35] 通常の[[スクリプト]]の場合 (>>18) と違って、[[文字符号化]]は [[UTF-8]]
に固定されています。

* モジュール

[36] [DFN[[RUBYB[モジュールスクリプト木のfetch]@en[fetch a module script tree]]]] [SRC[>>4]]
は、次の[[引数]]を受け取ります。

[FIG(list members middle)[
: [VAR[URL]] : [[URL]]。
: [VAR[credentialsモード]] : [[credentialsモード]]の値。
: [VAR[設定群オブジェクト]] : [[環境設定群オブジェクト]]。
: [VAR[続きの処理]] : 処理。
]FIG]

[37] 次のようにします [SRC[>>4]]。
[FIG(steps)[
= [38] [VAR[URL]]、[VAR[credentialsモード]]、[VAR[設定群オブジェクト]]について[[単一モジュールスクリプトのfetch]]を実行します。
[VAR[続きの処理]]は、 >>39 とします。
]FIG]

[39] [[単一モジュールスクリプトのfetch]]の完了時の処理は、
[VAR[結果]]について次のようにします [SRC[>>4]]。
[FIG(steps)[
= [40] [VAR[結果]]が null なら、
== [41] null に関して[VAR[続きの処理]]を実行します。
= [42] それ以外なら、
== [43] [[モジュールスクリプトの子孫をfetch]]します。[VAR[続きの処理]]を引き渡します。
]FIG]

[44] [DFN[[RUBYB[モジュールスクリプトの子孫のfetch]@en[fetch the descendants of a module script]]]]は、
[VAR[スクリプト]]と[VAR[続きの処理]]を受け取り、次のようにします [SRC[>>4]]。

[FIG(steps)[
= [46] [VAR[記録]]を、[VAR[スクリプト]]の[F[[[モジュール記録]]]]に設定します。
= [47] [CODE[[VAR[記録]].[F(ss)[[[RequestedModules]]]]]] が空なら、
== [48] [VAR[スクリプト]]に関して[VAR[続きの処理]]を実行し、ここで停止します。
= [49] [VAR[URL群]]を、空のリストに設定します。
= [50] [CODE[[VAR[記録]].[F(ss)[[[RequestedModules]]]]]] の各文字列[VAR[披要求]]について順に、
== [51] [VAR[URL]] を、[VAR[スクリプト]]と[VAR[被要求]]について[[モジュール指定子を解決]]した結果に設定します。
== [52] [VAR[URL]] が[[誤り]]なら、
=== [53] [VAR[スクリプト]]について新しい [CODE(JS)@en[[[TypeError]]]] を[[例外を報告]]します。
=== [55] [VAR[スクリプト]]に関して[VAR[続きの処理]]を実行し、ここで停止します。
== [57] [VAR[URL]] を [VAR[URL群]]に追加します。
= [58] [VAR[URL群]]の各値 [VAR[URL]] について順に、
== [59] [VAR[URL]]、[VAR[スクリプト]]の[F[[[credentialsモード]]]]、
[VAR[スクリプト]]の[F[[[設定群オブジェクト]]]]について[[モジュールスクリプト木のfetch]]を実行します。
[VAR[続きの処理]]は、 >>60 とします。
]FIG]

;; [45] この処理は[[モジュールスクリプト木のfetch]]の他、 [CODE(HTMLe)@en[[[script]]]]
[[要素]]の処理から呼び出されることもあります。

[60] [[モジュールスクリプト木のfetch]]の処理の続きは、
[VAR[結果]]について次のようにします [SRC[>>4]]。
[FIG(steps)[
= [67] >>62 によって終端させられた場合は、ここで停止します。
= [61] [VAR[結果]]が null なら、
== [62] 他の [[fetch]] の一部または全部について[[fetchを終端]]して構いません。
== [64] null に関して[VAR[続きの処理]]を実行します。
== [66] ここで停止します。
= [65] これが最後の [[fetch]] なら、
== [68] [VAR[スクリプト]]に関して[VAR[続きの処理]]を実行します。
]FIG]

* 歴史

** スクリプト

[11] [CODE(HTMLe)@en[[[script]]]] [[要素]]に関する処理は、 [[HTML5]]
が [CODE(HTMLe)@en[[[script]]]] [[要素]]の処理を明文化した際に初めて規定されました。

;; [CODE(HTMLe)@en[[[script]]]] 参照。

** ワーカー

[1] [[ワーカー]]に関する処理は、[[ワーカー]]導入時に [[run a worker]] 処理の一部として規定されました。

;; [[run a worker]] を参照。

** モジュール

[3] [[モジュール]]の導入により、[[古典スクリプト]]を参照する [CODE(HTMLe)@en[[[script]]]]
[[要素]]の [[fetch]] 部分の処理はや[[古典スクリプト]]を使った[[ワーカー]]の [[fetch]]
部分の処理はそれぞれ単独の[[手続き]]に ([[仕様書]]上) 分離されました。

[REFS[
- [2] [CITE@en[Add module workers · whatwg/html@e3a5bb7]] ([TIME[2016-02-16 00:03:29 +09:00]] 版) <https://github.com/whatwg/html/commit/e3a5bb757f64374c37d8c4528c01298463ef0b2a>
]REFS]