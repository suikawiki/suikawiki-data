[FIG(quote)[
[FIGCAPTION[
[1] [CITE[JSON Mail Access Protocol Specification (JMAP)]]
([TIME[2016-03-11 14:55:42 +09:00]] 版)
<http://jmap.io/>
]FIGCAPTION]

> JMAP is a transport-agnostic, stateless JSON-based API for synchronising a mail client with a mail server. It is intended as a replacement for IMAP. The specification is based on the API currently used by FastMail’s web app. It aims to be compatible with the IMAP data model, so that it can be easily implemented on a server that currently supports IMAP, but also allows for reduced data usage and more efficient synchronisation, bundling of requests for latency mitigation and is generally much easier to work with than IMAP.

]FIG]


[2] [CITE[JSON Mail Access Protocol Specification (JMAP)]]
([TIME[2016-03-11 14:55:42 +09:00]] 版)
<http://jmap.io/spec.html>

[3] [CITE@en[jmapio/jmap: JSON Meta Application Protocol Specification (JMAP)]]
([TIME[2018-05-09 12:18:59 +09:00]])
<https://github.com/jmapio/jmap>

[FIG(quote)[
[FIGCAPTION[
[4] [CITE@en[jmapio/jmap: JSON Meta Application Protocol Specification (JMAP)]]
([TIME[2018-05-09 12:19:23 +09:00]])
<https://github.com/jmapio/jmap>
]FIGCAPTION]

> JMAP is a protocol specification intended to be a new standard for email clients to connect to mail stores. It therefore intends to primarily replace IMAP + SMTP submission. It is also designed to be more generic such that it can be extended with contacts, calendars in the future (replacing CardDAV/CalDAV). It does not replace MTA-to-MTA SMTP transmission.

]FIG]


[5] [CITE@en[JSON Mail Access Protocol (jmap) -]]
([TIME[2018-05-09 12:19:49 +09:00]])
<https://datatracker.ietf.org/wg/jmap/about/>

[6] [CITE[JSON Meta Application Protocol Specification (JMAP)]]
([TIME[2018-05-07 21:02:28 +09:00]])
<https://jmap.io/>

[FIG(quote)[
[FIGCAPTION[
[7] [CITE[JSON Meta Application Protocol Specification (JMAP)]]
([TIME[2018-05-07 21:02:28 +09:00]])
<https://jmap.io/>
]FIGCAPTION]

> JMAP is not a conversion of IMAP to JSON; it is a new protocol. It was designed to make much more efficient use of network resources, be easier for developers to work with and hopefully make the best protocol for email an open standard once more. It’s based on years of experience and real-world experimentation at FastMail, and talking to other major MUA/MTA developers to make sure we understand the common needs of the industry.

]FIG]
