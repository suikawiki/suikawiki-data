[3] [DFN[[RUBY[整列][ソート]@en[sort]]]]は、[[リスト]]の[[項目][リスト項目]]を一定の規則に従った[[順序]]とすることを目指して並べ替える[[操作]]です。

[8] 
[FIG(short list)[
- [[順序]]
- [CODE(XMLe)@en[xslt:sort]]
]FIG]

* [CODE(JS)@en[Array.prototype.sort]] 関数 (JavaScript)

[1]
[[JavaScript]] の [CODE(JS)@en[[[Array]].[[prototype]].[[sort]]]]
は[[安定]]であることが保証されて''いません'' [SRC@en[[[ECMAScript]]]]。

[[Firefox]] は[[安定]]では''ありません''でした。
[[Classic Mozilla]] でもそうらしいです。

[[Opera 8]] は[[安定]]のようです。 [[WinIE 6]]
も[[安定]]のようです。

怪しいテストのようなもの: <javascript:void(alert([[1,1],[3,4],[0,2],[1,2],[1,4],[3,3],[1,3]].sort(function(a,b){return a[0]-b[0]})))>

[4] [CITE@ja[乱数の取り扱いについて注意したいポイント | _level0 | Kayac Interactive Designer's Blog]] ([[面白法人カヤック]] 著, [TIME[2011-10-17 22:28:34 +09:00]] 版) <http://level0.kayac.com/#!2009/10/post_52.php>

[5] [CITE@ja[JavaScriptで配列をシャッフル - Weblog - hail2u.net]] ([TIME[2011-03-27 15:34:11 +09:00]] 版) <http://hail2u.net/blog/coding/shuffle-array-in-javascript.html>

* [CODE(XPathf)@en[sort()]] 関数 (XPath)

[2] [CITE[X Sharp/Nodes]] ([TIME[2009-01-22 20:51:58 +09:00]] 版) <http://wiki.codeglide.com/X_Sharp/Nodes#Sorting_with_sort.28.29>

* [CODE(perl)@en[sort]] 関数 (Perl)

@@ 。。。

* [CODE@en[sort()]] 関数 (PHP)

[3] [CITE[PHPのsort関数は相当おかしい - hnwの日記]] ([TIME[2009-02-28 22:14:50 +09:00]] 版) <http://d.hatena.ne.jp/hnw/20090227>

* [CODE@en[sort]] 命令 (Unix)

@@ ・・・

* 歴史

[6] [CITE@en[Web Applications 1.0 r7597       New feature: sorting tables. The actual sort algorithm isn't done yet, but this should be a good start for first draft reviewers.]]
( ([TIME[2012-12-27 08:58:00 +09:00]] 版))
<http://html5.org/tools/web-apps-tracker?from=7596&to=7597>

* メモ

[7] ''Explain Sort Algorithms'' <http://www.u-gakugei.ac.jp/~miyadera/LECTURE/SortAnim/ExAlgorithm.html>


[9] [CITE@EN[XSL Transformations (XSLT) Version 3.0]]
([TIME[2017-06-06 21:59:56 +09:00]])
<https://www.w3.org/TR/2017/REC-xslt-30-20170608/#sorting>