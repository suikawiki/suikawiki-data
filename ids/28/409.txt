[FIG(quote)[
[FIGCAPTION[
[1] [CITE@ja[Rubyist Magazine - Ruby M17N の設計と実装]]
([TIME[2016-10-14 11:37:38 +09:00]])
<http://magazine.rubyist.net/?0025-Ruby19_m17n#l8>
]FIGCAPTION]

> UCS Normalization 方式
> UCS 正規化方式では、システムの内部コードを一つの文字集合 (Universal Character Set) に統一し、システムではこのコードに決め打ちして文字を扱います。このため、基本的な部分においては、それまでのロケールに決め打ちしたスタイルを続けることができる点が、この方式の最大のメリットになります。入出力に際しては、内部コードへのデコード・内部コードからのエンコードを行います。具体的には、入力時に外部から入ってくるバイト列は全て内部コードに変換してから取り扱います。また、出力時には内部コードからバイト列に変換を行ってから出力を行います。このような、唯一特別な内部コードに正規化し、入出力を変換するというアプローチは、現在多くの言語・環境で採用されており、Perl, Python, Java, .NET, Windows, Mac OS X などなど。つまるところ、Ruby 以外のほとんどがこの手法を採用しています。

]FIG]

[2] ここでいう UCS は [[ISO/IEC 10646]] の [[UCS]] のことではないようで、
>>1 では [[TRONコード]]を使う [[TRON]] も [[UCS正規化]]採用例に挙げられています。