* 処理

[34] 次の変数を使います。
[FIG(list members)[
:[VAR[要求キュー]]:0個以上の[VAR[要求]]の[[キュー]]です。
:[VAR[要求]]:[[要求]]です。「要求待ち」状態でのみ初期値 null となります。
:[VAR[状態]]:後述の状態遷移における状態のいずれか。初期値は「要求待ち」。
:[VAR[応答]]: 
[FIG(list members)[
[FIGCAPTION[
[[応答]]
]FIGCAPTION]
:[[プロトコルの版]]:[CODE[0.9]], [CODE[1.0]], [CODE[1.1]] のいずれか。初期値は [CODE[0.9]]。
:[[状態符号]]:[[非負整数]]。初期値は [CODE[200]]。
:[[理由句]]:[[バイト列]]。初期値は [CODE[OK]]。
:[[ヘッダーリスト]]:0個以上の[[ヘッダー]]のリスト。初期値は空。
:[[本体]]:[[バイト列]]。初期値は空。
:[[不完全メッセージ]]フラグ:初期値は未設定。
:[CODE(HTTP)[[[1xx]]]] [[応答]]群:0個以上の[[応答]]のリスト。初期値は空。
]FIG]
:[VAR[一時バッファー]]:バイト列
:[VAR[最後のヘッダー]]:ヘッダーか null
:[VAR[残り長さ]]:[[非負整数]]か null
]FIG]

[11] [[状態機械]]は、[[要求]]について次の通知を行います。
[FIG(list)[
- 応答のヘッダー受信完了の通知
- 応答の本体の一部の受信の通知
- 応答の受信完了の通知
- 応答エラーの通知
- リセットの通知
- 未処理の通知
]FIG]

[15] 各[[要求]]について、3種類の受信の通知をこの順序に行うか、
その途中でリセットの通知で中断するか、または応答エラーの通知のみを行うか、
未処理の通知のみを行うかのいずれかです。
応答の本体の一部の受信の通知は、0回以上の任意の回数行います。

[FIG(flow)[
:initial:[VAR[要求キュー]]に追加
:->:headers
:->:rerror
:->:not
:->:reset

:headers:ヘッダー受信完了
:->:body
:->:complete
:->:reset

:rerror:応答エラー
:>>:1

:body:本体の一部の受信
:v:
:>>:1
:->:complete
:->:body
:->:reset

:complete:受信完了

:reset:リセット
:>>:3

:not:未処理
:>>:4

]FIG]

[38] [VAR[応答]]は、3種類の受信の通知で[[アプリケーション]]に引き渡します。

** 状態機械

[14] [[緊急ポインター]]が指す1バイトは、無視します。

[37] それ以外の[[バイト]]を受信したら、[VAR[状態]]により決まる処理を行います。

[13] [[TCP]] [CODE[[[RST]]]] を受信したら、[VAR[状態]]に関わらず、次のようにします。
[FIG(steps)[
= [VAR[要求]]が null でなければ、
== [VAR[要求]]についてリセットを通知します。
= 状態機械を停止します。
]FIG]

[40] [[TCP]] [CODE[[[FIN]]]] を受信したら、
[VAR[状態]]により決まる正常終了処理を行います。

[41] 下位層の切断、タイムアウト等その他の理由で [[TCP接続]]が切断されたら、
[VAR[状態]]により決まる異常終了処理を行います。

*** 「要求待ち」状態

[2] バイトを受信しても、処理せず待機します。

[33] 正常終了か異常終了を受信したら、
[FIG(steps)[
= [[状態機械]]を停止します。
]FIG]

[35] [VAR[要求キュー]]が空でなくなったら、
[FIG(steps)[
= [VAR[状態]]を、「応答前」に設定します。
= [25] [VAR[一時バッファー]]を、空バイト列に設定します。
= [VAR[要求]]を、[VAR[要求キュー]]の先頭の[[要求]]とします。
= [VAR[要求キュー]]から、先頭の[[要求]]を削除します。
]FIG]

*** 「応答前」状態

[24] バイトを受信したら、
[FIG(steps)[
= [26] 受信したバイトを、[VAR[一時バッファー]]の末尾に連結します。
= [27] [VAR[一時バッファー]]の末尾4バイトが [CODE(HTTP)[HTTP]]
([[ASCII大文字・小文字不区別]]) なら、
== [VAR[応答]]の[[プロトコルの版]]を 1.0 に設定します。
== [VAR[状態]]を、「応答ヘッダー」に設定します。
== [VAR[一時バッファー]]を、空に設定します。
= [28] それ以外で、[VAR[一時バッファー]]の長さが8バイトなら、
== [VAR[応答]]の[[本体]]を、[VAR[一時バッファー]]の値に設定します。
== [VAR[残り長さ]]を、 null に設定します。
== [VAR[状態]]を、「応答本体」に設定します。
]FIG]

[8] 正常終了か異常終了を受信したら、
[FIG(steps)[
= [VAR[一時バッファー]]が[[空文字列]]なら、
== [VAR[要求]]について応答エラーを通知します。
= それ以外なら、
== [VAR[応答]]の[[本体]]を、[VAR[一時バッファー]]の値に設定します。
== 異常終了なら、[VAR[応答]]の[[不完全メッセージ]]フラグを設定します。
== [VAR[要求]]について[VAR[応答]]のヘッダー受信完了を通知します。
== [VAR[要求]]について[VAR[応答]]の受信完了を通知します。
= [[状態機械]]を停止します。
]FIG]

*** 「応答ヘッダー」状態

[36] バイトを受信したら、
[FIG(steps)[
= [VAR[一時バッファー]]の末尾に受信したバイトを追加します。
= [VAR[一時バッファー]]の末尾が 0x0A 0x0A または 0x0A 0x0D 0x0A なら、
== [VAR[一時バッファー]]をヘッダー群として構文解析します。
== [VAR[応答]]の[[状態符号]]が [CODE(HTTP)[[[1xx]]]] なら、
=== [VAR[応答]]の [CODE(HTTP)[[[1xx]]]] [[応答]]群の末尾に新しい[[応答]]を追加します。
[FIG(list members)[
[FIGCAPTION[
[[応答]]
]FIGCAPTION]
:[[プロトコルの版]]:[VAR[応答]]の[[プロトコルの版]]
:[[状態符号]]:[VAR[応答]]の[[状態符号]]
:[[理由句]]:[VAR[応答]]の[[理由句]]
:[[ヘッダーリスト]]:[VAR[応答]]の[[ヘッダーリスト]]
]FIG]
=== [VAR[応答]]の[[プロトコルの版]]、[[状態符号]]、[[理由句]]、[[ヘッダーリスト]]を初期値に設定します。
=== [VAR[状態]]を、「応答前」に設定します。
=== [VAR[一時バッファー]]を、空バイト列に設定します。
@@
== それ以外で、
@@ 定義上本体を持たない場合
===
=== [VAR[要求]]について[[応答]]のヘッダー受信完了を通知します。
== それ以外なら、
=== [32] [VAR[応答]]の [CODE(HTTP)@en[[[Content-Length:]]]] [[ヘッダー]]の処理を行います。
=== その結果がエラーなら、
==== [VAR[要求]]について応答エラーを通知します。
==== [[状態機械]]を停止します。
=== そうでなければ、[VAR[残り長さ]]を、処理結果に設定します。 (null かもしれません。)
=== [16] [VAR[状態]]を、「応答本体」に設定します。
=== [VAR[要求]]について[[応答]]のヘッダー受信完了を通知します。
= [VAR[一時バッファー]]の長さが 2[SUP[18]]‐1 なら、
== [VAR[要求]]について応答エラーを通知します。
== [[状態機械]]を停止します。
]FIG]

[12] 正常終了か異常終了を受信したら、
[FIG(steps)[
= [VAR[要求]]について応答エラーを通知します。
= [[状態機械]]を停止します。
]FIG]

*** 「応答本体」状態

[6] バイトを受信したら、
[FIG(steps)[
= [VAR[応答]]の本体の末尾に、受信したバイトを追加します。
= 実装の判断で、[VAR[要求]]の[[本体]]の一部の受信を通知して構いません。
= [VAR[残り長さ]]が[[正]]なら、
== [VAR[残り長さ]]を1減らします。
== [VAR[残り長さ]]が0なら、
=== [VAR[要求]]について[[応答]]の受信完了を通知します。
=== [VAR[状態]]を、「要求待ち」に設定します。
=== [VAR[要求]]を、 null に設定します。
]FIG]

[7] 正常終了か異常終了を受信したら、
[FIG(steps)[
= [VAR[残り長さ]]が[[正]]か異常終了なら、
== [VAR[応答]]の[[不完全メッセージ]]フラグを設定します。
= [VAR[要求]]について[[応答]]の受信完了を通知します。
= [[状態機械]]を停止します。
]FIG]

*** 停止処理

[39] 停止時には次のようにします。
[FIG(steps)[
= [VAR[要求キュー]]に含まれる[VAR[要求]]について順に、
== [VAR[要求]]の一部または全部を送信済みなら、
=== [VAR[要求]]について応答エラーを通知します。
== それ以外なら、
=== [VAR[要求]]について未処理を通知します。
]FIG]

** ヘッダー群として構文解析

[17] 入力を、 0x0D や 0x0A で区切られた[[行]]に分割します。
[[行]]には区切りの 0x0D, 0x0A は含めません。

[3] 最初の行を (あれば) 次のようにします。

[FIG(steps)[
= 先頭が [CODE[/]] なら、
== その次が[[ASCII数字]]列なら、これを[[十進整数]]として解釈します。
== その次が [CODE[.]] なら、
=== その次が [[ASCII数字]]列なら、これを[[十進整数]]として解釈します。
=== [19] 最初の[[整数]]が2[[以上]]か、
最初の[[整数]]が1と等しく次の[[整数]]が1[[以上]]なら、
==== [VAR[応答]]の[[プロトコルの版]]を、 1.1 に設定します。
== 次が1個以上の [CODE(charname)@en[[[SP]]]] であれば、すべて無視します。
== [21] 次に[[ASCII整数]]列があれば、[VAR[応答]]の[[状態符号]]をその[[十進整数]]値に設定します。
== [9] 次の1個以上の [CODE(charname)@en[[[SP]]]] があれば、
=== [4] [VAR[応答]]の[[理由句]]を、[[行]]のそれより後の部分に設定します。
== [5] それ以外なら、
=== [31] [VAR[応答]]の[[理由句]]を、[[空文字列]]に設定します。
= 先頭が1個[[以上]]の [CODE(charname)@en[[[SP]]]] 列なら、
== [20] 次に[[ASCII整数]]列があれば、[VAR[応答]]の[[状態符号]]をその[[十進整数]]値に設定します。
== [10] 次の1個以上の [CODE(charname)@en[[[SP]]]] があれば、
=== [22] [VAR[応答]]の[[理由句]]を、[[行]]のそれより後の部分に設定します。
== [29] それ以外なら、
=== [30] [VAR[応答]]の[[理由句]]を、[[空文字列]]に設定します。
]FIG]

[23] 更に、次のようにします。
[FIG(steps)[
= [VAR[最後のヘッダー]]を、 null に設定します。
= 残りの各行について順番に、
== 先頭の文字が 0x20 か 0x09 なら、
=== [VAR[最後のヘッダー]]が null 以外なら、
==== 行の先頭から 0x20 と 0x09 をすべて除去します。
==== [VAR[最後のヘッダー]]の値の末尾に、 0x20 と行の内容を追加します。
== 先頭の文字が 0x3A でなく、 0x3A が含まれるなら、
=== [VAR[最後のヘッダー]]を、 0x3A より前の部分を名前、 0x3A より後の部分を値とするヘッダーに設定します。
=== [VAR[応答]]の[[ヘッダーリスト]]の末尾に、[VAR[最後のヘッダー]]を追加します。
== それ以外なら、
=== [VAR[最後のヘッダー]]を、 null に設定します。
= [VAR[応答]]の[[ヘッダーリスト]]の各ヘッダーについて、
== 名前の末尾から 0x20 と 0x09 をすべて除去します。
== 値の先頭から 0x20 と 0x09 をすべて除去します。
== 値の末尾から 0x20 と 0x09 をすべて除去します。
]FIG]

* 歴史

[1]
[CITE@en[Tolerant HTTP Parsing]] ([TIME[2007-09-05 04:32:55 +09:00]] 版) <http://geoffers.uni.cc/draft-sneddon-http-parsing-00.html>
([[名無しさん]])
