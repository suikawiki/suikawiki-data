[2] 
[[PHP]]
の
[DFN[[CODE[locale_accept_from_http]]]],
[DFN[[CODE[Locale::acceptFromHttp]]]]
は
[[HTTP]]
[CODE[Accept-Language:]]
[[ヘッダー値]]から適当な[[ロケール]]を返すものです。


[REFS[

-
[1] [CITE@en[[[PHP]]: Locale::acceptFromHttp - Manual]], [TIME[2023-05-17T04:00:50.000Z]], [TIME[2023-05-17T08:28:00.036Z]] <https://www.php.net/manual/en/locale.acceptfromhttp.php>

]REFS]



[3] 
[[HTTP]] の [CODE[Accept-Language:]] [[ヘッダー値]]っぽい感じの入力を与えると、
何か[[ロケールID]]っぽいものが返ってきます。


[4] 
[[HTTP]] の [CODE[Accept-Language:]] は簡単そうに見えて実は複雑な構文を持っているので、
[[HTTP]] に精通していないと間違って実装してしまいがちです。
だから一般の開発者がいちいちそれを意識しないで処理できる機能を提供しようという言語開発者の判断は正しい。
自分でやらないで言語機能を使おうと判断したアプリケーション開発者の判断もまた正しい。


[5] 
でもそこに落とし穴が潜んでいて、なんかいい感じにやってくれるわーという[[フレームワーク]]の機能は往々にしてなんとなくいい感じで動いてそうだわーという雰囲気だけ提供してくれて、
あちことに罠が設置されてたりするんですよねえ。これがその実例。



[6] 
ドキュメントには[[ロケール識別子]]が返されると書いてありますが [SRC[>>1]]、
それがどんなものなのかはよくわかりません。
ドキュメントを隅から隅まで読み込めばどこかに書かれているのかもしれませんが、
少なくてもこのページ [SRC[>>1]] には書いてありません。
このページに唯一あるのは返ってくる値の例 [CODE[en_US]] で [SRC[>>1]]、
ここから [[POSIXロケール識別子]]的なものが得られるのかなあ、
という感触がありますが、それが正しいのかどうか。

[7] 
公式ドキュメントの例示は [CODE[$locale]] という[[変数]]に結果を代入していますけど、
巷で流通している利用例だと [CODE[$lang]] という[[変数]]に代入していることもあったりします。
つまり[[ロケール]]と[[言語]]がわからない人もこれを使っているということ。
そりゃあわからないですよね、公式ドキュメントにも何も書いてないもん。
[CODE[Accept-Language]] ([[言語]]) から[[ロケール]]を取得する、
という少々わかりにくいことしてるのに、説明がないと混乱する人が出てくるのは必然でしょう。

[8] 
あとこれ、[[ヘッダー値]]に入ってるものをただ返すのではなくて、
どれか一番使えるものを返してくれるらしいです。 [SRC[>>1]]
てきとーな値を入れて渡しても、そのまま返ってくるわけではなくて、
使えるものを選んでくれるそうな。
でもそれってどうやって選ぶんでしょうか?
引数は[[ヘッダー値]]1つだけですよ。
その肝心なところがドキュメントに全然書いてないのが謎。
隅から隅まで探せばどこかにあるのかもしれませんけど、
少なくてもこのページには書いてなくて。
(ユーザーコメントには、指定できないって書いてあるw)



