[1] [CITE@ja[「ddrescue」の使い方 - PCと解]]
([TIME[2022-11-16T23:45:55.000Z]])
<https://pctrouble.net/software/ddrescue.html>

[3] [CITE@en[Mapfile structure (GNU ddrescue Manual)]], [TIME[2019-02-20T16:00:38.000Z]], [TIME[2022-11-18T05:46:08.163Z]] <https://www.electric-spoon.com/doc/gddrescue/html/Mapfile-structure.html>

[2] [CITE@en[linux - Continue ddrescue from a corrupted log file - Super User]]
([TIME[2022-11-18T03:55:16.000Z]])
<https://superuser.com/questions/1697288/continue-ddrescue-from-a-corrupted-log-file>

[4] [CITE@en[GNU ddrescue Manual]]
([TIME[2022-11-19T04:24:19.000Z]])
<https://www.gnu.org/software/ddrescue/manual/ddrescue_manual.html>

[6] 
基本は1回実行すれば後は自動で進めてくれますが、
動作が不安定なストレージを相手にしていると、
手作業で停止したり再実行したりすることになります。
その時作業ミスしないよう、手順を明確にして何度も確認しながら実行するのが大切です。
繰り返しで慣れてくるほど、どれだけ気をつけていてもミスは起こしてしまいます。

[7] 
再実行前には mapfile をコピーしてバックアップしておくべきです。
可能ならコピー先のイメージファイルもコピーしておくべきです。
ミスがあっても直前の状態からやり直せる、というのが心理的安全性のためにも重要です。

[5] 
可能な限り安定したシステムで実行するのが理想ですが、
救出したいストレージの読み出しが原因で不安定化することもあります。
[CODE[ddrescue]]
はいつでも [KBD[C-c]]
で停止でき、経過を mapfile に書き出して終了してくれますし、
そうでなくても定期的に自動書き出ししてくれていますが、
システムの状態が悪く正常に書き出される前にカーネルレベルでエラーが発生すると、
壊れた mapfile が残ることがあります。
そのような懸念がある状況では、
定期的に mapfile をコピーして途中経過を保存しておいた方が安全です。
mapfile はただのテキストファイルなので直接編集で修復できることもありますが、
信頼できる経過が残っている方が安心です。


[8] 
[CODE[/dev/sd[VAR[x]]]] のような[[デバイスファイル]]名は、
システム起動時に入れ替わることがあります。
特に応答が不安定なストレージは、
起動時に反応が悪いせいで通常とは違うファイル名に割り当てられたり、
パーティションを読み取れなかったりすることがあります。
実行前、特に再実行前には、毎回面倒でも必ずコピー元、コピー先が想定通りのファイル名に割り当てられていることを確認しましょう。

[9] 
外付けのストレージも要注意で、接続する順序によって入れ替わることがあります。
何度でも確認しましょう。
コピー先がストレージ自体ではなく[[ファイルシステム]]中の[[ファイル]]のときも、
違うデバイスがマウントされていないか、確認しましょう。




[10] 
動作原理を理解すると進行状況からどう対処するべきか想像できることがあるので
(その想像がどれだけ正しいかは最後までわからないかもしれませんが)、
実行中の待つだけの間に
>>4
を読んでおくとよさそうです。


[11] 
[CODE[--reverse]] を付けて実行すると逆順、前から走査のかわりに後ろから走査のように切り替えてくれます。
ストレージの中央あたりに問題がありそうな時、
まず通常実行で前からやって、次に後ろからやってもらう、
というのに便利なので覚えておきたいオプションです。
(何もしなくてもそういう動作をしてくれるのですが、
その過程で中央あたりで時間を費してしまっているとき、
一旦手動停止して後の方を先に救出した方がいい場合もあります。)




