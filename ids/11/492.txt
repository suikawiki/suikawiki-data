[1] 
[DFN[ISO-2022-JP-3]]
符号化表現は、
[[文字コード]]の一種です。

[2] 
[[ISO-2022-JP-3]]
は
[[JIS X 0213:2000]] 附属書2で規定されていました。

[3]
[[実装水準3]]であることを明示するため
[DFN[ISO-2022-JP-3-plane1]]
符号化表現と呼んでもよいと規定されていました。
([[ISO-2022-JP-3]]
は[[実装水準3]]も[[実装水準4]]も含まれるということのようです。
[[実装水準4]]と明示する方法は定められていません。)

[4] 
[[JIS X 0208:1997]] [[RFC 1468符号化表現]]の設計を
[[JIS X 0213:2000]] に適用したもののようですが、
互換性はありません。

[5] 
名前から [[ISO-2022-JP]] と関係がありそうにみえます。
[[JIS X 0208:1997]] [[RFC 1468符号化表現]]が
[[ISO-2022-JP]] から派生したものなので、
系譜は連なっています。
互換性はありません。
[SEE[ [[ISO-2022-JP]] ]]

[7] 
名前から [[ISO/IEC 2022]] と関係がありそうにみえます。
[[JIS X 0213:2000]] には関係があるともないとも書いてありません。
([[JIS X 0208:1997]] [[RFC 1468符号化表現]]は適合しないと明記していました。
[SEE[ [[ISO-2022-JP]] ]])
適合するのかどうかぱっと見ではわかりません。

[6] 
[[JIS X 0213:2000]] 本体は[[外字]]を認めていますが、
[[ISO-2022-JP-3]] は認めていません。
[SEE[ [[JIS X 0213]] ]]

[8] 
[[ISO-2022-JP-3]]:

- [[CL]]: [[JIS X 0211]] [[C0]]
- [[GL]] = [[G0]] : [[ISO/IEC 646 IRV]]
- [CODE(charname)@en[SP]]
- [CODE(charname)@en[DEL]]
- [CODE(charname)@en[ESC]] [N[2/8]] [N[4/2]] : [[ISO/IEC 646 IRV]]
- [CODE(charname)@en[ESC]] [N[2/4]] [N[2/8]] [N[4/15]] : [[JIS X 0213:2000]] 第1面
- [CODE(charname)@en[ESC]] [N[2/4]] [N[2/8]] [N[5/0]] : [[JIS X 0213:2000]] 第2面
([[実装水準3]]では使用しない)
- [CODE(charname)@en[ESC]] [N[2/4]] [N[4/2]] : [[JIS X 0213:2000]] 第1面から一部文字を除外したもの

[9] [CODE(charname)@en[ESC]] [N[2/4]] [N[4/2]] は本来
[[JIS X 0208:1983]] 
の[[指示シーケンス]]です。
[[ISO-2022-JP-3]] では [[JIS X 0208-1983]] と [[JIS X 0213:2000]]
とで解釈が変更されていると判断した[[面句点位置]]が除外されているようです。
[SEE[ [[JIS X 0208]] ]]


[10] 
[[ISO-2022-JP-3]] はどこの誰が使う想定で作られたのか謎です。
インターネットでの情報交換に使うようなことが書かれてますが、
具体的にインターネットのどのプロトコルの何かはわかりません。

[11] 
[[ISO-2022-JP-3]] は [[ISO-2022-JP]] 系の符号化方式ですが、
[[エスケープシーケンス]]がまったく違うので、
[[ISO-2022-JP]] の実装はこれを解釈できません。

[12] 
[CODE(charaname)@en[ESC]] [N[2/4]] [N[4/2]] 
が使えるのはその互換性への配慮なのかもしれませんが、
基本的な[[漢字]]が除外されすぎていて、
一般の人の日常の利用に耐えうるのか疑問です。

[13] 
既存の [[ISO-2022-JP]] の実装が新たに [[ISO-2022-JP-3]] にも対応するとなると、

- [14] [[MIME charset]] のような仕組みでどちらであるか明確に区別するか、
- [15] [[ISO-2022-JP]] も [[ISO-2022-JP-3]] もどちらも解釈できる復号器を実装するか

の選択肢があります。 >>14 では互換性がまったくなく、
[CODE(charaname)@en[ESC]] [N[2/4]] [N[4/2]] 
を使う意味は何もありません。ただただ古い実装には読めないデータになるだけです。
>>15 の場合 [[JIS X 0213:2000]] 附属書の規定に基づく受信装置といえるのか疑問です。

[17] 
>>14 のような完全新規の[[符号化文字集合]]とするなら、
[[Shift_JISX0213]] や [[EUC-JISX0213]] を使ってもいいのであり、
[[ISO-2022-JP-3]] を使う必然性がなくなります。

[16] 
[[ISO-2022-JP-3]]
を受信する実装も、さすがにそれだけに対応するというわけにはいかないはずです。
古い実装から受信したデータは [[ISO-2022-JP]] (なり他のものなり)
で符号化されているはずで、それにも対応しなければなりません。
[[ISO-2022-JP]] も [[ISO-2022-JP-3]] もどちらも同時に対応したいなら、
[[ISO-2022-JP-3]] の規定だけでなく、
完全な [[JIS X 0208-1983]] と、
[[JIS X 0201]] [[ラテン文字用図形文字集合]]も追加する必要が出てきます。
つまり [[ISO-2022-JP]] + [[JIS X 0213:2000]] です。

[18] 
素直に [[JIS X 0208:1997]] [[RFC 1468符号化表現]] + [[JIS X 0213:2000]] 
と定義しておけば、既存の実装の自然な拡張として実現可能だったのではないでしょうか。

[19] 
少なくても歯抜けの第1面なんて、
実装用の歯抜け表の作成とメモリー上に保持しておくコストが掛かるのに、
誰の何の要求も満たし得ないんですよね。


