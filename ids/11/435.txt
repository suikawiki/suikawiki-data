#?SuikaWiki/0.9 default-name="US-ASCIIさん"

[1] ここでは、 [[RFC2231]] ([[MIME//parameter拡張]])
に関係する仕様・実装の問題点について取り上げましょう。

[DEL[

題名が「実装は面倒」となってますが、「実装」, 「面倒」
にはあまりこだわらない方針で:)
]DEL]

名前を変えてついでに [[MIME//parameter拡張]]に移動してきました。

[19] RFC 2231 では [[encoded-word]] 
の拡張も定義していますが、それについてはそちらで取り上げることとし、こちらでは
parameter 拡張についてのみ触れましょう。

[[#comment]]


* よーわからん仕様 — charset 名と "'" / "%"

[2] 「'」や「%」が含まれる charset 名を使いたい時はどうしたらいいんでしょ。
% は気づかなかったことにできますが、「'」はどうしようもない:-<
[[MIMEのparameter値拡張]]の BNF を参照。

なお、 language はラテン文字と 「-」 しか使わないのでこの問題はない。

[3] >>2 MIME people の言い分は、そんな charset
は実在しないから問題ない、だそうです。 (>>10)
- [20] >>3 しかも、 "'" が含まれている charset 名でも、 [SAMP[x-'charset'x-lang'attribute%27value]] のようになるだけで parse 上の問題は生じない (たしかにそうだ!) からいいんだそうです。
- [21] >>20 単なる [[RFC2278]] 作る時の見落としだと思うんだけど、ものは言いようだよねぇ。
[[#comment]]


* よーわからん仕様 — FWS や注釈の装入

[4] FWS とか comment 。この部分は構造化頭領域だから MIME BNF の要素間に
自由に挿入出来るはず。例えば 
「title *(No.) 0 * (encoded.) = (charset=) us-ascii '(language=) en '
(content=) This」は妥当だと思われ。この程度ならまだ許せる。

- [5] ext-octet := "%" 2(DIGIT / "A" / "B" / "C" / "D" / "E" / "F")

ここにも入れて良いんだろうか? 「% (hex encoded. value=) 2E」
とか書けることになってしまうけど。

[6] そもそも元の RFC 2045 構文では、パラメーター値は一つの token
(または quoted-string) だったので、 quoted-string でない限り
SP などは入れられないはずだったのだ。だからこういうのが
本当に許されるのなら非互換変更ということになる。

[7] >>4-7 これは'''認められない'''のだそうです。 (>>10)
>>6 の言う通り、 2231 は 2045 の subset であるから、まず
2045 に適合することが求められると。助かります...
[[#comment]]


* 継続の結合 — ちょっと面倒

- [8] application/x-stuff ;    title*0*=us-ascii'en'This%20is%20even%20more%20  ;   title*1*=%2A%2A%2Afun%2A%2A%2A%20   ;  title*2="isn't it!"

[9] 「=」の前の「*」は、その中身が % 符号化されているということを表す。
パラメーター値が分割されている時、 charset 名がつくのは *0 のみ。
だから、復号は各値をつなぎ合わせる時になる。

けど、符号化されてないのまでつないでしまってから復号では
悲しい思いをすることに。まあそんな面倒でもないけど、あまり良くない。

[13] さて困るのは復号出来ない時。 RFC 2231 にはかかれてないけど、 RFC 2047
の復号できない (未対応 charset の) encoded-word から類推すると、
復号できない符号化パラメーター値はそのままにしておくのが良いと思われ。

ところが、分割されている時、しかも符号化されていないのが混じってる時、
そのまま結合してしまうと悲しい思いを。

[11] たぶん、最初の仮定が誤りで、 encoded-word とは違って一つの塊に複数の 
charset が混じることが無いわけだから、未対応でも復号してしまって、
ずっと charset 情報も持ってれば良いんだ。そすれば上手く良く。
(でも Unicode マンセーな実装では悲しい思いをしそうだ。)

[[#comment]]


* RFC 2045 valid で RFC 2231 invalid の処理

[12] たとえば「foo*bar="hogehoge"」。 RFC 2231 で改訂された MIME BNF 的には不正。
たいしたことじゃないけど、こういう手順で処理するのが良いと思われ。 

= RFC 2231 で解析を試みる。
= RFC 2045 で解析を試みる。

[[#comment]]


* 継続で、2つ目以降に charset や language が指定されている場合

[14] *0 以外の *1 とか *2 とかでも、 charset や language が指定されている時
(例えば title*1*=us-ascii'en'%2A%2A%2Afun%2A%2A%2A%20)、どうするか。
このときの属性値は *(attribute-char / %符号化) なので、
「'」は認められないから不正。 (RFC 2046 では token に「'」が含まれるので妥当。)

場合わけが面倒なので ' で区切られている部分は charset と language だと
認識して、捨てるのが良いかも。

いやいや、2つ目以降の時は、 ' が混じっていても、全部 value
の一部としてしまうのがいいかな。

どういう手法にしろ、そもそも不当なんだから、許されると
思うけど、致命的例外にはしたくないね。これくらいだから。

[[#comment]]


* 空の value

[15] ところでパラメーター値 *(ほげ) てのは、 title*3*= とか foo*='' もあり''
ということか... (注記 (5) はこれを指しているのだろうな。)
(そもそも MIME で元から OK だったらし。)

[[#comment]]


* 継続で、2つ目以降のどれかを % 符号化するの時の *0 

[16]
[PRE[
   Content-Type: application/x-stuff;
    title*0*="This is even more";
    title*1*=%2A%2A%2Afun%2A%2A%2A%20;
    title*2="isn't it!"
]PRE]

[17] これは正しいかどうか。 RFC 2231 本文には明記されてない。
BNF では問題ない。 (けど、それを言うと、 *0 *2 だけで *1
がない、みたいのも BNF 的には OK だ。だからあんまり
参考にはならない。)

よくわからないけど、こういうのは(解釈できるけど)
生成しないことにした方が良いかも。

[[#comment]]


* charset の既定値は何か

[18] RFC 2231 はなんか曖昧に口を濁してて、結局何が既定値
かわかんない。 MIME と同じ = RFC 822 quoted-string
と同じ = 7ビット ISO 2022 ってことに勝手に解釈して
いいのかな?

生成側実装は、 % 符号化するときに必ず charset を入れる
べきだと思われ。 

[[#comment]]


* メモ

- [10] [[CharlesLindsey]] が [[ietf-822]]
でここにある疑問の幾つかをたずねています。
<mid:200301222133.VAA23892@clw.cs.man.ac.uk>
で始まる 2003年1月末のスレッドを参照。
- [22] IETF protocols ではエラー処理まで規定していないものも少なくないですから 2231 が特に問題ということも無いのではありますが、 RFC 2231 は RFC 2045 の subset 的拡張でありますから、 2045 的に正当でも 2231 的に不当であるデータの取扱いという観点ではエラー処理無規定は致命的であるような気もしないでもないです。
- [23] IETF protocols では 2045→2231 的拡張がよく行われますから、その辺の規定はしっかりして欲しいところではありますね。確かに MIMEr の言う通り、現実の実装・データと矛盾がないように拡張は規定されているのではありますけどね。

[24]
[CITE[Bug 4930 - [RFC 2231] 添付ファイル名が複数パラメータに分割される時、パラメータの区切りにセミコロンが必要]] <http://bugzilla.mozilla.gr.jp/show_bug.cgi?id=4930>

[[RFC 2231]]の間違った例を見てやっちゃったらしい。
([[名無しさん]] [WEAK[2006-01-15 02:17:01 +00:00]])

