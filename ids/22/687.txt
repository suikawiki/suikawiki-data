[5] [[heroku]] コマンドは tar+gz を拾ってきて展開するだけでも動く状態になっているみたいです。 ([[ruby]] は必要。)

[3] [[Heroku]] 上に配置された状態では [[Gitリポジトリー]]ではなくなっているようです。

[REFS[
- [1] [CITE@en[Resolving Application Dependencies with Git Submodules | Heroku Dev Center]] ([TIME[2014-10-02 06:14:57 +09:00]] 版) <https://devcenter.heroku.com/articles/git-submodules>
]REFS]

[2] [[submodule]] は再帰的に clone されます。ただし [[API]] からの場合は [[submodule]]
は展開されないようです [SRC[>>1]]。そんなんでいいのでしょうか...

[4] サーバープロセスのエラーのログはどこからもみれないようです(?)。動作中のサーバーそのものを調べることはできませんが、 heroku run bash を使えば同じような環境で bash を実行して、その中でサーバーを動作させてみることができます。

[6] Add-ons から Logentries を選んで追加すると、 Heroku の実行ログが Web で見れるようになる。メールも送られる。 heroku コマンドや ssh を使わなくても実行エラーを把握できるようになる。
(Free プランで良い。)

[7] 1日分の無料枠を使い果たすと、 Application Error と表示されるようになります。
(サーバーエラー時と同じです。) 無料枠枯渇エラーだというのは管理画面でわかります。

[FIG(amazon)[
Heroku
]FIG]

[8] [CITE@en[Announcing Heroku Free SSL Beta and Flexible Dyno Hours | Heroku]]
([TIME[2016-08-02 09:50:24 +09:00]])
<https://blog.heroku.com/announcing_heroku_free_ssl_beta_and_flexible_dyno_hours>

[9] [[Heroku]] の[[プロキシ]]は、 [[HTTP keep-alive]] について特別な扱いをせず、
[[アプリケーションサーバー]]が[[接続][HTTP接続]]を閉じると[[プロキシ]]と[[クライアント]]の間の[[接続][HTTP接続]]も閉じるようです。
[TIME[2016-08-22T03:40:31.900Z]]