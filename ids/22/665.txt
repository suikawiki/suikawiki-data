[2] [[キャッシュ]]に[[蓄積]]されるデータの単位を[DFN[[RUBYB[[[キャッシュ項目]]]@en[cache entry]]]]といいます。

* 仕様書

[REFS[
- [1] '''[CITE@en[RFC 7234 - Hypertext Transfer Protocol (HTTP/1.1): Caching]] ([TIME[2014-09-11 10:19:59 +09:00]] 版) <https://tools.ietf.org/html/rfc7234#section-2>'''
- [93] [CITE@en[RFC 7234 - Hypertext Transfer Protocol (HTTP/1.1): Caching]] ([TIME[2014-09-11 10:19:59 +09:00]] 版) <https://tools.ietf.org/html/rfc7234#section-5.2>
-- [101] [CITE@en[RFC 7234 - Hypertext Transfer Protocol (HTTP/1.1): Caching]] ([TIME[2014-09-11 10:19:59 +09:00]] 版) <https://tools.ietf.org/html/rfc7234#section-5.2.2.1>
-- [104] [CITE@en[RFC 7234 - Hypertext Transfer Protocol (HTTP/1.1): Caching]] ([TIME[2014-09-11 10:19:59 +09:00]] 版) <https://tools.ietf.org/html/rfc7234#section-5.2.2.7>
]REFS]

* 構成

[3] [[キャッシュ項目]]は、[RUBYB[キャッシュキー]@en[cache key]]と、
1つ以上の [[HTTP応答]]との組です [SRC[>>1]]。この[[応答]]のことを[RUBYB[[[蓄積]]された[[応答]]]@en[stored response]]といいます。

;; [9] [[蓄積された応答]]には[[腐敗]]したものと[[新鮮]]なものがあり、また[[満期時刻]]や[[齢]]のような特性もあります。

[6] [[キャッシュ項目]]には、[[完全]]なものと[[不完全]]なものがあります。

;; [7] [[不完全]]かどうかは[[メッセージ]]の性質なので、正確には[[キャッシュ項目]]ではなく[[キャッシュ項目]]に含まれる[[応答]]それぞれの性質だと思うのですが、
仕様上[[キャッシュ項目]]の性質となっています。

[4] キャッシュキーは[[要求メソッド]]と[[対象URL]]です。
しかし一般的な[[HTTPキャッシュ]]は [CODE(HTTP)@en[[[GET]]]] に対する[[応答]]しか[[キャッシュ]]しないので、
その場合は[[対象URL]]だけをキャッシュキーとすることができます。 [SRC[>>1]]

[5] [[対象資源]]で[[内容折衝]]が使われている場合には、
複数の[[HTTP応答]]が蓄積されることになります。 [SRC[>>1]]

* 処理モデル

[8] [[キャッシュ可能性]]、[[検証]]、[[条件付き要求]]、[[部分要求]]も参照。

[10] [[キャッシュ]]からの[[応答]]の決定は、次のように行います。

[FIG(steps)[
= [12] エラーその他の[[応答]]を返す場合や、[[キャッシュ]]を使わない[[要求メソッド]]の場合などは、そちらの方法で処理し、ここで終わります。
= [67] [[キャッシュ項目]]として[[蓄積]]された[[応答]]から[[キャッシュ再利用]]可能なものを探します。
= [68] 該当する[[蓄積された応答]]がなかった場合は、
== [96] [[要求]]に [CODE(HTTP)@en[[[Cache-Control:]] [[only-if-cached]]]]
があれば、 [CODE(HTTP)[[[504]]]] [[応答]]を返してここで終わります [SRC[>>93]]。
== [95] [[要求]]を[[転送]]し、その[[応答]]を[[転送]]します。ここで終わります。
= [13] 見つかった[[蓄積された応答]]それぞれについて、
== [18] [[応答]]の複製を用意します。
== [19] [[齢]]を計算し、その結果を[[応答]]に [CODE(HTTP)@EN[[[AGE:]]]]
[[ヘッダー]]として追加 (既にあれば置換) します ([[齢]]参照)。
== [14] [[明示的満期時刻]]がある場合、これを使って[[新鮮寿命]]を決定します。
== [15] そうでない場合、
=== [16] [[発見的満期時刻]]を使って[[新鮮寿命]]を決定します。
=== [17] [[新鮮寿命]]が24時間を超えていて、[[応答]]に[[警告符号]] [CODE(HTTP)[[[113]]]] の
[CODE(HTTP)@en[[[Warning:]]]] [[ヘッダー]]がなければ、追加します
([[新鮮寿命]]参照)。
== [20] [[新鮮寿命]]より[[齢]]が小さければ、[[新鮮]]とします。そうでなければ、[[腐敗]]とします。
== [21] [[腐敗]]の場合、[[検証]]必要フラグを設定します。
== [22] 
no-store, no-cache, must-revalidate, s-maxage, proxy-revalidate 
なら、[[検証]]必要フラグを削除します。
= [47] [[検証]]が必要な場合、
== [97] [[要求]]に [CODE(HTTP)@en[[[Cache-Control:]] [[only-if-cached]]]]
があれば、 [CODE(HTTP)[[[504]]]] [[応答]]を返してここで終わります [SRC[>>93]]。
== [98] [[検証]]します。
== [100] [[検証]]できなかった場合、
=== [102] [[蓄積された応答]]に
[CODE(HTTP)@en[[[Cache-Control:]] [[must-revalidate]]]] があれば、
[CODE(HTTP)[[[504]]]] [[応答]]を返してここで終わります [SRC[>>101]]。
=== [103] [[共有キャッシュ]]であって、[[蓄積された応答]]に
[CODE(HTTP)@en[[[Cache-Control:]] [[proxy-revalidate]]]] があれば、
[CODE(HTTP)[[[504]]]] [[応答]]を返してここで終わります [SRC[>>104, >>101]]。
= [99] エラーの[[応答]]や[[リダイレクト]]の[[応答]]の場合、
それを返してここで終わります。 [SRC[>>18]]
= [11] [[事前条件]]をあれば適用します。真なら、あるいは事前条件がなければ、
[[応答]]を返します。詳しくは[[条件付き要求]]を参照。
]FIG]