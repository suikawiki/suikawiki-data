[3] [[CSS]] の [DFN[[CODE(CSS)@e[[[hsla()]]]] [[関数]]]]は、 [[HSL]] による[[色]]と[[不透明度]]
([[α値]]) を表します。

* 仕様書

- [2] [CITE@en[CSS Color Module Level 3]] ([TIME[2011-06-07 21:54:38 +09:00]] 版) <http://www.w3.org/TR/2011/REC-css3-color-20110607/#hsla-color>

* [CODE(CSS)@en[hsla()]]

[5] [CODE(CSS)@en[[[hsla()]]]] [[関数]]は、
- [6] [CODE(CSS)@en[hsla(]]
- [7] [CODE(CSS)@en[[[hsl()]]]] 同様に [[H]]、[[S]]、[[L]] を表す3つの値
- [8] [[読点]]
- [9] [CODE(CSS)[[[<alphavalue>]]]]
- [10] [CODE(CSS)@en[)]]

... で構成されます。 [SRC[>>2]]

[11] [[H]], [[S]], [[L]], [CODE(CSS)@en[[[<alphavalue>]]]] の前後には[[空白]]を挿入できます。 [SRC[>>2]]

[12] [[関数名]]は[[大文字]]でも[[小文字]]でも構いませんし、[[escape]]
することもできます。

;; [13] [[CSS3]] 仕様書上は構文は十分明確に規定されていません。

* 色空間と色域

[14] [[利用者エージェント]]は、 [[H]], [[S]], [[L]] の値を [CODE(CSS)@en[[[hsl()]]]] 
[[関数]]の場合と同様に[[装置]]の[[色域]]に応じて[[くりぬき]]しなければ[['''なりません''']]。
[SRC[>>2]]

[15] また [CODE(CSS)@en[[[<alphavalue>]]]] も[[正規化]]されます。

* 構文解析

[1]
[[Firefox]] 3 では、 [VAR[a]] の値が 1 以上なら[[構文解析]]時に
[CODE(CSS)@en[[[rgb]]()]] に置き換えられ、
0 以下なら[[構文解析]]時に [VAR[a]] が 0 の
[CODE(CSS)@en[[[rgba]]()]] に置き換えられます。

* 例

- [4] [CODE(CSS)[hsla(120, 100%, 50%, 1)]]

これは[[不透明度]]が 1 で完全に[[不透明]]なので、 [CODE(CSS)[hsl(120, 100%, 50%)]] ([[緑]])
と同じ[[色]]を表します。 [SRC[>>2]]