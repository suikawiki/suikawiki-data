[17] [[T-Time]] は、独自拡張を含む [[HTML]]
を理解します。 T-Time というソフトウェアの性格上、
追加要素・属性は表現的なものに大きく偏っています。

[21] [[T-Time]] 以外で利用されることはありませんでしたし、それを目指していたわけでもなさそうです。
いずれにせよ、 [[HTML]] や [[CSS]] の開発の流れを逸脱した独自の拡張だったため、
普及することも、その後の [[HTML]] や [[CSS]] の仕様の拡張に影響をおよぼすこともできませんでした。

[19] 拡張を含むマークの解釈についての解説は、
T-Time 付属の文書に詳しく載っています。

- [23] ''T-Time:タグ入門'' <http://web.archive.org/web/20000918090105/http://www.voyager.co.jp/T-Time/taglesson/index.html>
- [24] ''T-Timeが行うHTMLの解釈について'' <http://www.voyager.co.jp/T-Time/HTML.html>

[26]
>>19 [[T-Time]] 5.5にはついてないみたいです。
([[名無しさん]] [WEAK[2006-02-04 10:47:51 +00:00]])

* 独自拡張要素型

[18] T-Time 2.1 以降は、独自拡張型の接頭辞を
[CODE(HTML)[!]] から [CODE(HTML)[T-]] に変更しています。

,[[.date]]
,[[.find.key]]
,[[.mail]]
,[[.name]]
,[[.search.key]]

.[[.search.max]]
,[[.search.match]]
,[[.time]]
,[[inv]]	,反転
,[[!middle]]
,[[t-action]]
,[[t-bottom]]
,[[t-case]]
,[[t-cb]]	,Column break
,[[t-code]]	,文字参照
,[[t-em]]	,強調
,[[t-hide]]
,[[t-img]]
,[[t-left]]	,左揃え (非推奨)
,[[t-move]]	,文字位置調整
,[[t-nocase]]
,[[t-pb]]	,Page break
,[[t-pdef]]	,挿絵定義
,[[t-phead]]	,
,[[t-ptail]]	,
,[[t-r]]	,ルビ
,[[t-rb]]	,ルビ
,[[t-right]]	,右揃え (非推奨)
,[[t-tab]]	,Indentation
,[[t-time]]
,[[t-top]]

[22] SGML 違反ですが、タグ内に注釈がかけるそうです。
[PRE[
<element attr=val // comment
  attr1=val //comment
>
]PRE]

[[#comment]]


* 標準要素型・広く実装されている拡張要素型への独自拡張属性

,"*/@[[t-class]]",級
,[[a]]/@[[appl]]	,Mac Creator
,a/@[[background]]	,背景実行
,a/@bgcolor
,a/@[[caption]]	,Caption
,a/@charspace
,a/@cmd
,a/@[[exe]]	,Application
,a/@linespace
,a/@linkcolor
,a/@[[newwindow]](=newwindow)	,target=_blank (非推奨)
,a/@pointercolor
,a/@[[prop]]
,a/@[[shake]]	,onclick 微動
,a/@shadowcolor
,a/@subpointercolor
,a/@textcolor
,a/@[[xsize]]
,basefont/@[[charspace]]	,基底字間
,basefont/@[[linespace]]	,基底行間
,[[basefont]]/@[[xsize]]	,基底字寸法
,[[body]]/@[[cpl]]	,行字数
,body/@[[dan]]	,段数
,[[br]]/@[[indent]]	,Indentation
,br/@[[linemode]]	,Image inline viewing
,br/@[[start]]	,Block indenting
,[[font]]/@xsize	,字寸法
,h[VAR[n]]/@caption	,柱文字列
,h[VAR[n]]/@visible	,見出し表示
,h[VAR[n]]/@xsize	,字寸法
,img/@a
,img/@appl
,img/@background
,img/@bordercolor
,img/@caption
,img/@cmd
,img/@color
,img/@drawing
,img/@dspace
,img/@exe
,img/@gaiji
,img/@hline
,img/@href
,img/@line
,img/@linemode
,img/@mode
,img/@newwindow(=newwindow)
,img/@opcolor
,img/@orgheight
,img/@orgwidth
,img/@scale
,img/@shake
,img/@shared
,img/@snap
,img/@src
,img/@targetplane
,img/@vheight
,img/@vline
,img/@vwidth
,img/@x
,img/@y

[[#comment]]


* スタイル・シート

[20] [CODE(MIME)[[[text/t-time]]]] は [[CSS]] もどきの構文。

属性 :
,[[a]]
,[[align]]
,[[appl]]
,[[border]]
,[[bordercolor]]
,[[caption]]
,[[charspace]]
,[[cmd]]
,[[color]]
,[[cpl]]
,[[dan]]
,[[dspace]]
,[[exe]]
,[[face]]
,[[hashira]]
,[[hashiraalign]]
,[[hashirasize]]
,[[hashiravisible]]
,[[height]]
,[[hline]]
,[[href]]
,[[hspace]]
,[[line]]
,[[linemode]]
,[[linespace]]
,[[link]]
,[[midashiface]]
,[[midashisize]]
,[[opcolor]]
,[[prop]]
,[[scale]]
,[[size]]
,[[src]]
,[[text]]
,[[valign]]
,[[vline]]
,[[vspace]]
,[[width]]
,[[x]]
,[[xsize]]
,[[y]]

[[#comment]]


* 例

- [9] head/[SAMP(HTML)[<t-PDEF id=4 src="m0104.jpg" height=100% hspace=12 x=0 y=0 a=1 o=1>]] : 画像定義
-- @id は固有識別子
-- @a は原点 (画像の外枠側の辺の中央があわせられる) 位置
--- 0 : middle center
--- 1 : top left
--- 2 : top center
--- 3 : top right
--- 4 : middle right
--- 5 : bottom right
--- 6 : bottom center
--- 7 : bottom left
--- 8 : middle left
-- @x は右, @y は下方向の原点からの移動量
-- @vspace, @hspace, @width, @height
-- @o=1 : 回り込む
- [10] [SAMP(HTML)[<t-PHEAD id=16 delay=1>]] : 挿絵
-- @id : 定義識別子参照
-- @delay : 遅延頁数 (@delay=1 なら、要素が含まれる頁の次の頁で表示) 
--- @delay=0 のときは (body > :first-child | t-PB + *) に t-PHEAD がないといけない。
- [15] [SAMP(HTML)[<t-PTAIL id=16>]] : 挿絵消去
- [11] [SAMP(HTML)[<t-PB>]] : 改頁
- [12] [SAMP(HTML)[<t-LEFT>]] : 以降左/上揃え
- [13] [SAMP(HTML)[<t-RIGHT>]] : 以降右/下揃え
- [14] [SAMP(HTML)[<FONT xsize=12>・・・</FONT>]]
- [16] [SAMP(HTML)[<!MIDDLE>]]
[[#comment]]


* ruby

- [1]
-- [SAMP(HTML)[<t-R> 禅智内供''(''ぜんちないぐ'')'']]
-- [SAMP(HTML)[<t-R> 禅智内供(ぜん<!>ち<!>ない<!>ぐ)]]
- [2] [SAMP(HTML)[<t-RB> 禅智内供<!>''(''ぜんちないぐ'')''<t-/RB>]]
- [3] [SAMP(HTML)[<ruby>禅智内供<rt>ぜんちないぐ</rt></ruby>]]
- [4] [SAMP(HTML)[<ruby>禅智内供<rp>(</rp><rt>ぜんちないぐ</rt><rp>)</rp></ruby>]]
- [5] [SAMP(HTML)[<ruby><rb>禅智内供</rb><rp>(</rp><rt>ぜんちないぐ</rt><rp>)</rp></ruby>]]

(但し、 [CODE(HTML)[''('']], [CODE(HTML)['')'']]
は [CODE(char)[FULLWIDTH [VAR[*]] PARENSIS]]。)

[6] 例は''T-Time:ルビ、アンチエイリアス'' <http://www.voyager.co.jp/T-Time/t_2-2.html>
より。

[7] >>5 は [[W3C]] XHTML Ruby module の形式、
>>3, >>4 は W3C Ruby で以前検討されていた SGML
風表現で、 >>1, >>2 が独自ということになります。

[PRE[
<!-- >>3-5 -->
<!ELEMENT ruby - - (rb,rp?,rt,rp?)>
<!ELEMENT rb o o %rb.content>
<!ELEMENT rp - o %rp.content>
<!ELEMENT rt - o %rt.content>
]PRE]

[8] >>2 を SGML 的に合法化するのはちょっと手間がかかる。

[PRE[
<!ENTITY % FW_OP SDATA "[FULLWIDTH LEFT PARENTHESIS]">
<!ENTITY % FW_CP SDATA "[FULLWIDTH RIGHT PARENTHESIS]">
<!-- >>1 -->
<!ELEMENT t-R - - ([rb, "%FW_OP"], [rt, "%FW_CP"])>
<!ELEMENT rb o o %rb.content>
<!ELEMENT rt o o %rb.content>
<!-- "(", ")" を捨てていいなら、
     データタグじゃなくて短縮参照を使って、 -->
<!ELEMENT t-R - - (rb, rt)>
<!ENTITY rb-end ENDTAG "rb">
<!ENTITY rt-end ENDTAG "rt">
<!SHORTREF t-R
           "%FW_OP" rb-end
           "%FW_CP" rt-end>
<!-- 但し %FW_OP と %FW_CP は SGML 宣言で shortref
     に含めないといけない。 -->
]PRE]

[PRE[
<!-- >>2 -->
<!-- 名前文字に / を追加する方法 -->
<!ELEMENT t-RB - o (rb, rt, t-/RB)>
<!-- 括弧→タグは >>1 のときと同じくデータタグ
     または短縮参照を使う。詳細省略。 -->
<!ELEMENT rb o o %rb.content>
<!ELEMENT rt o o %rt.content>
<!ELEMENT t-/RB - o EMPTY>
<!-- 短縮参照でごり押しする方法 -->
<!ELEMENT t-RB - - (rb, rt)>
<!ELEMENT t-RB-end ENDTAG "t-RB">
<!SHORTREF t-RB "<t-/RB>" t-RB-end>
<!-- もちろん、 SGML 宣言で shortref に <t-/RB>
     を追加しておかないといけない。 -->
]PRE]

>>1, >>2 では [CODE(HTML)[<!>]] を挿入して
[SAMP(HTML)[<rtc><rt>せん</rt><rt>げん</rt></rtc>]]
の [CODE(HTML)[</rt><rt>]] みたいなことができます。
そのままでも SGML 的に空[[注釈宣言]]なので問題ないですし、
XML のように解析器が応用に[[注釈節]]として渡してくれれば処理できますが、
短縮参照で頑張って要素に展開してみましょう。

[PRE[
<!ELEMENT (t-R|t-RB) - - (rbc, rtc)>
<!ELEMENT rbc - - (rb)+>
<!ELEMENT rtc - - (rt)+>
<!ELEMENT (rb|rt) o o %rbrt.content>
<!ENTITY rb-start STARTTAG "rb">
<!ENTITY rt-start STARTTAG "rt">
<!SHORTREF rb "<!>" rb-start>
<!SHORTREF rt "<!>" rt-start>
]PRE]

但し、 SGML 宣言で [CODE(SGML)[<!>]]
を[[短縮参照区切子機能]]に追加する必要が出てきますが、
そうすると文書中の他の要素の子である
[CODE(SGML)[<!>]] も短縮参照として認知されてしまいます。
[CODE(SGML)[[[mdo]]]] としての認知がなされなくなってしまうので、
文書全体で空注釈宣言が使えなくなってしまいます。

* 利用例

[25]
>>1 を使った文書の例

[CITE[源氏物語 目次]] 
<http://attic.neophilia.co.jp/aozora/genjimonogatari/htmlfiles/index.html>

* 関連

[27] [[TTZ]] は [[T-Time]] の [[HTML]] をコンパイルした独自の[[データ形式]]です。
