* 仕様書

[REFS[
- [2] [CITE@en[Infra Standard]] ([TIME[2017-08-17 16:48:46 +09:00]]) <https://infra.spec.whatwg.org/#isomorphic-encode>
- [10] [CITE@en[Infra Standard]] ([TIME[2017-08-17 16:48:46 +09:00]]) <https://infra.spec.whatwg.org/#isomorphic-decode>
]REFS]

* 演算

[3] [[文字列]][VAR[データ]]の[DFN[[RUBYB[同型符号化]@en[isomorphic encode]]]]は、
次のようにします [SRC[>>2]]。

[FIG(steps)[
= [4] [VAR[出力]]を、新しい[[空バイト列]]に設定します。
= [5] [VAR[データ]]の各[[符号位置]][VAR[符号位置]]について、順に、
== [6] [VAR[出力]]の末尾に、値が[VAR[符号位置]]の[[バイト]]を追加します。
= [7] [VAR[出力]]を返します。
]FIG]

;; [8] この[[演算]]は、[VAR[データ]]が [CODE[U+0100]] [[以上]]の[[符号位置]]を含まないときにしか使えません。

-*-*-

[11] [[バイト列]][VAR[データ]]の[DFN[[RUBYB[同型復号]@en[isomorphic decode]]]]は、
次のようにします [SRC[>>10]]。

[FIG(steps)[
= [12] [VAR[出力]]を、新しい[[空文字列]]に設定します。
= [13] [VAR[データ]]の各[[バイト]][VAR[バイト]]について、順に、
== [14] [VAR[出力]]の末尾に、値が[VAR[バイト]]の[[符号位置]]を追加します。
= [15] [VAR[出力]]を返します。
]FIG]

* 文脈

[18] これらの[[演算]]は、次の場面で使われています。

[FIG(short list)[ [19] [[同型符号化]]、[[同型復号]]の[[応用]]
- [CODE[atob]], [CODE[btoa]]
]FIG]

[20] この他に、[[仕様書]]では[[UTF-8符号化]]や[[UTF-8復号]]となっていても、
実質的に[[同型符号化]]や[[同型復号]]を表していることがあります。

;; [[復号][復号 (符号化)]]も参照。

* 関連

[9] [[Perl]] は[[バイト列]]を[[文字列]]として扱うことができます。これは[[同型復号]]に相当する暗黙の[[型変換]]を伴っています。

* 歴史

[1] [CITE@en[Define isomorphic encode and decode]]
([[annevk]]著, [TIME[2017-08-16 01:53:57 +09:00]])
<https://github.com/whatwg/infra/commit/8d7447e5462f2cd104b7bbe7a719227be80921cf>

[16] [CITE@en[byte sequence <> string by annevk · Pull Request #146 · whatwg/infra]] ([TIME[2017-08-24 17:57:05 +09:00]]) <https://github.com/whatwg/infra/pull/146>

[17] 実装によっては [[ISO 8859-1]] や [[Latin1]] という名称の[[文字コード]]としてこの[[符号化]]と[[復号]]が実装されていることがありますが、
その意味には混乱があるため (例えば [[Web]] では [[Windows-1252]] の意)、
[[演算]]名に使うことは避けられているようです。