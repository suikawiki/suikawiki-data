[11] [DFN[[CODE(IDL)@en[implements]] [RUBYB[文]@en[statement]]]]は、
ある[[インターフェイス]]を[[実装]]する[[オブジェクト]]が更に[[実装]]しなければならない[[インターフェイス]]を指定するものです
[SRC[>>10]]。

* 仕様書

[REFS[
- [10] [CITE[Web IDL (Second Edition)]] ([TIME[2014-02-10 21:45:38 +09:00]] 版) <http://heycam.github.io/webidl/#idl-implements-statements>
]REFS]

* 構文

[12] [CODE(IDL)@en[implements]] [[文]]は、次のような[[定義]]です [SRC[>>10]]。
[PRE(IDL example code)[
[VAR[A]] implements [VAR[B]];
]PRE]

[13] これは、 [VAR[A]] を[[実装]]する[[オブジェクト]]が [VAR[B]] 
も[[実装]]しなければならないことを表します [SRC[>>10]]。

* 制約

[16] [[両辺]]が表すものは[[インターフェイス]]でなければなりません。
ただし[[コールバックインターフェイス]]であってはなりません。 [SRC[>>10]]

[15] [[両辺]]の[[インターフェイス]]は異なるものでなければなりません。
一方が他方を[[継承]]していてはなりません。 [SRC[>>10]]

[14] [CODE(IDL)@en[[[implements]]]] [[文]]は[[推移的]]に適用されます [SRC[>>10]]。

[17] [CODE(IDL)@en[[[implements]]]] [[文]]を[[有向グラフ]]の[[辺]]としたとき、
[[循環]]してはなりません [SRC[>>10]]。

;; [18] 次のようなケースは禁止されていませんがいいのでしょうか。
[PRE(IDL example code)[
interface B {};
interface C {};
interface D : C {};
B implements D;
C implements B;
]PRE]

[21] ただし[[左辺]]が[[補助的インターフェイス]]であるような [CODE(IDL)[[[implements]]]]
は[RUBYB[勧められていません]@en[discouraged]] [SRC[>>10]]。
([[推移的]]に適用されるような [CODE(IDL)@en[[[implements]]]] を書くべきではありません。)

;; [22] 実際にはそのような例はなさそうです。

* 補助的インターフェイス

[19] ある[[オブジェクト]]が[[実装]]する[[インターフェイス]]のうち、
[CODE(IDL)@en[[[implements]]]] [[文]]の[[右辺]]に指定されているものや、
その[[継承インターフェイス]]のことを、
[DFN[[RUBYB[[[補助的インターフェイス]]]@en[supplemental interface]]]]といいます [SRC[>>10]]。

[20] すなわち、 [CODE(IDL)@en[[[interface]]]] の [CODE[[[:]]]] で表されるような本筋の[[継承]]関係ではなく、
[CODE(IDL)@en[[[implements]]]] によって追加で[[実装]]するよう指定されている[[インターフェイス]]群のことを[[補助的インターフェイス]]と呼んでいます。

* 歴史

[REFS[
- [1] [CITE[IRC logs: freenode / #whatwg / 20090925]]
([TIME[2009-11-17 00:09:05 +09:00]] 版)
<http://krijnhoetmer.nl/irc-logs/whatwg/20090925#l-110>
]REFS]