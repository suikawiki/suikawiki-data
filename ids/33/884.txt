[1] [[計算機システム]]などの[[日時]]の処理では、
[[日時]]の構成要素が扱える (当初設計時に想定した)
[[値域]]を超えることがあり、問題となります。

* 年の桁溢れ

[5] 発症パターンとして、

- [6] 下2桁で扱っていたので、100年目に問題が起きる
- [7] [VAR[n]]年から99年を前世紀、0年から[VAR[n]]-1年を新世紀として扱っていたので、
二度目の[VAR[n]]年付近で問題が起きる
- [9] 0年や99年を特別な意味で使っていて問題が起きる

... というのがあります。

[8] [[西暦年]]その他各[[紀年法]]の項を参照。

[10] [[2000年問題]]、[[10000年問題]]、
[[昭和100年問題]]、
[[民国100年問題]]、
[[2700年問題]]も参照。

[12] [[日本語]]では検索しても情報が出てこないけど、
[[タイ暦]]2600年問題もありそう?

[REFS[
- [11] [CITE@ja[年問題 - Wikipedia]] ([TIME[2018-04-19 01:05:26 +09:00]]) <https://ja.wikipedia.org/wiki/%E5%B9%B4%E5%95%8F%E9%A1%8C>
]REFS]

* 元号コードの桁溢れ

[2] [[元号コード]]参照。

* 整数時刻系の桁溢れ

[3] [[Unix time]] などを参照。

* 関連

[4] [[桁溢れ]]以外に、同じ[[桁]]数と仮定して[[文字列]]として[[整列]]させていたとき、
前提が崩れて順序がおかしくなるという問題が生じる場合もあります。