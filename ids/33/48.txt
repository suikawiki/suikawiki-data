[FIG(quote)[
[FIGCAPTION[
[1] [CITE@en[Beaker | Dat files protocol]]
([TIME[2018-02-05 22:40:14 +09:00]])
<https://beakerbrowser.com/docs/inside-beaker/>
]FIGCAPTION]

> In Beaker, a Dat archive acts as a website. The public key serves a similar purpose as an IP address in HTTP/S URLs; it is the domain which identifies the site. Dat URLs are formed as dat://{publickey}/{path…}, where publickey is a 64-character, hex-encoded string.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[2] [CITE@en[Beaker | Dat files protocol]]
([TIME[2018-02-05 22:42:34 +09:00]])
<https://beakerbrowser.com/docs/inside-beaker/>
]FIGCAPTION]

> Dat’s internal logs enable history archival and versioned reads. Using the log sequence numbers, it is possible to create versioned URLs such as dat://{pubkey}+{version}/{path…}. 

]FIG]


[FIG(quote)[
[FIGCAPTION[
[3] [CITE@en[Authenticated Dat URLs and HTTPS to Dat Discovery · beakerbrowser/beaker Wiki]]
([TIME[2018-02-05 22:48:07 +09:00]])
<https://github.com/beakerbrowser/beaker/wiki/Authenticated-Dat-URLs-and-HTTPS-to-Dat-Discovery>
]FIGCAPTION]

> Beaker needs a mechanism by which users can securely deploy a site at a domain, eg dat://beakerbrowser.com. Ideally, this mechanism will allow discovery and automatic redirection; for instance, if the user browses to https://beakerbrowser.com, they should be prompted to redirect to dat://beakerbrowser.com.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[4] [CITE@en[beakerbrowser/dathttpd: A Web server for Dat and HTTPS, with zero-config TLS.]]
([TIME[2018-02-05 23:18:59 +09:00]])
<https://github.com/beakerbrowser/dathttpd>
]FIGCAPTION]

> Dat sites are hosted at public keys, which are the equivalent of IP addresses in the P2P network. The pubkeys are ugly, though! Wouldn't it be nice if your dats could have nice DNS shortnames, and also rehost over HTTPS for people still on legacy browsers?
> dathttpd is for you!

]FIG]


[5] [CITE@en[beakerbrowser/beaker: peer-to-peer web browser with support for dat://]]
([TIME[2018-09-30 01:08:58 +09:00]])
<https://github.com/beakerbrowser/beaker>