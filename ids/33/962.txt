[49] [[ロケール]]に関わる次のデータは、[[年]]または[[月]]レベルで随時更新されていきますから、
それに依存するソフトウェアは、何らかの[[自動更新]]の仕組みを保持するべきです。

* 更新されるべき情報

[FIG(list)[
- [[文字]]の情報 - 数ヶ月程度で改訂されます。
-- [[Unicode Character Database]] の情報
-- プロトコル依存の情報 (例えば [[IDNA]])
-- [[フォント]]
-- [[照合順序]]の情報
- [[時間帯]]の情報
-- [[標準時]]の改正や[[夏時刻]]の実施がいつあるかわかりません。
-- [[夏時間]]の開始や終了が実施の数日前に発表されることがあります。
- [[言語タグ]]の正規化や妥当性検証の情報 - 何ヶ月かの頻度で新規追加があります。
- [[暦]]の情報
-- [[暦]]によっては、翌年の[[月]]配置などが前年末に決定されたりします。
-- [[改暦]]、[[紀年法]]の変更、[[改元]]が突然実施されることがあります。
-- [[閏秒]]の実施の有無は何ヶ月か前に発表されます。
-- 日付順の[[整列]]の実装方法によっては[[照合順序]]情報の更新も必要となります。
- [[祝祭日]]の情報
-- [[暦]]によって決まる[[祝祭日]]は、直前まで[[日]]が定まらないことがあります。
-- 臨時の[[休日]]などが実施の数日前に発表されることがあります。
- [10] 言語処理システム ([[入力システム]]、[[OCR]]、[[自動翻訳]]、校正、
[[音声合成]]、[[手話]]出力、検索など) の[[辞書]]
-- [[新語]]等
-- 新しい [[Unicode]] [[文字]]・[[異体字]]など
-- 新しい[[元号]]
-- 新しい[[祝祭日]]
]FIG]

;; [50] [[改元]]は[[即日施行][即日改元]]されたりします。

;; [54] [[将来の日時]]も参照。

[57] [[プラットフォーム]]や[[アプリケーション]]は、
[[ロケール]]に関する情報の更新を適切に反映させる仕組みを持つ必要があります。

[EG[
[58] 例えば[[政府]]が[[夏時刻]]の実施を1週間前に決定し、
[[プラットフォーム]]の提供者が[[時間帯]]データベースの更新データを2日前に配信した場合、
[[プラットフォーム]]がこれを取得し、
([[プラットフォーム]]および連続して稼働中の[[アプリケーション]]も含めて)
実施までに現に参照している[[データベース]]を新しい定義に置き換える必要があります。
]EG]

[EG[
[59] 例えば[[政府]]が[[夏時刻]]の実施の中止を直前に発表し、
[[プラットフォーム]]の提供者の更新データ配布がそれに間に合わず実施翌日に配信した場合、
[[プラットフォーム]]は誤って[[夏時刻]]に移行した後に更新データを適用することになります。
[[プラットフォーム]]の[[地方時]]は[[夏時刻]]から[[標準時]]に戻すことになり、
[[時刻]]の不連続が発生します。
誤った[[夏時刻]]の実施中に[[夏時刻]]で記述された[[時刻]]は、
データベースの訂正後にも正しい[[時刻]]と解釈され続けるべきですが、
そのように実装されているかどうかはケースバイケースでしょう。
]EG]

[52] 次の情報は、それほど頻繁には更新されないかもしれません。
[FIG(list)[
- [[言語]]ごとの[[利用者インターフェイス]]上の文字列や音声の情報
- [[言語判定]]の情報
]FIG]

[11] 
[[夏時刻]]の実施予定変更に伴う[[交通ダイヤ]]データベースの更新など、
[[日時]]に関する変更に付随して発生する変更のためのデータ更新が適切なタイミングで行われる必要があります。

;; [12] 場合によってはそうした別の変更が[[日時]]の変更より先に適用されておかしな挙動を示すかもしれません。

* 更新に依存しないべきもの

[2] 内部動作に深く関わるものや、後から参照する重要な情報は、
こうした更新に依存しない形にしておくべきです。

[EG[
[3] 例えば[[システム時計]]が[[夏時刻]]実施の影響を受けるとすると、
[[夏時刻]]の実施情報が適切なタイミングで配信されないと、
誤った[[システム時計]]の値に設定されることになりますから、
[[時刻]]に依存したあらゆるものの動作に悪影響が及びます。
]EG]

[EG[
[4] 例えばシステムが[[閏秒のないUTC]]で動作しているとき、
[[ログファイル]]の[[日時]]に [[TAI]]
を使うとすると、 [[UTC]] と [[TAI]] の換算が必要となってきます。
換算に必要な[[閏秒]]の実施の情報が適切なタイミングで適用されていないと、
[[閏秒]]実施後の[[ログファイル]]上の[[日時]]が不正確になってしまいます。
これでは[[ログファイル]]で後から動作状況を確認することが困難になるかもしれません。
]EG]

* 相互運用性

[13] 
相互接続された複数のシステムがそれぞれ別のタイミングで別の更新情報を受け取る可能性があります。

[1] 複雑なシステムでは、
[[ロケール]]情報の更新のタイミングに注意すると共に、
未知の[[ロケール]]情報を受信しても誤動作することのないように工夫が必要です。

[EG[
[5] 
[[tzdata]] の[[時間帯]]の名前と定義は、たまに新しいものが追加されます。
[[アプリケーション]]のデータが更新されても[[ミドルウェア]]のデータが未更新の場合、
新しい[[時間帯]]を指定した時エラーになるかもしれません。

]EG]


[EG[
[14] 
新元号への対応が各システムに行き渡る前に新元号を使ったデータを送信すると、
古いままのシステムが処理できないおそれがあります。

]EG]

* 実装

[6] 
[[Windows]] では、
新しい[[標準時]]や[[夏時刻]]の情報がたまに 
[[Windows Update]]
で配信されています。


[7] [CITE@en[Time Zone Rules  |  Android Open Source Project]]
([TIME[2018-11-02 11:02:09 +09:00]])
<https://source.android.com/devices/tech/config/timezone-rules>

[410] [CITE['''['''tz''']''' Time zone confusion in Morocco]]
([TIME[2018-11-02 03:51:49 +09:00]])
<https://mm.icann.org/pipermail/tz/2018-November/027151.html>

[8] [CITE@en[How to get updated time zone information for your Apple device - Apple Support]]
([TIME[2018-11-02 11:08:21 +09:00]])
<https://support.apple.com/en-us/HT206986>

[9] [CITE@en[Red Hat Enterprise Linux Timezone Data (tzdata) - Development Status Page]]
([TIME[2018-11-02 11:11:57 +09:00]])
<https://access.redhat.com/articles/1187353>