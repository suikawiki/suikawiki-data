* 仕様書

[REFS[
- [29] [CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-6.1>
- [1] [CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-6.5.2>
- [8] '''[CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-6.6>'''
- [34] '''[CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-8.2>'''
]REFS]

* 意味

[35] [[HTTP/2]] [[server push]] は、
[[応答]]とそれに対応する「[RUBYB[約束]@en[promised]]」[[要求]]を、
先に[[クライアント]]が開始した[[要求]]に関連付ける形で[[サーバー]]から予め送信
([[push]]) するものです [SRC[>>34]]。

[36] [[server push]] は、[[クライアント]]が元の[[要求]]に対する[[応答]]を完全に処理するために当該[[応答]]が必要になるであろうとわかっている場合に便利です
[SRC[>>34]]。

* [CODE(HTTP)@en[PUSH_PROMISE]] フレーム

** 意味

[9] [CODE[[[PUSH_PROMISE]]]] [[フレーム]] ([[フレーム型]] [CODE[[[0x5]]]]) は、
[[peer]] に対して[[ストリーム]]を開始することを予め通知するものです [SRC[>>8]]。

[23] [CODE[[[PUSH_PROMISE]]]] によって予約する順序は、その[[ストリーム]]を利用する順序と一致していなくても構いません [SRC[>>8]]。

** 構文

[16] 次の[[フラグ]]があります。

[17] [CODE[[[END_HEADERS]]]] ([CODE[[[0x4]]]] = 第2ビット) は、
設定されていれば、[[header block]] 全体が含まれており、 [CODE[[[CONTINUATION]]]]
[[フレーム]]が続かないことを表します [SRC[>>8]]。

[18] 設定されていなければ、同じ[[ストリーム]]で [CODE[[[CONTINUATION]]]]
[[フレーム]]が続かなければ[['''なりません''']] [SRC[>>8]]。

[20] [CODE[[[PADDED]]]] ([CODE[[[0x8]]]] = 第3ビット) は、
設定されていれば、詰め長欄と詰めが存在することを示します [SRC[>>8]]。

[FIG(packet)[
:width:8

= 1 0
= 1 0
= 1 [CODE[[[END_HEADERS]]]]
= 1 [CODE[[[PADDED]]]]
= 1 0
= 1 0
= 1 0
= 1 0
]FIG]

[11] [[payload]] は、次の欄で構成されます。

[12] [RUBYB[詰め長]@en[pad length]]は、[[フレーム]]の詰めの長さを[[バイト]]単位で指定する
8ビットの欄です [SRC[>>8]]。
[CODE[[[PADDED]]]] [[フラグ]]が設定されている場合のみ存在します [SRC[>>8]]。

;; [30] 値は0でも構いません。値が実際の[[詰め]]の長さを超えることは禁止されていませんが、
当然正しく処理できませんし、可能な長さを超えるなら[[接続エラー]]となります。

[13] R は、予約されている1ビットです [SRC[>>8]]。

[10] [RUBYB[約束ストリームID]@en[promised stream ID]]は、
[[送信者]]がで予約する[[ストリーム]]の[[符号無し]]31ビット[[ストリーム識別子]]を示します [SRC[>>8]]。
[[送信者]]が作成する次の[[ストリーム]]の識別子として妥当なものでなければ[['''なりません''']]
[SRC[>>8]]。 [[idle]] 状態でなければなりません [SRC[>>8]]。
これは[RUBYB[関連付けられた]@en[associated]][[ストリーム]]を表します [SRC[>>8]]。

[14] [[header block fragment]] は、[[要求ヘッダー]]を含んだ [[header block fragment]]
です [SRC[>>8]]。

[15] [RUBYB[詰め]@en[padding]]は、
[[メッセージ]]の長さを隠すための[[セキュリティー]]機能です。
[[送信者]]は、すべて 0 の[[オクテット]]にしなければ[['''なりません''']]。 [SRC[>>29]]

;; [31] 詰め長の長さより、詰めの最大長は、255バイトです。

[FIG(packet)[
:width:32

= 8 詰め長
= 1 R
= 31 ストリーム識別子
= 88... header block fragment
= 32... 詰め
]FIG]

** 文脈

[21] [[peer]] が開始した[[ストリーム]]で状態が [[open]] か [[half-closed (remote)]]
である場合にしか送信しては[['''なりません''']] [SRC[>>8]]。

[3] [[設定]] [CODE[[[SETTINGS_ENABLE_PUSH]]]] が 0 に設定されていれば、 
[CODE[[[PUSH_PROMISE]]]] [[フレーム]]を送信しては[['''なりません''']] [SRC[>>1, >>8]]。

** 処理

[4] [[設定]] [CODE[[[SETTINGS_ENABLE_PUSH]]]] を 0 に設定し、 
[[acknowledge]] された[[エンドポイント]]は、
[CODE[[[PUSH_PROMISE]]]] [[フレーム]]を受信したら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>1, >>8]]。

[22] 関連付けられた[[ストリーム識別子]]が [CODE[[[0x0]]]] なら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>8]]。

[28] 関連付けられた[[ストリーム識別子]]が違法 ([[idle]] 状態でない) なら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>8]]。

[25] [[ストリーム]]の状態遷移の項を参照。

[26] [[受信者]]は、[[ストリーム]]の状態が [[open]] でも [[half-closed (local)]]
でもなければ、[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']]
[SRC[>>8]]。

[27] ただし、[CODE[[[RST_STREAM]]]] を送信した後 (の [[closed]] 状態) には、
受信した [CODE[[[PUSH_PROMISE]]]] を処理しなければ[['''なりません''']] [SRC[>>8]]。

[32] [[受信者]]は、[[詰め]]に 0 以外があれば[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]
としても構いません。 [SRC[>>29]] 

[33] [[受信者]]は、詰め長が可能な長さより長ければ、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>29]]。

[24] [[受信者]]は、約束された[[ストリーム識別子]]を参照する
[CODE[[[RST_STREAM]]]] [[フレーム]]を返送することで、
約束[[ストリーム]]を拒絶することができます [SRC[>>8]]。

[19] [CODE[[[END_HEADERS]]]] フラグが設定されていない場合、
次の[[フレーム]]が [CODE[[[CONTINUATION]]]] で無いか、
違う[[ストリーム]]なら、[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]
としなければ[['''なりません''']] [SRC[>>8]]。

* 設定

[2] [DFN[[CODE[[[SETTINGS_ENABLE_PUSH]]]]]] ([CODE[[[0x2]]]]) は、
[[server push]] を無効化するために使うことができます。 [SRC[>>1]]

[5] 値 1 は、 [[server push]] を認めることを表します。これは初期値です。 [SRC[>>1]]

[6] 値 0 は、 [[server push]] を認めないことを表します。

[7] [CODE[[[1]]]] と [CODE[[[0]]]] 以外の値は、[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]]
としなければ[['''なりません''']] [SRC[>>1]]。