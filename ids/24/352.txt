* 仕様書

[REFS[
- [1] '''[CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-5.2>'''
- [18] [CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-6.5.2>
]REFS]

* 背景

[17] [[HTTP/2接続]]では複数の[[ストリーム]]を含めることができ、
複数のデータを[[多重化]]して[[並行]]に送受信することができます。
しかし[[受信者]]の[[メモリー]]などの[[資源]]は有限ですから、
[[HTTP]] や[[アプリケーション]]の処理能力を超えない配慮が必要となります。
[[フロー制御]]は、[[資源]]の制約がある[[エンドポイント]]を保護するためのものです [SRC[>>1]]。

[EG[
[2] [[接続]]内で過剰に[[ストリーム]]を使って[[多重化]]すると、
他の[[ストリーム]]の処理に干渉して処理しきれなくなるかもしれません [SRC[>>1]]。
]EG]

[EG[
[12] [[プロキシ]]は多くの[[接続]]で[[メモリー]]を共有する必要がありますし、
[[上流]]の[[接続]]が遅く[[下流]]の[[接続]]が速かったりすることもあります。 [SRC[>>1]]
]EG]

* 要件

[5] [[HTTP/2]] の[[フロー制御]]は、具体的なアルゴリズムは規定せず送受信者と[[フレーム]]が満たすべき要件のみを規定しています。
プロトコルを変更せずに適切な[[フロー制御]]アルゴリズムを実装できます [SRC[>>1]]。

[6] [[フロー制御]]は特定の[[接続]]について制御するもので、
単一の[[ホップ]] ([[エンドポイント]]間) に適用されます [SRC[>>1]]。
[[利用者エージェント]]から[[起源サーバー]]までの全体に適用されるものではありません。

[3] [[フロー制御]]は[[接続]]全体に対しても、その中の個別の[[ストリーム]]に対しても行います
[SRC[>>1]]。

;; [13] [[受信者]]がある[[ストリーム]]の処理はできないものの他の[[ストリーム]]は処理したい、
という場合にも対応できます [SRC[>>1]]。

[4] [[フロー制御]]には、 [CODE[[[WINDOW_UPDATE]]]] [[フレーム]]を使います。
[[受信者]]は、[[ストリーム]]について、および[[接続]]全体について、
受信できる[[バイト]]数を[[広告]]します。これは [RUBYB[credit に基づく方式]@en[credit-based scheme]]です。
[SRC[>>1]]

[11] しかし [CODE[[[WINDOW_UPDATE]]]] [[フレーム]]をいつ送信するか、
どのように値を決めるか、[[送信者]]が送信するかどう判断するかを [[HTTP/2]]
仕様としては規定していません。実装は適切な[[アルゴリズム]]を実装することができます。
[SRC[>>1]]

[8] 新しい[[ストリーム]]および[[接続]]全体の[[フロー制御窓]]の初期値は、
65535 [[バイト]]です。 [SRC[>>1]]

[7] [[フロー制御]]は[[受信者]]によって制御されます。
[[受信者]]は[[ストリーム]]について、また[[接続]]全体について、
任意の[[窓サイズ]]を設定することができます。
[[送信者]]は、[[受信者]]による[[フロー制御]]上の制限に従わなければ[['''なりません''']]。
[SRC[>>1]]

[10] [[フロー制御]]は、無効にはできません。 [SRC[>>1]]

[14] [[フロー制御]]が必要ない[[受信者]]は、データを受信する度に最大の
2[SUP[31]]-1 の[[フロー制御窓]]を[[広告]]することにより、
実質的に[[フロー制御]]を無効化できます。 [SRC[>>1]]

[15] [[送信者]]は、常に[[受信者]]が[[広告]]した[[フロー制御窓]]に従う必要があります。
[SRC[>>1]]

[9] [[フロー制御]]が適用されるかどうかは、[[フレーム型]]に依存します。
[CODE[[[DATA]]]] [[フレーム]]のみが適用対象で、
それ以外は[[フロー制御窓]]上の領域を消費しません。従って重要な制御フレームが[[フロー制御]]によりブロックされることはありません。
[SRC[>>1]]

[16] [[帯域遅延積]]がわからない状態で[[フロー制御]]を行うと、
[[ネットワーク資源]]を十分使い切れないかもしれません。しかし[[帯域遅延積]]がわかっていたとしても、
[[フロー制御]]は難しいです。[[受信者]]は、 [[TCP]] [[受信バッファー]]からデータを随時読み込まなけれ[['''ばなりません''']]。
そうしなければ、 [CODE[[[WINDOW_UPDATE]]]] など重要な[[フレーム]]を読んで処理することができず、
[[デッドロック]]に陥る虞があります。 [SRC[>>1]]

* 設定

[19] [[設定]] [DFN[[CODE[[[SETTINGS_INITIAL_WINDOW_SIZE]]]]]] ([CODE[[[0x4]]]]) は、
[[送信者]]の[[ストリーム]]レベルの[[フロー制御]]の[RUBYB[[[初期窓サイズ]]]@en[initial window size]]を[[バイト]]単位で表します [SRC[>>18]]。

;; [21] [[設定]]は、すべての[[ストリーム]]で共通です。

[20] 初期値は、 2[SUP[16]]-1 です [SRC[>>18]]。

[22] 最大[[フロー制御窓]]サイズである 2[SUP[31]]-1 より大きな値は、
[[接続エラー]] [DFN[[CODE[[[FLOW_CONTROL_ERROR]]]]]] としなければ[['''なりません''']]
[SRC[>>18]]。
