[FIG(quote)[
[FIGCAPTION[
[1] [CITE@en-US[Python Redis]]
([TIME[2015-07-24 09:34:59 +09:00]] 版)
<https://redislabs.com/python-redis>
]FIGCAPTION]

> redis-py is the second Redis client that natively supported SSL. Use the SSLConnection class or simply instantiate your connection pool using a rediss://-URL and the from_url method, like so:
> r = redis.Redis( url='rediss://:password@hostname:port/0',
>     password='password',
>     ssl_keyfile='path_to_keyfile',
>     ssl_certfile='path_to_certfile',
>     ssl_cert_reqs='required',
>     ssl_ca_certs='path_to_ca_cert')

]FIG]


[FIG(quote)[
[FIGCAPTION[
[2] [CITE@en[redis-py/CHANGES at master · andymccurdy/redis-py]]
([TIME[2015-07-24 09:36:26 +09:00]] 版)
<https://github.com/andymccurdy/redis-py/blob/master/CHANGES>
]FIGCAPTION]

> 
>     * Added an SSLConnection class that allows for secure connections through
>       stunnel or other means. Construct and SSL connection with the sll=True
>       option on client classes, using the rediss:// scheme from an URL, or
>       by passing the SSLConnection class to a connection pool's
>       connection_class argument.

]FIG]


[FIG(quote)[
[FIGCAPTION[
[3] ([TIME[2015-07-22 13:13:27 +09:00]] 版)
<http://www.iana.org/assignments/uri-schemes/prov/rediss>
]FIGCAPTION]

> 
>   This scheme is used by some Redis database client libraries to
>   designate the Redis database to connect to via RESP (REdis
>   Serialization Protocol) over TLS (RFC 5246), and in some cases to set
>   additional connection parameters of the client library.  Redis client
>   libraries implement RESP as defined in "Redis Protocol
>   specification".  This URI scheme is not part of that specification.

]FIG]
