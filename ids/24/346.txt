[2] [DFN[[RUBYB[[[ストリーム]]]@en[stream]]]]は、[[HTTP/2接続]]中の独立した[[フレーム]]の[RUBYB[双方向の流れ]@en[bidirectional flow]] (列) です [SRC[>>1, >>3]]。

* 仕様書

[REFS[
- [1] [CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-2.2>
- [3] '''[CITE@en[RFC 7540 - Hypertext Transfer Protocol Version 2 (HTTP/2)]] ([TIME[2015-05-15 10:14:54 +09:00]] 版) <https://tools.ietf.org/html/rfc7540#section-5>'''
]REFS]

* プロトコル

[4] [[HTTP/2接続]]は、並行して複数の[[フレーム]]を開くことができます。
つまり複数の[[ストリーム]]の[[フレーム]]を混在させて送受信できます。 [SRC[>>3]]

[5] [[ストリーム]]は、[[サーバー]]と[[クライアント]]のどちらからも確立したり閉じたりできますし、
一方だけで使ったり、両方で使ったりできます。 [SRC[>>3]]

[7] [[HTTP/2接続]]の開始の時点では、[[ストリーム]]はありません。ただし
[[HTTP/1.1]] から [CODE(HTTP)@en[[[Upgrade:]] [[h2c]]]] で [[HTTP/2]]
で切り替えた場合は、[[ストリーム識別子]] [CODE[[[0x1]]]] が使われた状態となります。

;; [[HTTP/2接続]]参照。

[65] [[エンドポイント]]は、各[[ストリーム]]の次の情報を保持します。
[FIG(list members)[
:[[ストリーム識別子]] [SRC[>>3]]:[[符号無し]]31ビット[[整数]]。
:開始した [[peer]]:[[ストリーム識別子]]が[[奇数]]なら[[クライアント]]、
[[偶数]]なら[[サーバー]]です [SRC[>>3]]。
:状態:状態遷移図上の状態のいずれかです (>>8)。
]FIG]

[6] [[ストリーム]]における[[フレーム]]の順序には意味があり、
[[受信者]]は受信した順序で処理する必要があります。 [SRC[>>3]]

[FIG(short list)[
- [[ストリーム識別子]]
- [[ストリームエラー]]
]FIG]

* 状態

[8] [[エンドポイント]]は、[[ストリーム]]の[RUBYB[状態]@en[state]]を保持します。
[SRC[>>3]]

[9] [[ストリーム]]の状態は、[[エンドポイント]]がそれぞれ保持しているもので、
[[フレーム]]の転送中は [[peer]] と異なることがあります。 [SRC[>>3]]
また (local) と (remote) のような対となる状態になっていることもあります。

[50] 状態は、[[フレーム]]の送受信で遷移します。単一の[[フレーム]]で複数の状態遷移が発生することもあります。

[63] 未知の[[フレーム]]は無視されます [SRC[>>3]]。しかし後述の通り、
指定された[[フレーム]]の種類以外はエラーとなるとの規定もあります。
どちらの規定が優先されるのかは不明ですが、この両文が [[RFC]]
では隣に並んでいるので、無視が優先されると[[エスパー]]できます。

[66] 次の状態があります。
[FIG(list short)[
- [[idle]]
- [[reserved (local)]]
- [[reserved (remote)]]
- [[open]]
- [[half-closed (local)]]
- [[half-closed (remote)]]
- [[closed]]
]FIG]

** idle

[10] [[ストリーム]]は、作成されると [DFN[[[idle]]]] 状態となります [SRC[>>3]]。

;; [11] [[エンドポイント]]は、[[peer]] と協調せずとも自身で[[ストリーム]]を作成できます
[SRC[>>3]]。相手に伝わるまでは、一方のみに[[ストリーム]]が存在する状態となります。

[22] 送信できる[[フレーム]]の種類の制約は明記されていませんが、
[CODE[[[HEADERS]]]] と [CODE[[[PRIORITY]]]] しか送信できないと見られます。

[12] 送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [13] [CODE[[[HEADERS]]]] [[フレーム]]を送信または受信すると、 [[open]]
に遷移します。
- [14] 他の[[ストリーム]]で [CODE[[[PUSH_PROMISE]]]] [[フレーム]]を送信し、
その [[Promised Stream ID]] で本[[ストリーム]]が示されていれば、 [[reserved (local)]]
に遷移します。
- [15] 他の[[ストリーム]]で [CODE[[[PUSH_PROMISE]]]] [[フレーム]]を受信し、
その [[Promised Stream ID]] で本[[ストリーム]]が示されていれば、 [[reserved (local)]]
に遷移します。
- [64] 本[[ストリーム]]を開始した [[peer]] がより大きな[[ストリーム識別子]]の[[ストリーム]]を使用したら、
[[closed]] に遷移します。
]FIG]

[16] [CODE[[[HEADERS]]]] と [CODE[[[PRIORITY]]]] 以外の[[フレーム]]を受信したら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>3]]。

** reserved (local)

[17] [CODE[[[PUSH_PROMISE]]]] [[フレーム]]で約束すると、
[[ストリーム]]は [DFN[[[reserved (local)]]]] 状態となります [SRC[>>3]]。

[23] [CODE[[[HEADERS]]]], [CODE[[[RST_STREAM]]]], [CODE[[[PRIORITY]]]] 
以外を送信しては[['''なりません''']] [SRC[>>3]]。

[19] 送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [20] [CODE[[[HEADERS]]]] [[フレーム]]を送信すると、 [[half-closed (remote)]] に遷移します。
- [21] [CODE[[[RST_STREAM]]]] [[フレーム]]を送信または受信すると、 [[closed]] に遷移します。
]FIG]

[24] [CODE[[[RST_STREAM]]]], [CODE[[[PRIORITY]]]], [CODE[[[WINDOW_UPDATE]]]] 以外の[[フレーム]]を受信したら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>3]]。

** reserved (remote)

[25] [DFN[[[reserved (remote)]]]] 状態は、[[ストリーム]]が [[peer]] により予約されていることを表します [SRC[>>3]]。

[29] [CODE[[[RST_STREAM]]]], [CODE[[[WINDOW_UPDATE]]]], [CODE[[[PRIORITY]]]]
以外を送信しては[['''なりません''']] [SRC[>>3]]。

[26] 送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [27] [CODE[[[HEADERS]]]] [[フレーム]]を受信すると、 [[half-closed (local)]] に遷移します。
- [28] [CODE[[[RST_STREAM]]]] [[フレーム]]を送信または受信すると、 [[closed]] に遷移します。
]FIG]

[30] [CODE[[[HEADERS]]]], [CODE[[[RST_STREAM]]]], [CODE[[[PRIORITY]]]]
以外の[[フレーム]]を受信したら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としなければ[['''なりません''']] [SRC[>>3]]。

** open

[31] [DFN[[[open]]]] 状態では、任意の[[フレーム]]の送受信ができます。

[34] 送信できる[[フレーム]]の種類の制約はありません [SRC[>>3]]。

[32] 本状態に遷移することになった[[フレーム]]の種類や本状態で送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [33] [CODE[[[END_STREAM]]]] フラグが設定された[[フレーム]]を送信すると、
[[half-closed (local)]] 状態に遷移します。
- [35] [CODE[[[END_STREAM]]]] フラグが設定された[[フレーム]]を受信すると、
[[half-closed (remote)]] 状態に遷移します。
- [36] [CODE[[[RST_STREAM]]]] [[フレーム]]を送信または受信すると、 [[closed]] に遷移します。
]FIG]

** half-closed (local)

[37] [DFN[[[half-closed (local)]]]] 状態では、メッセージを送信できませんが、受信するかもしれません。

[38] [CODE[[[WINDOW_UPDATE]]]], [CODE[[[PRIORITY]]]], [CODE[[[RST_STREAM]]]]
以外の[[フレーム]]を送信することはできません [SRC[>>3]]。

;; [42] [[peer]] は任意の[[フレーム]]を送信することができますから、
[CODE[[[WINDOW_UPDATE]]]] [[フレーム]]によって[[フロー制御credit]]提供し続けることが必要かもしれません。
しかし [[peer]] が状態遷移した後なら無視されるかもしれません。 [SRC[>>3]]

[39] 本状態に遷移することになった[[フレーム]]の種類や本状態で送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [40] [CODE[[[END_STREAM]]]] フラグが設定された[[フレーム]]を受信すると、
[[closed]] 状態に遷移します。
- [41] [CODE[[[RST_STREAM]]]] [[フレーム]]を送信または受信すると、 [[closed]] に遷移します。
]FIG]

** half-closed (remote)

[43] [DFN[[[half-closed (remote)]]]] 状態は、 [[peer]] が[[フレーム]]の送信をもう行わない[[ストリーム]]を表します [SRC[>>3]]。

[46] 任意の[[フレーム]]を送信できます [SRC[>>3]]。 

[44] この状態になると、[[受信者フロー制御窓]]を維持する義務はありません [SRC[>>3]]。

[47] 本状態に遷移することになった[[フレーム]]の種類や本状態で送受信する[[フレーム]]の種類により、次のような状態遷移があります [SRC[>>3]]。
[FIG(list)[
- [48] [CODE[[[END_STREAM]]]] フラグが設定された[[フレーム]]を送信すると、
[[closed]] 状態に遷移します。
- [49] [CODE[[[RST_STREAM]]]] [[フレーム]]を送信または受信すると、 [[closed]] に遷移します。
]FIG]

[45] [CODE[[[WINDOW_UPDATE]]]], [CODE[[[RST_STREAM]]]], [CODE[[[PRIORITY]]]]
以外の[[フレーム]]を受信したら、
[[ストリームエラー]] [DFN[[CODE[[[STREAM_CLOSED]]]]]] としなければ[['''なりません''']] [SRC[>>3]]。

** closed

[51] [DFN[[[closed]]]] 状態は、最終的な状態です [SRC[>>3]]。

[52] [CODE[[[PRIORITY]]]] [[フレーム]]以外を送信しては[['''なりません''']] [SRC[>>3]]。
受信した [CODE[[[PRIORITY]]]] [[フレーム]]は処理する[['''べき''']]ですが、
[[依存性木]]から削除されたら無視できます [SRC[>>3]]。

[18] [CODE[[[RST_STREAM]]]] [[フレーム]]によって [[closed]] に遷移すると、
[[peer]] との状態遷移の時間差が原因で、この状態となった後に[[フレーム]]を受信する可能性もあります [SRC[>>3]]。

[53] [CODE[[[RST_STREAM]]]] の後に [CODE[[[PRIORITY]]]] 以外の[[フレーム]]を受信したら、
[[ストリームエラー]] [CODE[[[STREAM_CLOSED]]]] としなければ[['''なりません''']] [SRC[>>3]]。

[57] しかし自身が [CODE[[[RST_STREAM]]]] を送信した後に受信した[[フレーム]]は無視しなければ[['''なりません''']]。
ある程度の時間が経過したら、エラーとして扱うことにして構いません。 [SRC[>>3]]

;; [58] [CODE[[[RST_STREAM]]]] を送信した場合、 [[peer]] は既に送信したり、
送信準備をしたりして、取り消せなかった[[フレーム]]が到着する場合があります。 [SRC[>>3]]

[59] [CODE[[[RST_STREAM]]]] を送信した後に受信した[[フロー制御]]対象の[[フレーム]]
([CODE[[[DATA]]]]) は、[[接続フロー制御窓]]の計算に含めます。 [SRC[>>3]]

;; [60] [[フレーム]]が無視されるとしても、相手が [CODE[[[RST_STREAM]]]]
を受信する前に[[フロー制御窓]]で数えてから送信しているはずだからです。 [SRC[>>3]]

[61] [CODE[[[RST_STREAM]]]] を送信した後に [CODE[[[PUSH_PROMISE]]]]
を受信した場合でも、指定された[[ストリーム]]は予約状態となります。
そちらの[[ストリーム]]は不要なら別途 [CODE[[[RST_STREAM]]]] が必要です。 [SRC[>>3]]

[54] [CODE[[[END_STREAM]]]] の後に[[フレーム]]を受信したら、
[[接続エラー]] [CODE[[[STREAM_CLOSED]]]] としなければ[['''なりません''']] [SRC[>>3]]。

[55] ただし、 [CODE[[[WINDOW_UPDATE]]]] や [CODE[[[RST_STREAM]]]]
を受信したら、無視しなければ[['''なりません''']]。
自身が [CODE[[[END_STREAM]]]] を送信してから十分な時間が経ったなら、
[[接続エラー]] [CODE[[[PROTOCOL_ERROR]]]] としても構いません。 [SRC[>>3]]

;; [56] 自身が [CODE[[[END_STREAM]]]] や [CODE[[[RST_STREAM]]]]
を送信してから相手が受信するまでの時間差があるため、その間に
[CODE[[[WINDOW_UPDATE]]]] や [CODE[[[RST_STREAM]]]] を受信する可能性があります。 [SRC[>>3]]

;; [62] [[RFC]] は [[closed]] を1つの状態として表していますが、
実際には何により遷移してきたかで処理を分ける必要があり、また時間経過などで処理が変わる可能性があり、
複雑です。しかも [[RFC]] は「無視する (無視するとは言っていない)」のような変な書き方になっていて難解です。
