head	1.24;
access;
symbols
	release-3-0-0:1.18
	before-db-leaffile:1.13
	after-upgrade-to-suikawiki-3:1.12.4.3
	before-fork-suikawiki3:1.12.4.2
	branch-suikawiki-1:1.12.0.4
	branch-suikawiki1:1.12.0.2;
locks; strict;
comment	@# @;


1.24
date	2010.05.04.00.53.07;	author wakaba;	state Exp;
branches;
next	1.23;

1.23
date	2005.02.06.12.58.58;	author wakaba;	state Exp;
branches;
next	1.22;

1.22
date	2004.09.21.03.18.49;	author wakaba;	state Exp;
branches;
next	1.21;

1.21
date	2004.08.06.08.57.15;	author wakaba;	state Exp;
branches;
next	1.20;

1.20
date	2004.08.06.03.39.02;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2004.07.25.06.55.01;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2004.06.03.06.40.02;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2004.05.07.07.51.28;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.01.03.55.28;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2004.04.25.07.13.16;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.22.05.45.14;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.01.04.53.58;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.05.11.57.09;	author wakaba;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	2003.09.16.05.14.52;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.26.09.22.36;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.18.00.03.23;	author w;	state Exp;
branches;
next	1.8;

1.8
date	2003.04.29.10.43.21;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.03.01.10.10;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.27.07.52.24;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.27.07.29.20;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.26.02.39.48;	author w;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.03.03.43.07;	author w;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.01.01.43.00;	author w;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.01.01.31.25;	author w;	state Exp;
branches;
next	;

1.12.4.1
date	2003.10.09.09.48.16;	author wakaba;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	2003.11.09.02.49.12;	author wakaba;	state Exp;
branches;
next	1.12.4.3;

1.12.4.3
date	2004.03.13.06.34.19;	author wakaba;	state Exp;
branches;
next	1.12.4.4;

1.12.4.4
date	2004.03.13.13.16.59;	author wakaba;	state Exp;
branches;
next	1.12.4.5;

1.12.4.5
date	2004.03.20.04.09.14;	author wakaba;	state Exp;
branches;
next	1.12.4.6;

1.12.4.6
date	2004.03.29.03.23.15;	author wakaba;	state Exp;
branches;
next	1.12.4.7;

1.12.4.7
date	2004.04.01.04.47.23;	author wakaba;	state Exp;
branches;
next	1.12.4.8;

1.12.4.8
date	2004.04.01.05.00.16;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.24
log
@was not committed
@
text
@=head1 NAME

suikawiki-config.ph - SuikaWiki: Configuration for SuikaWiki HTTP CGI Driver

=head1 DESCRIPTION

This is a configuration file for SuikaWiki Driver for HTTP CGI Script
(SWHCS).  Basic options such as WikiDB directory mapping and
special purpose WikiPage names can be customized with this file.

More complex customizing, e.g. modifying navigation bar or
adding new mode, is also possible by config.ph (generated from
config.wp2) and WikiPlugin modules.  For more information,
see <http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SuikaWiki>.

This file is part of SuikaWiki.

=cut

package wiki::driver::http;
use strict;

  ## These lines should be removed after utf8 support
  BEGIN {
    $Message::Util::Formatter::Base::Token = qr/[\w._+\x80-\xFF-]+/;
    require Message::Util::Formatter::Base;
  }
  use Message::Util::Error;

use Message::Util::QName::General [q<ExpandedURI>], {
  'bt' => q<http://suika.fam.cx/~wakaba/archive/2004/8/11/sw-bt#>,
  'log' => q<http://suika.fam.cx/~wakaba/-temp/2004/05/01/reqlog#>,
  'media-type' => q<http://suika.fam.cx/~wakaba/-temp/2004/04/24/mt#>,
  'pe' => q<http://suika.fam.cx/~wakaba/archive/2004/7/20/sw-propedit#>,
  'relrev' => q<http://suika.fam.cx/~wakaba/archive/2004/7/25/html-relrev#>,
  'ss' => q<http://suika.fam.cx/~wakaba/archive/2004/05/sw-stylesheet#>,
  'sw' => q<http://suika.fam.cx/~wakaba/archive/2004/7/20/sw#>,
  'sw09' => q<http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SuikaWiki%2F0.9#>,
};

BEGIN {
  if ($main::ENV{REQUEST_URI} =~ /\#/) {
    require SuikaWiki::Output::HTTP;
    my $out = SuikaWiki::Output::HTTP->new;
    $out->{status_code} = 401;
    $out->{status_phrase} = q<Request-URI MUST NOT have Fragment Identifier>;
    $out->{entity}->{media_type} = q<text/html>;
    $out->{entity}->{charset} = q<iso-8859-1>;
    $out->{entity}->{language} = [q<en>];
    $out->{entity}->{body_is_octet_stream} = 1;
    my $ua = $main::ENV{HTTP_USER_AGENT};
    for ($ua) {
      s/&/&amp;/g; s/</&lt;/g; s/([^\x20-\x7E])/sprintf '&#x%02X;', ord $1/ge;
    };
    $out->{entity}->{body} = qq<
      <!DOCTYPE html SYSTEM>
      <title>401 Bad Request-URI</title>
      <h1>Bad Request-URI</h1>
      <p>Your Request-URI has fragment identifier but it is not allowed here.
      It might be a bug of your user agent ($ua).  Please contact to the UA
      vendor.</p>
    >;
    $out->output (output => 'http-cgi');
    exit;
  }
}

push our @@Config, sub ($) {
  my $WIKI = shift;
  use FindBin q($Bin);
  use File::Spec;
  
  ## -- Filesystem path mapping
  for (
     [db__cache__dir          => q"./wikidata/cache/"],
     [db__cache_struct__file  => q"./wikidata/cache/struct.db"],
     [db__content__dir        => q"./wikidata/page/"],
     [db__content__error_log  => q"./wikidata/log/db-content.log"],
     [db__bdb__home_dir       => q"./wikidata/lock/"],
     [db__bdb__log_dir        => q"./wikidata/log/bdb/"],
     [db__bdb__log_file       => q"./wikidata/log/bdb.log"],
     [db__bdb__temp_dir       => q"./wikidata/lock/"],
     [db__lock__dir           => q"./wikidata/lock/"],
     [db__lock__log_file      => q"./wikidata/log/lock.log"],
     [db__log__dir            => q"./wikidata/log/"],
     [db__request_log__dir    => q"./wikidata/rlog/"],
     [db__static__dir         => q"./wikidata/static/"],
     [db__temp__dir           => q"./wikidata/lock/"],
     [namazu__index_dir       => q"/var/namazu/index/suikawiki"],
  ) {
    ## On system that does not set current directory as main script
    ## directory, you should specify it instead of using "abs_path".
    $WIKI->{config}->{path_to}->{$_->[0]} = File::Spec->rel2abs ($_->[1], $Bin);
  }
  
  ## -- Namazu URI Mapping (See SuikaWiki:SuikaWiki//Namazu) --
  $WIKI->{config}->{nmz__uri_to_uri} = sub {
    my ($nmzuri, %opt) = @@_;
    if ($nmzuri =~ s!^\Q$opt{o}->{wiki}->{config}->{path_to}->{db__content__dir}\E/*!!o) {
      $nmzuri =~ s/\.txt$//;
      return $opt{o}->{wiki}->uri_reference
                      (page => $opt{o}->{wiki}->name ([
        map {s/([0-9A-F][0-9A-F])/pack 'C', hex $1/ge; $_}
        split m!\.ns/!, $nmzuri
      ]), base => 1);
    } else {
      $nmzuri =~ s<^/home/wakaba/public_html/([^.]+)><http://suika.fam.cx/~wakaba/$1>;
      return ($nmzuri, $nmzuri);
    }
  };

  ## -- WikiPlugin
  push @@{$WIKI->{event}->{plugin_manager_loaded}}, sub {
    my $wiki = shift;
    
    ## Installed plugin modules
    $wiki->{plugin}->load_directory (qw(
      lib/SuikaWiki/Plugin/
      misc/plugins/
      misc/plugins/form/
      misc/plugins/format/
      misc/plugins/link/
      misc/plugins/view/
    ));

    ## Configuration file as pseudo-plugin module
    require 'wikidata/config.ph';
  };

  ## -- WikiDatabase: Mapping logical to physical
  push @@{$WIKI->{event}->{database_loaded}}, sub {
      my $wiki = shift;
      
      ## Main content
      $wiki->{db}->_set_prop_db (content => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::LeafFile;
        SuikaWiki::DB::FileSystem::LeafFile->new
          (base_directory => $wiki->{config}->{path_to}->{db__content__dir},
           directory_suffix => '.ns',
           file_suffix    => '.txt',
           root_key => $wiki->{config}->{page}->{Default},
           -lock => $wiki->{var}->{db}->{lock_prop}->('content'));
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});

      ## Properties
      $wiki->{db}->_set_prop_db (content_prop => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::LeafProp;
        SuikaWiki::DB::FileSystem::LeafProp->new
          (base_directory => $wiki->{config}->{path_to}->{db__content__dir},
           directory_suffix => '.ns',
           file_suffix    => '.prop',
           root_key => $wiki->{config}->{page}->{Default},
           -lock => $wiki->{var}->{db}->{lock_prop}->('content_prop'));
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      
      ## Last modified
      $wiki->{db}->_set_prop_db (lastmodified => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::SuikaWikiMetaInfo09;
        SuikaWiki::DB::FileSystem::SuikaWikiMetaInfo09->new
          (directory => $wiki->{config}->{path_to}->{db__content__dir},
           -lock => $wiki->{var}->{db}->{lock_prop}->('lastmodified'));
      }, -prop => 'last_modified', -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      
      ## Static version
      $wiki->{db}->_set_prop_db (static__css => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::LeafFileP;
        SuikaWiki::DB::FileSystem::LeafFileP->new
          (base_directory => $wiki->{config}->{path_to}->{db__static__dir},
           directory_suffix => '.ns',
           file_suffix    => '.css',
           root_key => $wiki->{config}->{page}->{Default});
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      $wiki->{config}->{ExpandedURI q<ss:use-static>} = 1;
      ## URI maker for LeafFileP generated files
      $wiki->{config}->{ExpandedURI q<ss:wikiname-to-uri>} = sub {
        my (undef, %opt) = @@_;
        my $page = join '.ns/',
                   map {s/([^0-9A-Za-z_-])/sprintf '+%02X', ord $1/ge;$_}
                   @@{$opt{wikiname}};
        return URI->new ('wikidata/static/' . $page . '.css' .
                         ($opt{lm} ? '?x-lm=' . $opt{lm} : ''));
      };
      ## Reverse mapping of generate-uri
      $wiki->{config}->{ExpandedURI q<ss:uri-to-wikiname>} = sub {
        my (undef, %opt) = @@_;
        $opt{uri} =~ s!^.+/wikidata/static/!!g;
        $opt{uri} =~ s/\?[^?]*$//g;
        $opt{uri} =~ s/\.css$//g;
        return $opt{wiki}->name
          ([map {s/\+([0-9A-Fa-f_-][0-9A-Fa-f_-])/pack 'CC', hex $1/ge;$_}
            split m!.ns/!, $opt{uri}]);
      };


      ## Cache DBs
      require SuikaWiki::DB::FileSystem::SuikaWikiCache09;
      my $cachedb = SuikaWiki::DB::FileSystem::SuikaWikiCache09->new
            (directory => $wiki->{config}->{path_to}->{db__cache__dir}, 
             expires => 86400 * 3, removes => 86400 * 3); # 3 days
      $wiki->{db}->_set_prop_db (m__search_result =>
        {-db => $cachedb, -prop => 'search_result', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});
      $wiki->{db}->_set_prop_db (wpp__headsummary =>
        {-db => $cachedb, -prop => 'headsummary', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});
      $wiki->{db}->_set_prop_db (ref__item_template =>
        {-db => $cachedb, -prop => 'refereritem', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});

      ## Berkely DB Environment Preparation
      use BerkeleyDB;
      my $bdbenv = new BerkeleyDB::Env
         -Home => $wiki->{config}->{path_to}->{db__bdb__home_dir},
         -Config => {
           DB_DATA_DIR => $wiki->{config}->{path_to}->{db__content__dir},
           DB_LOG_DIR => $wiki->{config}->{path_to}->{db__bdb__log_dir},
           DB_TMP_DIR => $wiki->{config}->{path_to}->{db__bdb__temp_dir},
         },
         -ErrFile => $wiki->{config}->{path_to}->{db__bdb__log_file},
         -Flags => DB_CREATE | DB_INIT_LOCK | DB_INIT_LOG | DB_INIT_MPOOL,
         -Verbose => $wiki->{config}->{debug}->{db};

      $wiki->{db}->_set_prop_db (content__structured => {-db_open => sub {
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          use MLDBM qw(BerkeleyDB::Hash);# Storable);
          tie my %mldb, 'MLDBM',
                        -Filename => $wiki->{config}->{path_to}
                                          ->{db__cache_struct__file},
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%mldb;
       };
      }});
      
      ## Referer Database (See Referer plugin module)
      $wiki->{db}->_set_prop_db (referer => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::Count;
        SuikaWiki::DB::FileSystem::Count->new
          (base_directory => $wiki->{config}->{path_to}->{db__content__dir},
           directory_suffix => '.ns',
           file_suffix    => '.ref',
           root_key => $wiki->{config}->{page}->{Default},
           auto_mkdir => 0,
           -lock => $wiki->{var}->{db}->{lock_prop}->('referer'));
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});

      ## HTTP Request Logging Database (See RequestLog plugin module)
      $wiki->{db}->_set_prop_db (log__http_request => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::Count;
        SuikaWiki::DB::FileSystem::Count->new
          (base_directory => $wiki->{config}->{path_to}->{db__request_log__dir},
           directory_suffix => '.ns',
           file_suffix    => '.rlog',
           root_key => $wiki->{config}->{page}->{Default},
           auto_mkdir => 1);
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      
      ## Additional WikiDB properties should be defined here
      # ...    
  };

  push @@{$WIKI->{event}->{input_close}}, sub {
    my ($wiki, $event) = @@_;
    try {
      SuikaWiki::Plugin->module_package ('RequestLog')
                     ->http_request_log (wiki => $wiki,
                                         prop => 'log__http_request');
    } catch SuikaWiki::Plugin::error with {
      my $err = shift;
      $err->raise unless $err->{-type} eq 'PLUGIN_NOT_FOUND';
    };
  };

  $WIKI->{config}->{engine_robot_max_access} = 1;
  $WIKI->{config}->{engine_max_access} = 3;

  ## -- WikiName of special purpose WikiPages
  $WIKI->{config}->{page} = {
    Default         => $WIKI->name ([qw/HomePage/]),
    InterWikiName   => $WIKI->name ([qw/Wiki InterWikiName/]),
    NewPageTemplate => $WIKI->name ([qw/Wiki NewPageTemplate/]),
    'StyleSheetList(text/html)' => $WIKI->name ([qw<Wiki Style List text/html>]),
    ExpandedURI q<log:root> => $WIKI->name ([]),
  };
  
  ## -- WikiNamespace constants
  $WIKI->{config}->{name}->{space} = {
    separator => '//',
    separator_reg => qr#\s*//\s*#,
    self => '.',
    parent => '..',
    root => '//',
  };
  
  ## -- Default character codes
  $WIKI->{config}->{charset} = {
    ## Internal code - MUST be ASCII + 8bit coding scheme
      internal => 'euc-jp',
    ## Default output code
      output => 'iso-2022-jp',
    ## "query" part in URI reference
      uri_query => '', # auto-detected
      uri_query_encode => 'euc-jp',     ## For compatibility w/ SuikaWiki 2
      uri_param => '', # auto-detected
      uri_param_encode => 'euc-jp',     ## For compatibility w/ SuikaWiki 2
    ## PATH_INFO part in URI reference
      uri_path_info => 'x-utf-8-10646', ## Reserved for future use
    ## Fragment identifier in URI reference
      uri_fragment => 'x-punycode',     ## Reserved for possible future use
  };

  ## -- User option for media types
  $WIKI->{config}->{ExpandedURI q<media-type:accept-media-type>} = {
    q<IMT:text/css##> => 1,
    q<IMT:text/plain##> => 1,
    q<IMT:text/x-suikawiki;version="0.9"##> => 1,
    q<IMT:text/x-suikawiki;version="0.10"##> => 1,
    q<IMT:text/x.suikawiki.image;version="0.9"##> => 1,
    q<IMT:application/x.suikawiki.config;version="2.0"##> => 1,
  };
  
  ## -- Expires duration templates
  $WIKI->{config}->{entity}->{expires} = {
    edit      => {delta => 60},
    view      => {delta => 2*3600},
    list      => {delta => 60},
    lm_flaged => {delta => 30*24*3600},
    stylesheet => {delta => 30*24*3600},
    error     => {delta => 60},
  };

  ## -- User-editable content properties
  $WIKI->{config}->{ExpandedURI q<pe:prop>} = {
    'abstract' => {uri => ExpandedURI q<sw:abstract>,
                   ExpandedURI q<media-type:media-type-prop>
                       => ExpandedURI q<sw:abstract--type>},
    'abstract--type' => {uri => ExpandedURI q<sw:abstract--type>,
                         type => ExpandedURI q<media-type:media-type>,
                         depend => [qw/abstract/]},
    'category' => {uri => ExpandedURI q<sw:category>, is_list => 1,
                   type => ExpandedURI q<sw:WikiName>,
                   ExpandedURI q<pe:revWNList> => ExpandedURI q<pe:inCategory>},
    'keyword' => {uri => ExpandedURI q<sw:keyword>, is_list => 1},
    'license' => {uri => ExpandedURI q<sw:license>,
                  ExpandedURI q<media-type:media-type-prop>
                      => ExpandedURI q<sw:license--type>},
    'license--type' => {uri => ExpandedURI q<sw:license--type>,
                         type => ExpandedURI q<media-type:media-type>,
                         depend => [qw/license/]},
    'obsolete' => {uri => ExpandedURI q<sw:obsolete>, is_list => 1,
                   type => ExpandedURI q<sw:WikiName>},
    'rel-contents' => {uri => ExpandedURI q<relrev:contents>, is_list => 1,
                       type => ExpandedURI q<sw:WikiName>},
    'rel-index' => {uri => ExpandedURI q<relrev:index>, is_list => 1,
                    type => ExpandedURI q<sw:WikiName>},
    'rel-next' => {uri => ExpandedURI q<relrev:next>, is_list => 1,
                   type => ExpandedURI q<sw:WikiName>,
                   ExpandedURI q<pe:revWNList> => ExpandedURI q<relrev:prev>},
    'rel-prev' => {uri => ExpandedURI q<relrev:prev>, is_list => 1,
                   type => ExpandedURI q<sw:WikiName>,
                   ExpandedURI q<pe:revWNList> => ExpandedURI q<relrev:next>},
    'rel-up' => {uri => ExpandedURI q<relrev:up>, is_list => 1,
                 type => ExpandedURI q<sw:WikiName>,
                 ExpandedURI q<pe:revWNList> => ExpandedURI q<relrev:down>},

  ## For BugTrack plugin
    'bt--status' => {uri => ExpandedURI q<bt:status>},
    'bt--priority' => {uri => ExpandedURI q<bt:priority>},
    'bt--category' => {uri => ExpandedURI q<bt:category>, is_list => 1},
    'bt--subject' => {uri => ExpandedURI q<bt:subject>},
  };

  ## -- Debug mode
  $WIKI->{config}->{debug} = {
    general => 0,
    db => 0,
    format => 0,
    view => 0,
  };

};

=head1 SEE ALSO

C<lib/suikawiki.pl>, C<wiki.cgi>,
<http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SuikaWiki>,
<http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SWHCS>

=head1 LICENSE

Copyright 2003-2004 Wakaba <w@@suika.fam.cx>.  All rights reserved.

This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=cut

1; # $Date: 2005/02/06 12:58:58 $
@


1.23
log
@Bidirectional linking support added
@
text
@d309 2
a310 1
  $WIKI->{config}->{engine_max_access} = 15;
d433 1
a433 1
1; # $Date: 2004/09/21 03:18:49 $
@


1.22
log
@%m--wikipage-obsolete rule added
@
text
@d374 3
a376 1
    'category' => {uri => ExpandedURI q<sw:category>, is_list => 1},
d384 15
a398 6
    'obsolete' => {uri => ExpandedURI q<sw:obsolete>, is_list => 1},
    'rel-contents' => {uri => ExpandedURI q<relrev:contents>, is_list => 1},
    'rel-index' => {uri => ExpandedURI q<relrev:index>, is_list => 1},
    'rel-next' => {uri => ExpandedURI q<relrev:next>, is_list => 1},
    'rel-prev' => {uri => ExpandedURI q<relrev:prev>, is_list => 1},
    'rel-up' => {uri => ExpandedURI q<relrev:up>, is_list => 1},
d432 1
a432 1
1; # $Date: 2004/08/06 08:57:15 $
@


1.21
log
@Ammends output of license section
@
text
@d31 1
d196 2
a197 1
        return URI->new ('wikidata/static/' . $page . '.css');
d351 2
d382 1
a382 1
    'obsoleted' => {uri => ExpandedURI q<sw09:obsoleted>},
d388 6
d421 1
a421 1
1; # $Date: 2004/08/06 03:39:02 $
@


1.20
log
@Multiple rel-links supported
@
text
@d364 3
a366 1
    'abstract' => {uri => ExpandedURI q<sw:abstract>},
d372 6
d411 1
a411 1
1; # $Date: 2004/07/25 06:55:01 $
@


1.19
log
@Property Editor implemented
@
text
@d371 5
a375 5
    'rel-contents' => {uri => ExpandedURI q<relrev:contents>},
    'rel-index' => {uri => ExpandedURI q<relrev:index>},
    'rel-next' => {uri => ExpandedURI q<relrev:next>},
    'rel-prev' => {uri => ExpandedURI q<relrev:prev>},
    'rel-up' => {uri => ExpandedURI q<relrev:up>},
d403 1
a403 1
1; # $Date: 2004/06/03 06:40:02 $
@


1.18
log
@Static output of stylesheet implemented
@
text
@d33 2
d36 2
d141 1
a141 1
           -lock => $wiki->{var}->{db}->{lock_prop}->('content_prop'));
d156 1
a156 1
           -lock => $wiki->{var}->{db}->{lock_prop}->('content'));
d362 16
d403 1
a403 1
1; # $Date: 2004/05/07 07:51:28 $
@


1.17
log
@Path resolving bug fixed
@
text
@d33 1
d82 1
d171 34
d303 2
d383 1
a383 1
1; # $Date: 2004/05/01 03:55:28 $
@


1.16
log
@RequestLog changed to Count module
@
text
@d86 1
a86 1
    $WIKI->{config}->{path_to}->{$_->[0]} = File::Spec->catfile ($Bin, $_->[1]);
d345 1
a345 1
1; # $Date: 2004/04/25 07:13:16 $
@


1.15
log
@LeafProp database module added; content_prop implemented; Media type property implemented
@
text
@d31 1
d64 2
a65 1
  use Cwd qw(abs_path);
d80 1
d86 1
a86 1
    $WIKI->{config}->{path_to}->{$_->[0]} = abs_path $_->[1];
d238 11
a248 9
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          tie my %db, 'BerkeleyDB::Hash',
                        -Filename => 'http-request-log.db',
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%db;
       };
a257 9
      SuikaWiki::Plugin->module_package ('Referer')
                     ->add_referer (wiki => $wiki,
                                    uri => $wiki->{input}->meta_variable
                                             ('HTTP_REFERER'));
    } catch SuikaWiki::Plugin::error with {
      my $err = shift;
      $err->raise unless $err->{-type} eq 'PLUGIN_NOT_FOUND';
    };
    try {
d273 1
d345 1
a345 1
1; # $Date: 2004/04/22 05:45:14 $
@


1.14
log
@Use LeafFile
@
text
@d30 4
d132 15
d304 8
d348 1
a348 1
1; # $Date: 2004/04/01 04:53:58 $
@


1.13
log
@Copied from 1.12.4.7
@
text
@d30 27
d63 2
a64 2
     [db__cache__dir          => q"./wikidata/lock/"],
     [db__cache_struct__file  => q"./wikidata/lock/struct.db"],
d122 6
a127 6
        require SuikaWiki::DB::FileSystem::YukiWikiDBNS;
        SuikaWiki::DB::FileSystem::YukiWikiDBNS->new 
          (directory => $wiki->{config}->{path_to}->{db__content__dir},
           logfile   => $wiki->{config}->{path_to}->{db__content__error_log},
           suffix    => '.txt',
           root_key  => $wiki->{config}->{page}->{Default},
d200 12
a211 9
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          tie my %db, 'BerkeleyDB::Hash',
                        -Filename => 'referer.db',
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%db;
       };
d321 1
a321 1
1; # $Date: 2004/04/01 04:47:23 $
@


1.12
log
@latest for SuikaWiki1
@
text
@d1 20
d23 4
a26 16
## URI (or part of URI) of Wiki CGI itself and its external addons
	## Note: If your Wiki CGI URI is <http://foo.example/path/to/wiki.cgi>,
	##       	cookie-path: /path/to/
	##       	script-short-name: wiki.cgi
	##       URI parts MUST NOT contains "&" and/or non-URI characters.
  our %uri = (
    cookie_path		=> '/~wakaba/-temp/wiki/',
    external_script	=> '../wiki/script/',
    script_short_name	=> 'wiki',
    ## If you use CVS repository of WikiDatabase,
    cvs_repository	=> '/gate/cvs/suikawiki/wikidata/page/',
  );
  our $url_cgi; {
    my $scheme = 'http';
    $scheme = lc $1 if $main::ENV{SERVER_PROTOCOL} =~ m#([A-Za-z0-9+.%-]+)#;
    $url_cgi = "$scheme://".($main::ENV{HTTP_HOST} || $main::ENV{SERVER_NAME}.($main::ENV{SERVER_PORT}==80?'':":$main::ENV{SERVER_PORT}"))."$uri{cookie_path}$uri{script_short_name}";
d28 1
a28 2
  $uri{wiki_abs} = $url_cgi;
  $uri{wiki} = qq($uri{cookie_path}$uri{script_short_name});	
d30 243
a272 35
## Path to modules and databases
  push @@main::INC, 'lib';
  push @@SuikaWiki::Plugin::plugin_directory, (
  	q(lib/SuikaWiki/Plugin/),
  	q(misc/plugins/),
  );
  our %PathTo = (	## Path to your data, from the main CGI script (NOT from this config script)
                 CachePrefix 	        => q(./wikidata/.cache.),
                 TempPrefix 	        => q(./wikidata/.tmp.),
                 WikiDataBase	=> q(./wikidata/page),
                 WikiDatabase           => q(./wikidata/page),
                 WikiDatabaseErrorLog	=> q(./wikidata/log/error.log),
                 convert	        => q(/usr/X11R6/bin/convert),
  );

require SuikaWiki::DB::Util::Lock;
our $locker = SuikaWiki::DB::Util::Lock->new (-directory => q(./wikidata/lock),
   -name => 'wikipage',
   -retry => ($main::ENV{HTTP_USER_AGENT} =~ m#Openbot/3# ? 2 : 80),
   -timeout => 300,                                         
   -error_handler => sub {
     my ($self, %o) = @@_;
       open LOG, '>>', $main::PathTo{WikiDatabaseErrorLog};
         print LOG scalar (gmtime)."\@@@@{[time]} @@{[$$]} {$o{level}}: ", $o{msg}, "\n";
       close LOG;
     if ($o{level} eq 'fatal') {
       die $o{msg};
     }
   });
$locker->lock or do {
  open LOG, '>>', $main::PathTo{WikiDatabaseErrorLog};
    print LOG scalar (time), " Can't lock\n";
  close LOG;
  die "Can't lock";
};
a273 81


## Type of WikiPage Database
  #our $modifier_dbtype = 'AnyDBM_File';  # Fast, not available on some server, page size limited.
  #our $modifier_dbtype = 'dbmopen';      # Fast, not available on some server, page size limited.
  #our $modifier_dbtype = 'Yuki::YukiWikiDB';     # Slow, available on all environment.
  #our $modifier_dbtype = 'Yuki::YukiWikiDB2';     # Slow, available on all environment.
  our $modifier_dbtype = 'Yuki::YukiWikiDBMeta';     # Slow, available on all environment.
  our $use_exists = 1; # If you can use 'exists' method for your DB.

## Name of Special WikiPage (linked as parts of navigations)
  our %PageName = (
    FrontPage	=> 'HomePage',
    IndexPage	=> 'IndexPage',
    InterWikiName	=> 'Wiki//InterWikiName',
    SearchPage	=> 'Wiki//Page//Search',
    CreatePage	=> 'Wiki//Page//Create',
    MenuBar	=> 'Wiki//MenuBar',
    RecentChanges	=> 'RecentChanges',
    RefererDontRecord	=> 'Wiki//Referer//IgnoreSite',
    RefererSiteName	=> 'Wiki//Referer//SiteName',
    ResourceNS	=> 'Wiki//Resource//',
    StyleList	=> 'Wiki//Style//List//',
    UserAgentList	=> 'Wiki//UserAgentList',
    AdminSpecialPage	=> "\x11\x11Admin\x11Special\x11Page\x11\x11",
  );

## (Should be reimplemented)
  our $kanjicode = 'euc';
  our $lang = 'ja';

## Misc. options
  $SuikaWiki::Plugin::UserAgent::LoggingName = 1;
  	## Use UA-name log? (require UserAgent plugin module)

## Definition of views

require SuikaWiki::View;
SuikaWiki::View->template ('links')->add_line (<<'EOH');
%link-wiki(page=>"Wiki//News",rel=>News,class=>wiki,title=>"%res(name=>GoToWikiNewsLink);"p);
%link-wiki(page=>"Wiki//Help",rel=>help,class=>wiki,title=>"%res(name=>GoToWikiHelpLink);"p);
%link-wiki(page=>"Wiki//Page//License",rel=>copyright,class=>wiki,title=>"%res(name=>GoToWikiPageLicenseLink);"p);
EOH

SuikaWiki::View->template ('navbar')->add_line (<<"EOH");
%anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>"%res(name=>EditThisPage);"p,title=>"%res(name=>EditThisPageLong);"p,accesskey=>E,add-param=>{#edit});
%anchor-wiki(rel=>view,up_to_date,class=>wiki-cmd,label=>"%res(name=>ViewThisPage);"p,title=>"%res(name=>ViewThisPageLong);"p);
%anchor-wiki(page=>{$main::PageName{CreatePage}},class=>wiki,label=>"%res(name=>GoToCreatePage);"p,title=>"%res(name=>GoToCreatePageLong);"p);
%anchor-wiki(page=>{$main::PageName{SearchPage}},class=>wiki,label=>"%res(name=>GoToSearchPage);"p,title=>"%res(name=>GoToSearchPageLong);"p);
%anchor-wiki(mode=>RandomJump,up-to-date,rel=>lucky,class=>"wiki randomlink",label=>"%res(name=>GoSomewhere);"p,title=>"%res(name=>GoSomewhereLong);"p);
%anchor-wiki(page=>{$main::PageName{RecentChanges}},class=>wiki,label=>"%res(name=>GoToRecentChanges);"p,title=>"%res(name=>GoToRecentChangesLong,safe);"p);
EOH

push @@{$SuikaWiki::Plugin::On{Load}}, sub {
  SuikaWiki::View->definition ('read')->property (template => <<'EOH');
%html-document(title=>{%res(name=>{View:WebPageTitle});}p,link-meta=>{%predefined-template(name=>links);}p,content=>{
  %section(level=>1,add-to-toc=>0,type=>body,title=>{%ns-short-page-name;}p,heading,content=>{
    %section(id=>tools1,class=>tools,add-to-toc=>0,content=>{%predefined-template(name=>navbar);}p);
    %section(level=>2,id=>read,add-to-toc=>0,content=>{
      %if-calender(month,true=>{
        %format(context=>form_input,template=>{%calender;});
      },false=>{
        %if-calender(true=>{
          %format(context=>form_input,template=>{%calender-months;});
        });
      });
      %read(comment);
    }p);
    %section(level=>2,id=>children,title=>{%res(name=>{Children:Title});}p,heading,
    content=>{%page-list(ns=>{%page-name;}p,recursive=>0,type=>both,template=>{%res(name=>{Children:Item});}p);}p);
    %section(level=>2,id=>see-also,title=>{%res(name=>SeeAlso);}p,heading,content=>{%search-result;}p);
    %section(level=>2,id=>referer,title=>{%res(name=>Referer);}p,heading,content=>{%referer-list;}p);
    %section(level=>2,id=>toc,title=>{%res(name=>{TOC:Title});}p,heading,add_to_toc=>0,content=>{%toc(drag);}p);
    %section(id=>last-modified,add_to_toc=>0,content=>{%res(name=>{LastModified=});%last-modified;}p);
    %section(class=>tools,add_to_toc=>0,content=>{%predefined-template(name=>navbar);}p);
    %section(id=>footer,add-to-toc=>0,content=>{%predefined-template(name=>footer);}p);
  }p);
}p);%log-hotness;
EOH
  SuikaWiki::View->definition ('-wrote')->property (template => SuikaWiki::View->definition ('-wrote')->property ('template').q(%log-hotness(weight=>2);));
  SuikaWiki::View->definition ('WithMenu')->property (template => SuikaWiki::View->definition ('WithMenu')->property ('template').q(%log-hotness;));
d276 1
a276 1
=head1 NAME
d278 3
a280 1
suikawiki-config.ph --- SuikaWiki: site configuration script
d284 1
a284 1
Copyright 2003 Wakaba <w@@suika.fam.cx>
d291 1
a291 1
1; # $Date: 2003/09/16 05:14:52 $
@


1.12.4.1
log
@Use appropriate status code
@
text
@d56 1
a56 2
  print "Status: 423 Locked\n";
  die "Can't lock --- already locked";
d155 1
a155 1
1; # $Date: 2003/10/05 11:57:09 $
@


1.12.4.2
log
@*** empty log message ***
@
text
@d24 1
a24 1
  use lib 'lib';
a37 14
BEGIN {
  require SuikaWiki::Output::CGICarp;
  $SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT = 'Internal WikiEngine Error';
  CGI::Carp::set_message (sub {
    my $msg = shift;
    print STDOUT <<EOH
<!DOCTYPE html SYSTEM>
<title>$SuikaWiki::Output::CGICarp::CUSTOM_STATUS_CODE $SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT</title>
<h1>$SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT</h1>
<p>$msg</p>
EOH
  });
}

d41 2
a42 2
   -retry => ($main::ENV{HTTP_USER_AGENT} =~ m#Openbot/3# ? 2 : 20),
   -timeout => 3000,
a44 1
     if ($o{level} eq 'fatal') {
d48 1
d57 1
a57 2
  $SuikaWiki::Output::CGICarp::CUSTOM_STATUS_CODE = 423;
  die "Can't lock --- already locked; please try again";
d156 1
a156 1
1; # $Date: 2003/10/09 09:48:16 $
@


1.12.4.3
log
@Upgrade to SuikaWiki 3
@
text
@d1 1
a1 1
=head1 NAME
d3 19
a21 1
suikawiki-config.ph - SuikaWiki: Configuration for SuikaWiki HTTP CGI Driver
d23 51
a73 1
=head1 DESCRIPTION
a74 3
This is a configuration file for SuikaWiki Driver for HTTP CGI Script
(SWHCS).  Basic options such as WikiDB directory mapping and
special purpose WikiPage names can be customized with this file.
a75 235
More complex customizing, e.g. modifying navigation bar or
adding new mode, is also possible by config.ph (generated from
config.wp2) and WikiPlugin modules.  For more information,
see <http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SuikaWiki>.

This file is part of SuikaWiki.

=cut

package wiki::driver::http;
use strict;
use Message::Util::Error;

push our @@Config, sub ($) {
  my $WIKI = shift;
  use Cwd qw(abs_path);
  
  ## -- Filesystem path mapping
  for (
     [db__cache__dir          => q"./wikidata/lock/"],
     [db__cache_struct__file  => q"./wikidata/lock/struct.db"],
     [db__content__dir        => q"./wikidata/page/"],
     [db__content__error_log  => q"./wikidata/log/db-content.log"],
     [db__bdb__home_dir       => q"./wikidata/lock/"],
     [db__bdb__log_dir        => q"./wikidata/log/bdb/"],
     [db__bdb__log_file       => q"./wikidata/log/bdb.log"],
     [db__bdb__temp_dir       => q"./wikidata/lock/"],
     [db__lock__dir           => q"./wikidata/lock/"],
     [db__lock__log_file      => q"./wikidata/log/lock.log"],
     [db__log__dir            => q"./wikidata/log/"],
     [db__temp__dir           => q"./wikidata/lock/"],
  ) {
    ## On system that does not set current directory as main script
    ## directory, you should specify it instead of using "abs_path".
    $WIKI->{config}->{path_to}->{$_->[0]} = abs_path $_->[1];
  }

  ## -- WikiPlugin
  push @@{$WIKI->{event}->{plugin_manager_loaded}}, sub {
    my $wiki = shift;
    
    ## Installed plugin modules
    $wiki->{plugin}->load_directory (qw(
      lib/SuikaWiki/Plugin/
      misc/plugins/
      misc/plugins/form/
      misc/plugins/format/
      misc/plugins/link/
      misc/plugins/view/
    ));
    
    ## Configuration file as pseudo-plugin module
    require 'wikidata/config.ph';
  };

  ## -- WikiDatabase: Mapping logical to physical
  push @@{$WIKI->{event}->{database_loaded}}, sub {
      my $wiki = shift;
      
      ## Main content
      $wiki->{db}->_set_prop_db (content => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::YukiWikiDBNS;
        SuikaWiki::DB::FileSystem::YukiWikiDBNS->new 
          (directory => $wiki->{config}->{path_to}->{db__content__dir},
           logfile   => $wiki->{config}->{path_to}->{db__content__error_log},
           suffix    => '.txt',
           -lock => $wiki->{var}->{db}->{lock_prop}->('content'));
      }, -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      
      ## Last modified
      $wiki->{db}->_set_prop_db (lastmodified => {-db_open => sub {
        require SuikaWiki::DB::FileSystem::SuikaWikiMetaInfo09;
        SuikaWiki::DB::FileSystem::SuikaWikiMetaInfo09->new
          (directory => $wiki->{config}->{path_to}->{db__content__dir},
           -lock => $wiki->{var}->{db}->{lock_prop}->('lastmodified'));
      }, -prop => 'last_modified', -db_close => sub {
        my %opt = @@_;
        $opt{prop_info}->{-db}->close;
        delete $opt{prop_info}->{-db};
      }});
      
      ## Cache DBs
      require SuikaWiki::DB::FileSystem::SuikaWikiCache09;
      my $cachedb = SuikaWiki::DB::FileSystem::SuikaWikiCache09->new
            (directory => $wiki->{config}->{path_to}->{db__cache__dir});
      $wiki->{db}->_set_prop_db (m__search_result =>
        {-db => $cachedb, -prop => 'search_result', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});
      $wiki->{db}->_set_prop_db (wpp__headsummary =>
        {-db => $cachedb, -prop => 'headsummary', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});
      $wiki->{db}->_set_prop_db (ref__item_template =>
        {-db => $cachedb, -prop => 'refereritem', -db_close => sub {
          my %opt = @@_;
          $opt{prop_info}->{-db}->close;
          delete $opt{prop_info}->{-db};
        }});
      
      ## Berkely DB Environment Preparation
      use BerkeleyDB;
      my $bdbenv = new BerkeleyDB::Env
         -Home => $wiki->{config}->{path_to}->{db__bdb__home_dir},
         -Config => {
           DB_DATA_DIR => $wiki->{config}->{path_to}->{db__content__dir},
           DB_LOG_DIR => $wiki->{config}->{path_to}->{db__bdb__log_dir},
           DB_TMP_DIR => $wiki->{config}->{path_to}->{db__bdb__temp_dir},
         },
         -ErrFile => $wiki->{config}->{path_to}->{db__bdb__log_file},
         -Flags => DB_CREATE | DB_INIT_LOCK | DB_INIT_LOG | DB_INIT_MPOOL,
         -Verbose => $wiki->{config}->{debug}->{db};

      $wiki->{db}->_set_prop_db (content__structured => {-db_open => sub {
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          use MLDBM qw(BerkeleyDB::Hash);# Storable);
          tie my %mldb, 'MLDBM',
                        -Filename => $wiki->{config}->{path_to}
                                          ->{db__cache_struct__file},
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%mldb;
       };
      }});
      
      ## Referer Database (See Referer plugin module)
      $wiki->{db}->_set_prop_db (referer => {-db_open => sub {
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          tie my %db, 'BerkeleyDB::Hash',
                        -Filename => 'referer.db',
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%db;
       };
      }});

      ## HTTP Request Logging Database (See RequestLog plugin module)
      $wiki->{db}->_set_prop_db (log__http_request => {-db_open => sub {
        require SuikaWiki::DB::Hash;
        new SuikaWiki::DB::Hash constructor => sub {
          tie my %db, 'BerkeleyDB::Hash',
                        -Filename => 'http-request-log.db',
                        -Env => $bdbenv,
                        -Flags => DB_CREATE,
                        -Mode => 0644;
          \%db;
       };
      }});
      
      ## Additional WikiDB properties should be defined here
      # ...    
  };

  push @@{$WIKI->{event}->{input_close}}, sub {
    my ($wiki, $event) = @@_;
    try {
      SuikaWiki::Plugin->module_package ('Referer')
                     ->add_referer (wiki => $wiki,
                                    uri => $wiki->{input}->meta_variable
                                             ('HTTP_REFERER'));
    } catch SuikaWiki::Plugin::error with {
      my $err = shift;
      $err->raise unless $err->{-type} eq 'PLUGIN_NOT_FOUND';
    };
    try {
      SuikaWiki::Plugin->module_package ('RequestLog')
                     ->http_request_log (wiki => $wiki,
                                         prop => 'log__http_request');
    } catch SuikaWiki::Plugin::error with {
      my $err = shift;
      $err->raise unless $err->{-type} eq 'PLUGIN_NOT_FOUND';
    };
  };

  ## -- WikiName of special purpose WikiPages
  $WIKI->{config}->{page} = {
    Default         => $WIKI->name ([qw/HomePage/]),
    InterWikiName   => $WIKI->name ([qw/Wiki InterWikiName/]),
    NewPageTemplate => $WIKI->name ([qw/Wiki NewPageTemplate/]),
    'StyleSheetList(text/html)' => $WIKI->name ([qw<Wiki Style List text/html>]),
  };
  
  ## -- WikiNamespace constants
  $WIKI->{config}->{name}->{space} = {
    separator => '//',
    separator_reg => qr#\s*//\s*#,
    self => '.',
    parent => '..',
  };
  
  ## -- Default character codes
  $WIKI->{config}->{charset} = {
    ## Internal code - MUST be ASCII + 8bit coding scheme
      internal => 'euc-jp',
    ## Default output code
      output => 'iso-2022-jp',
    ## "query" part in URI reference
      uri_query => '', # auto-detected
      uri_query_encode => 'euc-jp',     ## For compatibility w/ SuikaWiki 2
      uri_param => '', # auto-detected
      uri_param_encode => 'euc-jp',     ## For compatibility w/ SuikaWiki 2
    ## PATH_INFO part in URI reference
      uri_path_info => 'x-utf-8-10646', ## Reserved for future use
    ## Fragment identifier in URI reference
      uri_fragment => 'x-punycode',     ## Reserved for possible future use
  };
  
  ## -- Expires duration templates
  $WIKI->{config}->{entity}->{expires} = {
    edit      => {delta => 60},
    view      => {delta => 2*3600},
    lm_flaged => {delta => 30*24*3600},
    stylesheet => {delta => 30*24*3600},
    error     => {delta => 60},
  };

  ## -- Debug mode
  $WIKI->{config}->{debug} = {
    general => 0,
    db => 0,
    format => 0,
    view => 0,
  };
d77 79
d158 1
a158 1
=head1 SEE ALSO
d160 1
a160 3
C<lib/suikawiki.pl>, C<wiki.cgi>,
<http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SuikaWiki>,
<http://suika.fam.cx/~wakaba/-temp/wiki/wiki?SWHCS>
d164 1
a164 1
Copyright 2003-2004 Wakaba <w@@suika.fam.cx>.  All rights reserved.
d171 1
a171 1
1; # $Date: 2004/03/12 04:56:00 $
@


1.12.4.4
log
@*** empty log message ***
@
text
@d22 1
a23 7
  ## These lines should be removed after utf8 support
  BEGIN {
    $Message::Util::Formatter::Base::Token = qr/[\w._+\x80-\xFF-]+/;
    require Message::Util::Formatter::Base;
  }

use Message::Util::Error;
d61 1
a61 1

d118 1
a118 1

d264 1
a264 1
1; # $Date: 2004/03/13 06:34:19 $
@


1.12.4.5
log
@*** empty log message ***
@
text
@d23 7
a30 1
  eval { use Message::Util::Error };
a47 1
     [namazu__index_dir       => q"/var/namazu/index/wakaba"],
a52 16
  
  ## -- Namazu URI Mapping (See SuikaWiki:SuikaWiki//Namazu) --
  $WIKI->{config}->{nmz__uri_to_uri} = sub {
    my ($nmzuri, %opt) = @@_;
    if ($nmzuri =~ s!^\Q$opt{o}->{wiki}->{config}->{path_to}->{db__content__dir}\E/*!!o) {
      $nmzuri =~ s/\.txt$//;
      return $opt{o}->{wiki}->uri_reference
                      (page => $opt{o}->{wiki}->name ([
        map {s/([0-9A-F][0-9A-F])/pack 'C', hex $1/ge; $_}
        split m!\.ns/!, $nmzuri
      ]), base => 1);
    } else {
      $nmzuri =~ s<^/home/wakaba/public_html/([^.]+)><http://suika.fam.cx/~wakaba/$1>;
      return ($nmzuri, $nmzuri);
    }
  };
d105 1
a105 2
            (directory => $wiki->{config}->{path_to}->{db__cache__dir},
             expires => 86400 * 3, removes => 86400 * 3); # 3 days
d270 1
a270 1
1; # $Date: 2004/03/13 13:16:59 $
@


1.12.4.6
log
@*** empty log message ***
@
text
@a22 7
  ## These lines should be removed after utf8 support
  BEGIN {
    $Message::Util::Formatter::Base::Token = qr/[\w._+\x80-\xFF-]+/;
    require Message::Util::Formatter::Base;
  }
  use Message::Util::Error;

d24 1
d42 1
a42 1
     [namazu__index_dir       => q"/var/namazu/index/suikawiki"],
d116 1
a116 1
            (directory => $wiki->{config}->{path_to}->{db__cache__dir}, 
d282 1
a282 1
1; # $Date: 2004/03/20 04:09:14 $
@


1.12.4.7
log
@Root WikiName implemented
@
text
@a99 1
           root_key  => $wiki->{config}->{page}->{Default},
a234 1
    root => '//',
a257 1
    list      => {delta => 60},
d288 1
a288 1
1; # $Date: 2004/03/29 03:23:15 $
@


1.12.4.8
log
@Restored to 1.12.4.2
@
text
@d1 20
d23 4
a26 16
## URI (or part of URI) of Wiki CGI itself and its external addons
	## Note: If your Wiki CGI URI is <http://foo.example/path/to/wiki.cgi>,
	##       	cookie-path: /path/to/
	##       	script-short-name: wiki.cgi
	##       URI parts MUST NOT contains "&" and/or non-URI characters.
  our %uri = (
    cookie_path		=> '/~wakaba/-temp/wiki/',
    external_script	=> '../wiki/script/',
    script_short_name	=> 'wiki',
    ## If you use CVS repository of WikiDatabase,
    cvs_repository	=> '/gate/cvs/suikawiki/wikidata/page/',
  );
  our $url_cgi; {
    my $scheme = 'http';
    $scheme = lc $1 if $main::ENV{SERVER_PROTOCOL} =~ m#([A-Za-z0-9+.%-]+)#;
    $url_cgi = "$scheme://".($main::ENV{HTTP_HOST} || $main::ENV{SERVER_NAME}.($main::ENV{SERVER_PORT}==80?'':":$main::ENV{SERVER_PORT}"))."$uri{cookie_path}$uri{script_short_name}";
d28 1
a28 2
  $uri{wiki_abs} = $url_cgi;
  $uri{wiki} = qq($uri{cookie_path}$uri{script_short_name});	
d30 243
a272 51
## Path to modules and databases
  use lib 'lib';
  push @@SuikaWiki::Plugin::plugin_directory, (
  	q(lib/SuikaWiki/Plugin/),
  	q(misc/plugins/),
  );
  our %PathTo = (	## Path to your data, from the main CGI script (NOT from this config script)
                 CachePrefix 	        => q(./wikidata/.cache.),
                 TempPrefix 	        => q(./wikidata/.tmp.),
                 WikiDataBase	=> q(./wikidata/page),
                 WikiDatabase           => q(./wikidata/page),
                 WikiDatabaseErrorLog	=> q(./wikidata/log/error.log),
                 convert	        => q(/usr/X11R6/bin/convert),
  );

BEGIN {
  require SuikaWiki::Output::CGICarp;
  $SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT = 'Internal WikiEngine Error';
  CGI::Carp::set_message (sub {
    my $msg = shift;
    print STDOUT <<EOH
<!DOCTYPE html SYSTEM>
<title>$SuikaWiki::Output::CGICarp::CUSTOM_STATUS_CODE $SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT</title>
<h1>$SuikaWiki::Output::CGICarp::CUSTOM_REASON_TEXT</h1>
<p>$msg</p>
EOH
  });
}

require SuikaWiki::DB::Util::Lock;
our $locker = SuikaWiki::DB::Util::Lock->new (-directory => q(./wikidata/lock),
   -name => 'wikipage',
   -retry => ($main::ENV{HTTP_USER_AGENT} =~ m#Openbot/3# ? 2 : 20),
   -timeout => 3000,
   -error_handler => sub {
     my ($self, %o) = @@_;
     if ($o{level} eq 'fatal') {
       open LOG, '>>', $main::PathTo{WikiDatabaseErrorLog};
         print LOG scalar (gmtime)."\@@@@{[time]} @@{[$$]} {$o{level}}: ", $o{msg}, "\n";
       close LOG;
       die $o{msg};
     }
   });
$locker->lock or do {
  open LOG, '>>', $main::PathTo{WikiDatabaseErrorLog};
    print LOG scalar (time), " Can't lock\n";
  close LOG;
  print "Status: 423 Locked\n";
  $SuikaWiki::Output::CGICarp::CUSTOM_STATUS_CODE = 423;
  die "Can't lock --- already locked; please try again";
};
a273 81


## Type of WikiPage Database
  #our $modifier_dbtype = 'AnyDBM_File';  # Fast, not available on some server, page size limited.
  #our $modifier_dbtype = 'dbmopen';      # Fast, not available on some server, page size limited.
  #our $modifier_dbtype = 'Yuki::YukiWikiDB';     # Slow, available on all environment.
  #our $modifier_dbtype = 'Yuki::YukiWikiDB2';     # Slow, available on all environment.
  our $modifier_dbtype = 'Yuki::YukiWikiDBMeta';     # Slow, available on all environment.
  our $use_exists = 1; # If you can use 'exists' method for your DB.

## Name of Special WikiPage (linked as parts of navigations)
  our %PageName = (
    FrontPage	=> 'HomePage',
    IndexPage	=> 'IndexPage',
    InterWikiName	=> 'Wiki//InterWikiName',
    SearchPage	=> 'Wiki//Page//Search',
    CreatePage	=> 'Wiki//Page//Create',
    MenuBar	=> 'Wiki//MenuBar',
    RecentChanges	=> 'RecentChanges',
    RefererDontRecord	=> 'Wiki//Referer//IgnoreSite',
    RefererSiteName	=> 'Wiki//Referer//SiteName',
    ResourceNS	=> 'Wiki//Resource//',
    StyleList	=> 'Wiki//Style//List//',
    UserAgentList	=> 'Wiki//UserAgentList',
    AdminSpecialPage	=> "\x11\x11Admin\x11Special\x11Page\x11\x11",
  );

## (Should be reimplemented)
  our $kanjicode = 'euc';
  our $lang = 'ja';

## Misc. options
  $SuikaWiki::Plugin::UserAgent::LoggingName = 1;
  	## Use UA-name log? (require UserAgent plugin module)

## Definition of views

require SuikaWiki::View;
SuikaWiki::View->template ('links')->add_line (<<'EOH');
%link-wiki(page=>"Wiki//News",rel=>News,class=>wiki,title=>"%res(name=>GoToWikiNewsLink);"p);
%link-wiki(page=>"Wiki//Help",rel=>help,class=>wiki,title=>"%res(name=>GoToWikiHelpLink);"p);
%link-wiki(page=>"Wiki//Page//License",rel=>copyright,class=>wiki,title=>"%res(name=>GoToWikiPageLicenseLink);"p);
EOH

SuikaWiki::View->template ('navbar')->add_line (<<"EOH");
%anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>"%res(name=>EditThisPage);"p,title=>"%res(name=>EditThisPageLong);"p,accesskey=>E,add-param=>{#edit});
%anchor-wiki(rel=>view,up_to_date,class=>wiki-cmd,label=>"%res(name=>ViewThisPage);"p,title=>"%res(name=>ViewThisPageLong);"p);
%anchor-wiki(page=>{$main::PageName{CreatePage}},class=>wiki,label=>"%res(name=>GoToCreatePage);"p,title=>"%res(name=>GoToCreatePageLong);"p);
%anchor-wiki(page=>{$main::PageName{SearchPage}},class=>wiki,label=>"%res(name=>GoToSearchPage);"p,title=>"%res(name=>GoToSearchPageLong);"p);
%anchor-wiki(mode=>RandomJump,up-to-date,rel=>lucky,class=>"wiki randomlink",label=>"%res(name=>GoSomewhere);"p,title=>"%res(name=>GoSomewhereLong);"p);
%anchor-wiki(page=>{$main::PageName{RecentChanges}},class=>wiki,label=>"%res(name=>GoToRecentChanges);"p,title=>"%res(name=>GoToRecentChangesLong,safe);"p);
EOH

push @@{$SuikaWiki::Plugin::On{Load}}, sub {
  SuikaWiki::View->definition ('read')->property (template => <<'EOH');
%html-document(title=>{%res(name=>{View:WebPageTitle});}p,link-meta=>{%predefined-template(name=>links);}p,content=>{
  %section(level=>1,add-to-toc=>0,type=>body,title=>{%ns-short-page-name;}p,heading,content=>{
    %section(id=>tools1,class=>tools,add-to-toc=>0,content=>{%predefined-template(name=>navbar);}p);
    %section(level=>2,id=>read,add-to-toc=>0,content=>{
      %if-calender(month,true=>{
        %format(context=>form_input,template=>{%calender;});
      },false=>{
        %if-calender(true=>{
          %format(context=>form_input,template=>{%calender-months;});
        });
      });
      %read(comment);
    }p);
    %section(level=>2,id=>children,title=>{%res(name=>{Children:Title});}p,heading,
    content=>{%page-list(ns=>{%page-name;}p,recursive=>0,type=>both,template=>{%res(name=>{Children:Item});}p);}p);
    %section(level=>2,id=>see-also,title=>{%res(name=>SeeAlso);}p,heading,content=>{%search-result;}p);
    %section(level=>2,id=>referer,title=>{%res(name=>Referer);}p,heading,content=>{%referer-list;}p);
    %section(level=>2,id=>toc,title=>{%res(name=>{TOC:Title});}p,heading,add_to_toc=>0,content=>{%toc(drag);}p);
    %section(id=>last-modified,add_to_toc=>0,content=>{%res(name=>{LastModified=});%last-modified;}p);
    %section(class=>tools,add_to_toc=>0,content=>{%predefined-template(name=>navbar);}p);
    %section(id=>footer,add-to-toc=>0,content=>{%predefined-template(name=>footer);}p);
  }p);
}p);%log-hotness;
EOH
  SuikaWiki::View->definition ('-wrote')->property (template => SuikaWiki::View->definition ('-wrote')->property ('template').q(%log-hotness(weight=>2);));
  SuikaWiki::View->definition ('WithMenu')->property (template => SuikaWiki::View->definition ('WithMenu')->property ('template').q(%log-hotness;));
d276 1
a276 1
=head1 NAME
d278 3
a280 1
suikawiki-config.ph --- SuikaWiki: site configuration script
d284 1
a284 1
Copyright 2003 Wakaba <w@@suika.fam.cx>
d291 1
a291 1
1; # $Date: 2003/11/09 02:49:12 $
@


1.11
log
@current practice
@
text
@d41 2
a42 1
   -retry => ($main::ENV{HTTP_USER_AGENT} =~ m#Openbot/3# ? 2 : 120),
d102 1
a106 1
%anchor-wiki(page=>{$main::PageName{IndexPage}},class=>wiki,label=>"%res(name=>GoToIndexPage);"p,title=>"%res(name=>GoToIndexPageLong);"p);
d155 1
a155 1
1; # $Date: 2003/07/26 09:22:36 $
@


1.10
log
@*** empty log message ***
@
text
@d13 1
a13 1
    #cvs_repository	=> 'http://path-to-viewcvs/path-to-repository/',
d18 1
a18 1
    $url_cgi = "$scheme://$main::ENV{SERVER_NAME}".($main::ENV{SERVER_PORT}==80?'':":$main::ENV{SERVER_PORT}")."$uri{cookie_path}$uri{script_short_name}";
d30 6
a35 5
    CachePrefix 	=> q(./wikidata/.cache.),
    TempPrefix 	=> q(./wikidata/.tmp.),
    WikiDataBase	=> q(./wikidata/page),
    WikiDatabaseErrorLog	=> q(./wikidata/error.log),
    convert	=> q(/usr/X11R6/bin/convert),
d38 22
d102 1
a102 1
%anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>"%res(name=>EditThisPage);"p,title=>"%res(name=>EditThisPageLong);"p,accesskey=>E);
d154 1
a154 1
1; # $Date: 2003/07/18 00:03:23 $
@


1.9
log
@*** empty log message ***
@
text
@d20 2
a21 1
  $uri{wiki} = $url_cgi;
d24 1
a24 2
  use lib qw!/home/wakaba/temp/msg!;	# temporary
  use lib qw!../wiki/lib!;
d26 2
a27 2
  	q(../wiki/lib/SuikaWiki/Plugin/),
  	q(../wiki/misc/plugins/),
d34 1
d131 1
a131 1
1; # $Date: 2003/04/29 10:43:21 $
@


1.8
log
@Most of definitions are moved to plugins.
@
text
@d9 1
a9 1
    cookie_path		=> '/temp/suikawiki/',
d18 1
a18 1
    $url_cgi = "$scheme://$main::ENV{SERVER_NAME}:$main::ENV{SERVER_PORT}$uri{cookie_path}$uri{script_short_name}";
d25 4
a28 1
  $SuikaWiki::Plugin::plugin_directory = q(../wiki/lib/SuikaWiki/Plugin/);
d33 1
d48 4
a51 2
    SearchPage	=> 'SearchPage',
    CreatePage	=> 'CreatePage',
d53 2
a63 1
  $wiki::useragent::UseLog = 0;	## Use User-Agent name log (WikiUserAgentList) or not
d66 2
d73 3
a75 9
%link-wiki(page=>IndexPage,rel=>index,class=>wiki,title=>"%res(name=>GoToIndexPageLink,safe);"p);
%link-wiki(page=>HomePage,rel=>home,class=>wiki,title=>"%res(name=>GoToHomePageLink,safe);"p);
%link-wiki(page=>"Wiki//News",rel=>News,class=>wiki,title=>"%res(name=>GoToWikiNewsLink,safe);"p);
%link-wiki(page=>SearchPage,rel=>search,class=>wiki,title=>"%res(name=>GoToSearchPageLink,safe);"p);
%link-wiki(page=>"Wiki//Help",mode=>read,rel=>help,class=>wiki,title=>"%res(name=>GoToWikiHelpLink,safe);"p);
%link-wiki(page=>"Wiki//Page//License",rel=>copyright,class=>wiki,title=>"%res(name=>GoToWikiPageLicenseLink,safe);"p);
%link-wiki(mode=>RandomJump,up_to_date,rel=>jump,class=>"wiki randomlink",title=>"%res(name=>GoSomewhereLink,safe);"p);
%link-wiki(href=>"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3F'+encodeURIComponent(WikiName)%7D",rel=>jump,class=>wiki-cmd,title=>"%res(name=>JumpToLink,safe);"p);
%link-wiki(href=>"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3Fmycmd=edit;mypage='+encodeURIComponent(WikiName)%7D",rel=>jump,class=>wiki-cmd,title=>"%res(name=>JumpToEditLink,safe);"p);
d77 8
a84 9
SuikaWiki::View->template ('navbar')->add_line (<<'EOH');
%anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>"%res(name=>EditThisPage,safe);"p,title=>"%res(name=>EditThisPageLong);"p,accesskey=>E);
%anchor-wiki(rel=>view,up_to_date,class=>wiki-cmd,label=>"%res(name=>ViewThisPage,safe);"p,title=>"%res(name=>ViewThisPageLong);"p);
%anchor-wiki(page=>CreatePage,class=>wiki,label=>"%res(name=>GoToCreatePage,safe);"p,title=>"%res(name=>GoToCreatePageLong,safe);"p);
%anchor-wiki(page=>IndexPage,class=>wiki,label=>"%res(name=>GoToIndexPage,safe);"p,title=>"%res(name=>GoToIndexPageLong,safe);"p);
%anchor-wiki(page=>HomePage,class=>wiki,label=>"%res(name=>GoToHomePage,safe);"p,title=>"%res(name=>GoToHomePageLong,safe);"p);
%anchor-wiki(page=>SearchPage,class=>wiki,label=>"%res(name=>GoToSearchPage,safe);"p,title=>"%res(name=>GoToSearchPageLong,safe);"p);
%anchor-wiki(mode=>RandomJump,up-to-date,rel=>lucky,class=>"wiki randomlink",label=>"%res(name=>GoSomewhere,safe);"p,title=>"%res(name=>GoSomewhereLong,safe);"p);
%anchor-wiki(page=>RecentChanges,class=>wiki,label=>"%res(name=>GoToRecentChanges,safe);"p,title=>"%res(name=>GoToRecentChangesLong,safe);"p);
d103 1
a103 3
    content=>{%page-list(ns=>{%page-name;}p,recursive=>0,type=>both,template=>{
      %wiki-link(label=>{%ns-short-page-or-ns-name;}p);
    });}p);
d106 1
a106 1
    %section(level=>2,id=>toc,title=>{%res(name=>{TOC:Title};}p,heading,add_to_toc=>0,content=>{%toc(drag);}p);
d114 1
d130 1
a130 1
1; # $Date: 2003/04/03 01:10:10 $
@


1.7
log
@Remove some definitions
@
text
@d23 1
d28 1
d48 2
a49 1
    UserAgentList	=> 'WikiUserAgentList',
d63 1
a63 6
my %vd;
$vd{links} = SuikaWiki::View->template ('links')->add_line (<<'EOH');
%link-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,title=>"%res(name=>EditThisPageLink,safe);"p);
%link-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,title=>"%res(name=>AdminEditThisPageLink,safe);"p,add-param=>"admin=1");
%link-wiki(rel=>view,class=>wiki-cmd,title=>"%res(name=>ViewThisPageLink,safe);"p,up_to_date);
%link-wiki(rel=>myself,class=>wiki,title=>"%res(name=>GoToMyselfLink,safe);"p);
a66 2
%link-wiki(page=>RecentChanges,rel=>News,class=>wiki,title=>"%res(name=>GoToRecentChangesLink,safe);"p);
%link-wiki(page=>RecentChanges,mode=>rss,rel=>News,class=>wiki,title=>"%res(name=>GoToRssPageLink,safe);"p,type=>"application/xml");
d70 7
a76 10
%link-wiki(mode=>map,rel=>sitemap,class=>wiki-cmd,title=>"%res(name=>ShowMapOfThisPageLink,safe);"p);
%link-wiki(mode=>RandomJump,up_to_date,rel=>lucky,class=>"wiki randomlink",title=>"%res(name=>GoSomewhereLink,safe);"p);
EOH
$vd{links} .= <<EOH;
  %link-wiki(href=>"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3F'+encodeURIComponent(WikiName)%7D",rel=>jump,class=>wiki-cmd,title=>"%res(name=>JumpToLink,safe);"p);
  %link-wiki(href=>"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3Fmycmd=edit;mypage='+encodeURIComponent(WikiName)%7D",rel=>jump,class=>wiki-cmd,title=>"%res(name=>JumpToEditLink,safe);"p);
EOH
$vd{navbar} = SuikaWiki::View->template ('navbar')->add_line (<<'EOH');
%anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>"%res(name=>EditThisPage,safe);"p,title=>"%res(name=>EditThisPageLong,safe);"p,accesskey=>E);
%anchor-wiki(rel=>view,up_to_date,class=>wiki-cmd,label=>"%res(name=>ViewThisPage,safe);"p,title=>"%res(name=>ViewThisPageLong,safe);"p);
d85 27
a111 156

my %ViewDefinition = (
read => {media => {type => 'text/html', charset => 1, expires => 120}, check => sub {1},
  #xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 120},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"View:WebPageTitle\\",safe);"p,link-meta=>"%predefined-template(name=>links);"p);
%section(level=>1,add-to-toc=>0,type=>body,title=>"%ns-short-page-name(safe);"p,heading,content=>"
  %section(id=>tools1,class=>tools,add-to-toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>read,add-to-toc=>0,content=>\\"%read(comment);\\");
  %section(level=>2,id=>children,
    title=>\\"%res(name=>\\\\\\"Children:Title\\\\\\",safe);\\"p,heading,
    content=>\\"%page-list(ns=>\\\\\\"%page-name(safe);\\\\\\"p,recursive=>0,type=>both,
      template=>\\\\\\"%wiki-link(label=>\\\\\\\\\\\\\\"%ns-short-page-or-ns-name;\\\\\\\\\\\\\\"ps);\\\\\\"
    );\\"
  );
  %section(level=>2,id=>\\"see-also\\",title=>SeeAlso,heading,content=>\\"%search-result;\\");
  %section(level=>2,id=>referer,title=>Referer,heading,content=>\\"%referer-list;\\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(id=>last-modified,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"LastModified=\\\\\\");%last-modified;\\");
  %section(class=>tools,add_to_toc=>0,content=>\\\"%predefined-template(name=>navbar);\\"p);
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
%log-hotness();
EOH
map => {media => {type => 'text/html', charset => 1, expires => 120}, check => sub {1},
  #xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 120},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Map:WebPageTitle\\");",link_meta=>"%predefined-template(name=>links);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>\\"link-map\\",title=>\\"Map:Title\\",heading,content=>\\"
    <p>%res(name=>\\\\\\"Map:Description\\\\\\");</p>
    %link-map;
  \\");
  %section(level=>2,id=>\\"see-also\\",title=>SeeAlso,heading,content=>\\"%search-result;\\");
  %section(level=>2,id=>referer,title=>Referer,heading,content=>\\"%referer-list;\\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(class=>tools,add_to_toc=>0,content=>\\\"%predefined-template(name=>navbar);\\"p);
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH

edit => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  #xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Edit:WebPageTitle\\");",link-meta=>"%predefined-template(name=>links);%html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>edit,title=>\\"Edit:Title\\",heading,content=>\\"
    %edit-form;
    %section(level=>3,id=>edit-help,add_to_toc=>0,content=>\\\\\\"%read(page=>\\\\\\\\\\\\\\"Wiki//Help//Edit\\\\\\\\\\\\\\");\\\\\\");
  \\");
  %section(level=>2,id=>\\"see-also\\",title=>SeeAlso,heading,content=>\\"%search-result;\\");
  %section(level=>2,id=>referer,title=>Referer,heading,content=>\\"%referer-list;\\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(id=>last-modified,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"LastModified=\\\\\\");%last-modified;\\");
  %section(class=>tools,add_to_toc=>0,content=>\\\"%predefined-template(name=>navbar);\\"p);
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH
adminedit => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Edit:Admin:WebPageTitle\\");"p,link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>edit,title=>\\"Edit:Title\\",heading,content=>\\"%edit-form(admin);\\");
  %section(level=>2,id=>edit,title=>\\"Edit:Rename:Title\\",heading,content=>
    \\"%wp-rename-form-start;
    %format(context=>form_input,template=>\\\\\\\"
      %text(id=>to,label=>\\\\\\\\\\\\\\\"%res(name=>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Edit:Rename:To=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\",size=>10,default=>\\\\\\\\\\\\\\\"%page-name;\\\\\\\\\\\\\\\"ps);
      %submit;
    \\\\\\\");
    %form-end;\\"
  );
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(id=>last-modified,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"LastModified=\\\\\\");%last-modified;\\");
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH
-conflict => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  #xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Edit:Conflict:WebPageTitle\\");",link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>edit-conflict,title=>\\"Edit:Conflict:Title\\",heading,content=>\\"
    <p>%res(name=>\\\\\\"Edit:Conflict:Description\\\\\\");</p>
    %conflict-form;
    %section(level=>3,id=>edit-conflict-diff,title=>\\\\\\"Edit:Conflict:Diff:Title\\\\\\",heading,content=>\\\\\\"
      <p>%res(name=>\\\\\\\\\\\\\\"Edit:Conflict:Diff:Description\\\\\\\\\\\\\\");</p>
      %conflict-diff;
    \\\\\\");
  \\");
  %section(level=>2,id=>edit,title=>\\"Edit:Title\\",heading,content=>\\"
    <p>%res(name=>\\\\\\"Edit:Conflict:Edit:Description\\\\\\");</p>
    %edit-form;
    %section(level=>3,id=>edit-help,add_to_toc=>0,content=>\\\\\\"%read(page=>\\\\\\\\\\\\\\"Wiki//Help//Edit\\\\\\\\\\\\\\");\\\\\\");
  \\");
  %section(level=>2,id=>\\"see-also\\",title=>SeeAlso,heading,content=>\\"%search-result;\\");
  %section(level=>2,id=>referer,title=>Referer,heading,content=>\\"%referer-list;\\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(class=>tools,add_to_toc=>0,content=>\\\"%predefined-template(name=>navbar);\\"p);
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH
-wrote => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Edit:Wrote:WebPageTitle\\");",link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  <p>%res(name=>\\"Edit:SavedSuccessfully\\");</p>
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
%log-hotness(weight=>2);
EOH
-deleted => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Edit:Deleted:WebPageTitle\\");",link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  <p>%res(name=>\\"Edit:PageIsDeletedSuccessfully\\");</p>
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH
-error => {media => {type => 'text/html', charset => 1, expires => 60}, check => sub {1},
  xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 60},
  template => <<EOH},
%html-start;%html-head(title=>"%res(name=>\\"Error:WebPageTitle\\");",link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,id=>error,title=>\\"Error:Title\\",heading,content=>\\"
    <p>%error-message;</p>
  \\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
EOH


rss => {media => {type => 'application/rss+xml', charset => 1, expires => 3600},
  check => sub { ref $_[0]->format_converter ($_[0]->{magic} => 'RSS') ? 1 : 0 },
  template => '<?xml version="1.0"?>%styles-wiki-xml(page=>"Wiki//Style//List//RSS");%read(to=>RSS);'},
-UnsupportedMediaType => {media => {type => 'text/html', charset => 1, expires => -1},
  xmedia => {type => 'application/xhtml+xml', charset => 1, expires => -1},
  check => sub {1}, template => <<EOH},
%html-start;%html-head(title=>"%page-name;",link_meta=>"%predefined-template(name=>links); %html-meta(name=>ROBOTS,content=>NOINDEX);"p);
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"%predefined-template(name=>navbar);\\"p);
  %section(level=>2,title=>\\"UnsupportedMediaType:Title\\",heading,content=>\\"
    <p>%res(name=>\\\\\\"UnsupportedMediaType:Description\\\\\\");</p>
  \\");
  %section(id=>footer,add-to-toc=>0,content=>\\"%predefined-template(name=>footer);\\");
%apply-user-preferred-style;");%html-end;
d113 2
a114 6
);

require SuikaWiki::View;
for (keys %ViewDefinition) {
  SuikaWiki::View->definition ($_)->properties ($ViewDefinition{$_});
}
d129 1
a129 1
1; # $Date: 2003/03/27 07:52:24 $
@


1.6
log
@Sync with latest version
@
text
@d12 2
d45 1
a55 8
  $wiki::diff::UseDiff = 1;	## Use diff mode or not

## Namespace of WikiName
package wiki::page::ns;
  our $delimiter = '//';
  our $self = '.';
  our $parent = '..';
package main;
d59 1
d61 15
a75 18
$vd{links} = <<'EOH';
  %styles-wiki-html(page=>\"WikiStyleList:HTML\");
  %link-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,title=>\"%res(name=>EditThisPageLink);\");
  %link-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,title=>\"%res(name=>AdminEditThisPageLink);\",add_param=>\"admin=1\");
  %link-wiki(rel=>view,class=>wiki-cmd,title=>\"%res(name=>ViewThisPageLink);\",up_to_date);
  %link-wiki(rel=>myself,class=>wiki,title=>\"%res(name=>GoToMyselfLink);\");
  %link-wiki(page=>IndexPage,rel=>index,class=>wiki,title=>\"%res(name=>GoToIndexPageLink);\");
  %link-wiki(page=>HomePage,rel=>home,class=>wiki,title=>\"%res(name=>GoToHomePageLink);\");
  %link-wiki(page=>WikiNews,rel=>News,class=>wiki,title=>\"%res(name=>GoToWikiNewsLink);\");
  %link-wiki(page=>RecentChanges,rel=>News,class=>wiki,title=>\"%res(name=>GoToRecentChangesLink);\");
  %link-wiki(page=>RecentChanges,mode=>rss,rel=>News,class=>wiki,title=>\"%res(name=>GoToRssPageLink);\",type=>\"application/xml\");
  %link-wiki(page=>SearchPage,rel=>search,class=>wiki,title=>\"%res(name=>GoToSearchPageLink);\");
  %link-wiki(page=>WikiHelp,mode=>read,rel=>help,class=>wiki,title=>\"%res(name=>GoToWikiHelpLink);\");
  %link-wiki(page=>WikiPageLicense,rel=>copyright,class=>wiki,title=>\"%res(name=>GoToWikiPageLicenseLink);\");
  %link-wiki(mode=>map,rel=>sitemap,class=>wiki-cmd,title=>\"%res(name=>ShowMapOfThisPageLink);\");
  %link-wiki(mode=>RandomJump,up_to_date,rel=>lucky,class=>\"wiki randomlink\",title=>\"%res(name=>GoSomewhereLink);\");
  %link-wiki(page=>WikiMenuBar,mode=>mininav,rel=>\"sidebar navigator\",class=>wiki);
  %link-favicon(use_page_icon);
a76 2
  #%link-viewcvs(href=>\"http://path-to-viewcvs/path-to-repository/\",rel=>history,class=>wiki-cmd,title=>\"%res(name=>ViewHistoryOfThisPageLink);\",hreflang=>en);
$vd{links} .= q(  %link-wiki(mode=>diff,rel=>history,class=>wiki-cmd,title=>\"%res(name=>ViewDiffOfThisPageLink);\");) if $wiki::diff::UseDiff;
d78 2
a79 2
  %link-wiki(href=>\\\"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3F'+encodeURIComponent(WikiName)%7D\\\",rel=>jump,class=>wiki-cmd,title=>\\\"%res(name=>JumpToLink);\\\");
  %link-wiki(href=>\\\"javascript:var%20WikiName=prompt('Please%20input%20the%20WikiName:','','Jump%20to%20SuikaWiki');if(WikiName)%7B_content.location.href='$url_cgi%3Fmycmd=edit;mypage='+encodeURIComponent(WikiName)%7D\\\",rel=>jump,class=>wiki-cmd,title=>\\\"%res(name=>JumpToEditLink);\\\");
d81 9
a89 9
$vd{navbar} = <<'EOH';
  %anchor-wiki(mode=>edit,rel=>edit,class=>wiki-cmd,label=>\\\"%res(name=>EditThisPage);\\\",title=>\\\"%res(name=>EditThisPageLong,accesskey=>E);\\\");
  %anchor-wiki(rel=>view,up_to_date,class=>wiki-cmd,label=>\\\"%res(name=>ViewThisPage);\\\",title=>\\\"%res(name=>ViewThisPageLong);\\\");
  %anchor-wiki(page=>CreatePage,class=>wiki,label=>\\\"%res(name=>GoToCreatePage);\\\",title=>\\\"%res(name=>GoToCreatePageLong);\\\");
  %anchor-wiki(page=>IndexPage,class=>wiki,label=>\\\"%res(name=>GoToIndexPage);\\\",title=>\\\"%res(name=>GoToIndexPageLong);\\\");
  %anchor-wiki(page=>HomePage,class=>wiki,label=>\\\"%res(name=>GoToHomePage);\\\",title=>\\\"%res(name=>GoToHomePageLong);\\\");
  %anchor-wiki(page=>SearchPage,class=>wiki,label=>\\\"%res(name=>GoToSearchPage);\\\",title=>\\\"%res(name=>GoToSearchPageLong);\\\");
  %anchor-wiki(mode=>RandomJump,up_to_date,rel=>lucky,class=>\\\"wiki randomlink\\\",label=>\\\"%res(name=>GoSomewhere);\\\",title=>\\\"%res(name=>GoSomewhereLong);\\\");
  %anchor-wiki(page=>RecentChanges,class=>wiki,label=>\\\"%res(name=>GoToRecentChanges);\\\",title=>\\\"%res(name=>GoToRecentChangesLong);\\\");
d92 2
a93 1
our %ViewDefinition = (
d97 10
a106 4
%html-start;%html-head(title=>"%res(name=>\\"View:WebPageTitle\\");",link_meta=>"$vd{links}");
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
  %section(level=>2,id=>read,add_to_toc=>0,content=>\\"%read(comment);\\");
d111 2
a112 6
  %section(class=>tools,add_to_toc=>0,content=>\\\"$vd{navbar}\\\");
  %section(id=>footer,add_to_toc=>0,content=>\\"
    <a href=\\\\\\"http://www.hyuki.com/yukiwiki/\\\\\\" title=\\\\\\"YukiWiki 2.0.beta1.2002-05-29 &copy; 2000-2002 by Hiroshi Yuki\\\\\\">%res(name=>\\\\\\"About:Name:YukiWiki\\\\\\");</a>
    <a href=\\\\\\"http://digit.que.ne.jp/work/\\\\\\" title=\\\\\\"WalWiki 2.0.beta1.wal.1 &copy; 2000-2002 by Makio Tsukamoto\\\\\\">%res(name=>\\\\\\"About:Name:WalWiki\\\\\\");</a>
    <a href=\\\\\\"http://suika.fam.cx/gate/cvs/wakaba/wiki/\\\\\\" title=\\\\\\"%res(name=>\\\\\\"About:SuikaWiki:JumpToCVS\\\\\\");\\\\\\">%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;</a>
  \\");
d119 1
a119 1
%html-start;%html-head(title=>"%res(name=>\\"Map:WebPageTitle\\");",link_meta=>"$vd{links}");
d121 1
a121 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d129 2
a130 2
  %section(class=>tools,add_to_toc=>0,content=>\\\"$vd{navbar}\\\");
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d137 1
a137 1
%html-start;%html-head(title=>"%res(name=>\\"Edit:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d139 1
a139 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d142 1
a142 1
    %section(level=>3,id=>edit-help,add_to_toc=>0,content=>\\\\\\"%read(page=>WikiEditHelp);\\\\\\");
d148 2
a149 2
  %section(class=>tools,add_to_toc=>0,content=>\\\"$vd{navbar}\\\");
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d155 1
a155 1
%html-start;%html-head(title=>"%res(name=>\\"Edit:Admin:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d157 1
a157 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d159 8
d169 1
a169 1
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d175 1
a175 1
%html-start;%html-head(title=>"%res(name=>\\"Edit:Conflict:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d177 1
a177 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d189 1
a189 1
    %section(level=>3,id=>edit-help,add_to_toc=>0,content=>\\\\\\"%read(page=>WikiEditHelp);\\\\\\");
d194 2
a195 2
  %section(class=>tools,add_to_toc=>0,content=>\\\"$vd{navbar}\\\");
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d201 1
a201 1
%html-start;%html-head(title=>"%res(name=>\\"Edit:Wrote:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d203 1
a203 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d205 1
a205 1
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d212 1
a212 1
%html-start;%html-head(title=>"%res(name=>\\"Edit:Deleted:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d214 1
a214 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d216 1
a216 1
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d222 1
a222 1
%html-start;%html-head(title=>"%res(name=>\\"Error:WebPageTitle\\");",link_meta=>"$vd{links}  %html-meta(name=>ROBOTS,content=>NOINDEX);");
d224 1
a224 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d229 1
a229 1
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d233 1
a233 11
css => {media => {type => 'text/css', charset => 1, expires => 3600},
  check => sub { ref $_[0]->format_converter ($_[0]->{magic} => 'CSS') ? 1 : 0 },
  template => '%read(to=>CSS);'},
image_jpeg => {media => {type => 'image/jpeg', expires => 240*3600},
  check => sub { ref ($_[0]->format_converter ($_[0]->{magic} => 'image_jpeg'))
                 && $_[0]->{magic} =~ m#image-type="image/jpeg"# ? 1 : 0 },
  template => '%read(to=>image_jpeg);'},
image_png => {media => {type => 'image/png', expires => 240*3600},
  check => sub { ref ($_[0]->format_converter ($_[0]->{magic} => 'image_png'))
                 && $_[0]->{magic} =~ m#image-type="image/png"# ? 1 : 0 },
  template => '%read(to=>image_png);'},
d236 1
a236 1
  template => '<?xml version="1.0"?>%styles-wiki-xml(page=>"WikiStyleList:RSS");%read(to=>RSS);'},
d240 1
a240 1
%html-start;%html-head(title=>"%page-name;",link_meta=>"$vd{links}");
d242 1
a242 1
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d244 1
a244 1
    %res(name=>\\\\\\"UnsupportedMediaType:Description\\\\\\");
d246 1
a246 1
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
d251 4
a254 51

$ViewDefinition{diff} = {media => {type => 'text/html', charset => 1, expires => 120},
  #xmedia => {type => 'application/xhtml+xml', charset => 1, expires => 120},
  template => <<EOH, check => sub {1}} if $wiki::diff::UseDiff;
%html-start;%html-head(title=>"%res(name=>\\"Diff:WebPageTitle\\");",link_meta=>"$vd{links}");
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
  %section(level=>2,id=>\\"diff\\",title=>\\"Diff:Title\\",heading,content=>\\"
    <p>%res(name=>\\\\\\"Diff:Notice\\\\\\");</p>
    %diff-between-previous;
  \\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(class=>tools,add_to_toc=>0,content=>\\\"$vd{navbar}\\\");
  %section(id=>footer,add_to_toc=>0,content=>\\"%res(name=>\\\\\\"About:Name:SuikaWiki\\\\\\"); %wiki-version;\\");
");
EOH

$ViewDefinition{WithMenu} = {%{$ViewDefinition{read}}, template => <<EOH};
%html-start;%html-head(title=>"%res(name=>\\"View:WebPageTitle\\");",link_meta=>"$vd{links}");
%log-hotness;
%section(level=>1,add_to_toc=>0,type=>body,title=>"%page-name;",heading,content=>"
  <div id=\\\"myuri\\\">%img-favicon(use_page_icon);%uri-wiki();</div>
  %section(id=>tools1,class=>tools,add_to_toc=>0,content=>\\"
    %anchor-wiki(rel=>view,up_to_date,mode=>default,class=>wiki-cmd,label=>\\\\\\"%res(name=>ReloadThisPage);\\\\\\",title=>\\\\\\"%res(name=>ReloadThisPageLong);\\\\\\");
    $vd{navbar}
  \\");
  %section(level=>2,id=>side-menu,add_to_toc=>0,content=>\\"%read(page=>WikiMenuBar);\\");
  %section(id=>content-frame,add_to_toc=>0,content=>\\"
    %section(level=>2,id=>read,add_to_toc=>0,content=>\\\\\\"%read(comment);\\\\\\");
    %section(level=>2,id=>\\\\\\"see-also\\\\\\",title=>SeeAlso,heading,content=>\\\\\\"%search-result;\\\\\\");
    %section(level=>2,id=>referer,title=>Referer,heading,content=>\\\\\\"%referer-list;\\\\\\");
    %section(level=>2,id=>toc,title=>\\\\\\"TOC:Title\\\\\\",heading,add_to_toc=>0,content=>\\\\\\"%toc(drag);\\\\\\");
    %section(id=>last-modified,add_to_toc=>0,content=>\\\\\\"%res(name=>\\\\\\\\\\\\\\"LastModified=\\\\\\\\\\\\\\");%last-modified;\\\\\\");
    %section(id=>footer,add_to_toc=>0,content=>\\\\\\"
      <a href=\\\\\\\\\\\\\\"http://www.hyuki.com/yukiwiki/\\\\\\\\\\\\\\" title=\\\\\\\\\\\\\\"YukiWiki 2.0.beta1.2002-05-29 &copy; 2000-2002 by Hiroshi Yuki\\\\\\\\\\\\\\">%res(name=>\\\\\\\\\\\\\\"About:Name:YukiWiki\\\\\\\\\\\\\\");</a>
      <a href=\\\\\\\\\\\\\\"http://digit.que.ne.jp/work/\\\\\\\\\\\\\\" title=\\\\\\\\\\\\\\"WalWiki 2.0.beta1.wal.1 &copy; 2000-2002 by Makio Tsukamoto\\\\\\\\\\\\\\">%res(name=>\\\\\\\\\\\\\\"About:Name:WalWiki\\\\\\\\\\\\\\");</a>
      <a href=\\\\\\\\\\\\\\"http://suika.fam.cx/gate/cvs/wakaba/wiki/\\\\\\\\\\\\\\" title=\\\\\\\\\\\\\\"%res(name=>\\\\\\\\\\\\\\"About:SuikaWiki:JumpToCVS\\\\\\\\\\\\\\");\\\\\\\\\\\\\\">%res(name=>\\\\\\\\\\\\\\"About:Name:SuikaWiki\\\\\\\\\\\\\\"); %wiki-version;</a>
    \\\\\\");
  \\");
%apply-user-preferred-style;");%html-end;
EOH

$ViewDefinition{mininav} = {%{$ViewDefinition{read}}, template => <<EOH};
%html-start;%html-head(title=>"%res(name=>\\"View:WebPageTitle\\");",link_meta=>"$vd{links}");
%section(level=>1,add_to_toc=>0,type=>body,content=>"
  %section(level=>2,id=>side-menu,class=>\\"mininav\\",add_to_toc=>0,content=>\\"
    %read;
    %anchor-wiki(rel=>view,mode=>mininav,class=>wiki-cmd,target=>_self,label=>\\\\\\"%res(name=>ReloadThisPage);\\\\\\",title=>\\\\\\"%res(name=>ReloadThisPageLong);\\\\\\");
  \\");
%apply-user-preferred-style;");%html-end;
EOH
d269 1
a269 1
1; # $Date: 2003/03/27 06:16:35 $
@


1.5
log
@pre-namespace
@
text
@d2 12
a13 9
#
# You MUST modify following '$modifier_...' variables.
#
# our $modifier_dbtype = 'AnyDBM_File';  # Fast, not available on some server, page size limited.
# our $modifier_dbtype = 'dbmopen';      # Fast, not available on some server, page size limited.
#our $modifier_dbtype = 'Yuki::YukiWikiDB';     # Slow, available on all environment.
#our $modifier_dbtype = 'Yuki::YukiWikiDB2';     # Slow, available on all environment.
our $modifier_dbtype = 'Yuki::YukiWikiDBMeta';     # Slow, available on all environment.
our $url_cgi; {
d16 45
a60 27
    $url_cgi = "$scheme://$main::ENV{SERVER_NAME}:$main::ENV{SERVER_PORT}/temp/suikawiki/wiki";
	## - MUST NOT include [&<>"] and/or non-URI characters
}
our %uri = (
  cookie_path	=> '/temp/suikawiki/',
  external_script	=> '../wiki/script/',
);
$uri{wiki} = $url_cgi;
use lib qw!../wiki/lib!;
$SuikaWiki::Plugin::plugin_directory = q(../wiki/lib/SuikaWiki/Plugin/);
our %PathTo = (	## Path to your data, from the main CGI script (NOT from this config script)
  CachePrefix	=> q(./wikidata/.cache.),
  WikiDataBase	=> q(./wikidata/page),
);
##############################
our %PageName = (
  FrontPage	=> 'HomePage',
  IndexPage	=> 'IndexPage',
  SearchPage	=> 'SearchPage',
  CreatePage	=> 'CreatePage',
  ErrorPage	=> 'ErrorPage',
  RecentChanges	=> 'RecentChanges',
  AdminSpecialPage	=> "\x11\x11Admin\x11Special\x11Page\x11\x11",
  UserAgentList	=> 'WikiUserAgentList',
);
our $kanjicode = 'euc';
our $lang = 'ja';
d62 1
a62 2
$wiki::useragent::UseLog = 0;	## Use User-Agent name log (WikiUserAgentList) or not
$wiki::diff::UseDiff = 1;	## Use diff mode or not
a253 4
  %section(level=>2,id=>\\"see-also\\",title=>SeeAlso,heading,content=>\\"%search-result;\\");
  %section(level=>2,id=>referer,title=>Referer,heading,content=>\\"%referer-list;\\");
  %section(level=>2,id=>toc,title=>\\"TOC:Title\\",heading,add_to_toc=>0,content=>\\"%toc(drag);\\");
  %section(class=>tools,add_to_toc=>0,content=>\\"$vd{navbar}\\");
d273 1
a273 1
%apply-user-preferred-style;");%html-end;
d300 1
d311 14
a324 1
1;
@


1.4
log
@Sync with latest SuikaWiki
@
text
@d13 1
a13 1
    $url_cgi = "$scheme://$main::ENV{SERVER_NAME}:$main::ENV{SERVER_PORT}/~wakaba/suikawiki/wiki";
d17 1
a17 1
  cookie_path	=> '/~wakaba/suikawiki/',
d21 1
d59 1
a59 1
  %link-wiki(mode=>map,rel=>contents,class=>wiki-cmd,title=>\"%res(name=>ShowMapOfThisPageLink);\");
d61 2
d100 1
d185 1
d214 8
d224 1
a224 1
  template => '%read(to=>RSS);'},
d262 1
d264 1
a264 1
  <div id=\\\"myuri\\\">%uri-wiki();</div>
d281 9
@


1.3
log
@Update to new database format
@
text
@d10 4
a13 2
our $url_cgi = '/~wakaba/suikawiki/wiki';
	## - MUST be started by '/'
d15 5
a19 1
our %uri;
d21 1
a21 2
$uri{cvs_wikipage} = '';	## URI path to Web interface of CVS repository of WikiPages ("" = none)
$SuikaWiki::Plugin::plugin_directory = q(lib/SuikaWiki/Plugin/);
d23 1
a25 1
our $use_exists = 0; # If you can use 'exists' method for your DB.
a33 1
  RssPage	=> 'RssPage',
a34 1
  DefaultStyleForHTML	=> 'WikiHTMLStyle',
a38 6
## List of WikiPages should not be changed
our %FixedPage = (
    $PageName{ErrorPage}	=> 1,
    $PageName{RssPage}	=> 1,
    CompletedSuccessfully => 1,
);
d42 228
@


1.2
log
@Update
@
text
@d7 4
a10 2
our $modifier_dbtype = 'YukiWikiDB';     # Slow, available on all environment.
our $url_cgi = '/~wakaba/-temp/wiki/wiki';
d15 2
a16 2
$uri{cvs_wikipage} = '/gate/cvs/wakaba/suikawiki/wiki/';
$SuikaWiki::Plugin::plugin_directory = q(./SuikaWiki/Plugin/);
a17 1
  TouchFile	=> q(./wikidata/touched.txt),
a18 2
  WikiInfoBase	=> q(./wikidata/info),
  WikiDiffBase	=> q(./wikidata/diff),
d28 1
d30 1
a30 1
  AdminSpecialPage	=> 'Admin Special Page', # must include spaces.
d32 1
d36 2
a37 2
our %fixedpage = (
    $PageName{IndexPage}	=> 1,
a39 2
    RecentChanges => 1,
    AdminChangePassword => 1,
a40 1
    WikiUserAgentList => 1,
d42 3
@


1.1
log
@New
@
text
@d17 1
a17 1
  WikiDataBase	=> q(./wikidata/wiki),
@

