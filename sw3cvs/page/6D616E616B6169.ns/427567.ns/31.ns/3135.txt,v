head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2008.11.10.11.53.21;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.27.02.53.08;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.13.02.03.25;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@
- Subject: Error を使うように修正
- Priority: high
- Status: open
- Category: Util::Error
- Creation-Date: 2003-11-11T12:50:53+00:00

[1] [CODE(perl)[Error]] モジュールを使って try〓catch で書けるように改良しましょう。

今の使いかた :
[PRE[
  require Message::Util::Error;
  my $err = new Message::Util::Error ({
    OPEN_DB => {
      level => 'fatal',
      description => q(%s: Can't open database (%s)),
    },
    CLOSE_DB => {
      level => 'warn',
      description => q(%s: Can't close database (%s)),
    },
    UNKNOWN => {
      level => 'fatal',
      description => 'Unknown error happend',
    },
    -error_handler => sub {
      my ($self, $err_def, $err_msg, $err_argv) = @@_;
      if ($err_def->{level} eq 'fatal') {
        die $err_msg;
      } else {
        warn $err_msg;
      }
    },
  );
  open DB, $db_name or $err->raise (type => 'OPEN_DB', t => [$db_name, $!]);
]PRE]

新しい使いかた :
[PRE[
package Exception1;
use Message::Util::Error;
our @@ISA = 'Message::Util::Error';
our %Error = (
    OPEN_DB => {
      level => 'fatal',
      description => q(%s: Can't open database (%s)),
    },
    CLOSE_DB => {
      level => 'warn',
      description => q(%s: Can't close database (%s)),
    },
    UNKNOWN => {
      level => 'fatal',
      description => 'Unknown error happend',
    },
);
package SomeDatabase;
sub open_database {
  open DB, $db_name
    or
  throw Exception1
    type => 'OPEN_DB',
    t => [$db_name, $!];
}
package main;
try {
  $db->open_database;
} catch Exception1 with {
      my ($err) = @@_;
      if ($err->level eq 'fatal') {
        die $err->message;
      } else {
        warn $err->message;
      }
};
]PRE]

[2]
This is gonsalez music site - <a href="http://www.gonsalez.info/77772.html">best music site in da world</a>.
([[David]] [kalimurzino@@rambler.ru])

[3]
Yc39Qr  <a href="http://mobdsmgfitgf.com/">mobdsmgfitgf</a>, [url=http://faojygadofxr.com/]faojygadofxr[/url], [link=http://hsytolcykpir.com/]hsytolcykpir[/link], http://jnjmffzpuowj.com/
([[bxmsvdb]] [otwusp@@sdkdml.com] [WEAK[2008-11-09 18:15:01 +00:00]])


[4]
Yc39Qr  <a href="http://mobdsmgfitgf.com/">mobdsmgfitgf</a>, [url=http://faojygadofxr.com/]faojygadofxr[/url], [link=http://hsytolcykpir.com/]hsytolcykpir[/link], http://jnjmffzpuowj.com/
([[bxmsvdb]] [otwusp@@sdkdml.com] [WEAK[2008-11-09 18:15:09 +00:00]])

@


1.2
log
@auto-committed
@
text
@a77 1

d81 9
@


1.1
log
@auto-committed
@
text
@d1 1
a1 1
#?SuikaWiki/0.9
d8 75
a82 72
[1] [CODE(perl)[Error]] モジュールを使って try〓catch で書けるように改良しましょう。

今の使いかた :
[PRE[
  require Message::Util::Error;
  my $err = new Message::Util::Error ({
    OPEN_DB => {
      level => 'fatal',
      description => q(%s: Can't open database (%s)),
    },
    CLOSE_DB => {
      level => 'warn',
      description => q(%s: Can't close database (%s)),
    },
    UNKNOWN => {
      level => 'fatal',
      description => 'Unknown error happend',
    },
    -error_handler => sub {
      my ($self, $err_def, $err_msg, $err_argv) = @@_;
      if ($err_def->{level} eq 'fatal') {
        die $err_msg;
      } else {
        warn $err_msg;
      }
    },
  );

  open DB, $db_name or $err->raise (type => 'OPEN_DB', t => [$db_name, $!]);
]PRE]

新しい使いかた :
[PRE[
package Exception1;
use Message::Util::Error;
our @@ISA = 'Message::Util::Error';
our %Error = (
    OPEN_DB => {
      level => 'fatal',
      description => q(%s: Can't open database (%s)),
    },
    CLOSE_DB => {
      level => 'warn',
      description => q(%s: Can't close database (%s)),
    },
    UNKNOWN => {
      level => 'fatal',
      description => 'Unknown error happend',
    },
);

package SomeDatabase;
sub open_database {
  open DB, $db_name
    or
  throw Exception1
    type => 'OPEN_DB',
    t => [$db_name, $!];
}

package main;
try {
  $db->open_database;
} catch Exception1 with {
      my ($err) = @@_;
      if ($err->level eq 'fatal') {
        die $err->message;
      } else {
        warn $err->message;
      }
};
]PRE]
@

