head	1.2;
access;
symbols
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.09.23.02.04.51;	author wakaba;	state dead;
branches;
next	1.1;

1.1
date	2003.06.28.10.15.09;	author make;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@
Perl で RFC 822/2822 mail address(es) fields (From: とか
To: とか。) を parse しようと思っても、(ありがちな処理ですから
あってしかるべきですが) 適当な module がみつかりません。

CPAN にあった幾つかの module を見たんですが、どれも、
group
  
  例: To: Administrators: webmaster@@suika.fam.cx,
                          postmaster <postmaster@@suika.fam.cx>,
                          "admin list" <admin@@suika.fam.cx>;

に対応してません。「Administrators:」とか変なメイルアドレス
があることになってしまいます。

まあ group は最近はあまり使われないようなので、
目をつぶるとして、それではこんなのが解釈できるのかというと、
できません。

  例: "Suika \"TESTERS\" list" <testers@@suika.fam.cx>

特殊な意味を持って使われる文字 (ここでは「"」) は
「\」で quote されていますが、ここから名前を取り出す
とき、返されるべき値は「Suika \"TESTERS\" list」
ではなく「Suika "TESTERS" list」です。これが出来てません。

Parse の逆の操作をさせても、

  名前: wakaba @@ suika
  アドレス: wakaba@@suika.fam.cx
  
  結果: wakaba @@ suika <wakaba@@suika.fam.cx>
  正解: "wakaba @@ suika" <wakaba@@suika.fam.cx>

なんてことになります。 (@@ は特別な意味を持つので、
"" で quote しないといけない。)

まったく、手抜き実装には困ったもんです。
(ほとんどラテンアルファベット52文字しか使わない
方々にはこれで十分なんでしょうけどね。上の
quote の例なんかは、仮名や漢字を扱う時に重大な意味を
持ってきます。つまり、上にあげたような状態では
使い物になりません。)

てことで、やっぱり自分で書かないといけないんだろうか。
なんだかなあ。(2002年3月12日)

てことで書いたのが、 Message::Field::Addresses
<http://suika.fam.cx/gate/cvs/perl/lib/Message/Field/Addresses.pm>
@


1.1
log
@auto-commited
@
text
@@

