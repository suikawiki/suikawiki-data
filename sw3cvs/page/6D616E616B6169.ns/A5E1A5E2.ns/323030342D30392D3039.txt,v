head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.09.13.02.04.41;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@[1] Manakai DOM 実装の[[グローブ]]・モデル (仮)

:界面 ManakaiDOMNodeObject:
すべての節が実装する界面。
DOM 実装外からはこの界面を通して操作しない。
:界面 ManakaiDOMNodeReference:
すべての節への参照が実装する界面。
DOM Core の [CODE(DOMi)[[[Node]]]] 界面などを実装する物体は、
すべてこの界面を実装する。
DOM 実装外からはこの界面を通して操作しない。

:グローブ:木の重なり + 任意の参照関係
:木:特定の起点特性と部分節特性の組による対称グラフ。
ただし、起点特性をたどると唯一の根に到達するし、
子供特性をたどると葉に到着する。節は1つ以上。
(例: 「親」特性と「子供」特性によって結ばれた節の集合。)
:木の重なり:一部又は全部の節を共有する木の集合。
ただし、ある木で先祖にある節が別の木で子孫に来ることはない。
:起点特性:木の親 (根) 方向に隣接する節を値とする特性。
:部分節特性:木の子 (葉) 方向に隣接する節を値とする特性。
:内部参照節特性:起点・部分節以外で、専ら同じグローブの節を値とする特性。
:無制限参照節特性:任意のグローブの節を値とする特性。
:任意データ特性:任意の値を取る特性。
:木識別子:グローブに与えられる固有識別子。
:節識別子:節に与えられる固有識別子。

[2] 想定している利用法の例:
:起点特性:親、(属性の) 所有者など
:部分節特性:子供、属性など
:内部参照節特性:宣言と実現値の参照など

[3] 起点特性と部分節特性は、
節物体を破壊する時にグローブ内部の相互参照関係を順次破棄するための種別です。
根だけのグローブ以外では、必ずすべての節が起点特性または部分節特性でつながっていなければなりません。
また、すべての節が同じ木識別子を持っていなければなりません。
逆に、同じ木識別子の節は同じグローブに属さなければなりません。

内部参照節・無制限参照節特性・任意データ特性は、
節物体を破壊する時に破棄されますが、
それを伝って値である節に破棄が伝播することはありません。

[4] なんとなく一部 [[ISO/IEC 10744]] っぽい用語にしてみましたが、
10744 の用語とは必ずしも意味が一致しません。@
