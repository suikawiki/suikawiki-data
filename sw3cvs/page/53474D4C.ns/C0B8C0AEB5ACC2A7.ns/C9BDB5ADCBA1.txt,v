head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.2
date	2003.06.28.10.14.59;	author make;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.46;	author make;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-commited
@
text
@#?SuikaWiki/0.9
[1] [[SGML]] の[[抽象構文]][[生成規則]]の表記法
([[JISX4151]]‐1992 第4章) について。

この表記法は、「SGML の一部ではない」とされていますが、
[[内容モデル]]の表記法と実質同じです。

[[BNF]] と少し似てはいますが、色々違うところがあります。

-[2] 生成規則 = 構文変数 "=" 式
--生成規則の SGML 規格本体での表記 = 生成規則 "―" "(" 参照番号 ")"
--生成規則の SGML 附属書での表記 = "[" 参照番号 "]" 生成規則
-[3] 参照番号 = 1*DIGIT ["." 1*DIGIT]
-[4] 式 = 1*(構文字句 / 括弧で括った式 / 演算記号)
--[9] (厳密な定義) = 項 *(接続演算子 項)
-[5] 構文字句 = 構文変数 / 構文定数 / 区切子機能 / 終端変数 / 終端定数
-[6] 演算記号 = 接続演算子 / 接尾演算子
-[7] 接続演算子 = "," / "&" / "|"
-[8] 接尾演算子 = "+" / "*" / "?"
-[10] 括弧で括った式 = "(" 式 ")"
-[11] 項 = (構文字句 / 括弧で括った式) [接尾演算子]
-[12] 構文定数 = "“" 1*CHAR "”" / "”" 1*CHAR "”" / <"> 1*CHAR <">
--構文で''定義される値''の大文字・小文字の区別は、規格及び [[SGML宣言]]の定義による。
-''構文''内には、[CODE(ABNF)[[[FWS]]]] が適宜挿入される。
-[CODE(ABNF)[構文変数]]には [CODE(ABNF)[WSP]] が入ることもある。

- [13] [[JISX4172]] も使ってます。
@


1.1
log
@auto-commited
@
text
@d27 1
@

