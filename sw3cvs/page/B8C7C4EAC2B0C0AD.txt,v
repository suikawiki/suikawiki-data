head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2004.05.31.02.04.32;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.27.02.03.13;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] 
>
:固定属性 (fixed attribute):
[[指定値]] (もしあれば) が[[省略時値]]と同じでなければならない[[属性]]。
([[JIS X 4151]]‐1992 3. (93) を参照。)

ここで[Q[指定値]]とは、[[属性指定]]によって指定した値のことです。

[2] 例えば [SAMP(SGML)[<![[ATTLIST]] foo bar [[CDATA]] #[[FIXED]] "baz">]] 
と定義すると、 [CODE(SGML)[foo]] 要素の [CODE(SGML)[bar]] 属性は、
省略しない場合には必ず [CODE(SGML)[baz]] という値でなければならないことになります。

[3] ある一つの決まった値しか取れないとすると、
属性として存在する意義が疑わしく思われるかもしれません。
固定属性が使われる主たる用途の一つは、宣言的な属性です。

例えば、ある [[XML文書]]で、出現するすべての [SAMP(XMLe)[a]]
要素は [[XML名前空間]] [SAMP(URI)[http://foo.example/]]
に属しているとします。他の名前空間も混在している場合、
何度か [CODE(XMLa)[[[xmlns]]]] 属性を指定する必要がありますが、
[PRE(XML)[
<!ATTLIST a xmlns %URI.datatype; #FIXED "http://foo.example/">
]PRE]
と[[文書型定義]]の[[内部部分集合]]に書いておけば、
その手間が省けます。

固定属性はあまり使いどころは多くありませんし、 [[XML]]
では[[妥当性を検証しない]][[処理器]]があるので注意が必要ですが、
正しく使えばマーク付けの効率が上がる・・・かもしれません。
@


1.1
log
@auto-committed
@
text
@d2 5
a6 1
[1] [[指定値]] (もしあれば) が[[既定値]]と同じでなければならない[[属性]]。 Fixed attribute。 [[JISX4151]]‐1992 3. (93) 参照。
d8 23
a30 1
- [2] 例えば [SAMP(SGML)[<![[ATTLIST]] foo bar [[CDATA]] #[[FIXED]] "baz">]] と定義すると、 [CODE(SGML)[foo]] 要素の [CODE(SGML)[bar]] 属性は、省略しない場合には必ず [CODE(SGML)[baz]] という値でなければならないことになります。
@

