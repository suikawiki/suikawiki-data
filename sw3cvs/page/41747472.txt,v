head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.3
date	2007.07.13.02.35.56;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.23.02.06.16;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.16;	author make;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@

* Attr 節・Attr 界面 (DOM)

[1] [[DOM1]] で[RUBYB[属性節] [[CODE(DOM)[Attr]] node]]が持つことが出来る子[[節]]の種類は、
[[Text]] と [[EntityReference]] の2種類です。

[2] [[DOM]] の文書木・節モデルの中では、[[属性]]はやや特殊な位置づけになっています。
- [CODE(DOM)[Attr]] 節は、文書木の中には現れません。
- 親節・兄弟節はありません。 (取出す method の結果は [CODE(DOM)[null]]。)
- [[DTD]] で既定値が宣言されている場合には、その要素の属性値が明示されていない場合に常にその既定値が設定されていることとなります。
- [CODE(DOM)[[[DocumentFragment]]]] 節の直接の子要素にはできません。
- [CODE(DOMattr)[[[nodeValue]]]] では属性値文字列が、 [CODE(DOMa)[[[childNodes]]]] では [CODE(DOM)[[[Text]]]] 節及び [CODE(DOM)[[[EntityReference]]]] 節の組合せによる属性値の表現が得られます。

[3] [CODE(DOMi)[[[Node]]]] を継承して、
,読取専用属性	,[CODE(DOMa)[[[name]]]]	,名前	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[specified]]]]	,指定されているか	,[DOM1]
,属性	,[CODE(DOMa)[[[value]]]]	,値	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[ownerElement]]]]	,親要素節	,[DOM2]

- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-637646024>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-637646024>
- [4] 親節になれるのは [CODE(DOM)[[[Element]]]] 節だけです。
- [5] DOM 1 は、属性の型は分からないかもしれないから字句化値を扱う機能は提供しないといっています。ですから、例えば [CODE(XML)[IDREFS]] 型属性値の3番目の [CODE(XML)[ID]] を取り出したい、という場合には、属性値全体を受け取ってそれを勝手に解析する必要があります。

[6]
[CODE(DOMi)[Attr]] 節点の子孫である [CODE(DOMi)[[[EntityReference]]]] 節点の子供は
[CODE(DOMi)[[[EntityReference]]]] または
[CODE(DOMi)[[[Text]]]] しか認められない・・・はずですが、
[[DOM]] の仕様書にはそんなこと一言も書いてないな。

([[名無しさん]])


[7]
[[DOM]] の仕様書には [CODE(DOMi)@@en[[[Attr]]]]
は他の種類の [CODE(DOMi)@@en[[[Node]]]] とは違って
[CODE(DOMi)@@en[[[Element]]]] と切り離せないものだとかなんとか説明がありますが、
それでいてなぜか [CODE(DOMi)@@en[[[Attr]]]]
が単独で存在できたりします。
それ自体は値を持たずに[[子孫]]がいたり。

([[名無しさん]])


[[#comment]]


* メモ@


1.2
log
@auto-committed
@
text
@a2 1

d27 15
a41 4
[CODE(DOMi)[Attr]] 節点の子孫である [CODE(DOMi)[[[EntityReference]]]] 節点の子供は
[CODE(DOMi)[[[EntityReference]]]] または
[CODE(DOMi)[[[Text]]]] しか認められない・・・はずですが、
[[DOM]] の仕様書にはそんなこと一言も書いてないな。
d44 1
@


1.1
log
@auto-commited
@
text
@d1 38
a38 26
#?SuikaWiki/0.9
*Attr 節・Attr 界面 (DOM)

[1] [[DOM1]] で[RUBYB[属性節] [[CODE(DOM)[Attr]] node]]が持つことが出来る子[[節]]の種類は、
[[Text]] と [[EntityReference]] の2種類です。

[2] [[DOM]] の文書木・節モデルの中では、[[属性]]はやや特殊な位置づけになっています。
-[CODE(DOM)[Attr]] 節は、文書木の中には現れません。
-親節・兄弟節はありません。 (取出す method の結果は [CODE(DOM)[null]]。)
-[[DTD]] で既定値が宣言されている場合には、その要素の属性値が明示されていない場合に常にその既定値が設定されていることとなります。
-[CODE(DOM)[[[DocumentFragment]]]] 節の直接の子要素にはできません。
-[CODE(DOMattr)[[[nodeValue]]]] では属性値文字列が、 [CODE(DOMa)[[[childNodes]]]] では [CODE(DOM)[[[Text]]]] 節及び [CODE(DOM)[[[EntityReference]]]] 節の組合せによる属性値の表現が得られます。

[3] [CODE(DOMi)[[[Node]]]] を継承して、
,読取専用属性,[CODE(DOMa)[[[name]]]]   ,名前            ,[DOM1]
,読取専用属性,[CODE(DOMa)[[[specified]]]],指定されているか,[DOM1]
,属性        ,[CODE(DOMa)[[[value]]]]  ,値              ,[DOM1]
,読取専用属性,[CODE(DOMa)[[[ownerElement]]]],親要素節   ,[DOM2]

-[DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-637646024>
-[DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-637646024>
- [4] 親節になれるのは [CODE(DOM)[[[Element]]]] 節だけです。
- [5] DOM 1 は、属性の型は分からないかもしれないから字句化値を扱う機能は提供しないといっています。ですから、例えば [CODE(XML)[IDREFS]] 型属性値の3番目の [CODE(XML)[ID]] を取り出したい、という場合には、属性値全体を受け取ってそれを勝手に解析する必要があります。
[[#comment]]

*メモ@

