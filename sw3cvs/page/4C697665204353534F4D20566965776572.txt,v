head	1.5;
access;
symbols
	suikawiki3-final:1.5;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2008.09.18.03.02.36;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.18.02.36.38;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.31.02.36.58;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.27.03.00.51;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2007.05.13.02.35.34;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.5
log
@auto-committed
@
text
@
[1]  
The [CITE@@en[Live [[[ABBR@@en[CSSOM] [Cascading Style Sheets Object Model]]]] Viewer]]
<http://suika.fam.cx/gate/2007/cssom/viewer>
visualizes how Web browsers interpret CSS
style sheets and expose them into their object hierarchy.
It is obviously inspired by [[Ian Hickson]]'s [[Live DOM Viewer]]
for HTML documents.


* Description


** Style sheet to test

The CSS style sheet to test.  As you input something to this box,
the following boxes are updated automatically.


** [ABBR@@en[CSSOM] [Cascading Style Sheets Object Model]] View

This box shows the object hierarchy of the 
[ABBR@@en[CSSOM] [Cascading Style Sheets Object Model]] created
from the style sheet input to the first box.

Since [[WinIE]] implements their own object model, 
what is shown in this box in [[WinIE]] is slight
different from those in other browsers.


** [CODE(DOMa)@@en[cssText]] View

This box shows the textual serialization of 
the CSS style sheet once parsed by the browser.

Browsers other than [[WinIE]], i.e. browsers implementing only
the standard [ABBR@@en[CSSOM] [Cascading Style Sheets Object Model]],
have no method to serialize the entire style sheet.
For such browsers the [CODE(DOMa)@@en[cssText]] field
shows the concatenation of [CODE(DOMa)@@en[[[cssText]]]]
values for the rules contained in the 
[CODE(DOMa)@@en[[[cssRules]]]] list of the style sheet.


** Rendered document view

An HTML document is rendered in this box with the specified 
CSS style sheet.


** HTML body fragment to test

Input the [CODE(HTMLe)@@en[[[body]]]] part of the HTML document
rendered in the box above.  Any HTML construct can be used.
Note, however, that the value is set to the [CODE(DOMa)@@en[[[innerHTML]]]] attribute
of the [CODE(HTMLe)@@en[[[body]]]] element of the rendered
document, therefore any [CODE(HTMLe)@@en[[[script]]]] element
in the fragment is not executed.

Following the box, there are three radio buttons:
[Q@@en[no quirks]], [Q@@en[limited quirks]], and [Q@@en[quirks]].
These buttons select how HTML documents are parsed and
how CSS style sheets are interpreted.


** Log

This box shows any message generated for the ease of testing.
The script puts a JavaScript function [CODE(JS)@@en[w ([VAR@@en[s]])]]
into the global scope of the rendered document, where [VAR@@en[s]]
is the string to output to the box.  You can invoke the function
in the rendered HTML document or CSS style sheet.

'''Warning'''. Invoking the function [CODE(JS)@@en[w ([VAR@@en[s]])]]
in the CSS function [CODE(CSS)@@en[[[expression]]()]] might make
IE unstable.


* External resource

A file [CODE(URI)@@en[image]] (a PNG image) is accessible in the same
directory as the [[Live CSSOM Viewer]].  It can be used for testing.


* Tested browsers

- [[Firefox]] 2
- [[Opera]] 9
- [[WinIE]] 6 (on [[Windows XP]] [[SP2]])


* TODOs

- Alternate parsing mode, such as style="", cssText = ""


* memo

[2]
An example to test [[CSSOM]] attributes using
functions [CODE(JS)@@en[sd()]] and [CODE(JS)@@en[u()]]:
<http://suika.fam.cx/gate/2007/cssom/viewer?c=p%7B%7D;h=%3Cinput%20type%3Dbutton%20value%3Dx%20onclick%3D%22%0A%20%20try%20%7B%0A%20%20%20%20sd%20().border%20%3D%20'2px%20solid%20blue'%3B%0A%20%20%7D%20catch%20(e)%20%7B%0A%20%20%20%20w%20(e.message%20%7C%7C%20e)%3B%0A%20%20%7D%0A%20%20u%20()%3B%0A%22%3E%0A%0A%3Cp%3EXXXXX%3C%2Fp%3E;p=n;x=style-element>
([[名無しさん]])

[3]
It now supports the XML parse mode:
<http://suika.fam.cx/gate/2007/cssom/viewer?c=p%20%7Bcolor%3A%20green%7D%0AP%20%7Bcolor%3A%20red%7D;h=%3Cp%3Esmall%20%26lt%3Bp%3E%3C%2Fp%3E%0A%3CP%3ECAPITAL%20%26lt%3BP%3E%3C%2FP%3E;p=x;x=style-element>

([[名無しさん]] [WEAK[2008-01-13 13:09:06 +00:00]])

[4]
'''NOTE''': In Opera 9.52, the [CODE(DOMa)@@en[[[cssText]]]] attribute does not return
the reserialized form of the CSSOM object for the [[HTML]] or [[SVG]]
[CODE(XMLa)@@en[[[style]]]] attributes.  For more information, see
<http://suika.fam.cx/gate/2005/sw/style#anchor-81>.
([[名無しさん]])

@


1.4
log
@auto-committed
@
text
@d106 2
a107 2
It now supports the XML parse mode:
<http://suika.fam.cx/gate/2007/cssom/viewer?c=p%20%7Bcolor%3A%20green%7D%0AP%20%7Bcolor%3A%20red%7D;h=%3Cp%3Esmall%20%26lt%3Bp%3E%3C%2Fp%3E%0A%3CP%3ECAPITAL%20%26lt%3BP%3E%3C%2FP%3E;p=x;x=style-element>
d110 7
@


1.3
log
@auto-committed
@
text
@d100 2
a101 2
An example to test [[CSSOM]] attributes using
functions [CODE(JS)@@en[sd()]] and [CODE(JS)@@en[u()]]:
d104 6
@


1.2
log
@auto-committed
@
text
@d1 104
a104 85
[1]  
The [CITE@@en[Live [[[ABBR@@en[CSSOM][Cascading Style Sheets Object Model]]]] Viewer]]
<http://suika.fam.cx/gate/2007/cssom/viewer>
visualizes how Web browsers interpret CSS
style sheets and expose them into their object hierarchy.
It is obviously inspired by [[Ian Hickson]]'s [[Live DOM Viewer]]
for HTML documents.

* Description

** Style sheet to test

The CSS style sheet to test.  As you input something to this box,
the following boxes are updated automatically.

** [ABBR@@en[CSSOM][Cascading Style Sheets Object Model]] View

This box shows the object hierarchy of the 
[ABBR@@en[CSSOM][Cascading Style Sheets Object Model]] created
from the style sheet input to the first box.

Since [[WinIE]] implements their own object model, 
what is shown in this box in [[WinIE]] is slight
different from those in other browsers.

** [CODE(DOMa)@@en[cssText]] View

This box shows the textual serialization of 
the CSS style sheet once parsed by the browser.

Browsers other than [[WinIE]], i.e. browsers implementing only
the standard [ABBR@@en[CSSOM][Cascading Style Sheets Object Model]],
have no method to serialize the entire style sheet.
For such browsers the [CODE(DOMa)@@en[cssText]] field
shows the concatenation of [CODE(DOMa)@@en[[[cssText]]]]
values for the rules contained in the 
[CODE(DOMa)@@en[[[cssRules]]]] list of the style sheet.

** Rendered document view

An HTML document is rendered in this box with the specified 
CSS style sheet.

** HTML body fragment to test

Input the [CODE(HTMLe)@@en[[[body]]]] part of the HTML document
rendered in the box above.  Any HTML construct can be used.
Note, however, that the value is set to the [CODE(DOMa)@@en[[[innerHTML]]]] attribute
of the [CODE(HTMLe)@@en[[[body]]]] element of the rendered
document, therefore any [CODE(HTMLe)@@en[[[script]]]] element
in the fragment is not executed.

Following the box, there are three radio buttons:
[Q@@en[no quirks]], [Q@@en[limited quirks]], and [Q@@en[quirks]].
These buttons select how HTML documents are parsed and
how CSS style sheets are interpreted.

** Log

This box shows any message generated for the ease of testing.
The script puts a JavaScript function [CODE(JS)@@en[w ([VAR@@en[s]])]]
into the global scope of the rendered document, where [VAR@@en[s]]
is the string to output to the box.  You can invoke the function
in the rendered HTML document or CSS style sheet.

'''Warning'''. Invoking the function [CODE(JS)@@en[w ([VAR@@en[s]])]]
in the CSS function [CODE(CSS)@@en[[[expression]]()]] might make
IE unstable.

* External resource

A file [CODE(URI)@@en[image]] (a PNG image) is accessible in the same
directory as the [[Live CSSOM Viewer]].  It can be used for testing.

* Tested browsers

- [[Firefox]] 2
- [[Opera]] 9
- [[WinIE]] 6 (on [[Windows XP]] [[SP2]])

* TODOs

- Alternate parsing mode, such as style="", cssText = ""

* memo
@


1.1
log
@auto-committed
@
text
@d13 2
a14 3
Write a CSS style sheet to test here.
Following fields are automatically updated
as you input something to this field.
d18 3
a20 2
This field shows the [ABBR@@en[CSSOM][Cascading Style Sheets Object Model]]'s
object hierarchy.
d23 2
a24 2
what is shown in this field in [[WinIE]] is slight
different from other browsers.
d28 1
a28 1
This field shows the textual serialization of 
d39 36
d77 1
a77 1
- [[Firefox]] 1.5
d83 1
a83 2
- Permalink
- style=""
@

