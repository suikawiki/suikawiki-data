head	1.8;
access;
symbols
	suikawiki3-final:1.8
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;
expand	@b@;


1.8
date	2007.07.08.02.42.18;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.13.02.16.01;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.08.02.05.35;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.08.02.05.23;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.23.02.05.27;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.18.02.05.37;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.18.02.03.30;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.13.02.02.15;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.8
log
@auto-committed
@
text
@

* enctype 属性 (HTML, XHTML 1, WML)

[3] [[HTML]] の [CODE(HTMLe)[[[form]]]] 要素および
[[WML]] の [CODE(XMLe)[[[go]]]] 要素の
[DFN[[CODE(HTMLa)[enctype]] 属性]]は、
フォーム・データを[[提出]]する際の[[媒体型]]を指定します。

[24]
:状態:[[W3C]] [[勧告]]、[[WHATWG]] [[WD]]
:[[要素型]]:
[CODE(HTMLe)@@en[[QN[[[form]]] [http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[input]]] [http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[button]]] [http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[submit]]]])、
[CODE(XMLe)@@en[[[go]]]]
:[[属性名]]:[CODE(HTMLa)@@en[[[enctype]]]]
([Q@@en[encoding type]] ([Q[符号化型]]) より?)
:[[属性値]]:[[媒体型]] (>>4)
:[[既定値]]:[CODE(MIME)@@en[[[application/x-www-urlencoded]]]]
(>>19)

[18] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- [CODE(HTMLe)[form]] 要素 [CODE(HTMLa)[enctype]] 属性
<IW:HTML4:"interact/forms.html#adef-enctype">
-- [CITE[17.13.4 Form content types]]
<IW:HTML4:"interact/forms.html#form-content-type">
- [[WML]] <http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf>
-- 9.5.1
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.17. Extensions to the submit buttons]]
<IW:WF2:"#extensions3">


** 属性値

[4] この属性の値は [CODE(SGML)[%[[ContentType]]]] です。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[19] この属性は省略可能です。省略時の既定値は
[CODE(MIME)[[[application/x-www-form-urlencoded]]]] です。

[16]
ファイル送信 ([CODE(HTMLe)[[[input]]]] [CODE(HTMLa)[[[type]]]]
[CODE(HTML)[[[file]]]]) を使用する時には、
[CODE(MIME)[[[multipart/form-data]]]] を使うべきです [SRC[HTML 4 17.3]]。

提出データが非 [[US-ASCII]] 値を含む場合には [CODE(MIME)[[[multipart/form-data]]]]
を使うことが[RUBYB[推奨] [recommend]]されています [SRC[WML 9.5.1]]。

[[#comment]]


** UA による利用

[20] [[フォーム]]を [CODE(HTMLa)[[[method]]]] [CODE(HTTP)[[[POST]]]]
で[[提出]]するときに、
フォーム処理エージェントに[[フォーム・データ集合]]を渡すための書式に
[CODE(HTMLa)[enctype]] で指定したものが使われます。

詳しくはフォームの[[提出]]の説明を参照してください。

[[#comment]]


** 歴史

[24]
[[Web Forms 2.0]] で [CODE(HTMLe)@@en[[[input]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])
と [CODE(HTMLe)@@en[[[button]]]] ([CODE(HTMLe)@@en[[[submit]]]])
に追加されました。

[[#comment]]


** 他との関係

[21] [CODE(HTMLa)[enctype]] 属性の値として媒体型の引数
[CODE(MIME)[[[charset]]]] を指定することが、
1990年代中後期にはしばしばなされました。
例えば、 [SAMP(HTML)[enctype="text/plain;charset=iso-2022-jp"]]
という指定は、[[平文]]を [CODE(charset)[[[ISO-2022-JP]]]]
で符号化して提出することを要求しています。

[[RFC 2070]] や [[HTML 4]] で [CODE(HTMLa)[[[accept-charset]]]]
属性が導入されてからは、このような指定は見られなくなりました。

[22] [CODE(HTMLa)[enctype]] 属性の指定が使われるか、
あるいは (仕様・実装上) 使えるかは、 [CODE(HTMLa)[[[action]]]]
や [CODE(HTMLa)[[[method]]]] など他の提出方法の指定の組合せに強く依存しています。
特に、定義上 HTML 4 では [CODE(HTMLa)[enctype]] が適用されるのは
[CODE(HTMLa)[method]] が [CODE(HTML)[[[post]]]] の時だけとなっています
[SRC[HTML 4 17.3]]。

[23] さまざまな仕様・実装・文書でどのような [CODE(HTMLa)[enctype]]
媒体型が使用されてきたかについては、フォームの[[提出]]の説明をご覧ください。

[[#comment]]


** メモ

[25]
[CITE@@ja[詳細検索:hhstyle.com]] ([TIME[2007-07-04 20:13:50 +09:00]] 版) <http://www.hhstyle.com/cgi-bin/omc?port=33311&sid=U1183523431HVAOZ579J&req=CATEGORY_SEARCH>

>
[PRE(HTML invalid example code)[
<form action="http://www.hhstyle.com/cgi-bin/omc?port=33311&sid=U1183547646GP8UGLVHP&req=SEARCH" enctype="x-www-form-urlencoded" method="post">
]PRE]

同じ頁内に他にも1箇所。
([[名無しさん]])


[[#comment]]


* メモ@


1.7
log
@auto-committed
@
text
@d1 122
a122 103
* enctype 属性 (HTML, XHTML 1, WML)

[3] [[HTML]] の [CODE(HTMLe)[[[form]]]] 要素および
[[WML]] の [CODE(XMLe)[[[go]]]] 要素の
[DFN[[CODE(HTMLa)[enctype]] 属性]]は、
フォーム・データを[[提出]]する際の[[媒体型]]を指定します。

[24]
:状態:[[W3C]] [[勧告]]、[[WHATWG]] [[WD]]
:[[要素型]]:
[CODE(HTMLe)@@en[[QN[[[form]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[input]]][http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[button]]][http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[submit]]]])、
[CODE(XMLe)@@en[[[go]]]]
:[[属性名]]:[CODE(HTMLa)@@en[[[enctype]]]]
([Q@@en[encoding type]] ([Q[符号化型]]) より?)
:[[属性値]]:[[媒体型]] (>>4)
:[[既定値]]:[CODE(MIME)@@en[[[application/x-www-urlencoded]]]]
(>>19)

[18] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- [CODE(HTMLe)[form]] 要素 [CODE(HTMLa)[enctype]] 属性
<IW:HTML4:"interact/forms.html#adef-enctype">
-- [CITE[17.13.4 Form content types]]
<IW:HTML4:"interact/forms.html#form-content-type">
- [[WML]] <http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf>
-- 9.5.1
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.17. Extensions to the submit buttons]]
<IW:WF2:"#extensions3">


** 属性値

[4] この属性の値は [CODE(SGML)[%[[ContentType]]]] です。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[19] この属性は省略可能です。省略時の既定値は
[CODE(MIME)[[[application/x-www-form-urlencoded]]]] です。

[16]
ファイル送信 ([CODE(HTMLe)[[[input]]]] [CODE(HTMLa)[[[type]]]]
[CODE(HTML)[[[file]]]]) を使用する時には、
[CODE(MIME)[[[multipart/form-data]]]] を使うべきです [SRC[HTML 4 17.3]]。

提出データが非 [[US-ASCII]] 値を含む場合には [CODE(MIME)[[[multipart/form-data]]]]
を使うことが[RUBYB[推奨][recommend]]されています [SRC[WML 9.5.1]]。

[[#comment]]

** UA による利用

[20] [[フォーム]]を [CODE(HTMLa)[[[method]]]] [CODE(HTTP)[[[POST]]]]
で[[提出]]するときに、
フォーム処理エージェントに[[フォーム・データ集合]]を渡すための書式に
[CODE(HTMLa)[enctype]] で指定したものが使われます。

詳しくはフォームの[[提出]]の説明を参照してください。

[[#comment]]

** 歴史

[24]
[[Web Forms 2.0]] で [CODE(HTMLe)@@en[[[input]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])
と [CODE(HTMLe)@@en[[[button]]]] ([CODE(HTMLe)@@en[[[submit]]]])
に追加されました。

[[#comment]]

** 他との関係

[21] [CODE(HTMLa)[enctype]] 属性の値として媒体型の引数
[CODE(MIME)[[[charset]]]] を指定することが、
1990年代中後期にはしばしばなされました。
例えば、 [SAMP(HTML)[enctype="text/plain;charset=iso-2022-jp"]]
という指定は、[[平文]]を [CODE(charset)[[[ISO-2022-JP]]]]
で符号化して提出することを要求しています。

[[RFC 2070]] や [[HTML 4]] で [CODE(HTMLa)[[[accept-charset]]]]
属性が導入されてからは、このような指定は見られなくなりました。

[22] [CODE(HTMLa)[enctype]] 属性の指定が使われるか、
あるいは (仕様・実装上) 使えるかは、 [CODE(HTMLa)[[[action]]]]
や [CODE(HTMLa)[[[method]]]] など他の提出方法の指定の組合せに強く依存しています。
特に、定義上 HTML 4 では [CODE(HTMLa)[enctype]] が適用されるのは
[CODE(HTMLa)[method]] が [CODE(HTML)[[[post]]]] の時だけとなっています
[SRC[HTML 4 17.3]]。

[23] さまざまな仕様・実装・文書でどのような [CODE(HTMLa)[enctype]]
媒体型が使用されてきたかについては、フォームの[[提出]]の説明をご覧ください。

[[#comment]]

** メモ

[[#comment]]

* メモ
@


1.6
log
@auto-committed
@
text
@d8 15
d31 3
a34 1
[[#comment]]
d62 10
@


1.5
log
@auto-committed
@
text
@a0 1

d12 2
a43 4
しかしながら、古い時代に引数も含めた用例は確認されています。
([SAMP[enctype="text/plain;charset=iso-2022-jp"]]。
[WEAK[この場合、 HTML 4 的には [CODE(HTMLa)[[[accept-charset]]]] 属性を使用します。]])

d48 1
a48 25
** メモ

[[#comment]]


* 実装または用例が確認されている媒体型


** application/x-www-form-urlencoded

[8] 媒体型 [DFN[[CODE(MIME)[[[application/x-www-form-urlencoded]]]]]]
は [CODE(HTMLa)[enctype]] 属性の既定値です。

伝統的に [CODE(HTMLe)[form]] 要素を埋めて提出する際に使用されてきた形式であり、
古い [ABBR[[[UA]]] [[[利用者エージェント]]]] はこの形式にしか対応していません。
HTML 4 はこの形式を実装することを UA に要求しています。 (17.13.4 参照。)

[[CGIスクリプト]]などのサーバー側の処理系は、ほとんどがこの媒体型にのみ対応しています。
[WEAK[ひどいことに、何が送られて来ようがこの媒体型とみなしてしまう実装がかなり多い。]]

[9] 規格上は [[US-ASCII]] しか送れないとか色々あります。詳しくは
[CODE(WikiPage)[[[application/x-www-form-urlencoded]]]] を参照。

[[#comment]]

d50 16
a65 1
** multipart/form-data
d67 2
a68 31
[11] ファイルの[[うp]]機能のために広く実装されることとなったのが
[DFN[[CODE(MIME)[[[multipart/form-data]]]]]] です。 [[MIME]] 
の[[多部分]]機構を使っているので、 (仕様上は) MIME 
で扱うことができるあらゆる種類のデータを表現できます。

この形式の使用は、 US-ASCII しか安全に送れないという
[CODE(MIME)[application/x-www-form-urlencoded]] の問題に対する解答に (仕様上は)
なっています。

[10] HTML 4 は [[UA]] にこの形式の実装を要求しています (17.13.4 参照。)

実際現代のほとんどの [[WWWブラウザ]]はこの形式を実装しています。

一方、 CGI スクリプトなどのサーバー側は酷い状況です。 >>8 にあるように、
多くの実装は相手にもしていません。 [[Perl]] なら [[CGI.pm]] 
などを使えば自動的に対応できますが、[WEAK[最近は増えてきたとはいえ]]モジュールを
CGI スクリプトで使うことは少なく、 [CODE(MIME)[application/x-www-form-urlencoded]]
にしか対応していません。ファイルのうpがしたくなったら 
(素直にモジュールを使えばいいのに) 見よう見まねで適当に対処しようとして、
結局特定ブラウザの特定の版でしか上手く動かないようなコードを書いてみたり。
[WEAK[(で、質問掲示板で暴れてみたり。)]] お前らちゃんと仕様書読んでくださいよ。

処理系で標準または標準に近いモジュール的なものが[[要求]]の解析をしてくれることが広く知られていて、
そのモジュール的なものの作者がちゃんと仕様を読んでコードを書くような人なら、
その処理系で書かれた処理はさほど深く考えなくても自動的に 
[CODE(MIME)[multipart/form-data]] を正しく処理できるはずです。
[WEAK[よく知りませんけど、 Java servelet とか PHP はその辺きちんとしてるのではないですか?]]

[6] [CODE(HTML)[[CODE(HTMLa)[[[tipe]]]]="[[file]]"]] の [CODE(HTMLe)[[[input]]]] 
要素があるフォームでは、この値である必要があります。 
(<IW:HTML4:"interact/forms.html#h-17.3"> 参照。)
a69 2
- [13] 1つの form[type=file] 要素を使って複数ファイルをうpする ([[multipart/mixed]] 使用。) のは、 [[UA]] で対応してるのはなさげ、サーバーもおそらく全滅だろうという感じですね。 [[www-html]] で [[Opera]] の特定の版では出来るという未確認情報がありますが、最新版では出来ないらしいし、勘違いかなんかじゃないかなあ。
- [15] WinIE 3.02 用の file upload add-on は1997年の中ごろに出ました。
d72 1
a72 50

** text/plain

[7] 幾つかの実装は、 [DFN[[CODE(MIME)[[[text/plain]]]]]] に対応しています。
主として、 [CODE(HTMLa)[[[action]]]] が [CODE(URI)[[[mailto]]:]] URI scheme
であるときに使われます。

古くは、 [SAMP(HTMLa)[[[text/plain]]; charset=iso-2022-jp]]
のように [CODE(MIME)[[[charset]]]] 引数をつけた値も使われていました。

[[#comment]]


** application/sgml-form-urlencoded

[12] [DFN[[CODE(MIME)[[[application/sgml-form-urlencoded]]]]]]
は、ほぼ [CODE(MIME)[application/x-www-form-urlencoded]]
と同じですが、 [CODE[&]] の代わりに [CODE[;]] を使います。

[[URI参照]]の一部 (特に [CODE(ABNF)[[[query]]]] 部) で [CODE(URI)[&]]
を使うことはよくありますが、 HTML 内に記述する場合は [CODE(HTML)[&[[amp]];]]
とする必要があるかもしれません。これを嫌って [CODE(URI)[;]]
を使うことをよしとする向きもあります。 (HTML 4 もこれを推奨しています。)
[CODE(HTTP)[[[POST]]]] で送られるときには URI と関係しないので無関係ではありますが、
一貫性のためにどちらも変えてしまうのがいいかもしれません。
というわけで登場するのがこの媒体型です。

[14] [[Lynx]] がこれを実装しています。

また、CGI スクリプトなどのサーバー側の実装でも新し目のものであれば、
[CODE(MIME)[application/x-www-form-urlencoded]] の処理で [CODE(URI)[&]]
と [CODE(URI)[;]] を同一視することで[WEAK[意図するしないはともかく]]対応していることもあります。

[[#comment]]


** application/vnd.wap.multipart.form-data

[17] [CODE(MIME)[multipart/form-data]] のバイナリ表現として、 [[WAP]] で
[DFN[[CODE(MIME)[[[application/vnd.wap.multipart.form-data]]]]]]
が定義されています。

WML (<http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf>
9.5.1) は、 [CODE(WMLe)[go]] 要素の [CODE(WMLa)[enctype]] 属性が
''[CODE(MIME)[multipart/form-data]]'' のときに、 UA
が [CODE(MIME)[application/vnd.wap.multipart.form-data]]
で送ることを推奨 (recommend) しています。
([[WSP]] でバイナリ表現で送っても、 [[HTTP]] の世界との関門
([[WAP串]]) で標準のテキスト表現に変換されます。から、 HTTP
世界では [CODE(MIME)[multipart/form-data]] で送られてきたように見えます。)
a75 6

** その他

[[#comment]]


a76 3

- [1] [WEAK[2003-10-12 12:52:32 +00:00]] ''[[名無しさん]]'': 手元の Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.4) Gecko/20030624 で試してみたら、 [CODE(MIME)[[[application/x-www-form-urlencoded]]]] と [CODE(MIME)[[[text/plain]]]] と [CODE(MIME)[[[multipart/form-data]]]] に対応していましたが、引数をつけたら全滅でした。
- [2] >>1 [[WinIE6]] と Win[[Opera]] 7.20 でも同様でした。但し Opera は [CODE(MIME)[text/plain]] に対応していない模様。@


1.4
log
@auto-committed
@
text
@d1 176
a176 178
#?SuikaWiki/0.9 page-icon="HTML"


* form 要素型 enctype 属性 (HTML, XHTML 1)

[3] [DFN[[CODE(HTMLa)[enctype]] 属性]]には、[CODE(HTMLa)[[[method]]]] 属性の値が [CODE(HTML)[[[post]]]] の際に使われる[[媒体型]]を指定します
(大文字・小文字を区別しない)。
(<IW:HTML4:"interact/forms.html#h-17.3">)

[4] 媒体型の引数を含めても良いのかは不明です。

[[HTML4]] の規定は曖昧ですが、含めてはいけないような臭いが漂っています。 ([CODE(HTML)[%[[ContentType]]]] 参照。)

しかしながら、古い時代に引数も含めた用例は確認されています。
([SAMP[enctype="text/plain;charset=iso-2022-jp"]]。
[WEAK[この場合、 HTML 4 的には [CODE(HTMLa)[[[accept-charset]]]] 属性を使用します。]])

[5] >>4 HTML4 は大文字・小文字を区別しないとしているが、パラメーター値の区別は定義依存だから、
HTML4 ではやっぱりパラメーターは含まれないのかも。


* go 要素 enctype 属性 (WML)

[16] [[WML]] の [CODE(WMLe)[[[go]]]] 要素でも、 HTML の
[CODE(HTMLe)[form]] 要素の場合と同じような意味を持つ [CODE(WMLa)[enctype]]
属性が定義されています。
既定値も同じです。
(<http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf> 9.5.1 参照。)

非 US-ASCII 値を含む場合には [CODE(MIME)[multipart/form-data]]
を使うことが推奨 (recommend) されています。

[18]
あああ
([[name]] [aaaa] [WEAK[2004-06-16 06:44:07 +00:00]])

[19]
あああ
([[name]] [aaaa] [WEAK[2004-06-16 06:44:10 +00:00]])

[20]
あああ
([[name]] [aaaa] [WEAK[2004-06-16 06:44:11 +00:00]])


[22]
aaa
([[aaa]] [aaa] [WEAK[2004-06-18 18:36:20 +00:00]])


[[#comment]]


* 実装または用例が確認されている媒体型


** application/x-www-form-urlencoded

[8] 媒体型 [DFN[[CODE(MIME)[[[application/x-www-form-urlencoded]]]]]]
は [CODE(HTMLa)[enctype]] 属性の既定値です。

伝統的に [CODE(HTMLe)[form]] 要素を埋めて提出する際に使用されてきた形式であり、
古い [ABBR[[[UA]]] [[[利用者エージェント]]]] はこの形式にしか対応していません。
HTML 4 はこの形式を実装することを UA に要求しています。 (17.13.4 参照。)

[[CGIスクリプト]]などのサーバー側の処理系は、ほとんどがこの媒体型にのみ対応しています。
[WEAK[ひどいことに、何が送られて来ようがこの媒体型とみなしてしまう実装がかなり多い。]]

[9] 規格上は [[US-ASCII]] しか送れないとか色々あります。詳しくは
[CODE(WikiPage)[[[application/x-www-form-urlencoded]]]] を参照。

[21]
aaaaあああ
([[名前]] [?] [WEAK[2004-06-16 06:45:03 +00:00]])

[[#comment]]


** multipart/form-data

[11] ファイルの[[うp]]機能のために広く実装されることとなったのが
[DFN[[CODE(MIME)[[[multipart/form-data]]]]]] です。 [[MIME]] 
の[[多部分]]機構を使っているので、 (仕様上は) MIME 
で扱うことができるあらゆる種類のデータを表現できます。

この形式の使用は、 US-ASCII しか安全に送れないという
[CODE(MIME)[application/x-www-form-urlencoded]] の問題に対する解答に (仕様上は)
なっています。

[10] HTML 4 は [[UA]] にこの形式の実装を要求しています (17.13.4 参照。)

実際現代のほとんどの [[WWWブラウザ]]はこの形式を実装しています。

一方、 CGI スクリプトなどのサーバー側は酷い状況です。 >>8 にあるように、
多くの実装は相手にもしていません。 [[Perl]] なら [[CGI.pm]] 
などを使えば自動的に対応できますが、[WEAK[最近は増えてきたとはいえ]]モジュールを
CGI スクリプトで使うことは少なく、 [CODE(MIME)[application/x-www-form-urlencoded]]
にしか対応していません。ファイルのうpがしたくなったら 
(素直にモジュールを使えばいいのに) 見よう見まねで適当に対処しようとして、
結局特定ブラウザの特定の版でしか上手く動かないようなコードを書いてみたり。
[WEAK[(で、質問掲示板で暴れてみたり。)]] お前らちゃんと仕様書読んでくださいよ。

処理系で標準または標準に近いモジュール的なものが[[要求]]の解析をしてくれることが広く知られていて、
そのモジュール的なものの作者がちゃんと仕様を読んでコードを書くような人なら、
その処理系で書かれた処理はさほど深く考えなくても自動的に 
[CODE(MIME)[multipart/form-data]] を正しく処理できるはずです。
[WEAK[よく知りませんけど、 Java servelet とか PHP はその辺きちんとしてるのではないですか?]]

[6] [CODE(HTML)[[CODE(HTMLa)[[[tipe]]]]="[[file]]"]] の [CODE(HTMLe)[[[input]]]] 
要素があるフォームでは、この値である必要があります。 
(<IW:HTML4:"interact/forms.html#h-17.3"> 参照。)

- [13] 1つの form[type=file] 要素を使って複数ファイルをうpする ([[multipart/mixed]] 使用。) のは、 [[UA]] で対応してるのはなさげ、サーバーもおそらく全滅だろうという感じですね。 [[www-html]] で [[Opera]] の特定の版では出来るという未確認情報がありますが、最新版では出来ないらしいし、勘違いかなんかじゃないかなあ。
- [15] WinIE 3.02 用の file upload add-on は1997年の中ごろに出ました。
[[#comment]]


** text/plain

[7] 幾つかの実装は、 [DFN[[CODE(MIME)[[[text/plain]]]]]] に対応しています。
主として、 [CODE(HTMLa)[[[action]]]] が [CODE(URI)[[[mailto]]:]] URI scheme
であるときに使われます。

古くは、 [SAMP(HTMLa)[[[text/plain]]; charset=iso-2022-jp]]
のように [CODE(MIME)[[[charset]]]] 引数をつけた値も使われていました。

[[#comment]]


** application/sgml-form-urlencoded

[12] [DFN[[CODE(MIME)[[[application/sgml-form-urlencoded]]]]]]
は、ほぼ [CODE(MIME)[application/x-www-form-urlencoded]]
と同じですが、 [CODE[&]] の代わりに [CODE[;]] を使います。

[[URI参照]]の一部 (特に [CODE(ABNF)[[[query]]]] 部) で [CODE(URI)[&]]
を使うことはよくありますが、 HTML 内に記述する場合は [CODE(HTML)[&[[amp]];]]
とする必要があるかもしれません。これを嫌って [CODE(URI)[;]]
を使うことをよしとする向きもあります。 (HTML 4 もこれを推奨しています。)
[CODE(HTTP)[[[POST]]]] で送られるときには URI と関係しないので無関係ではありますが、
一貫性のためにどちらも変えてしまうのがいいかもしれません。
というわけで登場するのがこの媒体型です。

[14] [[Lynx]] がこれを実装しています。

また、CGI スクリプトなどのサーバー側の実装でも新し目のものであれば、
[CODE(MIME)[application/x-www-form-urlencoded]] の処理で [CODE(URI)[&]]
と [CODE(URI)[;]] を同一視することで[WEAK[意図するしないはともかく]]対応していることもあります。

[[#comment]]


** application/vnd.wap.multipart.form-data

[17] [CODE(MIME)[multipart/form-data]] のバイナリ表現として、 [[WAP]] で
[DFN[[CODE(MIME)[[[application/vnd.wap.multipart.form-data]]]]]]
が定義されています。

WML (<http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf>
9.5.1) は、 [CODE(WMLe)[go]] 要素の [CODE(WMLa)[enctype]] 属性が
''[CODE(MIME)[multipart/form-data]]'' のときに、 UA
が [CODE(MIME)[application/vnd.wap.multipart.form-data]]
で送ることを推奨 (recommend) しています。
([[WSP]] でバイナリ表現で送っても、 [[HTTP]] の世界との関門
([[WAP串]]) で標準のテキスト表現に変換されます。から、 HTTP
世界では [CODE(MIME)[multipart/form-data]] で送られてきたように見えます。)

[[#comment]]


** その他

[[#comment]]


* メモ

- [1] [WEAK[2003-10-12 12:52:32 +00:00]] ''[[名無しさん]]'': 手元の Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.4) Gecko/20030624 で試してみたら、 [CODE(MIME)[[[application/x-www-form-urlencoded]]]] と [CODE(MIME)[[[text/plain]]]] と [CODE(MIME)[[[multipart/form-data]]]] に対応していましたが、引数をつけたら全滅でした。
@


1.3
log
@auto-committed
@
text
@d45 6
a71 1

a74 1

@


1.2
log
@auto-committed
@
text
@d1 175
a175 145
#?SuikaWiki/0.9 page-icon="HTML"
* form 要素型 enctype 属性 (HTML, XHTML 1)

[3] [DFN[[CODE(HTMLa)[enctype]] 属性]]には、[CODE(HTMLa)[[[method]]]] 属性の値が [CODE(HTML)[[[post]]]] の際に使われる[[媒体型]]を指定します
(大文字・小文字を区別しない)。
(<IW:HTML4:"interact/forms.html#h-17.3">)

[4] 媒体型の引数を含めても良いのかは不明です。

[[HTML4]] の規定は曖昧ですが、含めてはいけないような臭いが漂っています。 ([CODE(HTML)[%[[ContentType]]]] 参照。)

しかしながら、古い時代に引数も含めた用例は確認されています。
([SAMP[enctype="text/plain;charset=iso-2022-jp"]]。
[WEAK[この場合、 HTML 4 的には [CODE(HTMLa)[[[accept-charset]]]] 属性を使用します。]])

[5] >>4 HTML4 は大文字・小文字を区別しないとしているが、パラメーター値の区別は定義依存だから、
HTML4 ではやっぱりパラメーターは含まれないのかも。

* go 要素 enctype 属性 (WML)

[16] [[WML]] の [CODE(WMLe)[[[go]]]] 要素でも、 HTML の
[CODE(HTMLe)[form]] 要素の場合と同じような意味を持つ [CODE(WMLa)[enctype]]
属性が定義されています。
既定値も同じです。
(<http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf> 9.5.1 参照。)

非 US-ASCII 値を含む場合には [CODE(MIME)[multipart/form-data]]
を使うことが推奨 (recommend) されています。

[[#comment]]

*実装または用例が確認されている媒体型

** application/x-www-form-urlencoded

[8] 媒体型 [DFN[[CODE(MIME)[[[application/x-www-form-urlencoded]]]]]]
は [CODE(HTMLa)[enctype]] 属性の既定値です。

伝統的に [CODE(HTMLe)[form]] 要素を埋めて提出する際に使用されてきた形式であり、
古い [ABBR[[[UA]]] [[[利用者エージェント]]]] はこの形式にしか対応していません。
HTML 4 はこの形式を実装することを UA に要求しています。 (17.13.4 参照。)

[[CGIスクリプト]]などのサーバー側の処理系は、ほとんどがこの媒体型にのみ対応しています。
[WEAK[ひどいことに、何が送られて来ようがこの媒体型とみなしてしまう実装がかなり多い。]]

[9] 規格上は [[US-ASCII]] しか送れないとか色々あります。詳しくは
[CODE(WikiPage)[[[application/x-www-form-urlencoded]]]] を参照。

[[#comment]]

** multipart/form-data

[11] ファイルの[[うp]]機能のために広く実装されることとなったのが
[DFN[[CODE(MIME)[[[multipart/form-data]]]]]] です。 [[MIME]] 
の[[多部分]]機構を使っているので、 (仕様上は) MIME 
で扱うことができるあらゆる種類のデータを表現できます。

この形式の使用は、 US-ASCII しか安全に送れないという
[CODE(MIME)[application/x-www-form-urlencoded]] の問題に対する解答に (仕様上は)
なっています。

[10] HTML 4 は [[UA]] にこの形式の実装を要求しています (17.13.4 参照。)

実際現代のほとんどの [[WWWブラウザ]]はこの形式を実装しています。

一方、 CGI スクリプトなどのサーバー側は酷い状況です。 >>8 にあるように、
多くの実装は相手にもしていません。 [[Perl]] なら [[CGI.pm]] 
などを使えば自動的に対応できますが、[WEAK[最近は増えてきたとはいえ]]モジュールを
CGI スクリプトで使うことは少なく、 [CODE(MIME)[application/x-www-form-urlencoded]]
にしか対応していません。ファイルのうpがしたくなったら 
(素直にモジュールを使えばいいのに) 見よう見まねで適当に対処しようとして、
結局特定ブラウザの特定の版でしか上手く動かないようなコードを書いてみたり。
[WEAK[(で、質問掲示板で暴れてみたり。)]] お前らちゃんと仕様書読んでくださいよ。

処理系で標準または標準に近いモジュール的なものが[[要求]]の解析をしてくれることが広く知られていて、
そのモジュール的なものの作者がちゃんと仕様を読んでコードを書くような人なら、
その処理系で書かれた処理はさほど深く考えなくても自動的に 
[CODE(MIME)[multipart/form-data]] を正しく処理できるはずです。
[WEAK[よく知りませんけど、 Java servelet とか PHP はその辺きちんとしてるのではないですか?]]

[6] [CODE(HTML)[[CODE(HTMLa)[[[tipe]]]]="[[file]]"]] の [CODE(HTMLe)[[[input]]]] 
要素があるフォームでは、この値である必要があります。 
(<IW:HTML4:"interact/forms.html#h-17.3"> 参照。)

- [13] 1つの form[type=file] 要素を使って複数ファイルをうpする ([[multipart/mixed]] 使用。) のは、 [[UA]] で対応してるのはなさげ、サーバーもおそらく全滅だろうという感じですね。 [[www-html]] で [[Opera]] の特定の版では出来るという未確認情報がありますが、最新版では出来ないらしいし、勘違いかなんかじゃないかなあ。
- [15] WinIE 3.02 用の file upload add-on は1997年の中ごろに出ました。
[[#comment]]

** text/plain

[7] 幾つかの実装は、 [DFN[[CODE(MIME)[[[text/plain]]]]]] に対応しています。
主として、 [CODE(HTMLa)[[[action]]]] が [CODE(URI)[[[mailto]]:]] URI scheme
であるときに使われます。

古くは、 [SAMP(HTMLa)[[[text/plain]]; charset=iso-2022-jp]]
のように [CODE(MIME)[[[charset]]]] 引数をつけた値も使われていました。

[[#comment]]

** application/sgml-form-urlencoded

[12] [DFN[[CODE(MIME)[[[application/sgml-form-urlencoded]]]]]]
は、ほぼ [CODE(MIME)[application/x-www-form-urlencoded]]
と同じですが、 [CODE[&]] の代わりに [CODE[;]] を使います。

[[URI参照]]の一部 (特に [CODE(ABNF)[[[query]]]] 部) で [CODE(URI)[&]]
を使うことはよくありますが、 HTML 内に記述する場合は [CODE(HTML)[&[[amp]];]]
とする必要があるかもしれません。これを嫌って [CODE(URI)[;]]
を使うことをよしとする向きもあります。 (HTML 4 もこれを推奨しています。)
[CODE(HTTP)[[[POST]]]] で送られるときには URI と関係しないので無関係ではありますが、
一貫性のためにどちらも変えてしまうのがいいかもしれません。
というわけで登場するのがこの媒体型です。

[14] [[Lynx]] がこれを実装しています。

また、CGI スクリプトなどのサーバー側の実装でも新し目のものであれば、
[CODE(MIME)[application/x-www-form-urlencoded]] の処理で [CODE(URI)[&]]
と [CODE(URI)[;]] を同一視することで[WEAK[意図するしないはともかく]]対応していることもあります。

[[#comment]]

** application/vnd.wap.multipart.form-data

[17] [CODE(MIME)[multipart/form-data]] のバイナリ表現として、 [[WAP]] で
[DFN[[CODE(MIME)[[[application/vnd.wap.multipart.form-data]]]]]]
が定義されています。

WML (<http://www.openmobilealliance.org/wapdocs/wap-191_105-wml-20020212-a.pdf>
9.5.1) は、 [CODE(WMLe)[go]] 要素の [CODE(WMLa)[enctype]] 属性が
''[CODE(MIME)[multipart/form-data]]'' のときに、 UA
が [CODE(MIME)[application/vnd.wap.multipart.form-data]]
で送ることを推奨 (recommend) しています。
([[WSP]] でバイナリ表現で送っても、 [[HTTP]] の世界との関門
([[WAP串]]) で標準のテキスト表現に変換されます。から、 HTTP
世界では [CODE(MIME)[multipart/form-data]] で送られてきたように見えます。)

[[#comment]]

** その他

[[#comment]]

* メモ
- [1] [WEAK[2003-10-12 12:52:32 +00:00]] ''[[名無しさん]]'': 手元の Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.4) Gecko/20030624 で試してみたら、 [CODE(MIME)[[[application/x-www-form-urlencoded]]]] と [CODE(MIME)[[[text/plain]]]] と [CODE(MIME)[[[multipart/form-data]]]] に対応していましたが、引数をつけたら全滅でした。
- [2] >>1 [[WinIE6]] と Win[[Opera]] 7.20 でも同様でした。但し Opera は [CODE(MIME)[text/plain]] に対応していない模様。
@


1.1
log
@auto-committed
@
text
@d1 145
a145 4
#?SuikaWiki/0.9

- [1] [WEAK[2003-10-12 12:52:32 +00:00]] ''[[名無しさん]]'': 手元の Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.4) Gecko/20030624 で試してみたら、 [CODE(MIME)[[[application/x-www-form-urlencoded]]]] と [CODE(MIME)[[[text/plain]]]] と [CODE(MIME)[[[multipart/form-data]]]] に対応していましたが、引数をつけたら全滅でした。
- [2] >>1 [[WinIE6]] と Win[[Opera]] 7.20 でも同様でした。但し Opera は [CODE(MIME)[text/plain]] に対応していない模様。
@

