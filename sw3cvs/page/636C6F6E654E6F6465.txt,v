head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2007.06.23.03.14.14;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@
[1]
Returns a duplicate of the node, i.e. serves as a generic
[PRE[
      copy constructor for nodes.
]PRE]

[PRE[
      - The duplicate node has no parent, i.e. <A::Node.parentNode>
        is <DOM::null>.  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - The duplicate node has no user data, i.e. user data
        associated to the node is not carried over.  However,
        if any <IF::UserDataHandlers> has been specified along with
        the associated data, those handlers will be called with
        the appropriate parameters before the method returns.  <SRC::DOM3>
]PRE]

[PRE[
      - If the node is an <IF::Element>, all attributes and their values,
        including those representing defaulted attributes (i.e.
        attributes whose <A::Attr.specified> are <DOM::false>),
but the method does not copy any children it contains
        unless it is a deep clone (i.e. <P::deep> is <DOM::true>).
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> directly, as oppsed to be cloned
        as part of an <IF::Element> cloning operation, returns
        a specified attribute (i.e. its <A::Attr.specified> is
        set to <DOM::true>).  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
- Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning any other type of node simply returns a copy of the node.
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
- Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
]PRE]

[PRE[
      - Cloning a node does not copy the event listeners attached to it.
        <SRC::DOM2 Events, DOM3 Events>
]PRE]

[PRE[
      {NOTE:: <IF::UserDataHandler>s are prohibitted to throw exceptions;
              if a <IF::UserDataHandler> that is registered to the node
              being cloned throws an exception, then the result of
              the method is undefined.
]PRE]

([[名無しさん]])

[2]
[CODE(DOMc)@@en[[[NOT_SUPPORTED_ERR]]]]:
The node is of type <IF::Document>, <IF::tx|DocumentType>,
[PRE[
          <IF::tx|Entity>, or <IF::tx|Notation> and the implementation
          does not support cloning that type of node.  <SRC::DOM1SE>
]PRE]

[PRE[
          Only in DOM1SE; they are implementation dependent
          in DOM1SE, DOM2, and DOM3.
]PRE]

([[名無しさん]])

[3]
[CODE(DOMi)@@en[[[Element]]]] を [CODE(DOMp)@@en[[[deep]]]] = [CODE(IDL)@@en[[[false]]]]
で [CODE(DOMm)@@en[[[cloneNode]]]] すると、[[既定属性]]が自動的に作られるのかは明確ではありません。

([[名無しさん]])


[4]
[CODE(DOMi)@@en[[[UserDataHandler]]]] がいつ呼び出されるのかはよくわかりません。
各[[節点]]が複製される度に呼ばれるのか、それとも全[[節点]]が複製されてから順に呼んでもいいのか。
([[名無しさん]])

@
