head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2004.12.13.02.07.52;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.03.02.04.11;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.03.02.02.08;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@
[1] [DFN[HTML 出力方式]] (HTML output method)
では、[[結果木]]を [[HTML]]として出力します。

[10] 仕様書:
- [[XSLT 1.0]]
-- [CITE[16.2 HTML Output Method]]
<http://www.w3.org/TR/xslt#section-HTML-Output-Method>

[2] [CODE(XSLTe)[[VAR[xslt:]][[output]]]] 要素の
[CODE(XSLTa)[[[version]]]] 属性で HTML 
の版を指定します。既定値は [CODE(XSLTa)[4.0]]
ですが、これは望ましくありません。スタイルシート著者は
[CODE(XSLTa)[4.01]] と明示するべきです。
([[HTML4.0]] は [[HTML4.01]] に置き換えられました。)

版番号を指定するだけでは十分ではありません。
[CODE(XSLTa)[[[doctype-public]]]] 属性[[及び/又は]]
[CODE(XSLTa)[[[doctype-system]]]] 属性が指定されていれば、
[[文書型宣言]]が出力されるので、
これも合わせて指定しておく必要があります。

[3] null 名前空間以外の要素は、 [[XML出力方式]]と同じように出力するべきです。
Null 名前空間では、 >>4-5 のような配慮があります。

[4] [[強制空要素]]では、[[開始タグ]]だけを出力し、
[[終了タグ]]は省略するべきです。

[CODE(HTML)[[[style]]]], [CODE(HTML)[[[script]]]]
両要素では内容は SGML [[CDATA]] として扱います。
[WEAK[ちなみに、 [CODE(XSLTa)[[[cdata-section-elements]]]] は HTML 出力方式では無効です。]]

[CODE(SGML)[[[pic]]]] は [CODE(SGML)[>]] にするべきです。

[5] [[URI]] が値になる属性では、非 [[ASCII]] 
文字 [WEAK[(非 URI 安全文字じゃないよ。)]] を 
[[UTF-8]] に変換した上で [[URI符号化]]するべきです。

[[真偽値属性]]値は最小化して属性名を省略した形とするべきです。

属性値 [WEAK[(CDATA に限らず。)]] に文字列
[CODE[&{]] が含まれる時 ([[スクリプト・マクロ]]) は、
これを [SAMP(HTML)[&amp;{]] と[[逃避]]せずにそのまま出力します。

[6]  [CODE(XSLTa)[[[indent]]]]
属性の既定値は [CODE(XSLTa)[yes]] です。
字下げするときには、 HTML [[UA]] の解釈に変化がでないであろうように(謎)するべきです。

[7] [CODE(HTML)[[[head]]]] 要素があれば、
その最初の子要素として
[SAMP(HTML)[<[[meta]] [[http-equiv]]="[CODE(HTTP)[[[Content-Type]]]]" [[content]]="[VAR[charset name]]">]]
みたいなのを出力するべきです。

必要なら当該 HTML で規定されている[[文字実体参照]]を使っても構いません。
[WEAK[でも実装は、公開識別子又はシステム識別子を出力する場合に限って使うべきでしょうね。]]

[8] [CODE(XSLTa)[[[media-type]]]] 属性の既定値は
[CODE(MIME)[[[text/html]]]] です。
- [9] >>2,>>7 「当該 HTML で規定されている」ということは、当然文字実体参照を使う実装はその版でどの実体が定義されているのかを知っていないといけません。外部識別子で識別される [[DTD]] を一々読めとは言いませんが、せめて型録的に内部で情報を持ってないといけませんよね。で、定義されていなくて、出力する[[符号化文字集合]]に存在しない文字は[[数値文字参照]]にしないと・・・と書いてて思ったのですが、 [[SGML宣言]]の指定がないのはちょっと不備ですよね。 SGML 宣言がないと、文字参照でどういう[[文字番号]]を使えばいいのかわからないし、[[十六進文字参照]]が使えるのか判断できないし。[[マーク最小化]]がどれだけ許されるのかも分からないと不便。そういうのって、 [CODE(XSLTa)[version]] 属性があるからそれで十分というお考えなのかな? でもそしたら外部識別子をわざわざ指定できる嬉しさが6割引くらいじゃない? それに [[HTML2.x]] の立場は・・・。
@


1.2
log
@auto-committed
@
text
@d1 2
a2 2
#?SuikaWiki/0.9
[1] 【[[XSLT]]】 [DFN[HTML 出力方式]] (HTML output method)
d4 4
d39 1
a39 1
真偽属性値は最小化して属性名を省略した形とするべきです。
d42 2
a43 2
[CODE[&{]] が含まれる時は、これを escape
せずにそのまま出力します。
d59 1
a59 1
- [9] >>2,>>7 「当該 HTML で規定されている」ということは、当然文字実体参照を使う実装はその版でどの実体が定義されているのかを知っていないといけません。外部識別子で識別される [[DTD]] を一々読めとは言いませんが、せめて型録的に内部で情報を持ってないといけませんよね。で、定義されていなくて、出力する[[符号化文字集合]]に存在しない文字は[[数値文字参照]]にしないと・・・と書いてて思ったのですが、 [[SGML宣言]]の指定がないのはちょっと不備ですよね。 SGML 宣言がないと、文字参照でどういう[[文字番号]]を使えばいいのかわからないし、[[十六進文字参照]]が使えるのか判断できないし。[[マーク最小化]]がどれだけ許されるのかも分からないと不便。そういうのって、 [CODE(XSLTa)[version]] 属性があるからそれで十分というお考えなのかな? でもそしたら外部識別子をわざわざ指定できる嬉しさが6割引くらいじゃない? それに [[HTML2.x]] の立場は・・・。
@


1.1
log
@auto-committed
@
text
@d55 1
@

