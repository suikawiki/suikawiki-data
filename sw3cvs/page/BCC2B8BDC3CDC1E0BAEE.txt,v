head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2007.12.27.02.49.38;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.08.03.47.20;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.13.03.27.27;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@#?SuikaWiki/0.9 page-icon="HTTP"

[1]
MixedTR06:
<a href= http://vord576.blogspot.com >vord576</a> [url=http://vord576.blogspot.com]vord576[/url] 
If you do not want that I posted messages on your site, that will write on Sandra17j@@ya.ru
Indicate URL in the letter. 
([[Sandra17]] [Sadra17j@@ya.ru])

[2]
Y0Yym7 
([[name]] [mail] [WEAK[2007-12-26 21:24:08 +00:00]])


[3]
Y0Yym7 
([[name]] [mail] [WEAK[2007-12-26 21:24:26 +00:00]])


[[#comment]]


* 仕様書から


** RFC 3229 (差分符号化) 用語定義より抜粋

>
:instance manipulation:
An operation on one or more instances which may
result in an instance being conveyed from server to
client in parts, or in more than one response
message.  For example, a range selection or a delta
encoding.  Instance manipulations are end-to-end, and
often involve the use of a cache at the client.

:実現値操作:
一つ以上の[[実現値]]についての演算であり、
結果として一つの実現値が[[鯖]]から[[クライアント]]に部分的に、または複数の[[要求メッセージ]]によって運ばれてくることになるかもしれない。
例えば、範囲選択や[[差分符号化]]である。
実現値操作は[[末端対末端]]であり、しばしばクライアントでの[[キャッシュ]]の使用を伴う。

> For reasons that will become clear later on, it is convenient to
think about subrange selection as a form of instance manipulation.
In some contexts, compression might also be treated as an instance
manipulation, rather than as a content-coding or transfer-coding.

後々明らかになってくる理由から、部分範囲選択を実現値操作の一形式と考えると便利です。
文脈によっては、圧縮もまた[[内容符号化]]や[[転送符号化]]ではなく実現値操作として扱われるかもしれません。


** RFC 3229 (差分符号化) 10.1 Protocol parameter specifications

> This specification defines a new HTTP parameter type, an instance-manipulation:

この仕様書は新しい HTTP 引数型 [CODE(ABNF)[instance-manipulation]]
を定義します。

>
- instance-manipulation = token [imparams]
>
- imparams = ";" imparam-name [ "=" ( token | quoted-string ) ]
- imparam-name = token

> Note that the imparam-name MUST NOT be "q", to avoid ambiguity with
the use of qvalues (see [10]).

[CODE(ABNF)[imparam-name]] は [CODE(ABNF)[[[qvalue]]]] の使用時の曖昧性を避けるために [CODE(HTTP)[[[q]]]] であっては'''ならない'''ことに注意して下さい。

> The set of instance-manipulation values is initially:
:-  vcdiff:
A delta using the "vcdiff" encoding format [19, 20].
:-  diffe:
The output of the UNIX "diff -e" command [26].
:-  gdiff:
The GDIFF encoding format [14].
:-  gzip:
Same definition as the HTTP "gzip" content-coding.
:-  deflate:
Same definition as the HTTP "deflate" content-coding.
:-  range:
A token indicating that the result is partial content, as the
result of a range selection.
:-  identity:
A token used only in the A-IM header (not in the IM header), to
indicate whether or not the identity instance-manipulation is acceptable.

最初の実現値操作の集合は:
:[CODE(HTTP)[[[vcdiff]]]]:[CODE[vcdiff]] 符号化書式を用いた差分。
:[CODE(HTTP)[[[diffe]]]]:[[UNIX]] [KBD[[[diff]] -e]] 命令の出力。
:[CODE(HTTP)[[[gdiff]]]]:[[GDIFF]] 符号化書式。
:[CODE(HTTP)[[[gzip]]]]:[[HTTP]] [CODE(HTTP)[gzip]] 内容符号化と同じ定義。
:[CODE(HTTP)[[[deflate]]]]:HTTP [CODE(HTTP)[deflate]] 内容符号化と同じ定義。
:[CODE(HTTP)[[[range]]]]:結果が範囲選択の結果である部分内容であることを示す字句。
:[CODE(HTTP)[[[identity]]]]:[CODE(HTTP)[[[A-IM]]]] 頭でのみ使用する
([CODE(HTTP)[[[IM]]]] 頭では使用しない) 字句で、
[[同一]]実現値操作を受入れるかどうかを示すために使用する。

> For convenience in the rest of this specification, we define a subset
of instance-manipulation values as delta-coding values:

この仕様書の後の部分での便宜のために、実現値操作の部分集合を
[DFN[[CODE(ABNF)[delta-coding]] ([[差分符号化]]) 値]]として定義します。

>
- delta-coding = "vcdiff" | "diffe" | "gdiff" | token

> Future instance-manipulation values might also be included in this list.

将来の実現値操作値もこの並びに含められるかもしれません。


** RFC 3229 (差分符号化) 10.2 IANA Considerations

> The Internet Assigned Numbers Authority (IANA) administers the name
space for instance-manipulation values.  Values and their meaning
must be documented in an RFC or other peer-reviewed, permanent, and
readily available reference, in sufficient detail so that
interoperability between independent implementations is possible.
Subject to these constraints, name assignments are First Come, First
Served (see RFC 2434 [25]).

インターネット割当て番号事務局 ([[IANA]])
は実現値操作値の名前空間を管理します。
値とその意味は、 [[RFC]] または他のよく評価された、持続的で、
既に入手可能な参照物で、独立な実装が相互運用可能である程度十分詳細に文書化されていなければなりません。
この制約の元、名前割り当ては[[先来先給]]とします
([[RFC 2434]] を参照)。

> This specification also inserts a new value in the IANA HTTP Status
Code Registry (see RFC 2817 [18]).  See section 10.4.1 for the
specification of this code.

この仕様書は IANA HTTP 状態符号登録簿 ([[RFC 2817]] 参照)
にも新しい値を挿入します。この符号の仕様は10.4.1節を参照。


** RFC の部分の License

[[RFCのライセンス]]参照


* メモ@


1.2
log
@auto-committed
@
text
@d4 3
a6 3
MixedTR06:
<a href= http://vord576.blogspot.com >vord576</a> [url=http://vord576.blogspot.com]vord576[/url] 
If you do not want that I posted messages on your site, that will write on Sandra17j@@ya.ru
d9 9
@


1.1
log
@auto-committed
@
text
@d1 134
a134 112
#?SuikaWiki/0.9 page-icon="HTTP"
[[#comment]]
* 仕様書から
** RFC 3229 (差分符号化) 用語定義より抜粋
>
:   instance manipulation :
An operation on one or more instances which may
result in an instance being conveyed from server to
client in parts, or in more than one response
message.  For example, a range selection or a delta
encoding.  Instance manipulations are end-to-end, and
often involve the use of a cache at the client.

:実現値操作:
一つ以上の[[実現値]]についての演算であり、
結果として一つの実現値が[[鯖]]から[[クライアント]]に部分的に、または複数の[[要求メッセージ]]によって運ばれてくることになるかもしれない。
例えば、範囲選択や[[差分符号化]]である。
実現値操作は[[末端対末端]]であり、しばしばクライアントでの[[キャッシュ]]の使用を伴う。

>   For reasons that will become clear later on, it is convenient to
think about subrange selection as a form of instance manipulation.
In some contexts, compression might also be treated as an instance
manipulation, rather than as a content-coding or transfer-coding.

後々明らかになってくる理由から、部分範囲選択を実現値操作の一形式と考えると便利です。
文脈によっては、圧縮もまた[[内容符号化]]や[[転送符号化]]ではなく実現値操作として扱われるかもしれません。

** RFC 3229 (差分符号化) 10.1 Protocol parameter specifications
> This specification defines a new HTTP parameter type, an instance-manipulation:

この仕様書は新しい HTTP 引数型 [CODE(ABNF)[instance-manipulation]]
を定義します。

>
-      instance-manipulation = token [imparams]
>
-      imparams = ";" imparam-name [ "=" ( token | quoted-string ) ]
-      imparam-name = token

> Note that the imparam-name MUST NOT be "q", to avoid ambiguity with
the use of qvalues (see [10]).

[CODE(ABNF)[imparam-name]] は [CODE(ABNF)[[[qvalue]]]] の使用時の曖昧性を避けるために [CODE(HTTP)[[[q]]]] であっては'''ならない'''ことに注意して下さい。

>   The set of instance-manipulation values is initially:
: -  vcdiff :
A delta using the "vcdiff" encoding format [19, 20].
: -  diffe:
The output of the UNIX "diff -e" command [26].
:-  gdiff:
The GDIFF encoding format [14].
:-  gzip:
Same definition as the HTTP "gzip" content-coding.
:-  deflate:
Same definition as the HTTP "deflate" content-coding.
:-  range:
A token indicating that the result is partial content, as the
result of a range selection.
:-  identity:
A token used only in the A-IM header (not in the IM header), to
indicate whether or not the identity instance-manipulation is acceptable.

最初の実現値操作の集合は:
:[CODE(HTTP)[[[vcdiff]]]]:[CODE[vcdiff]] 符号化書式を用いた差分。
:[CODE(HTTP)[[[diffe]]]]:[[UNIX]] [KBD[[[diff]] -e]] 命令の出力。
:[CODE(HTTP)[[[gdiff]]]]:[[GDIFF]] 符号化書式。
:[CODE(HTTP)[[[gzip]]]]: [[HTTP]] [CODE(HTTP)[gzip]] 内容符号化と同じ定義。
:[CODE(HTTP)[[[deflate]]]]:HTTP [CODE(HTTP)[deflate]] 内容符号化と同じ定義。
:[CODE(HTTP)[[[range]]]]:結果が範囲選択の結果である部分内容であることを示す字句。
:[CODE(HTTP)[[[identity]]]]:[CODE(HTTP)[[[A-IM]]]] 頭でのみ使用する
([CODE(HTTP)[[[IM]]]] 頭では使用しない) 字句で、
[[同一]]実現値操作を受入れるかどうかを示すために使用する。

> For convenience in the rest of this specification, we define a subset
of instance-manipulation values as delta-coding values:

この仕様書の後の部分での便宜のために、実現値操作の部分集合を
[DFN[[CODE(ABNF)[delta-coding]] ([[差分符号化]]) 値]]として定義します。

>
-      delta-coding = "vcdiff" | "diffe" | "gdiff" | token

> Future instance-manipulation values might also be included in this list.

将来の実現値操作値もこの並びに含められるかもしれません。

** RFC 3229 (差分符号化) 10.2 IANA Considerations
> The Internet Assigned Numbers Authority (IANA) administers the name
space for instance-manipulation values.  Values and their meaning
must be documented in an RFC or other peer-reviewed, permanent, and
readily available reference, in sufficient detail so that
interoperability between independent implementations is possible.
Subject to these constraints, name assignments are First Come, First
Served (see RFC 2434 [25]).

インターネット割当て番号事務局 ([[IANA]])
は実現値操作値の名前空間を管理します。
値とその意味は、 [[RFC]] または他のよく評価された、持続的で、
既に入手可能な参照物で、独立な実装が相互運用可能である程度十分詳細に文書化されていなければなりません。
この制約の元、名前割り当ては[[先来先給]]とします
([[RFC 2434]] を参照)。

> This specification also inserts a new value in the IANA HTTP Status
Code Registry (see RFC 2817 [18]).  See section 10.4.1 for the
specification of this code.

この仕様書は IANA HTTP 状態符号登録簿 ([[RFC 2817]] 参照)
にも新しい値を挿入します。この符号の仕様は10.4.1節を参照。

** RFC の部分の License
[[RFCのライセンス]]参照
* メモ
@

