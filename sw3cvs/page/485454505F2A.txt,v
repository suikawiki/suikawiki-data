head	1.6;
access;
symbols
	suikawiki3-final:1.6
	before-db-leaffile:1.4
	after-upgrade-to-suikawiki-3:1.4
	before-fork-suikawiki3:1.4
	after-restore-20040122:1.4;
locks; strict;
comment	@# @;


1.6
date	2005.07.03.02.08.38;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.03.02.03.19;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.16.09.18.52;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.23.01.25.29;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.31.10.23.58;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.57;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.6
log
@auto-committed
@
text
@* [CODE(CGI)[HTTP_[VAR[*]]]] メタ変数 (CGI)

[5] [[CGI]] の[[メタ変数]]群 [DFN[[CODE(CGI)[HTTP_[VAR[*]]]]]]
は、[[クライアント]]から送られてきた[[要求メッセージ]]中の[[頭欄]]を[[鯖]]が
[[CGIスクリプト]]に提供するためのものです。

[6] '''メタ変数名''':
[CODE(CGI)[HTTP_[VAR[*]]]] の [CODE(CGI)[[VAR[*]]]]
の部分は、[[頭欄]]の[[名前]]をすべて[[大文字]]にし、
[CODE(HTTP)[-]] が含まれていればすべて [CODE(CGI)[_]]
に置き換えたものとなります。例えば、
[SAMP(HTTP)[[[Accept]]:]] 欄に対応する[[メタ変数]]名は
[SAMP(CGI)[[[HTTP_ACCEPT]]]] となりますし、
[SAMP(HTTP)[[[If-Modified-Since]]:]] 欄に対応するものは
[SAMP(CGI)[[[HTTP_IF_MODIFIED_SINCE]]]] となります。

[7] 仕様書:
= [NCSA] [[NCSA]] の元々の [[CGI/1.1]] の定義 >>6
= [[RFC 3875]] ([[CGI/1.1]]) ([[IETF]] [[情報提供]])
-- [CSECTION@@en[4.1.18. Protocol-Specific Meta-Variables]]

[[#comment]]

** 構文

[13] 各 [CODE(CGI)[HTTP_[VAR[*]]]] [[メタ変数]]の値には、
対応する [[HTTP]] [[要求メッセージ]]の[[頭欄]]の[[欄本体]]がそのまま入れられます。
ただし、その[[要求メッセージ]]に同じ[[欄名]]の[[頭欄]]が複数ある場合は、
[[読点]]で連結されます ([[HTTP]] の規定により、
[[読点]]で連結しても等価です)。また、
[[鯖]]は意味的に透過な変形
([[空白]]の適当な場所への挿入・削除など) を施しても構いません。
また、[[メタ変数]]として適当であるように[[文字コード]]の変換が必要であれば行われます。
[SRC[[[RFC 3875]] 4.1.18]]

[[#comment]]

** 提供されないことが多い頭欄

[14] 鯖はすべての[[頭欄]]をこの形の[[メタ変数]]として提供する必要はありません。
[SRC[[[RFC 3875]] 4.1.18]] 特に [CODE(CGI)[[[CONTENT_TYPE]]]]
([CODE(HTTP)[[[Content-Type]]]]) 
など他に[[メタ変数]]が用意されているもの、
[CODE(HTTP)[[[Authorization]]]] など安全上好ましくないもの、
[CODE(HTTP)[[[Connection]]]] など通信にのみ関係するものは提供されないかもしれません。

[11] >>9 に規定されているように、鯖は CGI スクリプトに要求メッセージのすべての頭欄を
[CODE(CGI)[HTTP_[VAR[*]]]] メタ変数を通じて提供する必要はありません。
多くの実装では、次の頭欄は提供されません。

,HTTP 頭欄                     ,代替メタ変数
,[CODE(HTTP)[[[Authorization]]]],[CODE(CGI)[[[AUTH_[VAR[*]]]]]]
,[CODE(HTTP)[[[Content-Length]]]],[CODE(CGI)[[[CONTENT_LENGTH]]]]
,[CODE(HTTP)[[[Content-Type]]]],[CODE(CGI)[[[CONTENT_TYPE]]]]

[3] >>9 つまり、 CGI 的には [CODE(CGI)[HTTP_AUTHORIZATION]] と かが提供されていて''も''問題がないということです。

[4] >>3 でも [[Apache]] は提供してくれません。

[10] CGI メタ変数はほとんどの環境では[[環境変数]]として実装されていますが、
環境変数が安全でない環境も少なくありません。
その鯖の任意の利用者が環境変数の値を見ることができるかもしれません。
CGI で昔から認証系の頭欄が提供されないことになっているのはそのような事情があります。

[[#comment]]
** 仕様書から
*** [NCSA] での説明
[6]
>In addition to these, the header lines received from
the client, if any, are placed into the environment
with the prefix HTTP_ followed by the header name.
Any - characters in the header name are changed to _
characters. The server may exclude any headers which
it has already processed, such as Authorization,
Content-type, and Content-length. If necessary, the
server may choose to exclude any or all of these
headers if including them would exceed any system
environment limits. 

これら [INS[(訳注: 他の CGI メタ変数群)]]
に加えて、クライアントから受け取った[[頭行]]があれば、
これが接頭辞 [CODE(CGI)[HTTP_]]
で始まって頭名が続く環境[INS[変数]]に入れられます。
頭名中の [CODE(HTTP)[[[-]]]]
はすべて [CODE(CGI)[[[_]]]]
に変更します。
サーバーは既に処理した頭、
例えば [CODE(HTTP)[Authorization]],
[CODE(HTTP)[Content-type]],
[CODE(HTTP)[Content-length]]
は除いても構いません。
必要なら、サーバーはこうした頭の一部又は全部を含めるとシステムの環境制限を越える時には除いても構いません。

***RFC 3875 (CGI/1.1)
[7]
[8]
[9]
[[RFC 3875]] 4.1.18 節を参照。

** 安全性

[15] [[要求メッセージ]]の[[頭欄]]には安全上注意して扱うべき情報が含まれていることもあります。
>>10 のように実装方法によっては[[メタ変数]]は安全ではないので、
>>14 の通り危険な情報は提供しないなどの注意を[[鯖]]は払う必要があります。

[16] ただし >>15 のような配慮が可能なのは、
注意するべき[[頭欄]]の種類をあらかじめ[[鯖]]が把握している場合だけです。
[SAMP(HTTP)[X-Foo-Private-Information: some-important-thing]]
のような[[頭欄]]を使っていると、[[鯖]]が[[メタ変数]]を生成し、
それによって [[CGI]] が使われている環境にアクセス可能な第三者に盗み見られる危険性があります。

もちろん、[Q[盗み見]]ることができる権限があるのが信頼できる限定された人だけである場合など、
必ずしも危険であるわけではありません。
このようなシステムの設計者は使用するシステムの技術的・
運用上の性質によく注意して、
安全性と技術的な実装の簡単さや技術的整合性のバランスが取れるようにしなければなりません。

[[#comment]]

** 歴史

[17] [CODE(CGI)[HTTP_[VAR[*]]]] メタ変数群を使った[[要求]]中の一般の[[頭欄]]を
[[CGIスクリプト]]に提供する方法は [[CGI/1.1]]
で導入されました。 [[CGI/1.0]] では [CODE(CGI)[[[CONTENT_TYPE]]]]
や [CODE(CGI)[[[HTTP_ACCEPT]]]] など一部の[[頭欄]]のみが提供されていました。

[[#comment]]

** 関連

[12] '''HTTP over TLS''': 
[[SSL]] や [[TLS]] の上で [[HTTP]] 通信を行っている場合であっても、
[[HTTP]] であることには変わりありませんので、
[[TCP]] 上の [[HTTP]] と同じ名前で同じように[[メタ変数]]が提供されます。
(ただし実装によってはより安全を配慮した形になっているかもしれません。)
実装によっては [[SSL]] や [[TLS]] 
によって得られた情報が別の[[メタ変数]]を通じて提供されています。

[DEL[
- [1] 方式 (scheme) が [[https:]] だったら ''HTTPS_[VAR[*]]'' になるんでしょうか。そんなの見たこと無いなあ。
- [2] >>1 そんなことはないです。 HTTP over SSL でも [CODE(CGI)[HTTP_[VAR[*]]]] になります。
]DEL]

[[#comment]]

** メモ


[[#comment]]

* [CODE[HTTP_[VAR[*]]]] 環境変数

[12] 
:[CODE(CGI)[[[HTTP_[VAR[*]]]]]]:[[Apache]] をはじめ多くの [[CGI]]
の実装で、 [CODE(CGI)[[[HTTP_[VAR[*]]]]]] 
[[メタ変数]] (>>5) は同名の[[環境変数]]として実装されています。
:[CODE[[[HTTP_HOME]]]]:[[w3m]] など [[Webブラウザ]]類で[[ホーム頁]]の
[[URI]] を指定する[[環境変数]]として使われています。
:[CODE[[[HTTP_PROXY]]]]:[[w3m]] など [[WWW]]
系プログラムで利用するべき[[串]]を指定する[[環境変数]]として使われています。

[[#comment]]

* メモ
@


1.5
log
@auto-committed
@
text
@d1 34
a34 11
#?SuikaWiki/0.9
[5] [DFN[[CODE(CGI)[HTTP_[VAR[*]]]]]]
は、[[クライアント]]から送られてきた[[要求メッセージ]]に含まれていた[[頭欄]]の[[本体]]を[[鯖]]が
[[CGIスクリプト]]に提供するため [[CGI]] [[メタ変数]]です群。

[VAR[*]] の部分は、欄名をすべて大文字にし、 [CODE(HTTP)[-]]
を [CODE(CGI)[_]] に置換えたものとなります。
たとえば、 [CODE(HTTP)[[[Accept]]:]] 欄に対応するメタ変数は
[CODE(CGI)[[[HTTP_ACCEPT]]]] で、
[CODE(HTTP)[[[If-Modified-Since]]:]] 欄に対応するメタ変数は
[CODE(CGI)[HTTP_IF_MODIFIED_SINCE]] です。
d38 30
a67 2
* 仕様書から
** [NCSA] での説明
d94 1
a94 1
**CGI/1.1 draft #3 6.1.5. Protocol-Specific Metavariables (プロトコル規定メタ変数)
a95 9
> These metavariables are specific to the protocol via which the
request is made. Interpretation of these variables depends on
the value of the SERVER_PROTOCOL metavariable (see section
6.1.17).

このメタ変数群は、要求が送られてきたプロトコルにより決まります。
この変数群の解釈は [[SERVER_PROTOCOL]] メタ変数 (第6.1.17節を参照)
の値によります。

d97 2
a98 29
>Metavariables with names beginning with "HTTP_" contain values
from the request header, if the scheme used was HTTP. Each
HTTP header field name is converted to upper case, has all
occurrences of "-" replaced with "_", and has "HTTP_"
prepended to form the metavariable name. Similar
transformations are applied for other protocols. The header
data MAY be presented as sent by the client, or MAY be
rewritten in ways which do not change its semantics. If
multiple header fields with the same field-name are received
then the server MUST rewrite them as though they had been
received as a single header field having the same semantics
before being represented in a metavariable. Similarly, a
header field that is received on more than one line MUST be
merged into a single line. The server MUST, if necessary,
change the representation of the data (for example, the
character set) to be appropriate for a CGI metavariable.

「HTTP_」で始まる名前のメタ変数は、使われた方式が HTTP である場合に、
要求頭から取られます。各 HTTP 頭領域名を大文字に変換して、
「-」が含まれれば全て「_」に置き換えて、「HTTP_」を頭につけたのが
メタ変数名になります。同様の変換を他のプロトコルについても行います。
頭データはクライアントから送られてきたものを使っても'''良い'''ですし、
意味を変えない範囲で書き換えても'''構いません'''。同じ領域名で
複数の頭領域を受け取った場合、サーバーはメタ変数にする前に、
同じ意味を持つ単一頭領域を受け取ったものとして書き換え'''なければなりません'''。
同様に、複数行で受け取った頭領域は単一行にくっつけなければ
'''なりません'''。サーバーは、必要があれば、データの表現
(例えば文字集合) を CGI メタ変数に適切な形に変えなければ
'''なりません'''。
d100 1
a100 15
[9]
>Servers are not required to create metavariables for all the
request header fields that they receive. In particular, they
MAY decline to make available any header fields carrying
authentication information, such as "Authorization", or which
are available to the script via other metavariables, such as
"Content-Length" and "Content-Type".

サーバーは受け取った頭領域全てについてメタ変数を作る必要はありません。
特に、「Authorization」(認証)のような認証情報を伝達する頭領域や、
他のメタ変数でスクリプトに伝えられる「Content-Length」(内容長)
や「Content-Type」(内容型)のような頭領域を利用出来なくしても
'''構いません'''。
** I-D のライセンス
[[RFCのライセンス]]を参照。
d102 15
a116 1
* 提供されないことが多い頭欄
d118 1
a118 3
[11] >>9 に規定されているように、鯖は CGI スクリプトに要求メッセージのすべての頭欄を
[CODE(CGI)[HTTP_[VAR[*]]]] メタ変数を通じて提供する必要はありません。
多くの実装では、次の頭欄は提供されません。
d120 1
a120 4
,HTTP 頭欄                     ,代替メタ変数
,[CODE(HTTP)[[[Authorization]]]],[CODE(CGI)[[[AUTH_[VAR[*]]]]]]
,[CODE(HTTP)[[[Content-Length]]]],[CODE(CGI)[[[CONTENT_LENGTH]]]]
,[CODE(HTTP)[[[Content-Type]]]],[CODE(CGI)[[[CONTENT_TYPE]]]]
d122 4
a125 1
[3] >>9 つまり、 CGI 的には [CODE(CGI)[HTTP_AUTHORIZATION]] と かが提供されていて''も''問題がないということです。
d127 1
a127 1
[4] >>3 でも [[Apache]] は提供してくれません。
d129 1
a129 4
[10] CGI メタ変数はほとんどの環境では[[環境変数]]として実装されていますが、
環境変数が安全でない環境も少なくありません。
その鯖の任意の利用者が環境変数の値を見ることができるかもしれません。
CGI で昔から認証系の頭欄が提供されないことになっているのはそのような事情があります。
d131 7
a137 2
[[#comment]]
* メモ
d139 1
d142 23
@


1.4
log
@auto-committed
@
text
@d2 16
a17 2

* [NCSA] での説明
d43 3
a45 3
*6.1.5. Protocol-Specific Metavariables (プロトコル規定メタ変数) (CGI/1.1 draft 03)
    
These metavariables are specific to the protocol via which the
d54 17
a70 16
   Metavariables with names beginning with "HTTP_" contain values
   from the request header, if the scheme used was HTTP. Each
   HTTP header field name is converted to upper case, has all
   occurrences of "-" replaced with "_", and has "HTTP_"
   prepended to form the metavariable name. Similar
   transformations are applied for other protocols. The header
   data MAY be presented as sent by the client, or MAY be
   rewritten in ways which do not change its semantics. If
   multiple header fields with the same field-name are received
   then the server MUST rewrite them as though they had been
   received as a single header field having the same semantics
   before being represented in a metavariable. Similarly, a
   header field that is received on more than one line MUST be
   merged into a single line. The server MUST, if necessary,
   change the representation of the data (for example, the
   character set) to be appropriate for a CGI metavariable.
d85 7
a91 6
   Servers are not required to create metavariables for all the
   request header fields that they receive. In particular, they
   MAY decline to make available any header fields carrying
   authentication information, such as "Authorization", or which
   are available to the script via other metavariables, such as
   "Content-Length" and "Content-Type".
d98 25
a123 15
*SEE ALSO
-[[CGI]]
--[[CGI/1.1]]
--[[CGI/1.2]]
--[[AUTH_TYPE]]
--[[CONTENT_LENGTH]]
--[[CONTENT_TYPE]]
-[[HTTP]]
--[[HTTP/1.0]]
--[[HTTP/1.1]]
-[[RFC822と仲間達の頭領域名]]
--[[Authorization:領域]]
--[[Content-Length:領域]]
--[[Content-Type:領域]]
-[[RFCのライセンス]]
a125 2
- [3] つまり、 CGI 的には [CODE(CGI)[HTTP_AUTHORIZATION]] (Yours: [[#form:'%cgi-meta-variable(category=>HTTP,name=>AUTHORIZATION);':'':'%output(form=>0);']]) とか [CODE(CGI)[HTTP_AUTHORIZATION]] とかが提供されていても問題がないということです。
- [4] >>3 でも [[Apache]] は提供してくれません。
@


1.3
log
@Updated.
@
text
@d1 28
d98 4
a101 1
- [1] 方式 (scheme) が [[https:]] だったら ''HTTPS_[VAR[*]]'' になるんでしょうか。そんなの見たこと無いなあ。
@


1.2
log
@Updated.
@
text
@d70 1
@


1.1
log
@Updated.
@
text
@d1 1
a1 1
*6.1.5. Protocol-Specific Metavariables (特定プロトコル・メタ変数) (CGI/1.1 draft 03)
@

