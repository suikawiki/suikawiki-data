head	1.6;
access;
symbols
	suikawiki3-final:1.6
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.6
date	2004.12.13.02.09.08;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.18.02.11.51;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.03.02.03.25;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.27.02.08.02;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.13.02.03.04;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.27.07.25.02;	author make;	state Exp;
branches;
next	;


desc
@@


1.6
log
@auto-committed
@
text
@
* head 要素型 (HTML, XHTML 1)

[3] [ABBR[[[HTML]]][Hypertext Markup Language]] の 
[CODE(HTMLe)[head]] 要素は、
[[文書]]の[[内容]]とはみなされない文書に関する情報
([[メタ情報]]) を記述するのに使います。 

[11]
仕様書: 
- [[HTML 2.0]]: [[RFC 1868]]
-- [CITE[5.2. Head: HEAD]]
- [[HTML 4]]
-- <IW:HTML4:"struct/global.html#edef-HEAD">

[5]
:[[開始タグ]]:省略可能 (HTML 2, HTML 4) または必須 (XHTML 1)
:[[終了タグ]]:省略可能 (HTML 2, HTML 4) または必須 (XHTML 1)
:[[内容模型]]:[CODE(SGML)[([CODE(HTMLe)[[[title]]]] & [CODE(HTMLe)[[[base]]]]?) +([VAR[%[[head.misc]]]])]]
:出現できる文脈:[CODE(HTMLe)[[[html]]]] 第1子要素
:[[属性]]:
,属性名	,属性値型	,既定値	,意味	,出典
,[CODE(HTMLa)[[[lang]]]]	,[[言語札]]	,(継承)	,[[自然言語]]	,"[HTML 4], [XHTML 1]"
,[CODE(HTMLa)[[[xml]]:lang]]	,言語札	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[profile]]]]	,[CODE(ABNF)[[[URI参照]] *([[空白]] URI参照)]]	,(なし)	,メタ情報の辞書	,"[HTML 4], [XHTML 1]"


[[#comment]]


** 内容模型

[6] [ABBR[HTML][Hypertext Markup Language]] 4 などでは、
[[内容模型]]の表現に[[添加要素指定]]が使われていて少々分かりにくくなっていますが、
その主張は簡単なことで、
[Q[すべての要素の出現順序は無制限。 [CODE(HTMLe)[[[title]]]] は丁度1つ必要。 [CODE(HTMLe)[[[base]]]] は高々1つ必要。他は任意個 OK。]]
です。

ただし、 [ABBR[DTD][文書型定義]] に現れない仕様書本文での制限で、
[CODE(HTMLa)[[[http-equiv]]]] 属性が [CODE(HTTP)[[[Content-Type]]]]
である [CODE(HTMLe)[[[meta]]]] 
を使う時は可能な限りはじめの方にいれることになっています
[SRC[HTML 4]]。

[7] 古い時代の [ABBR[DTD][文書型定義]] 案では、 [CODE(HTMLe)[title]]
が必須でなかったこともありました。

実際の文書では今でも [CODE(HTMLe)[title]] 
が欠けていることがしばしばあります。
また、 [CODE(HTMLe)[base]] が 
[WEAK[([CODE(HTMLa)[[[href]]]] と [CODE(HTMLa)[[[target]]]] などで)]] 
複数あることもたまにあります。

[[#comment]]

** レンダリング

[4] [ABBR[[[UA]]][利用者エージェント]] 
は通常この要素の内容を[[レンダリング]]しませんが、
何らかの手段で[[利用者]]にその情報を提示しても構いません 
[SRC[HTML 4]]。

メタ情報の重要性が説かれる現在では、
汎用 [ABBR[UA][利用者エージェント]] 
はむしろその手段を積極的に用意する'''べき'''でしょう。

[CODE(HTMLe)[title]] 要素、 [CODE(HTMLe)[[[style]]]] 要素のように、
[[内容]]を持ち得る要素が含まれ得ますから、
それらを通常の表示モードでレンダリングすることが無いように注意が必要です。
[CODE(HTMLe)[head]] 要素内では [CODE(HTMLe)[[[object]]]]
要素も使えますが、その[[物体]]または[[代替内容]]も表示しないように注意する必要があります。

[[#comment]]

** 歴史

[8] 一番初めの [ABBR[[[SGML]]][標準一般化マーク付け言語]] 
もどきな頃の [ABBR[HTML][ハイパーテキスト・マーク付け言語]] に
[CODE(HTMLe)[head]] 要素型はありませんでした。
その後 [ABBR[[[SGML]]][標準一般化マーク付け言語]] 
的形式を整えるに当たって、
本文そのものではない [CODE(HTMLe)[title]]
要素を収納する要素が考えられました。

[ABBR[[[Dan Connolly]]][Daniel W. Connolly]] は、
新しい要素型の導入にあたって、
次のようなことを言っています。

> [CODE(HTMLe)[document]] は文書の[Q[本体]]
のほとんどを含みます。これで[[混合内容]]の問題を解決できます。
この要素を [CODE(HTMLe)[body]] という名前にして、
[CODE(HTMLe)[title]] や [CODE(HTMLe)[[[nextid]]]] や
[CODE(HTMLe)[[[isindex]]]] を囲む省略可能な [CODE(HTMLe)[[[header]]]]
を導入することもできます。 [INS[(1992年11月19日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/315.html>)]]

混合内容の問題と言うのは、後に [CODE(HTMLe)[[[fieldset]]]]
などでもかかわることになる、ある意味で因縁の問題です。
当時の [ABBR[HTML][ハイパーテキスト・マーク付け言語]] 
の書式を素直に記述すると、
[CODE(SGML)[((TITLE? & ISINDEX?), (H1|H2|DL|OL|XMP|#PCDATA)+)]]
になります。ところが、これは[[混合内容]]になってしまいます。
[ABBR[[[SGML]]][標準一般化マーク付け言語]] の仕様上、 
[CODE(HTMLe)[title]] 要素や
[CODE(HTMLe)[isindex]] 要素の前に [CODE(SGML)[[[s]]]]
を入れることができなくなってしまうのです。
これへの対策はタグが省略可能なダミーの要素を
[CODE(SGML)[[[PCDATA]]]] が含まれる部分に入れるのが定石で、
それを [ABBR[Dan][Dan Connolly]] は [CODE(HTMLe)[document]] or
[CODE(HTMLe)[body]] にしようと言っています。

これに対して、 [ABBR[[[TimBL]]][Tim Berners‐Lee]] が、

> 後者がいいですね。 Header と Body というのはメイルの名付け方にも似ていますし。 [INS[(1992年11月19日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/319.html>)]]

と答えております。その後 [ABBR[[[TimBL]]][Tim Berners‐Lee]] が

> [CODE(HTMLe)[header]] と [CODE(HTMLe)[body]] も [INS[(DTD に)]]
入れて欲しいです。 [INS[(1992年12月1日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/380.html>)]]

と言いますと、 [ABBR[Dan][Dan Connolly]] は、
ずっと取り組んでいるけどうまくいかないと答えています。
(1992年12月1日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/383.html>)

この時 [ABBR[Dan][Dan Connolly]] が考えていた文書の構造は
[CODE(SGML)[<!ELEMENT HTML O O  ((TITLE? & NEXTID? & ISINDEX?), BODY)>]]
でした。
この内容模型の前半部分を [CODE(HTMLe)[header]] 要素にした時に、
既存データとの互換性のために、
- [CODE(HTMLe)[header]] のタグは省略可能
- [CODE(HTMLe)[title]] など3種類の要素が任意の順序で、
いずれについても高々1個認められる

という要件を満たす [ABBR[DTD][文書型定義]] 
を書くのに苦心していた模様です。

同じ日の <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/390.html> 
では、諦めて [CODE(HTMLe)[title]] を文書中どこでも良いことにしちゃえ! とか、
上位プロトコルの [CODE(822)[[[Subject]]]] とか使えばいいじゃん!
なんて言ってます。 
更に同じ日の
<http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/393.html>
では、 [ABBR[Tim][Tim Berners‐Lee]] は [CODE(HTMLe)[header]] 
や [CODE(HTMLe)[body]] を使ってるけど、
その方法だと既存の文書と互換な [ABBR[DTD][文書型定義]]
が書けないよと嘆いてます。

しばらくして、 12月4日の
<http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/402.html>
では、構造が壊れてしまうものの、
[CODE(HTMLe)[head]] と [CODE(HTMLe)[body]]
を既存の文書と互換に追加する方法を思いついたと書いています。
(ここでなぜか [CODE(HTMLe)[header]] が
[CODE(HTMLe)[head]] に変わっています。)

その方法はメイルには書かれていないのですが、
12月3日の [ABBR[Dan][Dan Connolly]] の [CODE(file)[html.dtd]] 
には次のようにあります。

[PRE(SGML)[
<!ENTITY % anyelement "HEAD | %headelement; | BODY | %bodyelement;">
<!ELEMENT HTML O O  ((%anyelement|#PCDATA)*, PLAINTEXT?)>
<!ELEMENT HEAD - -  (TITLE? & ISINDEX? & NEXTID?)>
<!ELEMENT BODY - -  (%bodyelement|#PCDATA)*>
]PRE]

[9]
1993年1月11日の [ABBR[Dan][Dan Connolly]] の <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/39.html> では [CODE(HTMLe)[header]] を出力するプログラムを [CODE(HTMLe)[head]] に修正するように言っています。すぐ後に [ABBR[Tim][Tim Berners‐Lee]]
が何も言わずに修正しています。


[10]
1993年4月9日の Dan の [CODE(file)[html.dtd]] から、
[PRE(SGML)[
<![ %HTML.PLAINTEXT [ <!ENTITY % html-content "(HEAD, BODY), PLAINTEXT?"> ]]>
<!ENTITY % html-content "HEAD, BODY">
<!ELEMENT HTML O O  (%html-content)>
]PRE]
で [CODE(HTMLe)[head]] も [CODE(HTMLe)[body]] 
もタグ省略可能な現在と同じ形の宣言になりました。

(初めからこうしておけばよかったと思うのですが、 
[ABBR[Dan][Dan Connolly]] が最初に試した当時の [[sgmls]] 
ではうまく通らなかったのでしょうか?)


[[#comment]]

** メモ

[[#comment]]

* メモ@


1.5
log
@auto-committed
@
text
@a0 2
#?SuikaWiki/0.9

d4 2
a5 1
[3] [CODE(HTMLe)[head]] 要素は、
d11 4
a14 7
- [[HTML 2.0]]: [[RFC 1868]] 5.2. Head: HEAD
- [[HTML 4]]: <IW:HTML4:"struct/global.html#edef-HEAD">

[4] [[UA]] は通常この要素の内容を[[レンダリング]]しませんが、
何らかの手段で[[利用者]]にその情報を提示しても構いません。 [SRC[HTML 4]
メタ情報の重要性が説かれる現在では、
汎用 UA はむしろその手段を必ず用意する'''べき'''でしょう。
d17 2
a18 4
:[[開始タグ]] (HTML 2, HTML 4):省略可能
:開始タグ (XHTML 1):必須
:[[終了タグ]] (HTML 2, HTML 4):省略可能
:終了タグ (XHTML 1):必須
d23 3
a25 3
,[CODE(HTMLa)[[[lang]]]]	,[[言語札]]	,(継承)	,[[自然言語]]	,"[HTML4], [XHTML1]"
,[CODE(HTMLa)[[[xml]]:lang]]	,言語札	,(継承)	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[profile]]]]	,[CODE(ABNF)[[[URI参照]] *([[空白]] URI参照)]]	,(なし)	,メタ情報の辞書	,"[HTML4], [XHTML1]"
d33 11
a43 2
[6] HTML 4 では、内容模型に[[添加要素指定]]が使われていて少々分かりにくくなっていますが、
その主張は簡単なことで、[Q[すべての要素の出現順序は無制限。 [CODE(HTMLe)[[[title]]]] は丁度1つ必要。 [CODE(HTMLe)[[[base]]]] は高々1つ必要。他は任意個 OK。]]です。
d45 1
a45 5
ただし、 DTD に現れない仕様書本文での制限で、
[CODE(HTMLa)[[[http-equiv]]]] が [CODE(HTTP)[[[Content-Type]]]]
の [CODE(HTMLe)[[[meta]]]] を使う時は可能な限りはじめの方にいれることになっています。

[7] 古い時代の DTD 案では、 [CODE(HTMLe)[title]]
d48 5
a52 3
実際の文書では今でも [CODE(HTMLe)[title]] が欠けていることがしばしばあります。
また、 [CODE(HTMLe)[base]] が ([CODE(HTMLa)[[[href]]]] と
[CODE(HTMLa)[[[target]]]] などで) 複数あることもたまにあります。
d56 18
d77 2
a78 1
[8] 一番初めの [[SGML]] もどきな頃の HTML に
d80 2
a81 1
その後 SGML 的形式を整えるに当たって、
d85 2
a86 1
[[Dan Conolly]] は、新しい要素型の導入にあたって、
d89 1
a89 1
> [CODE(HTMLe)[document]] は文書の「本体」
d92 2
a93 2
[CODE(HTMLe)[title]] や [CODE(HTMLe)[nextid]] や
[CODE(HTMLe)[isindex]] を囲む省略可能な [CODE(HTMLe)[header]]
d98 2
a99 1
当時の HTML の書式を素直に記述すると、
d102 2
a103 1
SGML の仕様上、 [CODE(HTMLe)[title]] 要素や
d107 2
a108 2
[CODE(SGML)[PCDATA]] が含まれる部分に入れるのが定石で、
それを Dan は [CODE(HTMLe)[document]] or
d111 1
a111 1
これに対して、 [[TimBL]] が、
d115 1
a115 1
と答えております。その後 TimBL が
d120 2
a121 1
と言いますと、 Dan は、ずっと取り組んでいるけどうまくいかないと答えています。
d124 1
a124 1
この時 Dan が考えていた文書の構造は
d133 2
a134 1
という要件を満たす DTD を書くのに苦心していた模様です。
d142 3
a144 2
では、 Tim は [CODE(HTMLe)[header]] や [CODE(HTMLe)[body]]
を使ってるけど、その方法だと既存の文書と互換な DTD
d156 2
a157 1
12月3日の Dan の [CODE(file)[html.dtd]] には次のようにあります。
d167 2
a168 1
1993年1月11日の Dan の <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/39.html> では [CODE(HTMLe)[header]] を出力するプログラムを [CODE(HTMLe)[head]] に修正するように言っています。すぐ後に Tim が何も言わずに修正しています。
d178 2
a179 1
で [CODE(HTMLe)[head]] も [CODE(HTMLe)[body]] もタグ省略可能な現在と同じ形の宣言になりました。
d181 3
a183 1
(初めからこうしておけばよかったと思うのですが、 Dan が最初に試した当時の [[sgmls]] ではうまく通らなかったのでしょうか?)
@


1.4
log
@auto-committed
@
text
@d1 142
a142 139
#?SuikaWiki/0.9


* head 要素型 (HTML, XHTML 1)

[3] [CODE(HTMLe)[head]] 要素は、[[文書]]の[[内容]]とはみなされない文書に関する情報
([[メタ情報]]) を記述するのに使います。 

仕様書: [HTML 4] <IW:HTML4:"struct/global.html#edef-HEAD">

[4] [[UA]] は通常この要素の内容を[[レンダリング]]しませんが、何らかの手段で[[利用者]]にその情報を提示しても構わないと
HTML 4 仕様書は言っています。
メタ情報の重要性が説かれる現在では、
汎用 UA はむしろその手段を必ず用意する'''べき'''でしょう。

[5]
:[[開始タグ]] (HTML 4):省略可能
:開始タグ (XHTML):必須
:[[終了タグ]] (HTML 4):省略可能
:終了タグ (XHTML):必須
:[[内容模型]]:[CODE(SGML)[([CODE(HTMLe)[[[title]]]] & [CODE(HTMLe)[[[base]]]]?) +([VAR[%[[head.misc]]]])]]
:出現できる文脈:[CODE(HTMLe)[[[html]]]] 第1子要素
:[[属性]]:
,属性名	,属性値型	,既定値	,意味	,出典
,[CODE(HTMLa)[[[lang]]]]	,[[言語札]]	,(継承)	,[[自然言語]]	,"[HTML4], [XHTML1]"
,[CODE(HTMLa)[[[xml]]:lang]]	,言語札	,(継承)	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[profile]]]]	,[CODE(ABNF)[[[URI参照]] *([[空白]] URI参照)]]	,(なし)	,メタ情報の辞書	,"[HTML4], [XHTML1]"


[[#comment]]


** 内容模型

[6] HTML 4 では、内容模型に[[添加要素指定]]が使われていて少々分かりにくくなっていますが、
その主張は簡単なことで、[Q[すべての要素の出現順序は無制限。 [CODE(HTMLe)[[[title]]]] は丁度1つ必要。 [CODE(HTMLe)[[[base]]]] は高々1つ必要。他は任意個 OK。]]です。

ただし、 DTD に現れない仕様書本文での制限で、
[CODE(HTMLa)[[[http-equiv]]]] が [CODE(HTTP)[[[Content-Type]]]]
の [CODE(HTMLe)[[[meta]]]] を使う時は可能な限りはじめの方にいれることになっています。

[7] 古い時代の DTD 案では、 [CODE(HTMLe)[title]]
が必須でなかったこともありました。

実際の文書では今でも [CODE(HTMLe)[title]] が欠けていることがしばしばあります。
また、 [CODE(HTMLe)[base]] が ([CODE(HTMLa)[[[href]]]] と
[CODE(HTMLa)[[[target]]]] などで) 複数あることもたまにあります。

[[#comment]]


** 歴史

[8] 一番初めの [[SGML]] もどきな頃の HTML に
[CODE(HTMLe)[head]] 要素型はありませんでした。
その後 SGML 的形式を整えるに当たって、
本文そのものではない [CODE(HTMLe)[title]]
要素を収納する要素が考えられました。

[[Dan Conolly]] は、新しい要素型の導入にあたって、
次のようなことを言っています。

> [CODE(HTMLe)[document]] は文書の「本体」
のほとんどを含みます。これで[[混合内容]]の問題を解決できます。
この要素を [CODE(HTMLe)[body]] という名前にして、
[CODE(HTMLe)[title]] や [CODE(HTMLe)[nextid]] や
[CODE(HTMLe)[isindex]] を囲む省略可能な [CODE(HTMLe)[header]]
を導入することもできます。 [INS[(1992年11月19日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/315.html>)]]

混合内容の問題と言うのは、後に [CODE(HTMLe)[[[fieldset]]]]
などでもかかわることになる、ある意味で因縁の問題です。
当時の HTML の書式を素直に記述すると、
[CODE(SGML)[((TITLE? & ISINDEX?), (H1|H2|DL|OL|XMP|#PCDATA)+)]]
になります。ところが、これは[[混合内容]]になってしまいます。
SGML の仕様上、 [CODE(HTMLe)[title]] 要素や
[CODE(HTMLe)[isindex]] 要素の前に [CODE(SGML)[[[s]]]]
を入れることができなくなってしまうのです。
これへの対策はタグが省略可能なダミーの要素を
[CODE(SGML)[PCDATA]] が含まれる部分に入れるのが定石で、
それを Dan は [CODE(HTMLe)[document]] or
[CODE(HTMLe)[body]] にしようと言っています。

これに対して、 [[TimBL]] が、

> 後者がいいですね。 Header と Body というのはメイルの名付け方にも似ていますし。 [INS[(1992年11月19日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/319.html>)]]

と答えております。その後 TimBL が

> [CODE(HTMLe)[header]] と [CODE(HTMLe)[body]] も [INS[(DTD に)]]
入れて欲しいです。 [INS[(1992年12月1日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/380.html>)]]

と言いますと、 Dan は、ずっと取り組んでいるけどうまくいかないと答えています。
(1992年12月1日 <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/383.html>)

この時 Dan が考えていた文書の構造は
[CODE(SGML)[<!ELEMENT HTML O O  ((TITLE? & NEXTID? & ISINDEX?), BODY)>]]
でした。
この内容模型の前半部分を [CODE(HTMLe)[header]] 要素にした時に、
既存データとの互換性のために、
- [CODE(HTMLe)[header]] のタグは省略可能
- [CODE(HTMLe)[title]] など3種類の要素が任意の順序で、
いずれについても高々1個認められる

という要件を満たす DTD を書くのに苦心していた模様です。

同じ日の <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/390.html> 
では、諦めて [CODE(HTMLe)[title]] を文書中どこでも良いことにしちゃえ! とか、
上位プロトコルの [CODE(822)[[[Subject]]]] とか使えばいいじゃん!
なんて言ってます。 
更に同じ日の
<http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/393.html>
では、 Tim は [CODE(HTMLe)[header]] や [CODE(HTMLe)[body]]
を使ってるけど、その方法だと既存の文書と互換な DTD
が書けないよと嘆いてます。

しばらくして、 12月4日の
<http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1992.messages/402.html>
では、構造が壊れてしまうものの、
[CODE(HTMLe)[head]] と [CODE(HTMLe)[body]]
を既存の文書と互換に追加する方法を思いついたと書いています。
(ここでなぜか [CODE(HTMLe)[header]] が
[CODE(HTMLe)[head]] に変わっています。)

その方法はメイルには書かれていないのですが、
12月3日の Dan の [CODE(file)[html.dtd]] には次のようにあります。

[PRE(SGML)[
<!ENTITY % anyelement "HEAD | %headelement; | BODY | %bodyelement;">
<!ELEMENT HTML O O  ((%anyelement|#PCDATA)*, PLAINTEXT?)>
<!ELEMENT HEAD - -  (TITLE? & ISINDEX? & NEXTID?)>
<!ELEMENT BODY - -  (%bodyelement|#PCDATA)*>
]PRE]

[9]
1993年1月11日の Dan の <http://ksi.cpsc.ucalgary.ca/archives/WWW-TALK/www-talk-1993q1.messages/39.html> では [CODE(HTMLe)[header]] を出力するプログラムを [CODE(HTMLe)[head]] に修正するように言っています。すぐ後に Tim が何も言わずに修正しています。
([[名無しさん]])


[10]
d151 9
a159 7
(初めからこうしておけばよかったと思うのですが、 Dan が最初に試した当時の [[sgmls]] ではうまく通らなかったのでしょうか?)
([[名無しさん]])


[[#comment]]


@


1.3
log
@auto-committed
@
text
@d1 155
a155 65
#?SuikaWiki/0.9
* head 要素型 (HTML, XHTML 1)

[3] [CODE(HTMLe)[head]] 要素は、[[文書]]の[[内容]]とはみなされない文書に関する情報
([[メタ情報]]) を記述するのに使います。 

仕様書: [HTML 4] <IW:HTML4:"struct/global.html#edef-HEAD">

[4] [[UA]] は通常この要素の内容を[[レンダリング]]しませんが、何らかの手段で[[利用者]]にその情報を提示しても構わないと
HTML 4 仕様書は言っています。
メタ情報の重要性が説かれる現在では、
汎用 UA はむしろその手段を必ず用意する'''べき'''でしょう。

[5]
:[[開始タグ]] (HTML 4):省略可能
:開始タグ (XHTML):必須
:[[終了タグ]] (HTML 4):省略可能
:終了タグ (XHTML):必須
:[[内容模型]]: [CODE(SGML)[([CODE(HTMLe)[[[title]]]] & [CODE(HTMLe)[[[base]]]]?) +([VAR[%[[head.misc]]]])]]
:出現できる文脈:[CODE(HTMLe)[[[html]]]] 第1子要素
:[[属性]]:
,属性名                 ,属性値型  ,既定値,意味,出典
,[CODE(HTMLa)[[[lang]]]],[[言語札]],(継承),[[自然言語]],"[HTML4], [XHTML1]"
,[CODE(HTMLa)[[[xml]]:lang]],言語札,(継承),自然言語,[XHTML1]
,[CODE(HTMLa)[[[profile]]]],[CODE(ABNF)[[[URI参照]] *([[空白]] URI参照)]],(なし),メタ情報の辞書,"[HTML4], [XHTML1]"

[[#comment]]

** 内容模型

[6] HTML 4 では、内容模型に[[添加要素指定]]が使われていて少々分かりにくくなっていますが、
その主張は簡単なことで、[Q[すべての要素の出現順序は無制限。 [CODE(HTMLe)[[[title]]]] は丁度1つ必要。 [CODE(HTMLe)[[[base]]]] は高々1つ必要。他は任意個 OK。]]です。

ただし、 DTD に現れない仕様書本文での制限で、
[CODE(HTMLa)[[[http-equiv]]]] が [CODE(HTTP)[[[Content-Type]]]]
の [CODE(HTMLe)[[[meta]]]] を使う時は可能な限りはじめの方にいれることになっています。

[7] 古い時代の DTD 案では、 [CODE(HTMLe)[title]]
が必須でなかったこともありました。

実際の文書では今でも [CODE(HTMLe)[title]] が欠けていることがしばしばあります。
また、 [CODE(HTMLe)[base]] が ([CODE(HTMLa)[[[href]]]] と
[CODE(HTMLa)[[[target]]]] などで) 複数あることもたまにあります。

[[#comment]]

** 歴史

[8] 一番初めの [[SGML]] もどきな頃の HTML に
[CODE(HTMLe)[head]] 要素型はありませんでした。
その後 SGML 的形式を整えるに当たって、
本文そのものではない [CODE(HTMLe)[title]]
要素を収納する要素が考えられました。

[1] 最初は [[Dan Connolly]] は [CODE(HTMLe)[[[heading]]]] という名前で呼んでいました (''WWW-Talk 1992: HTML DTD issues'' <http://www.webhistory.org/www.lists/www-talk.1992/0318.html>)。その後 [CODE(HTMLe)[header]] 要素として結構使われました。
(W3C の古文献などを探してみてください。すぐ見つかります。)
しかしその後要素型名は [CODE(HTMLe)[head]] となりました。

[2] >>1 の次の [[TimBL]] の返信ではおお! 
[CODE(HTMLe)[header]]/[CODE(HTMLe)[body]] 
なんて[[メイル]]みたいでいい感じじゃん☆って話になってます。

[[#comment]]

* メモ
@


1.2
log
@auto-committed
@
text
@d7 2
d15 6
a20 3
:[[開始タグ]]:省略可能
:[[終了タグ]]:省略可能
:[[内容モデル]]: [CODE(SGML)[([CODE(HTMLe)[[[title]]]] & [CODE(HTMLe)[[[base]]]]?) +([VAR[%[[head.misc]]]])]]
d29 34
a62 4
** 歴史的なこと
- [1] [[HTML]] の要素は最初は [[DanConnolly]] は [[heading]] という名前で呼んでいました (''WWW-Talk 1992: HTML DTD issues'' <http://www.webhistory.org/www.lists/www-talk.1992/0318.html>)。その後 [[header]] 要素として結構使われました。しかしその後標準化された時に要素型名は [CODE(HTML)[HEAD]] となりました。
- [2] >>1 の次の [[TimBL]] の返信ではおお! header/body なんて[[メイル]]みたいでいい感じじゃん☆って話になってます。
-<IW:HTML4:"struct/global.html#edef-HEAD">
d65 1
a65 1
* メモ@


1.1
log
@pre-namespace
@
text
@d1 30
a30 4
#?SuikaWiki/0.9

- [1] [[HTML]] の要素は最初は [[DanConnolly]] は [[heading]] という名前で呼んでいました (''WWW-Talk 1992: HTML DTD issues'' <http://www.webhistory.org/www.lists/www-talk.1992/0318.html>)。その後 [[header]] 要素として結構使われました。しかしその後標準化された時に要素型名は [CODE(HTML)[HEAD]] となりました。
- [2] >>1 の次の [[TimBL]] の返信ではおお! header/body なんて[[メイル]]みたいでいい感じじゃん☆って話になってます。
@

