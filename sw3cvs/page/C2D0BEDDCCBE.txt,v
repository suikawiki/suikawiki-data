head	1.12;
access;
symbols
	suikawiki3-final:1.12
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.12
date	2008.10.23.03.16.28;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.27.02.44.51;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.13.02.39.04;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2006.08.08.02.17.19;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.18.02.07.14;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.23.02.10.24;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2005.02.18.02.07.55;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.27.02.06.48;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2005.01.18.02.09.54;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.27.02.08.49;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.31.02.00.58;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.26.07.42.56;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.12
log
@auto-committed
@
text
@[1] 【[[XML]]】 [[処理指令]]の指令対象[[応用]]を識別する[[名前]]。 Target name。

[2] XML では、処理指令は [SAMP(XML)[<?[VAR[target-name]] [VAR[data]]?>]] 
のような形式を取ります。このうちの [VAR(XML)[target-name]] 
が[DFN[対象名]]です。

[3] 対象名は名前ですから、 XML の[[名前開始文字]]から始まって、[[名前文字]]のみで構成されなければなりません。更に、[[名前空間整形式]]であるためには [[NCName]] でなければなりません。つまり[[コロン]] ([CODE(XML)[[[:]]]]) を含めることは出来ません。

[5] 対象名の一意性はあまり保証されません。つまり、ある名前 [SAMP(XML)[foo]]
をある応用 [SAMP[A]] と別の応用 [SAMP[B]] が別の意味に使うことは十分あり得ます。
更に、応用 [SAMP[A]] の対象名 [SAMP[foo]] の処理指令と応用 [SAMP[B]]
の対象名 [SAMP[bar]] の処理指令が同じ意味である可能性だって捨て切れません。

XML では一応の解法は用意されています。[[記法宣言]]を使うのです。
例えば、対象名 [SAMP(XML)[foo]] を宣言するには、
[SAMP(XML)[<![[NOTATION]] foo SYSTEM "http://foo.example/">]]
のように [[DTD]] のどこかに書いておきます。
この記法宣言があれば、応用は処理指令の対象を一意に特定できるという寸法です。

[[#comment]]


* [CODE(ABNF)["XML"]] 予約名

[4] 対象名が [CODE(ABNF)["XML"]] (大文字・小文字を問わない。) から始まるものは、
XML 関連仕様が使うのに予約されています。特に [CODE(XML)[xml]] という文字列は、
[[XML宣言]]に使われるので処理指令の対象名としては使えません。

,対象名	,意味	,状態,仕様書
,[CODE(XML)[[[XML]]]],XML 宣言,旧仕様案 (W3C WD)
,[[xml]]	,[[XML宣言]]・[[文宣言]]	,W3C 勧告,[XML]
,[CODE(XML)[[[xml:actionsheet]]]],[[ActionSheet]] の関連付け,W3C Member Submission,[W3C Note ActionSheet]
,[CODE(XML)[[[xml-edit]]]],編集用文書,非標準
,[[XML:namespace]]	,[[XML名前空間]]の[[宣言]]	,旧仕様案 (W3C WD)
,[CODE(XML)[[[XML:stylesheet]]]],スタイル・シート関連付け,旧仕様案 (W3C WD)
,[[xml-stylesheet]]	,[[スタイル・シート]]関連付け	,W3C 勧告,[xml-stylesheet]
,[CODE(XML)[[[xml2-stylesheet]]]],,非標準

[7]
[CODE(XML)[XML]] という3文字の文字列は、処理指令の文法から除外されているので、処理指令の対象名として出現することはありません。

XML 1.0, 1.1 で XML 宣言・文宣言の対象名相当に登場するのは小文字の [CODE(XML)[xml]] だけです。

つまり、 XML 1.0, 1.1 では、対象名に [CODE[XML]], [CODE[XMl]], [CODE[XmL]], [CODE[Xml]], [CODE[xML]], [CODE[xMl]], [CODE[xmL]] は出現し得ないということです。

;; だからどうしたと言われればどうもしませんが。

勧告以前の古い XML 宣言は [CODE[XML]] が大文字だったりします。1998年以前の XML 文書に度々登場します。

[[#comment]]


* 一般の対象名

[6] XML での利用が想定されている処理指令の対象名
([[擬似属性]]系処理指令を除く ー― [[擬似属性]]を参照してください):

,対象名	,意味	,状態,仕様書・出典,記法識別子有無
,[CODE(XML)[[[cocoon-process]]]],[[Cocoon]] による処理,,,なし
,[CODE(XML)[[[command-options]]]],実行オプション,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-DEFINITION-INDEX]]]],定義索引挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-ECMA]]]],[[ECMAScript]] 束縛定義挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-EXPANDED-TOC]]]],展開目次挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-IDL]]]],[[IDL]] 定義挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-JAVA]]]],[[Java]] 束縛定義挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-MINI-TOC]]]],小目次挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[GENERATE-TOC]]]],目次挿入,,DOM 仕様書 XML 原本,なし
,[CODE(XML)[[[job]]]],,[[Windows Script]] job,,なし
,[CODE(XML)@@en[[[microsummary]]]],[[マイクロ要約]],,[Mozilla],なし
,[CODE(XML)@@en[[[php]]]],[[PHP]],,,なし
,[CODE(XML)[[[pike]]]],,,,なし
,[CODE(XML)@@en[[[python]]]],[[Python]],仕様,[[Kid]],なし
,[CODE(XML)@@en[[[respec-toc]]]],[[ReSpec]] [[目次]]挿入,,,なし
,[CODE(XML)@@en[[[zebra-2.0]]]],,,,なし

[[#comment]]


* メモ@


1.11
log
@auto-committed
@
text
@d74 1
@


1.10
log
@auto-committed
@
text
@d70 1
d72 1
@


1.9
log
@auto-committed
@
text
@d71 1
@


1.8
log
@auto-committed
@
text
@d69 1
@


1.7
log
@auto-committed
@
text
@d55 2
a56 1
[6] XML での利用が想定されている処理指令の対象名:
a58 1
,[CODE(XML)[[[access-control]]]],[[DOM]] access 制御,W3C WD,[VoiceXML]
a67 1
,[CODE(XML)[[[IS10744]]]],[[ISO/IEC 10744]] SGML 拡張機能,"ISO/IEC 国際標準","[ISO/IEC 10744:1997]"
d69 1
a69 3
,[[oasis-xml-catalog]]	,[[型録]]関連付け	,[XCatalog]	,OASIS 決議,なし
,[[rfc]]	,[[RFC 2629]] 処理系指令	,	,,なし
,[[rfc-translation]]	,2629 翻訳版処理系指令	,	,,あり
@


1.6
log
@auto-committed
@
text
@d69 1
@


1.5
log
@auto-committed
@
text
@d57 1
a57 1
,対象名	,意味	,状態,仕様書	,記法識別子有無
d60 8
@


1.4
log
@auto-committed
@
text
@d30 1
d34 2
a35 1
,[[XML:namespace]]	,[[XML名前空間]]の[[宣言]]	,W3C WD,[XML Names draft]
d37 1
@


1.3
log
@auto-committed
@
text
@d3 3
a5 1
[2] XML では、処理指令は [SAMP(XML)[<?target-name data?>]] のような形式を取ります。このうちの [SAMP(XML)[target-name]] の部分が、[DFN[対象名]]です。
d23 1
a23 1
* "XML" 予約名
d55 3
a57 2
,[CODE(MIME)[[[[access-control]]]],[[DOM]] access 制御,W3C WD,[VoiceXML]
,[CODE(MIME)[[[IS10744]]]],[[ISO/IEC 10744]] SGML 拡張機能,"ISO/IEC 国際標準","[ISO/IEC 10744:1997]"
@


1.2
log
@auto-committed
@
text
@d1 34
a34 34
#?SuikaWiki/0.9

[1] 【[[XML]]】 [[処理指令]]の指令対象[[応用]]を識別する[[名前]]。 Target name。

[2] XML では、処理指令は [SAMP(XML)[<?target-name data?>]] のような形式を取ります。このうちの [SAMP(XML)[target-name]] の部分が、[DFN[対象名]]です。

[3] 対象名は名前ですから、 XML の[[名前開始文字]]から始まって、[[名前文字]]のみで構成されなければなりません。更に、[[名前空間整形式]]であるためには [[NCName]] でなければなりません。つまり[[コロン]] ([CODE(XML)[[[:]]]]) を含めることは出来ません。

[5] 対象名の一意性はあまり保証されません。つまり、ある名前 [SAMP(XML)[foo]]
をある応用 [SAMP[A]] と別の応用 [SAMP[B]] が別の意味に使うことは十分あり得ます。
更に、応用 [SAMP[A]] の対象名 [SAMP[foo]] の処理指令と応用 [SAMP[B]]
の対象名 [SAMP[bar]] の処理指令が同じ意味である可能性だって捨て切れません。

XML では一応の解法は用意されています。[[記法宣言]]を使うのです。
例えば、対象名 [SAMP(XML)[foo]] を宣言するには、
[SAMP(XML)[<![[NOTATION]] foo SYSTEM "http://foo.example/">]]
のように [[DTD]] のどこかに書いておきます。
この記法宣言があれば、応用は処理指令の対象を一意に特定できるという寸法です。

[[#comment]]


* "XML" 予約名

[4] 対象名が [CODE(ABNF)["XML"]] (大文字・小文字を問わない。) から始まるものは、
XML 関連仕様が使うのに予約されています。特に [CODE(XML)[xml]] という文字列は、
[[XML宣言]]に使われるので処理指令の対象名としては使えません。

,対象名	,意味	,仕様書
,[[xml]]	,[[XML宣言]]・[[文宣言]]	,[XML]
,[[XML:namespace]]	,[[XML名前空間]]の[[宣言]]	,[XML Names draft]
,[[xml-stylesheet]]	,[[スタイル・シート]]関連付け	,[xml-stylesheet]

[7]
d44 18
a61 18

([[名無しさん]] [sage])

[[#comment]]


* 一般の対象名

[6] XML での利用が想定されている処理指令の対象名:

,対象名	,意味	,仕様書	,記法識別子有無
,[[oasis-xml-catalog]]	,[[型録]]関連付け	,[XCatalog]	,なし
,[[rfc]]	,[[RFC2629]] 処理系指令	,	,なし
,[[rfc-translation]]	,2629 翻訳版処理系指令	,	,あり

[[#comment]]


@


1.1
log
@semi-auto committed
@
text
@d1 62
a62 45
#?SuikaWiki/0.9
[1] 【[[XML]]】 [[処理指令]]の指令対象[[応用]]を識別する[[名前]]。 Target name。

[2] XML では、処理指令は [SAMP(XML)[<?target-name data?>]] のような形式を取ります。このうちの [SAMP(XML)[target-name]] の部分が、[DFN[対象名]]です。

[3] 対象名は名前ですから、 XML の[[名前開始文字]]から始まって、[[名前文字]]のみで構成されなければなりません。更に、[[名前空間整形式]]であるためには [[NCName]] でなければなりません。つまり[[コロン]] ([CODE(XML)[[[:]]]]) を含めることは出来ません。

[5] 対象名の一意性はあまり保証されません。つまり、ある名前 [SAMP(XML)[foo]]
をある応用 [SAMP[A]] と別の応用 [SAMP[B]] が別の意味に使うことは十分あり得ます。
更に、応用 [SAMP[A]] の対象名 [SAMP[foo]] の処理指令と応用 [SAMP[B]]
の対象名 [SAMP[bar]] の処理指令が同じ意味である可能性だって捨て切れません。

XML では一応の解法は用意されています。[[記法宣言]]を使うのです。
例えば、対象名 [SAMP(XML)[foo]] を宣言するには、
[SAMP(XML)[<![[NOTATION]] foo SYSTEM "http://foo.example/">]]
のように [[DTD]] のどこかに書いておきます。
この記法宣言があれば、応用は処理指令の対象を一意に特定できるという寸法です。

[[#comment]]

* "XML" 予約名

[4] 対象名が [CODE(ABNF)["XML"]] (大文字・小文字を問わない。) から始まるものは、
XML 関連仕様が使うのに予約されています。特に [CODE(XML)[xml]] という文字列は、
[[XML宣言]]に使われるので処理指令の対象名としては使えません。

,対象名              ,意味                         ,仕様書
,[[xml]]             ,[[XML宣言]]・[[文宣言]]      ,[XML]
,[[XML:namespace]]   ,[[XML名前空間]]の[[宣言]]    ,[XML Names draft]
,[[xml-stylesheet]]  ,[[スタイル・シート]]関連付け ,[xml-stylesheet]

[[#comment]]

*一般の対象名

[6] XML での利用が想定されている処理指令の対象名:

,対象名           ,意味                      ,仕様書            ,記法識別子有無
,[[oasis-xml-catalog]],[[型録]]関連付け      ,[XCatalog]        ,なし
,[[rfc]]          ,[[RFC2629]] 処理系指令    ,                  ,なし
,[[rfc-translation]],2629 翻訳版処理系指令   ,                  ,あり

[[#comment]]

*メモ
@

