head	1.20;
access;
symbols
	suikawiki3-final:1.20
	before-db-leaffile:1.3
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.20
date	2008.10.27.03.15.10;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2007.04.08.02.42.13;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2006.12.27.02.18.32;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2006.10.13.02.17.27;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2006.08.27.02.13.41;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2006.02.23.02.18.49;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2006.02.03.02.15.47;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.08.02.12.17;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.31.02.11.09;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.23.02.17.56;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.13.02.12.59;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.03.02.22.56;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.03.02.10.20;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.13.02.07.50;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.18.02.04.40;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.08.02.05.30;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.23.02.03.08;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.31.02.00.54;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.29.07.17.13;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.27.07.25.05;	author make;	state Exp;
branches;
next	;


desc
@@


1.20
log
@auto-committed
@
text
@

* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。

[8] 仕様書:
- [[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
-- [CSECTION[6.1.4 Elements with no directionality]]
-- [CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">
- [[Web Forms 2.0]]
-- [CSECTION@@en[3.2. Changes to existing controls]]
-- [CSECTION@@en[2.18. Handling unexpected elements and values]]
<IW:WF2:"#handling">

[9]
:状態:[[W3C]] [[勧告]]
:[[名前空間URI]]:[CODE(URI)@@en[[[http://www.w3.org/1999/xhtml]]]]
:[[局所名]]:[CODE(HTMLe)@@en[[[select]]]] ([Q@@en[select]]
([Q[選択]]) より)
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容モデル]]:
[CODE(SGML)@@en[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])*]]
:出現できる文脈:[CODE(SGML)[%[[formctrl]]]] な文脈
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)@@en[[[accesskey]]]]	,[CODE(SGML)@@en[%[[Character]]]]	,(なし)	,	,非標準
,[CODE(HTMLa)@@en[[[autoactivate]]]]	,	,	,	,非標準
,[CODE(HTMLa)@@en[[[autocomplete]]]]	,	,	,	,非標準	,[[Dojo]]
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)@@en[[[dataurl]]]]	,	,	,	,非標準	,[[Dojo]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,([[真偽値属性]])	,([[偽]])	,無効	,[HTML 4]
,[CODE(HTMLa)@@en[[[dojotype]]]]	,	,	,	,非標準	,[[Dojo]]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)@@en[[[_moz-type]]]]	,	,	,[[Gecko]] 内部処理用形式	,"非標準, 内部用"	,[[Gecko]]
,[CODE(HTMLa)@@en[[[maxlistlength]]]]	,	,	,	,非標準	,[[Dojo]]
,[CODE(HTMLa)@@en[[[mode]]]]	,	,	,	,非標準	,[[Dojo]]
,[CODE(HTMLa)[[[multiple]]]]	,([[真偽値属性]])	,([[偽]])	,複数選択可能	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,	,[[制御子名]]	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,失焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,得焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,列数	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)@@en[[[text]]]]	,[CODE(SGML)@@en[%[[Color]]]]	,	,[[文字色]]	,非標準
,[CODE(HTMLa)@@en[[[type]]]]	,[[列挙型]]	,	,	,非標準



** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[20] '''区切り線'''

[[Safari]] では、 [CODE(HTMLe)@@en[[[select]]]] や
[CODE(HTMLe)@@en[[[optgroup]]]] の[[子供]]として
[CODE(HTMLe)@@en[[[hr]]]] を入れて、区切りを表すことができます。

;; [[Dashboard]] のための機能だそうです。

[31] '''空要素'''
[[HTML 4]] では、 [CODE(HTMLe)@@en[[[select]]]]
[[要素]]は[[空]]ではいけませんでした。
しかし、 [[Web Forms 2.0]] では、
[CODE(HTMLe)@@en[[[select]]]] を[[空]]に[['''して構いません''']]。
ただし、[[利用者]]の混乱を防ぐため、
[[空]]かつ[[可視]]のままにしておくのは避けるように[['''するべきです''']]。
[SRC@@en[WF2 2.3]]

[33]
あああ
([[名無しさん]] [WEAK[2007-04-05 13:41:46 +00:00]])

[[#comment]]


*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]] [IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]


** フォーム制御子


*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]


*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]


*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]


*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


*** メモ

[[#comment]]


** レンダリング

[21]
[CODE(HTMLe)@@en[[[select]]]][[要素]]は、使用されている環境によって、あるいは[[利用者エージェント]]によって、様々な形で[[レンダリング]]されます。[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]の有無で多くのバリエーションがありますし、同じ[[利用者エージェント]]でも[CODE(HTMLe)@@en[[[multiple]]]][[属性]]の有無や[CODE(HTMLe)@@en[[[size]]]][[属性]]の有無で[[widget]]が変わるのが一般的です。

[22] '''ドロップダウン・リスト'''
[CODE(HTMLe)@@en[[[select]]]][[要素]]に[CODE(HTMLa)@@en[[[multiple]]]][[属性]]も[CODE(HTMLa)@@en[[[size]]]][[属性]]も指定されていないときの伝統的な[[典型レンダリング]]は、いわゆる[[ドロップダウン・リスト]][[制御子]]です。普段は
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
]PRE]

のように[[選択]]された項目だけが表示されていますが、[[活性化]]されると
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のように選択肢が表示されます。選択肢一覧は[Q[浮かんで]]表示され、元々その場所に[[レンダリング]]されていた内容は隠れます。[[利用者エージェント]]や環境によっては、元々表示されていた部分も隠れて
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のようになることもあります。なお、[[コンボボックス]][[制御子]]とは異なり、元々表示されていた部分を[[利用者]]が直接編集することはできないのが普通です。

[24]
[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]が使われている場合の[[レンダリング]]は環境や[[利用者エージェント]]によって様々です。

[25]
[[HTML 4]]仕様書の[[レンダリング]]例では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                   +-----------------+
| Group Label            > | Subitem 1       |
+--------------------------| Subitem 2       |
                           +-----------------+
]PRE]

のように、多くの[[GUI]]環境における[[メニュー]][[制御子]]のような実現方法が示されています。

[26] [[Gecko]]の少なくても[[Windows]]版では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| /Group Label/             |
|   Subitem 1               |
|   Subitem 2               |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[27] [[Openwave SDK]]では、 (展開時に)
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
|---------------------------|
| Group Label               |
| Subitem 1                 |
| Subitem 2                 |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

;; 選択できない[CODE(HTMLa)@@en[[[label]]]]と選択できる[CODE(HTMLe)@@en[[[option]]]]が同じように[[レンダリング]]されるのは、[[利用可能性]]的によくないです。

[23] '''リスト箱''':
[CODE(HTMLe)@@en[[[select]]]][[要素]]で[CODE(HTMLa)@@en[[[size]]]][[属性]]または[CODE(HTMLa)@@en[[[multiple]]]][[属性]]が指定されていた場合の伝統的な[[典型レンダリング]]は、いわゆる[[リスト箱]][[制御子]]です。
[PRE(aafig)[
+---------------------------+
| Item 1                    |
|*Item*2********************|
| Item 3                    |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[28] [[Openwave SDK]]では、[CODE(HTMLa)@@en[[[multiple]]]]だと
[PRE(aafig)[
----------------------------
 [ ] Item 1                    
 [X] Item 2                    
----------------------------
 Group Label               
 [ ] Subitem 1                 
 [ ] Subitem 2                 
]PRE]

のように ([[チェック箱]][[制御子]]のように) [[レンダリング]]されます。

[29]
[[Openwave]]では、非標準の[CODE(HTMLa)@@en[[[type]]]][[属性値]]によっても[[レンダリング]]が変換します。
- [CODE(HTML)@@en[[[list]]]]なら、番号付きのリストとして[[レンダリング]]します。これは[[フォーム]][[制御子]]ではなく、[[WML 1.3]]の[CODE(XMLe)@@en[[[select]]]][[要素]]と同じ扱いです。
- [CODE(HTML)@@en[[[popup]]]]なら、>>22のように[[ドロップダウン・リスト]]として表示されます。
- [CODE(HTML)@@en[[[spin]]]]なら、>>23で高さ1行で表示されます。
- [CODE(HTMLa)@@en[[[type]]]][[属性]]なき場合は、[CODE(HTMLe)@@en[[[form]]]]の[[子孫]]なら[CODE(HTML)@@en[[[popup]]]]、そうでなければ[CODE(HTML)@@en[[[list]]]]となります。

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[32] '''誤り処理'''

[CODE(HTMLe)@@en[[[select]]]] [[要素]]内での役割を果たすのは
[CODE(HTMLe)@@en[[[option]]]] と
[CODE(HTMLe)@@en[[[optgroup]]]] だけで、
その他の[[子供節点]]は、
[[スタイル・シート]]で特に指定されない限り、
[[レンダリング]]されません。
[SRC@@en[WF2 2.18]]

[[#comment]]


** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]

[30]
[CITE[IEBlog : For the SELECT few...]] <http://blogs.msdn.com/ie/archive/2006/01/17/514076.aspx>
([[名無しさん]] [WEAK[2006-02-01 00:06:13 +00:00]])

[[#comment]]


** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]


** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]


** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。

[19]
メニュー制御子はある項目に関する排他的な選択肢群から1つ選ぶ場合や、
ある項目に関して選択肢群からいくつか選ぶ場合に限って使うべきです。

悪い例: 複数のアカウントに個別に設定できる設定画面で
「現在設定対象アカウント」を選択するのはリスト表示制御子や木表示制御子
(や場合によってはタブ) のようなものを使うべきです。
プルダウン・メニュー制御子を使うとアカウントを1つ選択するかのような印象を利用者に与えてしまいます。

([[名無しさん]] [sage])


[34]
[CITE[<select> with tabular data]] ([[Ian Hickson <ian@@...>]] 著, [TIME[2008-10-22 06:47:00 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/16089>
([[名無しさん]])


[[#comment]]


* メモ@


1.19
log
@auto-committed
@
text
@a99 1

a103 1

d408 6
@


1.18
log
@auto-committed
@
text
@d1 413
a413 406
* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。


[8] 仕様書:
- [[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
-- [CSECTION[6.1.4 Elements with no directionality]]
-- [CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">
- [[Web Forms 2.0]]
-- [CSECTION@@en[3.2. Changes to existing controls]]
-- [CSECTION@@en[2.18. Handling unexpected elements and values]]
<IW:WF2:"#handling">

[9]
:状態:[[W3C]] [[勧告]]
:[[名前空間URI]]:[CODE(URI)@@en[[[http://www.w3.org/1999/xhtml]]]]
:[[局所名]]:[CODE(HTMLe)@@en[[[select]]]] ([Q@@en[select]]
([Q[選択]]) より)
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容モデル]]:
[CODE(SGML)@@en[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])*]]
:出現できる文脈:[CODE(SGML)[%[[formctrl]]]] な文脈
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)@@en[[[accesskey]]]]	,[CODE(SGML)@@en[%[[Character]]]]	,(なし)	,	,非標準
,[CODE(HTMLa)@@en[[[autoactivate]]]],,,,非標準
,[CODE(HTMLa)@@en[[[autocomplete]]]],,,,"非標準","[[Dojo]]"
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)@@en[[[dataurl]]]],,,,"非標準","[[Dojo]]"
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,([[真偽値属性]])	,([[偽]])	,無効	,[HTML 4]
,[CODE(HTMLa)@@en[[[dojotype]]]],,,,"非標準","[[Dojo]]"
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)@@en[[[_moz-type]]]]	,	,	,[[Gecko]] 内部処理用形式	,"非標準, 内部用"	,[[Gecko]]
,[CODE(HTMLa)@@en[[[maxlistlength]]]],,,,"非標準","[[Dojo]]"
,[CODE(HTMLa)@@en[[[mode]]]],,,,"非標準","[[Dojo]]"
,[CODE(HTMLa)[[[multiple]]]]	,([[真偽値属性]])	,([[偽]])	,複数選択可能	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,	,[[制御子名]]	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,失焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,得焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,列数	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)@@en[[[text]]]]	,[CODE(SGML)@@en[%[[Color]]]]	,	,[[文字色]]	,非標準
,[CODE(HTMLa)@@en[[[type]]]]	,[[列挙型]]	,	,	,非標準

** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[20] '''区切り線'''

[[Safari]] では、 [CODE(HTMLe)@@en[[[select]]]] や
[CODE(HTMLe)@@en[[[optgroup]]]] の[[子供]]として
[CODE(HTMLe)@@en[[[hr]]]] を入れて、区切りを表すことができます。

;; [[Dashboard]] のための機能だそうです。

[31] '''空要素'''
[[HTML 4]] では、 [CODE(HTMLe)@@en[[[select]]]]
[[要素]]は[[空]]ではいけませんでした。
しかし、 [[Web Forms 2.0]] では、
[CODE(HTMLe)@@en[[[select]]]] を[[空]]に[['''して構いません''']]。
ただし、[[利用者]]の混乱を防ぐため、
[[空]]かつ[[可視]]のままにしておくのは避けるように[['''するべきです''']]。
[SRC@@en[WF2 2.3]]

[[#comment]]


*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]] [IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]


** フォーム制御子


*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]


*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]


*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]


*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


*** メモ

[[#comment]]


** レンダリング

[21]
[CODE(HTMLe)@@en[[[select]]]][[要素]]は、使用されている環境によって、あるいは[[利用者エージェント]]によって、様々な形で[[レンダリング]]されます。[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]の有無で多くのバリエーションがありますし、同じ[[利用者エージェント]]でも[CODE(HTMLe)@@en[[[multiple]]]][[属性]]の有無や[CODE(HTMLe)@@en[[[size]]]][[属性]]の有無で[[widget]]が変わるのが一般的です。

[22] '''ドロップダウン・リスト'''
[CODE(HTMLe)@@en[[[select]]]][[要素]]に[CODE(HTMLa)@@en[[[multiple]]]][[属性]]も[CODE(HTMLa)@@en[[[size]]]][[属性]]も指定されていないときの伝統的な[[典型レンダリング]]は、いわゆる[[ドロップダウン・リスト]][[制御子]]です。普段は
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
]PRE]

のように[[選択]]された項目だけが表示されていますが、[[活性化]]されると
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のように選択肢が表示されます。選択肢一覧は[Q[浮かんで]]表示され、元々その場所に[[レンダリング]]されていた内容は隠れます。[[利用者エージェント]]や環境によっては、元々表示されていた部分も隠れて
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のようになることもあります。なお、[[コンボボックス]][[制御子]]とは異なり、元々表示されていた部分を[[利用者]]が直接編集することはできないのが普通です。

[24]
[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]が使われている場合の[[レンダリング]]は環境や[[利用者エージェント]]によって様々です。

[25]
[[HTML 4]]仕様書の[[レンダリング]]例では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                   +-----------------+
| Group Label            > | Subitem 1       |
+--------------------------| Subitem 2       |
                           +-----------------+
]PRE]

のように、多くの[[GUI]]環境における[[メニュー]][[制御子]]のような実現方法が示されています。

[26] [[Gecko]]の少なくても[[Windows]]版では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| /Group Label/             |
|   Subitem 1               |
|   Subitem 2               |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[27] [[Openwave SDK]]では、 (展開時に)
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
|---------------------------|
| Group Label               |
| Subitem 1                 |
| Subitem 2                 |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

;; 選択できない[CODE(HTMLa)@@en[[[label]]]]と選択できる[CODE(HTMLe)@@en[[[option]]]]が同じように[[レンダリング]]されるのは、[[利用可能性]]的によくないです。

[23] '''リスト箱''':
[CODE(HTMLe)@@en[[[select]]]][[要素]]で[CODE(HTMLa)@@en[[[size]]]][[属性]]または[CODE(HTMLa)@@en[[[multiple]]]][[属性]]が指定されていた場合の伝統的な[[典型レンダリング]]は、いわゆる[[リスト箱]][[制御子]]です。
[PRE(aafig)[
+---------------------------+
| Item 1                    |
|*Item*2********************|
| Item 3                    |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[28] [[Openwave SDK]]では、[CODE(HTMLa)@@en[[[multiple]]]]だと
[PRE(aafig)[
----------------------------
 [ ] Item 1                    
 [X] Item 2                    
----------------------------
 Group Label               
 [ ] Subitem 1                 
 [ ] Subitem 2                 
]PRE]

のように ([[チェック箱]][[制御子]]のように) [[レンダリング]]されます。

[29]
[[Openwave]]では、非標準の[CODE(HTMLa)@@en[[[type]]]][[属性値]]によっても[[レンダリング]]が変換します。
- [CODE(HTML)@@en[[[list]]]]なら、番号付きのリストとして[[レンダリング]]します。これは[[フォーム]][[制御子]]ではなく、[[WML 1.3]]の[CODE(XMLe)@@en[[[select]]]][[要素]]と同じ扱いです。
- [CODE(HTML)@@en[[[popup]]]]なら、>>22のように[[ドロップダウン・リスト]]として表示されます。
- [CODE(HTML)@@en[[[spin]]]]なら、>>23で高さ1行で表示されます。
- [CODE(HTMLa)@@en[[[type]]]][[属性]]なき場合は、[CODE(HTMLe)@@en[[[form]]]]の[[子孫]]なら[CODE(HTML)@@en[[[popup]]]]、そうでなければ[CODE(HTML)@@en[[[list]]]]となります。

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[32] '''誤り処理'''

[CODE(HTMLe)@@en[[[select]]]] [[要素]]内での役割を果たすのは
[CODE(HTMLe)@@en[[[option]]]] と
[CODE(HTMLe)@@en[[[optgroup]]]] だけで、
その他の[[子供節点]]は、
[[スタイル・シート]]で特に指定されない限り、
[[レンダリング]]されません。
[SRC@@en[WF2 2.18]]

[[#comment]]


** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]


[30]
[CITE[IEBlog : For the SELECT few...]] <http://blogs.msdn.com/ie/archive/2006/01/17/514076.aspx>
([[名無しさん]] [WEAK[2006-02-01 00:06:13 +00:00]])


[[#comment]]


** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]


** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]


** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。

[19]
メニュー制御子はある項目に関する排他的な選択肢群から1つ選ぶ場合や、
ある項目に関して選択肢群からいくつか選ぶ場合に限って使うべきです。

悪い例: 複数のアカウントに個別に設定できる設定画面で
「現在設定対象アカウント」を選択するのはリスト表示制御子や木表示制御子
(や場合によってはタブ) のようなものを使うべきです。
プルダウン・メニュー制御子を使うとアカウントを1つ選択するかのような印象を利用者に与えてしまいます。

([[名無しさん]] [sage])

[[#comment]]


@


1.17
log
@auto-committed
@
text
@d35 1
d37 1
d40 1
d45 2
@


1.16
log
@auto-committed
@
text
@a5 2
@@@@ 
[CODE(HTMLe)@@en[[[select]]]][[要素型]]の定義は[[Web Forms 2.0]]で変更されていますが、仕様がまだ完全に確定していないので、ここでの説明は古いままです。
d18 2
a63 4

[[#comment]]


d287 10
@


1.15
log
@auto-committed
@
text
@a0 1

d18 2
d29 1
a29 1
[CODE(SGML)@@en[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
d86 9
@


1.14
log
@auto-committed
@
text
@d1 385
a385 385


* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。

@@@@ 
[CODE(HTMLe)@@en[[[select]]]][[要素型]]の定義は[[Web Forms 2.0]]で変更されていますが、仕様がまだ完全に確定していないので、ここでの説明は古いままです。

[8] 仕様書:
- [[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
-- [CSECTION[6.1.4 Elements with no directionality]]
-- [CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">

[9]
:状態:[[W3C]] [[勧告]]
:[[名前空間URI]]:[CODE(URI)@@en[[[http://www.w3.org/1999/xhtml]]]]
:[[局所名]]:[CODE(HTMLe)@@en[[[select]]]] ([Q@@en[select]]
([Q[選択]]) より)
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容モデル]]:
[CODE(SGML)@@en[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
:出現できる文脈:[CODE(SGML)[%[[formctrl]]]] な文脈
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)@@en[[[accesskey]]]]	,[CODE(SGML)@@en[%[[Character]]]]	,(なし)	,	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,([[真偽値属性]])	,([[偽]])	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)@@en[[[_moz-type]]]]	,	,	,[[Gecko]] 内部処理用形式	,"非標準, 内部用"	,[[Gecko]]
,[CODE(HTMLa)[[[multiple]]]]	,([[真偽値属性]])	,([[偽]])	,複数選択可能	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,	,[[制御子名]]	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,失焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,得焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,列数	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)@@en[[[text]]]]	,[CODE(SGML)@@en[%[[Color]]]]	,	,[[文字色]]	,非標準
,[CODE(HTMLa)@@en[[[type]]]]	,[[列挙型]]	,	,	,非標準


[[#comment]]


** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[20] '''区切り線'''

[[Safari]] では、 [CODE(HTMLe)@@en[[[select]]]] や
[CODE(HTMLe)@@en[[[optgroup]]]] の[[子供]]として
[CODE(HTMLe)@@en[[[hr]]]] を入れて、区切りを表すことができます。

;; [[Dashboard]] のための機能だそうです。

[[#comment]]


*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]] [IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]


** フォーム制御子


*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]


*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]


*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]


*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


*** メモ

[[#comment]]


** レンダリング

[21]
[CODE(HTMLe)@@en[[[select]]]][[要素]]は、使用されている環境によって、あるいは[[利用者エージェント]]によって、様々な形で[[レンダリング]]されます。[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]の有無で多くのバリエーションがありますし、同じ[[利用者エージェント]]でも[CODE(HTMLe)@@en[[[multiple]]]][[属性]]の有無や[CODE(HTMLe)@@en[[[size]]]][[属性]]の有無で[[widget]]が変わるのが一般的です。

[22] '''ドロップダウン・リスト'''
[CODE(HTMLe)@@en[[[select]]]][[要素]]に[CODE(HTMLa)@@en[[[multiple]]]][[属性]]も[CODE(HTMLa)@@en[[[size]]]][[属性]]も指定されていないときの伝統的な[[典型レンダリング]]は、いわゆる[[ドロップダウン・リスト]][[制御子]]です。普段は
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
]PRE]

のように[[選択]]された項目だけが表示されていますが、[[活性化]]されると
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のように選択肢が表示されます。選択肢一覧は[Q[浮かんで]]表示され、元々その場所に[[レンダリング]]されていた内容は隠れます。[[利用者エージェント]]や環境によっては、元々表示されていた部分も隠れて
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]

のようになることもあります。なお、[[コンボボックス]][[制御子]]とは異なり、元々表示されていた部分を[[利用者]]が直接編集することはできないのが普通です。

[24]
[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]が使われている場合の[[レンダリング]]は環境や[[利用者エージェント]]によって様々です。

[25]
[[HTML 4]]仕様書の[[レンダリング]]例では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                   +-----------------+
| Group Label            > | Subitem 1       |
+--------------------------| Subitem 2       |
                           +-----------------+
]PRE]

のように、多くの[[GUI]]環境における[[メニュー]][[制御子]]のような実現方法が示されています。

[26] [[Gecko]]の少なくても[[Windows]]版では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| /Group Label/             |
|   Subitem 1               |
|   Subitem 2               |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[27] [[Openwave SDK]]では、 (展開時に)
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
|---------------------------|
| Group Label               |
| Subitem 1                 |
| Subitem 2                 |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

;; 選択できない[CODE(HTMLa)@@en[[[label]]]]と選択できる[CODE(HTMLe)@@en[[[option]]]]が同じように[[レンダリング]]されるのは、[[利用可能性]]的によくないです。

[23] '''リスト箱''':
[CODE(HTMLe)@@en[[[select]]]][[要素]]で[CODE(HTMLa)@@en[[[size]]]][[属性]]または[CODE(HTMLa)@@en[[[multiple]]]][[属性]]が指定されていた場合の伝統的な[[典型レンダリング]]は、いわゆる[[リスト箱]][[制御子]]です。
[PRE(aafig)[
+---------------------------+
| Item 1                    |
|*Item*2********************|
| Item 3                    |
+---------------------------+
]PRE]

のように[[レンダリング]]されます。

[28] [[Openwave SDK]]では、[CODE(HTMLa)@@en[[[multiple]]]]だと
[PRE(aafig)[
----------------------------
 [ ] Item 1                    
 [X] Item 2                    
----------------------------
 Group Label               
 [ ] Subitem 1                 
 [ ] Subitem 2                 
]PRE]

のように ([[チェック箱]][[制御子]]のように) [[レンダリング]]されます。

[29]
[[Openwave]]では、非標準の[CODE(HTMLa)@@en[[[type]]]][[属性値]]によっても[[レンダリング]]が変換します。
- [CODE(HTML)@@en[[[list]]]]なら、番号付きのリストとして[[レンダリング]]します。これは[[フォーム]][[制御子]]ではなく、[[WML 1.3]]の[CODE(XMLe)@@en[[[select]]]][[要素]]と同じ扱いです。
- [CODE(HTML)@@en[[[popup]]]]なら、>>22のように[[ドロップダウン・リスト]]として表示されます。
- [CODE(HTML)@@en[[[spin]]]]なら、>>23で高さ1行で表示されます。
- [CODE(HTMLa)@@en[[[type]]]][[属性]]なき場合は、[CODE(HTMLe)@@en[[[form]]]]の[[子孫]]なら[CODE(HTML)@@en[[[popup]]]]、そうでなければ[CODE(HTML)@@en[[[list]]]]となります。

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[[#comment]]


** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]


[30]
[CITE[IEBlog : For the SELECT few...]] <http://blogs.msdn.com/ie/archive/2006/01/17/514076.aspx>
([[名無しさん]] [WEAK[2006-02-01 00:06:13 +00:00]])


[[#comment]]


** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]


** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]


** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。

[19]
メニュー制御子はある項目に関する排他的な選択肢群から1つ選ぶ場合や、
ある項目に関して選択肢群からいくつか選ぶ場合に限って使うべきです。

悪い例: 複数のアカウントに個別に設定できる設定画面で
「現在設定対象アカウント」を選択するのはリスト表示制御子や木表示制御子
(や場合によってはタブ) のようなものを使うべきです。
プルダウン・メニュー制御子を使うとアカウントを1つ選択するかのような印象を利用者に与えてしまいます。

([[名無しさん]] [sage])

[[#comment]]


@


1.13
log
@auto-committed
@
text
@d1 385
a385 372
* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。

@@@@
[CODE(HTMLe)@@en[[[select]]]][[要素型]]の定義は[[Web Forms 2.0]]で変更されていますが、仕様がまだ完全に確定していないので、ここでの説明は古いままです。

[8] 仕様書:
- [[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
-- [CSECTION[6.1.4 Elements with no directionality]]
-- [CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">

[9]
:状態:[[W3C]] [[勧告]]
:[[名前空間URI]]:[CODE(URI)@@en[[[http://www.w3.org/1999/xhtml]]]]
:[[局所名]]:[CODE(HTMLe)@@en[[[select]]]] ([Q@@en[select]]
([Q[選択]]) より)
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容モデル]]:
[CODE(SGML)@@en[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
:出現できる文脈:[CODE(SGML)[%[[formctrl]]]] な文脈
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)@@en[[[accesskey]]]],[CODE(SGML)@@en[%[[Character]]]],(なし),,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,([[真偽値属性]])	,([[偽]])	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)@@en[[[_moz-type]]]],,,[[Gecko]] 内部処理用形式,"非標準, 内部用",[[Gecko]]
,[CODE(HTMLa)[[[multiple]]]]	,([[真偽値属性]])	,([[偽]])	,複数選択可能	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,	,[[制御子名]]	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,失焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,得焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,列数	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)@@en[[[text]]]],[CODE(SGML)@@en[%[[Color]]]],,[[文字色]],非標準
,[CODE(HTMLa)@@en[[[type]]]],[[列挙型]],,,非標準

[[#comment]]


** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[20] '''区切り線'''

[[Safari]] では、 [CODE(HTMLe)@@en[[[select]]]] や
[CODE(HTMLe)@@en[[[optgroup]]]] の[[子供]]として
[CODE(HTMLe)@@en[[[hr]]]] を入れて、区切りを表すことができます。

;; [[Dashboard]] のための機能だそうです。

[[#comment]]


*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]] [IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]


** フォーム制御子


*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]


*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]


*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]


*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


*** メモ

[[#comment]]


** レンダリング

[21]
[CODE(HTMLe)@@en[[[select]]]][[要素]]は、使用されている環境によって、あるいは[[利用者エージェント]]によって、様々な形で[[レンダリング]]されます。[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]の有無で多くのバリエーションがありますし、同じ[[利用者エージェント]]でも[CODE(HTMLe)@@en[[[multiple]]]][[属性]]の有無や[CODE(HTMLe)@@en[[[size]]]][[属性]]の有無で[[widget]]が変わるのが一般的です。

[22] '''ドロップダウン・リスト'''
[CODE(HTMLe)@@en[[[select]]]][[要素]]に[CODE(HTMLa)@@en[[[multiple]]]][[属性]]も[CODE(HTMLa)@@en[[[size]]]][[属性]]も指定されていないときの伝統的な[[典型レンダリング]]は、いわゆる[[ドロップダウン・リスト]][[制御子]]です。普段は
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
]PRE]
のように[[選択]]された項目だけが表示されていますが、[[活性化]]されると
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]
のように選択肢が表示されます。選択肢一覧は[Q[浮かんで]]表示され、元々その場所に[[レンダリング]]されていた内容は隠れます。[[利用者エージェント]]や環境によっては、元々表示されていた部分も隠れて
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
| Item 3                    |
+---------------------------+
]PRE]
のようになることもあります。なお、[[コンボボックス]][[制御子]]とは異なり、元々表示されていた部分を[[利用者]]が直接編集することはできないのが普通です。

[24]
[CODE(HTMLe)@@en[[[optgroup]]]][[要素]]が使われている場合の[[レンダリング]]は環境や[[利用者エージェント]]によって様々です。

[25]
[[HTML 4]]仕様書の[[レンダリング]]例では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                   +-----------------+
| Group Label            > | Subitem 1       |
+--------------------------| Subitem 2       |
                           +-----------------+
]PRE]
のように、多くの[[GUI]]環境における[[メニュー]][[制御子]]のような実現方法が示されています。

[26] [[Gecko]]の少なくても[[Windows]]版では、
[PRE(aafig)[
+----------------------+----+
| Item 2               | ▼ |
+----------------------+----+
| Item 1                    |
| Item 2                    |
| /Group Label/             |
|   Subitem 1               |
|   Subitem 2               |
+---------------------------+
]PRE]
のように[[レンダリング]]されます。

[27] [[Openwave SDK]]では、 (展開時に)
[PRE(aafig)[
+---------------------------+
| Item 1                    |
| Item 2                    |
|---------------------------|
| Group Label               |
| Subitem 1                 |
| Subitem 2                 |
+---------------------------+
]PRE]
のように[[レンダリング]]されます。

;; 選択できない[CODE(HTMLa)@@en[[[label]]]]と選択できる[CODE(HTMLe)@@en[[[option]]]]が同じように[[レンダリング]]されるのは、[[利用可能性]]的によくないです。

[23] '''リスト箱''':
[CODE(HTMLe)@@en[[[select]]]][[要素]]で[CODE(HTMLa)@@en[[[size]]]][[属性]]または[CODE(HTMLa)@@en[[[multiple]]]][[属性]]が指定されていた場合の伝統的な[[典型レンダリング]]は、いわゆる[[リスト箱]][[制御子]]です。
[PRE(aafig)[
+---------------------------+
| Item 1                    |
|*Item*2********************|
| Item 3                    |
+---------------------------+
]PRE]
のように[[レンダリング]]されます。

[28] [[Openwave SDK]]では、[CODE(HTMLa)@@en[[[multiple]]]]だと
[PRE(aafig)[
----------------------------
 [ ] Item 1                    
 [X] Item 2                    
----------------------------
 Group Label               
 [ ] Subitem 1                 
 [ ] Subitem 2                 
]PRE]
のように ([[チェック箱]][[制御子]]のように) [[レンダリング]]されます。

[29]
[[Openwave]]では、非標準の[CODE(HTMLa)@@en[[[type]]]][[属性値]]によっても[[レンダリング]]が変換します。
- [CODE(HTML)@@en[[[list]]]]なら、番号付きのリストとして[[レンダリング]]します。これは[[フォーム]][[制御子]]ではなく、[[WML 1.3]]の[CODE(XMLe)@@en[[[select]]]][[要素]]と同じ扱いです。
- [CODE(HTML)@@en[[[popup]]]]なら、>>22のように[[ドロップダウン・リスト]]として表示されます。
- [CODE(HTML)@@en[[[spin]]]]なら、>>23で高さ1行で表示されます。
- [CODE(HTMLa)@@en[[[type]]]][[属性]]なき場合は、[CODE(HTMLe)@@en[[[form]]]]の[[子孫]]なら[CODE(HTML)@@en[[[popup]]]]、そうでなければ[CODE(HTML)@@en[[[list]]]]となります。

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[[#comment]]


** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]

[[#comment]]


** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]


** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]


** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。


[19]
メニュー制御子はある項目に関する排他的な選択肢群から1つ選ぶ場合や、
ある項目に関して選択肢群からいくつか選ぶ場合に限って使うべきです。

悪い例: 複数のアカウントに個別に設定できる設定画面で
「現在設定対象アカウント」を選択するのはリスト表示制御子や木表示制御子
(や場合によってはタブ) のようなものを使うべきです。
プルダウン・メニュー制御子を使うとアカウントを1つ選択するかのような印象を利用者に与えてしまいます。



([[名無しさん]] [sage])


[[#comment]]


@


1.12
log
@auto-committed
@
text
@d58 1
@


1.11
log
@auto-committed
@
text
@d6 3
d58 1
a58 1

d156 106
@


1.10
log
@auto-committed
@
text
@d28 1
@


1.9
log
@auto-committed
@
text
@a0 1

d17 4
d23 2
a24 1
:[[内容模型]]:[CODE(SGML)[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
d69 8
@


1.8
log
@auto-committed
@
text
@d1 233
a233 233


* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。

[8] 仕様書:
- [[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
-- [CSECTION[6.1.4 Elements with no directionality]]
-- [CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">

[9]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
:出現できる文脈:[CODE(SGML)[%[[formctrl]]]] な文脈
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,([[真偽値属性]])	,([[偽]])	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[multiple]]]]	,([[真偽値属性]])	,([[偽]])	,複数選択可能	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,	,[[制御子名]]	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,失焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,得焦点時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,列数	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs


[[#comment]]


** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[[#comment]]


*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]] [IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]


** フォーム制御子


*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]


*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]


*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]


*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


*** メモ

[[#comment]]


** レンダリング

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[[#comment]]


** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]

[[#comment]]


** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]


** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]


** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。


[19]
d243 7
a249 7

([[名無しさん]] [sage])


[[#comment]]


@


1.7
log
@auto-committed
@
text
@d1 250
a250 217
* select 要素型 (HTML, XHTML 1)

[7] [[HTML]] の [DFN[[CODE(HTMLe)[select]] 要素]]は、
[DFN[メニュー制御子]]を作成します。

[8] 仕様書:
-[[SI 4281]]:1998
<http://www.qsm.co.il/Hebrew/si4281e.htm>
--[CSECTION[6.1.4 Elements with no directionality]]
--[CSECTION[8.3 Rendering the Form]]
- [[HTML 4]] ([[Web Forms 1.0]])
-- menus <IW:HTML4:"interact/forms.html#menu">
-- 17.6 The [CODE(HTMLe)[SELECT]], [CODE(HTMLe)[OPTGROUP]], and [CODE(HTMLe)[OPTION]] elements
<IW:HTML4:"interact/forms.html#edef-SELECT">

[9]
: [[開始タグ]]: 必須
: [[終了タグ]]: 必須
: [[内容模型]]: [CODE(SGML)[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])+]]
: 出現できる文脈 : [CODE(SGML)[%[[formctrl]]]] な文脈
: [[属性]] :
,属性名,属性値,既定値,説明,出典
,[CODE(HTMLa)[[[class]]]]   ,,,[[級]]       ,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]     ,,,[[書字方向]] ,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]],([[真偽値属性]]),([[偽]]),無効,[HTML 4]
,[CODE(HTMLa)[[[id]]]]      ,,,一意識別子   ,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]    ,,,[[自然言語]] ,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]],,,自然言語     ,[XHTML 1]
,[CODE(HTMLa)[[[multiple]]]],([[真偽値属性]]),([[偽]]),複数選択可能,[HTML 4]
,[CODE(HTMLa)[[[name]]]],,,[[制御子名]],[HTML 4]
,[CODE(HTMLa)[[[onblur]]]],[CODE(SGML)[%[[Script]]]],,失焦点時,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]],[CODE(SGML)[%[[Script]]]],,変更時,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]] ,,,             ,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]],[CODE(SGML)[%[[Script]]]],,得焦点時,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]],,,            ,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]] ,,,             ,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]],,,            ,[HTML 4] %events
,[CODE(HTMLa)[[[size]]]],[CODE(SGML)[[[NUMBER]]]],,列数,[HTML 4]
,[CODE(HTMLa)[[[style]]]]   ,,,スタイル情報 ,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]],[CODE(SGML)[[[NUMBER]]]],,タブ順,[HTML 4]
,[CODE(HTMLa)[[[title]]]]   ,,,注釈的題     ,[HTML 4] %coreattrs

[[#comment]]

** 内容

[10] [CODE(HTMLe)[select]] 要素の子孫には、選択肢を表す [CODE(HTMLe)[[[option]]]]
要素を置きます。  [CODE(HTMLe)[option]] 要素は、最低1つは必要です。

選択肢をまとめるために [CODE(HTMLe)[[[optgroup]]]] 要素を使うことができます。
[[HTML 4]] では、 [CODE(HTMLe)[optgroup]] の入れ子は認められていません。
つまり、一階層しか作ることができません。それでも、 [CODE(HTMLe)[optgroup]]
によって選択肢をまとめることで、利用者は目的の項目を探すことが楽になるでしょうし、
著者による選択肢の管理も楽になるかもしれません。

[[#comment]]

*** i-XHTML

[5]
現代の HTML DTD では普通 [CODE(HTMLe)[select]] の[[内容模型]]は [CODE(SGML)[([CODE(HTMLe)[[[option]]]])*]] (や、それに加えて [CODE(HTMLe)[[[optgroup]]]]) となっているものです。つまり、[[要素内容]]のはずです。

ところが、 [[i-XHTML]] の解説
<http://www.nttdocomo.co.jp/p_s/imode/xhtml/s2.html#2_6>
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] 
が使用されています。さてどうしたことか。

- この例は、 copy & paste で使えるものではなく、
一度印刷してから再入力することを想定している(藁)。
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である。
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に 
[CODE(char)[[ABBR[[[IDSP]]][IDEOGRAPHIC SPACE]]]] も含まれている。
- ただ単に、担当者がアフォなだけ。

正しいのはどれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])

[[#comment]]

** フォーム制御子
*** 制御子名

[14] 制御子名は、 [CODE(HTMLa)[[[name]]]] 属性によって指定します。

[[#comment]]

*** 初期状態

[12] 初期状態で選択されている項目は、 [CODE(HTMLe)[[[option]]]]
要素の [CODE(HTMLa)[[[selected]]]] 属性によって指定します。
選択肢の[[初期値]]は [CODE(HTMLe)[option]] 要素の [CODE(HTMLa)[[[value]]]] 
属性か要素の内容によって指定します。

詳しくはそれぞれの説明をご覧ください。

[[#comment]]

*** 成功

[13] 選択肢は、選択されていれば
([CODE(HTMLe)[select]] [CODE(HTMLa)[name]] と組合せて) [[成功]]状態となります。
選択されている項目が一つもなければ、その制御子は成功ではなく、
名前も値も提出されません。 [SRC[HTML 4 17.6]]

[[#comment]]

*** 提出

[16] 選択されている選択肢があれば (成功していれば)、
メニュー制御子の名前と選択肢の初期値の組がフォーム処理エージェントに提出されます。
選択されているものが無ければ、何も送られません。
詳しくはフォームの[[提出]]の説明をご覧ください。

[[#comment]]

*** メモ

[[#comment]]

** レンダリング

[18] '''Bidi との関係''':
[CODE(HTMLe)[[[select]]]] [[要素]]は、 [[bidi]]
的には方向性に関して[[中立]]な[[文字]]1[[文字]]であるかのように扱います。
方向について特に配慮が必要なら
前後に [CODE(char)[[[LRM]]]] や [CODE(char)[[[RLM]]]]
を使えます。 [SRC[SI 4281 6.1.4]]

[[#comment]]

** 実装

[4] [[NC]] は [CODE(HTMLe)[[[form]]]] 要素外の [CODE(HTMLe)[select]] 要素を、
地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、[Q[対応していません]]。]]

[[#comment]]

** 不思議解釈

[1] [[不思議マーク付け]]で、 [[HP]] 
の[[更新履歴]]や[[管理人]]の一言コメント的[[日記]]のようなものを書くための[[タグ]]。
ドロップダウン・リストとかで表示されるんだけど、その項目は頭に 
[CODE(HTML)[<[CODE(HTMLe)[[[option]]]]>]] というタグを入れる。

[2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 
[SAMP(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 

[CODE(HTMLe)[select]] 要素とは関係ないけど、
[[マウス]]を乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、
従来の window system が持っていた色々な界面というか control というかを、 
CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。

[3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。
関連付けられた [[JScript]] などの code の動作により、
項目を選択したらそのお部屋に瞬間移動出来る優れもの(藁。

[[#comment]]

** 例

[11] 簡単なメニューの例 [SRC[HTML 4 17.6]]
[PRE(HTML)[
<FORM action="http://somesite.com/prog/component-select" method="post">
   <P>
   <SELECT multiple size="4" name="component-select">
      <OPTION selected value="Component_1_a">Component_1</OPTION>
      <OPTION selected value="Component_1_b">Component_2</OPTION>
      <OPTION>Component_3</OPTION>
      <OPTION>Component_4</OPTION>
      <OPTION>Component_5</OPTION>
      <OPTION>Component_6</OPTION>
      <OPTION>Component_7</OPTION>
   </SELECT>
   <INPUT type="submit" value="Send"><INPUT type="reset">
   </P>
</FORM>
]PRE]

この例は、7つの項目があるメニューで、複数選択可能です。
最初の2つの項目が初期状態で選択されています。
視覚 UA は4つの項目が見える状態でレンダリングし、 scroll
等により他の項目も見て選ぶことができるようにするべきです。

[[#comment]]

** メモ

[17] [CODE(HTMLe)[select]] メニュー制御子を [[ComboBox]] 
としてレンダリングする視覚 UA は多いですが、その場合、
あらかじめ1つの項目が選択されている状態か、
何も選択されていない (空白が表示される) 状態になります。

どれか選択肢の一つがあらかじめ著者または UA
により選択された状態になるとすると、利用者が本当にその項目を選んだのか、
何も考えずに (あるいはメニューの存在に気付かずに) 選ばれていたのかが区別できません。
また、 [CODE(HTMLa)[[[selected]]]] [CODE(HTMLe)[[[option]]]]
がないと最初の項目を選ばずに空白を表示した状態となる UA
は少なくないのですが、それはみっともない上に利用者が混乱する虞もあります。

そこで、 [CODE(HTMLa)[disabled]] な [CODE(HTMLe)[option]]
を [CODE(HTMLa)[selected]] としておき、そのラベルを
[Q[なんたらを選んでくださいな]]のような文字列としておくという手法がよく採られます。

但し、選びようが無いものが[Q[選択肢]]として含まれていることや
[CODE(HTMLa)[disabled]] かつ [CODE(HTMLa)[selected]] 
であるということの気持ちの悪さがあります。
他に回避手段があるなら、そちらを採るべきでしょう。

[[#comment]]

* メモ
@


1.6
log
@auto-committed
@
text
@d7 4
d123 11
@


1.5
log
@auto-committed
@
text
@d7 1
a7 1
- [[HTML 4]]
d15 1
a15 1
: [[内容模型]]: [CODE(SGML)[([CODE(HTMLe)[[[optgroup]]]] | [CODE(HTMLe)[[[option]]]])*]]
d18 1
a18 1
,属性名,属性値,既定値,出典
d49 13
d82 40
d150 27
d178 21
@


1.4
log
@auto-committed
@
text
@d1 47
a47 30
#?SuikaWiki/0.9
,仕様  ,開始タグ,終了タグ,内容
,[[HTML4]],必須,必須,1*([[optgroup要素]] / [[option要素]]))

*属性
,[[class属性]], , ,HTML4
,[[dir属性]], , ,HTML4
,[[disabled属性]],"disabled" , ,HTML4
,[[id属性]], , ,HTML4
,[[lang属性]], , ,HTML4
,multiple 属性 >>1,"multiple" , ,HTML4
,[[name属性]],[[CDATA]] , ,HTML4
,[[size属性]], , ,HTML4
,[[style属性]], , ,HTML4
,[[tabindex属性]], , ,HTML4
,[[title属性]], , ,HTML4
,[[組込催事属性]], , ,HTML4 非推奨

**multiple 属性

[6] multiple 属性の値が multiple の場合、利用者は複数の項目を同時に選択できます。
既定値は値なし = 1項目のみです。なお、値は大文字・小文字を区別しません。
(<IW:HTML4:"interact/forms.html#h-17.6">)

*メモ

- [1] [[不思議マーク付け]]で、 [[HP]] の更新履歴や[[管理人]]の一言コメント的日記みたいのを書くための[[タグ]]。ドロップダウン・リストとかで表示されるんだけど、その項目は頭に [CODE(HTML)[<OPTION>]] というタグを入れる。
- [2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 [CODE(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 [CODE(HTML)[SELECT]] 要素とは関係ないが、マウスを乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、従来の window system が持っていた色々な界面というか control というかを、 CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。
- [3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。関連付けられた [[JScript]] などの code の動作により、項目を選択したらそのお部屋に瞬間移動出来る優れもの。
- [4] [[NC]] は [CODE(HTML)[[[form]]]] 要素外の [CODE(HTML)[select]] 要素を、地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、「対応していません」。]]
d54 2
a55 1
にある使用例では、 [CODE(HTMLe)[option]] 要素の外に [CODE(char)[[[IDEOGRAPHIC SPACE]]]] が使用されています。さてどうしたことか。
d57 6
a62 3
- この例は、 copy & paste で使えるものではなく、一度印刷してから再入力することを想定している(藁)
- i-XHTML では、 [CODE(HTMLe)[select]] の内容模型は[[混合内容]]である
- i-XHTML は [[XML]] ではないので、 [CODE(SGML)[[[s]]]] に [CODE(char)[[[IDSP]]]] も含まれている
d64 1
a64 1
どれだ?
d66 36
@


1.3
log
@auto-committed
@
text
@d1 32
a32 8
#?SuikaWiki/0.9

- [1] [[不思議マーク付け]]で、 [[HP]] の更新履歴や[[管理人]]の一言コメント的日記みたいのを書くための[[タグ]]。ドロップダウン・リストとかで表示されるんだけど、その項目は頭に [CODE(HTML)[<OPTION>]] というタグを入れる。
- [2] >>1 のような使い方は [[CSS]] + [[DOM]] で出来なくも無いけど、面倒だし、 [CODE(CSS)[display: -x-pulldown-list]] みたいな指定が出来るといいよな。 [CODE(HTML)[SELECT]] 要素とは関係ないが、マウスを乗せたらでてくるメニューとかもよくあるけど、そういうのも含めて、従来の window system が持っていた色々な界面というか control というかを、 CSS で再現できて損はしないと思うのだ。 CSS3+ に期待。
- [3] >>1 他には、当該 [[HP]] にある[[お部屋]]の一覧としても使われる。関連付けられた [[JScript]] などの code の動作により、項目を選択したらそのお部屋に瞬間移動出来る優れもの。
- [4] [[NC]] は [CODE(HTML)[[[form]]]] 要素外の [CODE(HTML)[select]] 要素を、地の文と同じようにレンダリングします。[WEAK[素直に表現すれば、「対応していません」。]]

[5]
d43 2
a44 2
どれだ?
([[名無しさん]] [WEAK[2004-03-28 08:11:26 +00:00]])
@


1.2
log
@auto-commited
@
text
@d7 14
@


1.1
log
@pre-namespace
@
text
@d6 1
@

