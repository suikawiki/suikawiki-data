head	1.27;
access;
symbols
	suikawiki3-final:1.27
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.27
date	2008.08.13.02.57.58;	author wakaba;	state Exp;
branches;
next	1.26;

1.26
date	2008.08.03.03.00.59;	author wakaba;	state Exp;
branches;
next	1.25;

1.25
date	2008.05.13.04.32.04;	author wakaba;	state Exp;
branches;
next	1.24;

1.24
date	2007.07.27.02.36.05;	author wakaba;	state Exp;
branches;
next	1.23;

1.23
date	2007.03.23.02.45.46;	author wakaba;	state Exp;
branches;
next	1.22;

1.22
date	2007.03.13.02.41.17;	author wakaba;	state Exp;
branches;
next	1.21;

1.21
date	2007.02.23.02.32.10;	author wakaba;	state Exp;
branches;
next	1.20;

1.20
date	2007.02.18.02.29.22;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.03.02.26.47;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2006.08.27.02.13.23;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2006.08.18.02.13.51;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2006.07.18.02.13.54;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.31.02.11.28;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.23.02.12.16;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.08.02.20.54;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.27.02.11.58;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2005.12.03.02.22.42;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2005.07.08.02.06.55;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2005.04.27.02.14.14;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.13.02.07.43;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.08.02.06.17;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.08.02.06.21;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.03.02.06.38;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.27.02.05.00;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.23.02.04.20;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.13.02.04.34;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.27.07.25.04;	author make;	state Exp;
branches;
next	;


desc
@@


1.27
log
@auto-committed
@
text
@
* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:状態:[[W3C]] [[勧告]]
:[[局所名]]:[CODE(HTMLe)@@en[object]]
([Q@@en[object]] ([Q[[[物体]]]]) より)
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)@@en[[[alt]]]]	,[CODE(SGML)@@en[%[[Text]]]]	,(なし)	,[[代替文]]	,非標準
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)@@en[[[copyright]]]]	,	,	,	,非標準,[[EMOBILE]]
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)@@en[[[mediaout]]]],,[CODE(HTML)@@en[[[no]]]],,非標準,[[EMOBILE]]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)@@en[[[private]]]],,[CODE(HTML)@@en[[[no]]]],,非標準,[[EMOBILE]]
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)@@en[[[viewastext]]]]	,([[真偽値属性]])	,([[偽]])	,	,非標準
,[CODE(HTMLa)@@en[[[vjscodebase]]]]	,[CODE(SGML)@@en[%[[URI]]]]	,(なし)	,	,非標準	,[[Visual J# .NET]]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[39]
'''なぜ行内要素の[CODE(HTMLe)@@en[object]]の内容が[CODE(SGML)@@en[%[[flow]];]]なのか'''

どうして[[HTML 4]]で[[行内要素]]である[CODE(HTMLe)@@en[[[object]]]]の[[内容]]として[[ブロック水準要素]]が認められているのでしょうか?

仕様書案をたどってみると、最初のまだ[[要素型名]]が[CODE(HTMLe)@@en[[[insert]]]]であった頃から、[[内容モデル]]は実質的に変わっていないことがわかります。
[[HTML]]は歴史的に[[ブロック水準要素]]なしに[[行内要素]]や[[文字データ]]が現れることを許容してきましたから、
はじめのうちは不自然なことではありませんでした。

しかし、[[HTML 4]]案の途中から[[移行用DTD]]と[[厳密DTD]]の区別が導入されて、[[厳密DTD]]では[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]として[[行内要素]]を置くことができなくなりました。
[CODE(HTMLe)@@en[[[object]]]]は[[行内要素]]に分類されたので、
[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]にはなれず、
[[ブロック水準要素]]を介した[[孫]]以下としなければならなくなりました。ところが、
[WEAK[([CODE(HTMLe)@@en[[[blockquote]]]]とは違って)]]
[CODE(HTMLe)@@en[[[object]]]]の[[内容モデル]]は変更されませんでした。

;; 
ちなみに、[[HTML 2.0]]では[CODE(SGML)@@en[%[[HTML.Recommended]];]]な時でも[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]になり得る[[要素型]]に[CODE(HTMLe)@@en[[[img]]]]も含まれていました。

([[名無しさん]])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** フォーム制御子

[45]
[[Web Forms 2.0]] は [[HTML 4]] の [CODE(HTMLe)@@en[[[object]]]]
as form control にまったく言及がないわけですが、
[[Web Forms 2.0]] は [[HTML 4]] の拡張であって置き換えではないので、
依然 [CODE(HTMLe)@@en[[[object]]]] as form control 
も使えるのだそうな。

;; [CITE@@en[[whatwg] WebForms 2.0 and object controls]]
<http://listserver.dreamhost.com/pipermail/whatwg-whatwg.org/2005-April/003596.html>

[46]
でも既存の[[フォーム制御子]]の一覧
<IW:WF2:"#existing">
にも[[フォーム制御子]]の定義
<IW:WF2:"#form-control">
にも [CODE(HTMLe)@@en[[[object]]]] 
は言及されていない件。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[40]
[[RDF/XML]]を[[HTML]]に埋め込むために[CODE(HTMLe)@@en[[[object]]]]を使えばよいとの意見もありますが、
[[[CODE(HTMLe)@@en[object]] hack]]同様に濫用であって望ましくないです。

([[名無しさん]] [sage])

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[51]
[CITE[ObjectTestResults - ESW Wiki]] ([CODE[2007-03-10 12:09:38 +09:00]] 版) <http://esw.w3.org/topic/ObjectTestResults>
([[名無しさん]])

[55]
[CITE@@en[Object Tests - The Web Standards Project]] ([CODE[2007-03-21 13:55:52 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/may2005/object-tests/>
([[名無しさん]])

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[41]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[42]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[43]
[CITE[A List Apart: Articles: Bye Bye Embed]] <http://www.alistapart.com/articles/byebyeembed>
([[名無しさん]] [WEAK[2006-07-15 11:35:43 +00:00]])

[44]
[CITE[Bug 335567 - Alternate Content To OBJECT should not participate in HTTP POST]] <https://bugzilla.mozilla.org/show_bug.cgi?id=335567>
([[名無しさん]] [WEAK[2006-08-16 15:04:16 +00:00]])

[47]
[CITE[WebCGM 2.0 - WebCGM Intelligent Content]] ([CODE[2007-01-25 02:12:49 +09:00]] 版) <http://www.w3.org/TR/2007/REC-webcgm20-20070130/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [WEAK[2007-02-02 14:26:18 +00:00]])

[48]
[CITE[WebCGM 2.0 - WebCGM Intelligent Content]] ([CODE[2006-11-04 01:53:46 +09:00]] 版) <http://docs.oasis-open.org/webcgm/v2.0/OS/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]])

[49]
[CITE[XHTML Quicktime Object]] ([CODE[2004-07-26 22:28:44 +09:00]] 版) <http://realdev1.realise.com/rossa/rendertest/quicktime.html>
([[名無しさん]] [WEAK[2007-02-14 10:12:18 +00:00]])

[52]
[CITE[Chapter 2]] ([CODE[1998-05-20 00:22:16 +09:00]] 版) <http://www.w3.org/People/Raggett/book4/ch02.html>
([[名無しさん]])

[53]
[CITE@@en[Adding Multimedia in Web Documents (part 1) - The Web Standards Project]] ([CODE[2007-03-21 13:51:58 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/jun2004/>
([[名無しさん]])

[54]
[CITE@@en[Adding Multimedia in Web Documents (part 2) - The Web Standards Project]] ([CODE[2007-03-21 13:55:31 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/may2005/>
([[名無しさん]])

[56]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 13:59:06 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/chapter10.asp>
([[名無しさん]])

[57]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:05:19 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_2.asp>
([[名無しさん]])

[58]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:07:53 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_3.asp>
([[名無しさん]])

[59]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:11:03 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_4.asp>
([[名無しさん]])

[60]
[CITE@@en[Re: Eolas vs. <object>]] ([[Karl Dubost]] 著, [CODE[2007-04-18 08:28:14 +09:00]] 版) <http://lists.w3.org/Archives/Public/public-html/2007Apr/1086.html>
([[名無しさん]])

[61]
[CITE[<object> element feedback]] ([[Ian Hickson <ian@@...>]] 著, [CODE[2008-05-06 06:08:15 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/14002>
([[名無しさん]])


[62]
[CITE@@en[Re: <object> content-type sniffing (detailed review of Semantics)]] ([[Ian Hickson]] 著, [TIME[2008-07-25 07:33:05 +09:00]] 版) <http://lists.w3.org/Archives/Public/public-html/2008Jul/0326.html>
([[名無しさん]])


[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])

[38]
>>37 [CITE@@en[Test suite: Embedded content]]
<mid:BAY109-F2372EBA9EF06CCFEC8292DB4480@@phx.gbl>,
<http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/5003>

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])

[[#comment]]


* メモ

[50]
[CITE[Global.asa ??????]] ([CODE[2007-02-18 11:36:39 +09:00]] 版) <http://msdn.microsoft.com/library/ja/default.asp?url=/library/ja/jpiis/iishelp/iis/htm/asp/glob822b.asp>
([[名無しさん]])@


1.26
log
@auto-committed
@
text
@d1 539
a539 538


* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:状態:[[W3C]] [[勧告]]
:[[局所名]]:[CODE(HTMLe)@@en[object]]
([Q@@en[object]] ([Q[[[物体]]]]) より)
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)@@en[[[alt]]]]	,[CODE(SGML)@@en[%[[Text]]]]	,(なし)	,[[代替文]]	,非標準
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)@@en[[[copyright]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)@@en[[[viewastext]]]]	,([[真偽値属性]])	,([[偽]])	,	,非標準
,[CODE(HTMLa)@@en[[[vjscodebase]]]]	,[CODE(SGML)@@en[%[[URI]]]]	,(なし)	,	,非標準	,[[Visual J# .NET]]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[39]
'''なぜ行内要素の[CODE(HTMLe)@@en[object]]の内容が[CODE(SGML)@@en[%[[flow]];]]なのか'''

どうして[[HTML 4]]で[[行内要素]]である[CODE(HTMLe)@@en[[[object]]]]の[[内容]]として[[ブロック水準要素]]が認められているのでしょうか?

仕様書案をたどってみると、最初のまだ[[要素型名]]が[CODE(HTMLe)@@en[[[insert]]]]であった頃から、[[内容モデル]]は実質的に変わっていないことがわかります。
[[HTML]]は歴史的に[[ブロック水準要素]]なしに[[行内要素]]や[[文字データ]]が現れることを許容してきましたから、
はじめのうちは不自然なことではありませんでした。

しかし、[[HTML 4]]案の途中から[[移行用DTD]]と[[厳密DTD]]の区別が導入されて、[[厳密DTD]]では[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]として[[行内要素]]を置くことができなくなりました。
[CODE(HTMLe)@@en[[[object]]]]は[[行内要素]]に分類されたので、
[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]にはなれず、
[[ブロック水準要素]]を介した[[孫]]以下としなければならなくなりました。ところが、
[WEAK[([CODE(HTMLe)@@en[[[blockquote]]]]とは違って)]]
[CODE(HTMLe)@@en[[[object]]]]の[[内容モデル]]は変更されませんでした。

;; 
ちなみに、[[HTML 2.0]]では[CODE(SGML)@@en[%[[HTML.Recommended]];]]な時でも[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]になり得る[[要素型]]に[CODE(HTMLe)@@en[[[img]]]]も含まれていました。

([[名無しさん]])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** フォーム制御子

[45]
[[Web Forms 2.0]] は [[HTML 4]] の [CODE(HTMLe)@@en[[[object]]]]
as form control にまったく言及がないわけですが、
[[Web Forms 2.0]] は [[HTML 4]] の拡張であって置き換えではないので、
依然 [CODE(HTMLe)@@en[[[object]]]] as form control 
も使えるのだそうな。

;; [CITE@@en[[whatwg] WebForms 2.0 and object controls]]
<http://listserver.dreamhost.com/pipermail/whatwg-whatwg.org/2005-April/003596.html>

[46]
でも既存の[[フォーム制御子]]の一覧
<IW:WF2:"#existing">
にも[[フォーム制御子]]の定義
<IW:WF2:"#form-control">
にも [CODE(HTMLe)@@en[[[object]]]] 
は言及されていない件。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[40]
[[RDF/XML]]を[[HTML]]に埋め込むために[CODE(HTMLe)@@en[[[object]]]]を使えばよいとの意見もありますが、
[[[CODE(HTMLe)@@en[object]] hack]]同様に濫用であって望ましくないです。

([[名無しさん]] [sage])

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[51]
[CITE[ObjectTestResults - ESW Wiki]] ([CODE[2007-03-10 12:09:38 +09:00]] 版) <http://esw.w3.org/topic/ObjectTestResults>
([[名無しさん]])

[55]
[CITE@@en[Object Tests - The Web Standards Project]] ([CODE[2007-03-21 13:55:52 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/may2005/object-tests/>
([[名無しさん]])

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[41]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[42]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[43]
[CITE[A List Apart: Articles: Bye Bye Embed]] <http://www.alistapart.com/articles/byebyeembed>
([[名無しさん]] [WEAK[2006-07-15 11:35:43 +00:00]])

[44]
[CITE[Bug 335567 - Alternate Content To OBJECT should not participate in HTTP POST]] <https://bugzilla.mozilla.org/show_bug.cgi?id=335567>
([[名無しさん]] [WEAK[2006-08-16 15:04:16 +00:00]])

[47]
[CITE[WebCGM 2.0 - WebCGM Intelligent Content]] ([CODE[2007-01-25 02:12:49 +09:00]] 版) <http://www.w3.org/TR/2007/REC-webcgm20-20070130/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [WEAK[2007-02-02 14:26:18 +00:00]])

[48]
[CITE[WebCGM 2.0 - WebCGM Intelligent Content]] ([CODE[2006-11-04 01:53:46 +09:00]] 版) <http://docs.oasis-open.org/webcgm/v2.0/OS/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]])

[49]
[CITE[XHTML Quicktime Object]] ([CODE[2004-07-26 22:28:44 +09:00]] 版) <http://realdev1.realise.com/rossa/rendertest/quicktime.html>
([[名無しさん]] [WEAK[2007-02-14 10:12:18 +00:00]])

[52]
[CITE[Chapter 2]] ([CODE[1998-05-20 00:22:16 +09:00]] 版) <http://www.w3.org/People/Raggett/book4/ch02.html>
([[名無しさん]])

[53]
[CITE@@en[Adding Multimedia in Web Documents (part 1) - The Web Standards Project]] ([CODE[2007-03-21 13:51:58 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/jun2004/>
([[名無しさん]])

[54]
[CITE@@en[Adding Multimedia in Web Documents (part 2) - The Web Standards Project]] ([CODE[2007-03-21 13:55:31 +09:00]] 版) <http://www.webstandards.org/learn/articles/askw3c/may2005/>
([[名無しさん]])

[56]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 13:59:06 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/chapter10.asp>
([[名無しさん]])

[57]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:05:19 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_2.asp>
([[名無しさん]])

[58]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:07:53 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_3.asp>
([[名無しさん]])

[59]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([CODE[2007-03-21 14:11:03 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_4.asp>
([[名無しさん]])

[60]
[CITE@@en[Re: Eolas vs. <object>]] ([[Karl Dubost]] 著, [CODE[2007-04-18 08:28:14 +09:00]] 版) <http://lists.w3.org/Archives/Public/public-html/2007Apr/1086.html>
([[名無しさん]])

[61]
[CITE[<object> element feedback]] ([[Ian Hickson <ian@@...>]] 著, [CODE[2008-05-06 06:08:15 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/14002>
([[名無しさん]])


[62]
[CITE@@en[Re: <object> content-type sniffing (detailed review of Semantics)]] ([[Ian Hickson]] 著, [TIME[2008-07-25 07:33:05 +09:00]] 版) <http://lists.w3.org/Archives/Public/public-html/2008Jul/0326.html>
([[名無しさん]])


[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])

[38]
>>37 [CITE@@en[Test suite: Embedded content]]
<mid:BAY109-F2372EBA9EF06CCFEC8292DB4480@@phx.gbl>,
<http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/5003>

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])

[[#comment]]


* メモ

[50]
[CITE[Global.asa ??????]] ([CODE[2007-02-18 11:36:39 +09:00]] 版) <http://msdn.microsoft.com/library/ja/default.asp?url=/library/ja/jpiis/iishelp/iis/htm/asp/glob822b.asp>
@


1.25
log
@auto-committed
@
text
@d444 4
d449 2
a450 2
[61]
[CITE[<object> element feedback]] ([[Ian Hickson <ian@@...>]] 著, [TIME[2008-05-06 06:08:15 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/14002>
@


1.24
log
@auto-committed
@
text
@d440 4
d445 2
a446 2
[60]
[CITE@@en[Re: Eolas vs. <object>]] ([[Karl Dubost]] 著, [TIME[2007-04-18 08:28:14 +09:00]] 版) <http://lists.w3.org/Archives/Public/public-html/2007Apr/1086.html>
@


1.23
log
@auto-committed
@
text
@d436 4
d441 2
a442 2
[59]
[CITE[A Sample Chapter From HTML 4.01 Programmer's Reference by Wrox Publication]] ([TIME[2007-03-21 14:11:03 +09:00]] 版) <http://www.devasp.com/samplechapters/html401/Chapter10_4.asp>
@


1.22
log
@auto-committed
@
text
@d359 4
d412 24
d437 2
a438 2
[52]
[CITE[Chapter 2]] ([TIME[1998-05-20 00:22:16 +09:00]] 版) <http://www.w3.org/People/Raggett/book4/ch02.html>
@


1.21
log
@auto-committed
@
text
@d355 4
d408 6
d498 2
a499 3
[CITE[Global.asa ??????]] ([TIME[2007-02-18 11:36:39 +09:00]] 版) <http://msdn.microsoft.com/library/ja/default.asp?url=/library/ja/jpiis/iishelp/iis/htm/asp/glob822b.asp>
([[名無しさん]])

@


1.20
log
@auto-committed
@
text
@a399 1

d401 1
a401 1
[CITE[XHTML Quicktime Object]] ([TIME[2004-07-26 22:28:44 +09:00]] 版) <http://realdev1.realise.com/rossa/rendertest/quicktime.html>
a403 1

d485 6
a490 1
* メモ@


1.19
log
@auto-committed
@
text
@a395 1

d397 1
a397 1
[CITE[WebCGM 2.0 - WebCGM Intelligent Content]] ([TIME[2006-11-04 01:53:46 +09:00]] 版) <http://docs.oasis-open.org/webcgm/v2.0/OS/WebCGM20-IC.html#webcgm_3_4>
d399 5
@


1.18
log
@auto-committed
@
text
@d1 482
a482 470

* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:状態:[[W3C]] [[勧告]]
:[[局所名]]:[CODE(HTMLe)@@en[object]]
([Q@@en[object]] ([Q[[[物体]]]]) より)
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)@@en[[[alt]]]]	,[CODE(SGML)@@en[%[[Text]]]]	,(なし)	,[[代替文]]	,非標準
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)@@en[[[copyright]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)@@en[[[viewastext]]]]	,([[真偽値属性]])	,([[偽]])	,	,非標準
,[CODE(HTMLa)@@en[[[vjscodebase]]]]	,[CODE(SGML)@@en[%[[URI]]]]	,(なし)	,	,非標準	,[[Visual J# .NET]]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[39]
'''なぜ行内要素の[CODE(HTMLe)@@en[object]]の内容が[CODE(SGML)@@en[%[[flow]];]]なのか'''

どうして[[HTML 4]]で[[行内要素]]である[CODE(HTMLe)@@en[[[object]]]]の[[内容]]として[[ブロック水準要素]]が認められているのでしょうか?

仕様書案をたどってみると、最初のまだ[[要素型名]]が[CODE(HTMLe)@@en[[[insert]]]]であった頃から、[[内容モデル]]は実質的に変わっていないことがわかります。
[[HTML]]は歴史的に[[ブロック水準要素]]なしに[[行内要素]]や[[文字データ]]が現れることを許容してきましたから、
はじめのうちは不自然なことではありませんでした。

しかし、[[HTML 4]]案の途中から[[移行用DTD]]と[[厳密DTD]]の区別が導入されて、[[厳密DTD]]では[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]として[[行内要素]]を置くことができなくなりました。
[CODE(HTMLe)@@en[[[object]]]]は[[行内要素]]に分類されたので、
[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]にはなれず、
[[ブロック水準要素]]を介した[[孫]]以下としなければならなくなりました。ところが、
[WEAK[([CODE(HTMLe)@@en[[[blockquote]]]]とは違って)]]
[CODE(HTMLe)@@en[[[object]]]]の[[内容モデル]]は変更されませんでした。

;; 
ちなみに、[[HTML 2.0]]では[CODE(SGML)@@en[%[[HTML.Recommended]];]]な時でも[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]になり得る[[要素型]]に[CODE(HTMLe)@@en[[[img]]]]も含まれていました。

([[名無しさん]])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]

** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]

** フォーム制御子

[45]
[[Web Forms 2.0]] は [[HTML 4]] の [CODE(HTMLe)@@en[[[object]]]]
as form control にまったく言及がないわけですが、
[[Web Forms 2.0]] は [[HTML 4]] の拡張であって置き換えではないので、
依然 [CODE(HTMLe)@@en[[[object]]]] as form control 
も使えるのだそうな。

;; [CITE@@en[[whatwg] WebForms 2.0 and object controls]]
<http://listserver.dreamhost.com/pipermail/whatwg-whatwg.org/2005-April/003596.html>

[46]
でも既存の[[フォーム制御子]]の一覧
<IW:WF2:"#existing">
にも[[フォーム制御子]]の定義
<IW:WF2:"#form-control">
にも [CODE(HTMLe)@@en[[[object]]]] 
は言及されていない件。

[[#comment]]

** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[40]
[[RDF/XML]]を[[HTML]]に埋め込むために[CODE(HTMLe)@@en[[[object]]]]を使えばよいとの意見もありますが、
[[[CODE(HTMLe)@@en[object]] hack]]同様に濫用であって望ましくないです。

([[名無しさん]] [sage])

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[41]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[42]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[43]
[CITE[A List Apart: Articles: Bye Bye Embed]] <http://www.alistapart.com/articles/byebyeembed>
([[名無しさん]] [WEAK[2006-07-15 11:35:43 +00:00]])


[44]
[CITE[Bug 335567 - Alternate Content To OBJECT should not participate in HTTP POST]] <https://bugzilla.mozilla.org/show_bug.cgi?id=335567>
([[名無しさん]] [WEAK[2006-08-16 15:04:16 +00:00]])


[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])

[38]
>>37 [CITE@@en[Test suite: Embedded content]]
<mid:BAY109-F2372EBA9EF06CCFEC8292DB4480@@phx.gbl>,
<http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/5003>

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])

[[#comment]]


@


1.17
log
@auto-committed
@
text
@d1 470
a470 456


* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:状態:[[W3C]] [[勧告]]
:[[局所名]]:[CODE(HTMLe)@@en[object]]
([Q@@en[object]] ([Q[[[物体]]]]) より)
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)@@en[[[alt]]]]	,[CODE(SGML)@@en[%[[Text]]]]	,(なし)	,[[代替文]]	,非標準
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)@@en[[[copyright]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)@@en[[[viewastext]]]]	,([[真偽値属性]])	,([[偽]])	,	,非標準
,[CODE(HTMLa)@@en[[[vjscodebase]]]]	,[CODE(SGML)@@en[%[[URI]]]]	,(なし)	,	,非標準	,[[Visual J# .NET]]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[39]
'''なぜ行内要素の[CODE(HTMLe)@@en[object]]の内容が[CODE(SGML)@@en[%[[flow]];]]なのか'''

どうして[[HTML 4]]で[[行内要素]]である[CODE(HTMLe)@@en[[[object]]]]の[[内容]]として[[ブロック水準要素]]が認められているのでしょうか?

仕様書案をたどってみると、最初のまだ[[要素型名]]が[CODE(HTMLe)@@en[[[insert]]]]であった頃から、[[内容モデル]]は実質的に変わっていないことがわかります。
[[HTML]]は歴史的に[[ブロック水準要素]]なしに[[行内要素]]や[[文字データ]]が現れることを許容してきましたから、
はじめのうちは不自然なことではありませんでした。

しかし、[[HTML 4]]案の途中から[[移行用DTD]]と[[厳密DTD]]の区別が導入されて、[[厳密DTD]]では[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]として[[行内要素]]を置くことができなくなりました。
[CODE(HTMLe)@@en[[[object]]]]は[[行内要素]]に分類されたので、
[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]にはなれず、
[[ブロック水準要素]]を介した[[孫]]以下としなければならなくなりました。ところが、
[WEAK[([CODE(HTMLe)@@en[[[blockquote]]]]とは違って)]]
[CODE(HTMLe)@@en[[[object]]]]の[[内容モデル]]は変更されませんでした。

;; 
ちなみに、[[HTML 2.0]]では[CODE(SGML)@@en[%[[HTML.Recommended]];]]な時でも[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]になり得る[[要素型]]に[CODE(HTMLe)@@en[[[img]]]]も含まれていました。

([[名無しさん]])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** 応用

[[#comment]]


*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[40]
[[RDF/XML]]を[[HTML]]に埋め込むために[CODE(HTMLe)@@en[[[object]]]]を使えばよいとの意見もありますが、
[[[CODE(HTMLe)@@en[object]] hack]]同様に濫用であって望ましくないです。

([[名無しさん]] [sage])

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[41]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[42]
[CITE[OASIS CGM Open specification - WebCGM 2.0 - WebCGM Intelligent Content]] <http://www.w3.org/Submission/2006/SUBM-WebCGM20-20060313/WebCGM20-IC.html#webcgm_3_4>
([[名無しさん]] [sage])

[43]
[CITE[A List Apart: Articles: Bye Bye Embed]] <http://www.alistapart.com/articles/byebyeembed>
([[名無しさん]] [WEAK[2006-07-15 11:35:43 +00:00]])


[44]
[CITE[Bug 335567 - Alternate Content To OBJECT should not participate in HTTP POST]] <https://bugzilla.mozilla.org/show_bug.cgi?id=335567>
([[名無しさん]] [WEAK[2006-08-16 15:04:16 +00:00]])


[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])

[38]
>>37 [CITE@@en[Test suite: Embedded content]]
<mid:BAY109-F2372EBA9EF06CCFEC8292DB4480@@phx.gbl>,
<http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/5003>

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])

[[#comment]]


@


1.16
log
@auto-committed
@
text
@a365 1

d369 5
@


1.15
log
@auto-committed
@
text
@a361 1

d365 5
@


1.14
log
@auto-committed
@
text
@a253 1

d255 2
a256 2
[[RDF/XML]]を[[HTML]]に埋め込むために[CODE(HTMLe)@@en[[[object]]]]を使えばよいとの意見もありますが、
[[[CODE(HTMLe)@@en[object]] hack]]同様に濫用であって望ましくないです。
a259 1

d357 10
@


1.13
log
@auto-committed
@
text
@d1 440
a440 436

* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:状態:[[W3C]] [[勧告]]
:[[局所名]]:[CODE(HTMLe)@@en[object]]
([Q@@en[object]] ([Q[[[物体]]]]) より)
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)@@en[[[alt]]]]	,[CODE(SGML)@@en[%[[Text]]]]	,(なし)	,[[代替文]]	,非標準
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)@@en[[[copyright]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)@@en[[[viewastext]]]],([[真偽値属性]]),([[偽]]),,非標準
,[CODE(HTMLa)@@en[[[vjscodebase]]]]	,[CODE(SGML)@@en[%[[URI]]]]	,(なし)	,	,非標準	,[[Visual J# .NET]]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])


[39]
'''なぜ行内要素の[CODE(HTMLe)@@en[object]]の内容が[CODE(SGML)@@en[%[[flow]];]]なのか'''

どうして[[HTML 4]]で[[行内要素]]である[CODE(HTMLe)@@en[[[object]]]]の[[内容]]として[[ブロック水準要素]]が認められているのでしょうか?

仕様書案をたどってみると、最初のまだ[[要素型名]]が[CODE(HTMLe)@@en[[[insert]]]]であった頃から、[[内容モデル]]は実質的に変わっていないことがわかります。
[[HTML]]は歴史的に[[ブロック水準要素]]なしに[[行内要素]]や[[文字データ]]が現れることを許容してきましたから、
はじめのうちは不自然なことではありませんでした。

しかし、[[HTML 4]]案の途中から[[移行用DTD]]と[[厳密DTD]]の区別が導入されて、[[厳密DTD]]では[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]として[[行内要素]]を置くことができなくなりました。
[CODE(HTMLe)@@en[[[object]]]]は[[行内要素]]に分類されたので、
[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]にはなれず、
[[ブロック水準要素]]を介した[[孫]]以下としなければならなくなりました。ところが、
[WEAK[([CODE(HTMLe)@@en[[[blockquote]]]]とは違って)]]
[CODE(HTMLe)@@en[[[object]]]]の[[内容モデル]]は変更されませんでした。

;;
ちなみに、[[HTML 2.0]]では[CODE(SGML)@@en[%[[HTML.Recommended]];]]な時でも[CODE(HTMLe)@@en[[[body]]]][[要素]]の[[子供]]になり得る[[要素型]]に[CODE(HTMLe)@@en[[[img]]]]も含まれていました。




([[名無しさん]])


[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** 応用

[[#comment]]


*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])

[38]
>>37 [CITE@@en[Test suite: Embedded content]]
<mid:BAY109-F2372EBA9EF06CCFEC8292DB4480@@phx.gbl>,
<http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/5003>

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])

[[#comment]]


@


1.12
log
@auto-committed
@
text
@d1 1
d46 1
a46 1
,[CODE(HTMLa)@@en[[[alt]]]],[CODE(SGML)@@en[%[[Text]]]],(なし),[[代替文]],非標準
d54 1
a54 1
,[CODE(HTMLa)@@en[[[copyright]]]],,,,非標準
d84 2
a85 1
,[CODE(HTMLa)@@en[[[vjscodebase]]]],[CODE(SGML)@@en[%[[URI]]]],(なし),,非標準,[[Visual J# .NET]]
d124 26
a426 1

a431 1

a432 1

@


1.11
log
@auto-committed
@
text
@d1 400
a400 397


* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:[[局所名]]:[CODE(HTMLe)[object]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[accesskey]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]]	,	,	,境界線	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ源	,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]] [[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]]]]	,	,	,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** 応用

[[#comment]]


*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[[#comment]]


** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[36]
[CITE[スラッシュドット ジャパン | IEのobjectタグにクラッシュや任意コード実行可能な脆弱性]] <http://slashdot.jp/security/05/07/01/2355213.shtml?topic=41>
([[名無しさん]] [WEAK[2005-07-07 14:21:21 +00:00]])

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
- [[WebCGM]]
-- 第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
-- 第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[37]
[CITE[Test suite: Embedded content]] <http://zcorpan.1go.dk/test/html/embedded/>
([[名無しさん]] [WEAK[2005-11-29 03:44:54 +00:00]])


[38]
d405 7
a411 7

([[名無しさん]] [WEAK[2005-11-29 03:49:34 +00:00]])


[[#comment]]


@


1.10
log
@auto-committed
@
text
@a233 1

a237 1

d391 14
@


1.9
log
@auto-committed
@
text
@d1 396
a396 387
* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:[[局所名]]:[CODE(HTMLe)[object]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,属性名,属性値,既定値,説明,状態,出典
,[CODE(HTMLa)[[[accesskey]]]],,,,非標準
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[border]]]],,,境界線,非標準
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[code]]]],,,,非標準
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[datafld]]]],,,データ欄,非標準
,[CODE(HTMLa)[[[datasrc]]]],[CODE(SGML)[%[[URI]]]],,データ源,非標準
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(XMLa)[[QN[slide:[VAR[*]]][[[http://www.w3.org/Consortium/Offices/Presentations/xsltSlidemaker]]]],,,
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]],[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定,==,[[名前空間名]],W3C 勧告,[[XHTML m12n]]

[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[31]
HTML 4 DTD の[[注釈]] (参考) には
[Q[PARAM elements should precede other content. SGML mixed content model technicality precludes specifying this formally ...]] 
([CODE(HTMLe)[param]] は他の内容の前に来るべきです。 SGML の[[混合内容模型]]ではこれを形式的に記述できません。。。)
と書かれています。
([[名無しさん]] [sage])

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** 応用

[[#comment]]


*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] [[[CODE(HTMLe)[object]] hack]]

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[[#comment]]

** 安全性

[34] [CODE(HTMLe)[[[img]]]] 要素型の安全性の項もご覧下さい。

[[#comment]]

** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[33] [[SVG]] 画像の埋込みで、未対応なら代わりに
[[PNG]] 画像を使う例

[PRE(HTML example)[
<[CODE(HTMLe)[p]]><[CODE(HTMLe)[a]] [CODE(HTMLa)[name]]="figure41">
<[CODE(HTMLe)[object]] [CODE(HTMLa)[data]]="[CODE(URI)[figures/fig41.svg]]" [CODE(HTMLa)[type]]="[CODE(MIME)[image/svg+xml]]" [CODE(HTMLa)[height]]="290" [CODE(HTMLa)[width]]="640">
   <[CODE(HTMLe)[img]] [CODE(HTMLa)[src]]="[CODE(URI)[png-figures/fig41.png]]" [CODE(HTMLa)[alt]]="Figure 4.1: Relationships between
source, reference, PNG, and display images" [CODE(HTMLa)[height]]="280" [CODE(HTMLa)[width]]="640">
</[CODE(HTMLe)[object]]>
</[CODE(HTMLe)[a]]></[CODE(HTMLe)[p]]>
]PRE]

出典:
[CITE[Portable Network Graphics (PNG) Specification (Second Edition)]] 
<http://www.w3.org/TR/2003/REC-PNG-20031110/#figure41>

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
[CODE[Mozilla/5.0 (Windows; U; Windows NT 5.1; ja-JP; rv:1.7) Gecko/20040803 Firefox/0.9.3]]
でありますが、 [[XSLT]] [[結果木]]に [CODE(HTMLe)[object]] 
で他の HTML 文書を埋込むと、埋込んだ文書がなぜか強制的に [[UTF-8]] とみなされてしまいます。
([CODE(HTTP)[[[Content-Type]]]] に [CODE(MIME)[[[charset]]]] を指定しているのに無視されます。)
フレーム内の[[文字コード]]を強制指定する手段がないので[[文字化け]]を回避できません。
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])

[35]
-[[WebCGM]]
--第1版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/1999/REC-WebCGM-19990121/REC-03-CGM-IC#webcgm_3_4>
--第2版: [CITE[WebCGM Intelligent Content]] 
<http://www.w3.org/TR/2001/REC-WebCGM-20011217/REC-03-CGM-IC.html#webcgm_3_4>

[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">


[32]
HTML 4 DTD の[[注釈]] (参考) には
[Q[serialized applet file]] と書かれています。
([[名無しさん]] [sage])


[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[[#comment]]


@


1.8
log
@auto-committed
@
text
@d309 7
@


1.7
log
@auto-committed
@
text
@d216 1
a216 4
[1] ''bubble hour - 2001/12 #1'' <http://www1.odn.ne.jp/bungaku-shitsu/appendix/diary/d0112-1.html>: 
[CODE(HTMLe)[object]] hack の「発見」。なんと[[神崎]]氏の見解も載っている。

[3] [WEAK[2004-02-11 18:39:43 +00:00]] ''[[satoshii]]'': >>1 まぁ、なんつーか…お察し下さい。
@


1.6
log
@auto-committed
@
text
@d72 1
@


1.5
log
@auto-committed
@
text
@d1 302
a302 269



* object 要素型 (HTML, XHTML 1)

[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]] [オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
- [[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[archive]]]]	,[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型	,[HTML 4]
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]])	,(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[standby]]]]	,[CODE(SGML)[%[[Text]]]]	,	,読込み中メッセージ	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,(自動)	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型	,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]


[[#comment]]


** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[[#comment]]


** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]


** 応用

[[#comment]]


*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]


** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[29]
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。

([[名無しさん]])

[[#comment]]


*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]] [[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]


** 不思議解釈

[1] ''bubble hour - 2001/12 #1'' <http://www1.odn.ne.jp/bungaku-shitsu/appendix/diary/d0112-1.html>: 
[CODE(HTMLe)[object]] hack の「発見」。なんと[[神崎]]氏の見解も載っている。

[3] [WEAK[2004-02-11 18:39:43 +00:00]] ''[[satoshii]]'': >>1 まぁ、なんつーか…お察し下さい。

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[[#comment]]


** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[30]
d308 75
a382 69
(埋込む文書も UTF-8 にするしかないと思われ。)
([[名無しさん]] [WEAK[2005-01-31 22:58:02 +00:00]])


[[#comment]]


* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[[#comment]]


** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]


** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]


** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]


** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[[#comment]]


@


1.4
log
@auto-committed
@
text
@d1 1
a1 1
#?SuikaWiki/0.9
a154 1

d156 3
a158 3
[CODE(HTMLa)[usemap]] 属性を指定した場合は特別な扱いが規定されています ([HTML 4] <IW:HTML4:"struct/objects.html#adef-coords">)。
詳しくは [CODE(HTMLa)[[[usemap]>>17]]]
をみてください。
a161 1

d268 10
@


1.3
log
@auto-committed
@
text
@d1 335
a335 303
* object 要素型 (HTML, XHTML 1)
[4] [[HTML]] の [DFN[[CODE(HTMLe)[object]] 要素型]]は、
HTML 文書に[RUBY[[[物体]]][オブジェクト]]を埋込むための一般的な仕組みを提供しています。

[5] 仕様書:
-[[HTML 4]]
-- 13.1 Introduction to objects, images, and applets
<IW:HTML4:"struct/objects.html#h-13.1">
-- 13.3 Generic inclusion: the [CODE(HTMLe)[OBJECT]] element
<IW:HTML4:"objects.html#edef-OBJECT">
-- 13.5 Notes on embedded documents
<IW:HTML4:"struct/objects.html#embedded-documents">

[9] 多くの [[WWWブラウザ]]は自前で HTML や画像などを解釈することができますし、
そうでない形式では他のプログラムを起動して処理させるなどすることができます。
[CODE(HTMLe)[object]] 
を使うと外部のプログラムを起動するか著者の指定したプログラムを使うか、
といったようなことを記述できます。 [HTML 4]

ほとんどの場合著者は次の3種類の情報を指定する必要があります。
常に3種類とも必要ではなく、場合によっていろいろです。 [HTML 4]

- 取込む物体の実装。例えば、時計アプレットであればアプレットの実行可能符号の場所。
- レンダリングするデータ。例えば、フォント・データをレンダリングするプログラムなら、
フォント・データの場所。
- 実行時の追加の引数。例えば、アプレットの初期値。

前2者は属性、引数は子 [CODE(HTMLe)[[[param]]]] 要素を使います。

[6]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]]:[CODE(SGML)[[CODE(HTMLe)[[[param]]]]*]] の後に [CODE(SGML)[(%[[flow]])*]]
:出現できる文脈:[CODE(SGML)[%inline]] な文脈。
(歴史的変遷: <http://suika.fam.cx/www/2004/html/classes>)
:[[属性]]:
,[CODE(HTMLa)[[[align]]]]	,	,	,揃え位置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[archive]]]],[CODE(ABNF)[[CODE(SGML)[ [%[[URI]]]] *(*[[s]] [CODE(SGML)[%URI]])] ]],,,[HTML 4]
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML4] %[[coreattr]]
,[CODE(HTMLa)[[[classid]]]]	,[CODE(SGML)[%[[URI]]]]	,	,実装識別子	,[HTML 4]
,[CODE(HTMLa)[[[codebase]]]]	,[CODE(SGML)[%[[URI]]]]	,(継承)	,基底 URI	,[HTML 4]
,[CODE(HTMLa)[[[codetype]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,符号内容型,[HTML 4]
,[CODE(HTMLa)[[[data]]]]	,[CODE(SGML)[%[[URI]]]]	,	,データ URI	,[HTML 4]
,[CODE(HTMLa)[[[declare]]]]	,([[真偽値属性]]),(偽)	,宣言のみ	,[HTML 4]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML4] %[[i18n]]
,[CODE(HTMLa)[[[height]]]]	,[CODE(SGML)[%[[Length]]]]	,	,高さ	,[HTML 4]
,[CODE(HTMLa)[[[hspace]]]]	,	,	,水平余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML4] %coreattr
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML1]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,説明文書	,[HTML 4]
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,名前	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML4] %events
,[CODE(HTMLa)[[[standby]]]],[CODE(SGML)[%[[Text]]]],,読込み中メッセージ,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML4] %coreattr
,[CODE(HTMLa)[[[tabindex]]]],[CODE(SGML)[[[NUMBER]]]],(自動),タブ順,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML4] %coreattr
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,	,データ内容型,[HTML 4]
,[CODE(HTMLa)[[[usemap]]]]	,	,(なし)	,[[クライアント側画像写像]]	,[HTML 4]
,[CODE(HTMLa)[[[vspace]]]]	,	,	,垂直余白	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[width]]]]	,[CODE(SGML)[%Length]]	,	,幅	,[HTML 4]

[[#comment]]

** 内容模型

[7] [CODE(HTMLe)[object]] 要素の内容は HTML 4 DTD
では [CODE(SGML)[([CODE(HTMLe)[param]] | %[[flow]];)*]]
とされていますが、仕様書本文の規定により
[CODE(HTMLe)[param]] は他の内容よりも前に来なければなりません。
こうしているのは SGML DTD で直接表現することが困難だからです。

仕様書の記述を超厳密に解釈するなら、どんな[Q[内容]]も
[CODE(HTMLe)[param]] の前に来れないのですから、
[[空白]]や[[注釈宣言]]なども来てはいけないことになってしまいますが、
それではわざわざ DTD で不正確に表現している意味がありませんから、
他の要素や非空白文字を制限していると解釈するのが妥当でしょう。

[14] [CODE(HTMLe)[[[head]]]] 内の [CODE(HTMLe)[object]]
では内容を含めるべきではありません。 [HTML 4]

[Q[べき]]だから禁止じゃないのか・・・。
[CODE(HTMLe)[param]] も入れないべきなのでしょうかねぇ。

[15] 内容には [CODE(HTMLe)[object]] 
をレンダリングできないときの[[代替文]]を入れるべきです。 [HTML 4]

[[#comment]]

** 出現する文脈

[10] [CODE(HTMLe)[object]] は [CODE(SGML)[%[[inline]]]]
が使える場所だけでなく、 [CODE(HTMLe)[[[head]]]]
内に入れることもできます。

この場合、 [[UA]] は普通 [CODE(HTMLe)[head]] をレンダリングしないので、
著者はレンダリングされ得るデータを指定しないように注意するべきです。 [HTML 4]

[[#comment]]

** 応用

[[#comment]]

*** レンダリング

[12] 
仕様書: [[HTML 4]] 13.3.1 Rules for rendering objects
<IW:HTML4:"struct/objects.html#idx-object-3">

[13] [[UA]] は、
= まず、 [CODE(HTMLe)[object]] をレンダリングしようと試みなければなりません。
-- [[内容]]をレンダリングするべきではありません。 
(ということはしても間違いではないのか。)
-- [CODE(HTMLe)[[[param]]]] や [CODE(HTMLe)[[[map]]]] が子供にいないか確認しないといけません。
= 何らかの理由 (しないように設定、資源不足、体系が間違いなど)
でレンダリングできないときには内容をレンダリングしようと試みなければなりません。

[[#comment]]

** 他との関係

[8] [CODE(HTMLe)[object]] 要素は HTML への他の物体
(画像、音声、プログラム、HTML 文書、その他) 
の埋込みのための汎用の仕組みとして標準化されました。
[CODE(HTMLe)[[[img]]]], [CODE(HTMLe)[[[applet]]]],
[CODE(HTMLe)[[[iframe]]]], [CODE(HTMLe)[[[embed]]]],
その他同種の独自拡張の代替として使用できます。

[11] [CODE(HTMLa)[[[classid]]]] によって実装を、
[CODE(HTMLa)[[[data]]]] によってデータを指定することができますが、
両方指定した場合の挙動は未定義です。
可搬性のため、実装への追加データには [CODE(HTMLe)[param]]
を使うべきです。 [SUP[ [HTML 4] ]]

[[#comment]]

*** HTML 文書の埋込み

[25] 文書を参照する際に、単に[[リンク]]するだけでなく、
文書中に埋込みたいと思うことがあります。
そのような場合には、 [CODE(HTMLe)[object]] 要素型か
[CODE(HTMLe)[[[iframe]]]] 要素型が使えます。

しかし、 [CODE(HTMLe)[object]] と [CODE(HTMLe)[iframe]]
には幾つか異なる点があります。 [SUP[ [HTML 4] ]]

[CODE(HTMLe)[iframe]] は
- [[内容模型]]が異なります。
- 対象[RUBY[[[枠]]][[[フレーム]]]]となることができます。
- [[UA]] で[Q[選択]]できます。
(選択すると印刷、 HTML ソース閲覧などの焦点を得ます。)
-- 選ばれた枠は選ばれていない枠と違ってレンダリングできます。
(例えば選択した枠の周りに枠線を描くとかです。)

前2者はともかく、最後の1つは、こんなこと仕様書に書かれちゃうと
[CODE(HTMLe)[object]] を甚だ不便に実装しなければならないことになってしまいます。
どうしてこんなおかしなことを書いてしまったのでしょう?
([[WinIE 5]] では [CODE(HTMLe)[iframe]] と HTML 文書の [CODE(HTMLe)[object]]
を同じように扱っているように見えます。 [[WinIE 4]] でもおそらくそうでしょう。
仕様書の筆者は何を考えていたのでしょうか。)

[26] 埋込まれた文書は親文書と完全に独立になります。
例えば、[[基底URI]] は継承されません。
たまたま表示されているのが窓全体ではなく他の文書の一部であったという程度です。
[SUP[ [HTML 4] ]]

[27] 自分自身を埋込んだ場合の UA の挙動は未定義です [SUP[ [HTML 4] ]]。
最低でも、無限循環に陥って利用者が手を出せなくなる事態は避けるべきでしょう。

[[#comment]]

** 不思議解釈

[1] ''bubble hour - 2001/12 #1'' <http://www1.odn.ne.jp/bungaku-shitsu/appendix/diary/d0112-1.html>: 
[CODE(HTMLe)[object]] hack の「発見」。なんと[[神崎]]氏の見解も載っている。

[3] [WEAK[2004-02-11 18:39:43 +00:00]] ''[[satoshii]]'': >>1 まぁ、なんつーか…お察し下さい。

[2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 
一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、
本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 
(そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! 
[CODE(WikiPage)[[[embed]]]] 参照。)

[[#comment]]

** 例

[16] 時計アプレットの例
[PRE(HTML)[
<P><OBJECT classid="http://www.miamachina.it/analogclock.py">
An animated clock.
</OBJECT>
]PRE]
[WEAK[(HTML 4 仕様書より)]]

レンダリングできないときには代替文 [Q[An animated clock.]]
がレンダリングされます。

この場合 UA が解釈したらすぐに時計がレンダリングされますが、
先に宣言だけしておいてレンダリングを遅延させることができます。 [HTML 4]

[17] 色々な形式の例
[PRE(HTML)[
<P>                 <!-- 最初に Python アプレットを試す -->
<OBJECT title="宇宙から見た地球" 
        classid="http://www.observer.mars.example/TheEarth.py">
                    <!-- 駄目なら MPEG 動画を試す -->
  <OBJECT data="TheEarth.mpeg" type="application/mpeg">
                    <!-- 駄目なら PNG 静止画像を試す -->
    <OBJECT data="TheEarth.png" type="image/png">
                    <!-- 駄目なら文字列を表示 -->
      宇宙から見た<STRONG>地球</STRONG>。
    </OBJECT>
  </OBJECT>
</OBJECT>
]PRE]
[WEAK[(HTML 4 仕様書より、改)]]

[28] HTML 文書を埋込む例
[PRE(HTML)[
...text before...
<OBJECT data="embed_me.html" type="text/html">
It is described in
<A href="embed_me.html" type="text/html">another document</A>.
</OBJECT>
...text after...
]PRE]
[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]

** メモ

[[#comment]]

* applet 要素 object 属性 (HTML, XHTML 1)

[18] [[HTML]] の [CODE(HTMLe)[[[applet]]]] 要素の
[DFN[[CODE(HTMLa)[object]] 属性]]は、
applet の状態の直列化表現を含む資源を指定します。

[19] 仕様書:
[[HTML 4]]
<IW:HTML4:"struct/objects.html#adef-object">

[[#comment]]

** 代替

[24] この属性は HTML 4 で要素型ごと'''非推奨'''とされています。
代わりに [CODE(HTMLe)[[[object]]]] 要素型と
[CODE(HTMLa)[[[classid]]]] 属性を使うことができます。

[[#comment]]

** 属性値

[21] この属性の値は [CODE(SGML)[[[CDATA]]]] です。
資源 (ファイル) の名前を指定します。
大文字・小文字が区別されます。
[CODE(HTMLa)[[[codebase]]]] に対して相対と解釈されます。

[22] この属性は省略可能ですが、
その場合は [CODE(HTMLe)[[[code]]]] 属性が必須です。

[[#comment]]

** 他との関係

[23] [CODE(HTMLa)[[[code]]]] 属性と [CODE(HTMLa)[object]]
属性は一方が必須です。両方が指定されていて、
級名が一致しない場合は[[誤り]]です。 [SUP[ [HTML 4] ]]

[[#comment]]

** メモ

[20]
直列化データは applet の級名を含んでいますが、実装は含んでいません。
級名は級ファイルまたは書庫 ([CODE(HTMLa)[[[archive]]]])
から実装を取出すのに使います。

Applet が[Q[解直列化]]された時には、
[CODE(Java)[start()]] method は呼び出されますが、 [CODE(Java)[init()]]
method は呼出されません。元の物体が直列化されたときの属性値は復元されません。
この [CODE(HTMLe)[applet]] 実現値に渡された任意の属性が
applet に利用可能になります。
著者は、この機能を使うときには激しく慎重にするべきです。
Applet は直列化する前に止めるべきです。 [SUP[ [HTML 4] ]]

[[#comment]]

@


1.2
log
@auto-committed
@
text
@d1 304
a304 5
#?SuikaWiki/0.9

- [1] ''bubble hour - 2001/12 #1'' <http://www1.odn.ne.jp/bungaku-shitsu/appendix/diary/d0112-1.html>: [CODE(HTML)[OBJECT]] hack の「発見」。なんと[[神崎]]氏の見解も載っている。
- [2] ''(・▽・)えすともほめぱげ(・▽・)(2004-02-10)'' <http://plum.sakura.ne.jp/~s-tomo/tdiary/?date=20040210#p01>: 一見標準の皮をかぶった [CODE(HTMLe)[object]] 要素。だけどそれは腐った WinIE 対策で、本命はその中の [CODE(HTMLe)[[[embed]]]] 要素が本命・・・という話。 (そんなときは [[W3C]] の XHTML 1.0 Transitional + embed DTD を使おう! [CODE(WikiPage)[[[embed]]]] 参照。)
- [3] [WEAK[2004-02-11 18:39:43 +00:00]] ''[[satoshii]]'': >>1 まぁ、なんつーか…お察し下さい。
@


1.1
log
@pre-namespace
@
text
@d4 2
@

