head	1.24;
access;
symbols
	suikawiki3-final:1.24
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.24
date	2008.10.18.03.12.55;	author wakaba;	state Exp;
branches;
next	1.23;

1.23
date	2008.07.27.03.07.26;	author wakaba;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.08.02.53.57;	author wakaba;	state Exp;
branches;
next	1.21;

1.21
date	2008.05.13.04.34.01;	author wakaba;	state Exp;
branches;
next	1.20;

1.20
date	2008.05.03.02.49.59;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2008.04.23.02.55.41;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2008.03.03.03.03.43;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.08.03.42.33;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2007.09.27.02.42.04;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2007.08.18.02.50.10;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2007.06.18.02.52.17;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2007.04.23.02.28.41;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2007.03.13.02.42.10;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.03.02.28.38;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.27.02.27.26;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2007.02.23.02.33.38;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.13.02.17.36;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.13.02.14.12;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.13.02.06.44;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.18.02.08.34;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.03.02.05.39;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.08.02.05.31;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.18.02.01.12;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.13.03.27.27;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.24
log
@auto-committed
@
text
@

* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]

では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]

のような使い方ができるでしょう。

[46]
Hi! Good site respect! <a href="http://literotica.book2u.org/index.html">literotica</a> Visit <a href= http://literotica.book2u.org/index.html >literotica</a> Thanks!
([[Erica]] [freds@@wdds.com])

[55]
Nice site. Thanks.
<a href=http://antenna.vyur.biz/ >antenna</a>
[url=http://antenna.vyur.biz/] antenna [/url]
([[<>]] [<>])

[57]
EY8t4O  <a href="http://emufgrjwkrue.com/">emufgrjwkrue</a>, [url=http://emdbntmbpovi.com/]emdbntmbpovi[/url], [link=http://hnljffjzphbw.com/]hnljffjzphbw[/link], http://sqkzoedheptb.com/
([[zbsshbogl]] [dmmzux@@rdupsq.com] [WEAK[2008-04-19 11:10:16 +00:00]])

[58]
EY8t4O  <a href="http://emufgrjwkrue.com/">emufgrjwkrue</a>, [url=http://emdbntmbpovi.com/]emdbntmbpovi[/url], [link=http://hnljffjzphbw.com/]hnljffjzphbw[/link], http://sqkzoedheptb.com/
([[zbsshbogl]] [dmmzux@@rdupsq.com] [WEAK[2008-04-19 11:10:23 +00:00]])

[59]
EY8t4O  <a href="http://emufgrjwkrue.com/">emufgrjwkrue</a>, [url=http://emdbntmbpovi.com/]emdbntmbpovi[/url], [link=http://hnljffjzphbw.com/]hnljffjzphbw[/link], http://sqkzoedheptb.com/
([[zbsshbogl]] [dmmzux@@rdupsq.com] [WEAK[2008-04-19 11:11:30 +00:00]])

[60]
EY8t4O  <a href="http://emufgrjwkrue.com/">emufgrjwkrue</a>, [url=http://emdbntmbpovi.com/]emdbntmbpovi[/url], [link=http://hnljffjzphbw.com/]hnljffjzphbw[/link], http://sqkzoedheptb.com/
([[zbsshbogl]] [dmmzux@@rdupsq.com] [WEAK[2008-04-19 11:11:39 +00:00]])

[62]
Mam2JM  <a href="http://pgfylsrniskd.com/">pgfylsrniskd</a>, [url=http://sitgbykqiqix.com/]sitgbykqiqix[/url], [link=http://vfgroijvaame.com/]vfgroijvaame[/link], http://tszgppcwjxvx.com/
([[xwmmshv]] [sttyte@@nmhmdd.com] [WEAK[2008-05-08 23:10:38 +00:00]])

[63]
Mam2JM  <a href="http://pgfylsrniskd.com/">pgfylsrniskd</a>, [url=http://sitgbykqiqix.com/]sitgbykqiqix[/url], [link=http://vfgroijvaame.com/]vfgroijvaame[/link], http://tszgppcwjxvx.com/
([[xwmmshv]] [sttyte@@nmhmdd.com] [WEAK[2008-05-08 23:10:50 +00:00]])

[64]
rA2N8z  <a href="http://murhxyzbacjn.com/">murhxyzbacjn</a>, [url=http://nqyufvnhxvbr.com/]nqyufvnhxvbr[/url], [link=http://kzsscqvfqcel.com/]kzsscqvfqcel[/link], http://nlstfuyctomo.com/
([[apmglwcrjwj]] [jmdudn@@koojbg.com] [WEAK[2008-06-03 23:11:04 +00:00]])

[[#comment]]


* [CODE(HTMLa)@@en[target]] 属性 (HTML)

[4] [[HTML]] の 
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[16]
:状態:[[W3C]] [[勧告]] ('''[[非推奨]]''')、
[[WHATWG]] [[WD]] ('''[[非推奨]]''')
:[[要素型]]:
[CODE(HTMLe)@@en[[QN[[[a]]] [http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[area]]] [http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[base]]] [http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[button]]] [http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[form]]] [http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[input]]] [http://www.w3.org/1999/xhtml]]]]
([CODE(HTMLe)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[link]]] [http://www.w3.org/1999/xhtml]]]]
:[[属性名]]:[CODE(HTMLa)@@en[[[target]]]]
([Q@@en[target]] ([Q[対象]]) より)
:[[属性値]]:[CODE(SGML)@@en[%[[FrameTarget]];]] (>>6)
:[[既定値]]:(>>7)

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.17. Extensions to the submit buttons]]
<IW:WF2:"#extensions3">


** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]


** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]


** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。

- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]


** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]


** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]


** 歴史


*** 誕生

[24]
[CODE(HTMLa)@@en[[[target]]]] [[属性]]は、
[[フレーム]]機能の一部として [[Netscape Navigator]] 2
で導入されました。

@@@@ どの[[要素]]に? [[Windows]] 版以外では?

[40]
[CITE[New HTML 3.0 Proposals]] ([CODE[2007-02-26 21:59:55 +09:00]] 版) <http://wp.netscape.com/assist/net_sites/new_html3_prop.html#Target>
([[名無しさん]])

[41]
[CITE[How to target a link to a window]] ([CODE[2007-02-28 00:30:29 +09:00]] 版) <http://web.archive.org/web/19970613222251/www82.netscape.com/eng/mozilla/2.0/relnotes/demo/target.html>
([[名無しさん]])

[[#comment]]


*** 標準化

[25] [[HTML 4]] で、[[非推奨]]ながら
[CODE(HTMLe)@@en[[[a]]]],
[CODE(HTMLe)@@en[[[area]]]],
[CODE(HTMLe)@@en[[[base]]]],
[CODE(HTMLe)@@en[[[form]]]],
[CODE(HTMLe)@@en[[[link]]]]
に [CODE(HTMLa)@@en[[[target]]]] が追加されました。

[19] HTML 4.0 仕様書本文の [CODE(HTMLe)[[[frame]]]] 要素と [CODE(HTMLe)[[[iframe]]]]
要素の定義には誤って [CODE(HTMLa)[target]] 属性の定義への参照が含まれていました。

- [CSECTION@@en[A.1.2 Errors that were corrected]]
<IW:HTML4:"appendix/changes.html#h-A.1.2">

[26] [[XHTML m12n]] では、
[[対象属性]][[モジュール]]という独立した[[モジュール]]が定義されました。

[27] [[XHTML 1.1]] [[1e]] 
は[[対象属性]][[モジュール]]を組み込みませんでした。

[[#comment]]


*** 暗黒時代

[28] [CODE(HTMLa)@@en[[[target]]]] が[[非推奨]]となり、
[[厳密DTD]] や [[XHTML 1.1]] に含まれませんでしたが、
既に下火になっていた[[フレーム]]はともかく、
[CODE(HTML)@@en[[CODE(HTMLa)@@en[[[target]]]]=[[_blank]]]]
への需要は高く、形式的な[[妥当性]]を得つつも
[CODE(HTMLa)@@en[[[target]]]] を使いたいという要求が少なくありませんでした。

[29] [[妥当性]]と [CODE(HTMLa)@@en[[[target]]]]
の両方を求める人たちは、 [[JavaScript]] と [[DOM]]
で、 [CODE(DOMa)@@en[[[target]]]] や
[CODE(DOMm)@@en[[[open]]]] などを用いて
[CODE(HTMLa)@@en[[[target]]]] を実現しようとするなどの本末転倒な[RUBY[回避法] [ごまかし]]に走り出しました。

[30] >>29 のような手法は、本来[[宣言的]]に記述できるものをあえてわかりにくくすることで、
[[アクセス可能性]]や[[利用可能性]]に劣るといわれています。

[31] このような背景から、 [CODE(HTMLa)@@en[[[target]]]]
の[Q[復活]]を求める意見もあります。

[[#comment]]


*** Revisited

[32]
[[XHTML 2.0]] では、 [[XFrames]] との関係もあって、
[CODE(HTMLa)@@en[[[target]]]] が[Q[復活]]しました。

[17]
[[Web Forms 2.0]] で、
[CODE(HTMLe)@@en[[[input]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[[button]]]] ([CODE(HTML)@@en[[[submit]]]])
に追加されました。特に[[非推奨]]との記述はありません。

[[XHTMLモジュール]]定義 ([[参考]]) では、
多[[窓]]や[[フレーム]]に対応しているときに
[CODE(HTMLa)@@en[[[target]]]] [[属性]]が定義されるとされています。

[35]
[[HTML WG]] は、 [[XHTML Basic 1.1]] [[WD]]
で[[対象属性]][[モジュール]]を[Q[復活]]させました。

[36] しかし、 [[XHTML Basic]] の主たる対象の1つである[[携帯電話]]の業界は、
[[携帯電話]]の [[Webブラウザ]]では実装できない機能だとして、
>>35 に反発しています。

[33] 
[[Ian Hickson]] は、2007年2月、 [[Web Applications 1.0]]
への [CODE(HTMLa)@@en[[[target]]]] の追加について、
[CODE(HTMLe)@@en[[[iframe]]]] 対応のために必要との見解を
#whatwg で示しています。

それによると、存在しない[[フレーム名]]を指定するのは[[不適合]]、
存在する[[フレーム名]]を指定するのは[[適合]]とするつもりだそうです。

[34] 
[[HTML WG]] は [[XHTML 1.1]] [[2e]] [[WD]] で、
[[対象属性]][[モジュール]]を[Q[復活]]させました。

;; ただし、 [[DTD]] 実装だけで、 [[XML Schema]]
実装や[[文書型]]の定義には含まれていません。

[[#comment]]


** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]


** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]

みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?

[21]
携帯電話業界から [[XHTML Basic 1.1]] に [CODE(HTMLa)@@en[[[target]]]] を追加することへの反対が結構強いね。。。
([[名無しさん]] [WEAK[2006-08-12 15:04:21 +00:00]])

[22]
[CITE@@ja[target属性の利便性 (kuruman.org > 駄的HTML改善計画)]] ([CODE[2007-02-18 00:31:14 +09:00]] 版) 
<http://kuruman.org/dateki/target>

[37]
[CITE@@ja[別窓指定の理想論 (kuruman.org > Kuruman Memo)]] ([CODE[2007-02-23 02:50:28 +09:00]] 版) <http://kuruman.org/diary/2007/02/23/target-blank>
([[名無しさん]] [WEAK[2007-02-23 16:03:46 +00:00]])

[38]
[CITE@@ja[target="_blank"は多数派? (kuruman.org > Kuruman Memo)]] ([CODE[2006-09-09 01:47:03 +09:00]] 版) <http://kuruman.org/diary/2007/02/24/is-target-blank-popular>
([[名無しさん]] [WEAK[2007-02-25 02:10:35 +00:00]])

[39]
[CITE[別サイトへの target="_blank" は優しいか]]
<http://pc10.2ch.net/test/read.cgi/hp/1136738511/>

おもしろい統計がでている
<http://pc10.2ch.net/test/read.cgi/hp/1136738511/834>

([[名無しさん]] [WEAK[2007-02-25 02:11:46 +00:00]])

[42]
[CITE@@ja[target="_blank"によるリスクの軽減:メモランダム]] ([CODE[2007-02-22 23:32:51 +09:00]] 版) <http://elastic965.80code.com/blog/2007/02/target_blank>
([[名無しさん]] [WEAK[2007-03-08 14:00:59 +00:00]])

[43]
[CITE[まじかんと雑記: Re: target="_blank"によるリスクの軽減]] ([CODE[2007-03-08 23:00:43 +09:00]] 版) <http://magicant.txt-nifty.com/main/2007/02/re_target_blank_e80b.html>
([[名無しさん]] [WEAK[2007-03-08 14:02:18 +00:00]])

[44]
[CITE@@ja-JP[無爲徒食日記 二千七年二月]] ([[眞名垣 郁夫]] 著, [CODE[2007-02-28 15:45:43 +09:00]] 版) <http://lan.rgr.jp/diary/2007/02#Twentyfive-One>
([[名無しさん]] [WEAK[2007-03-08 14:03:53 +00:00]])

[45]
<http://suika.fam.cx/~wakaba/-temp/test/dom/window/name/target-name-1.html>

[CODE(HTMLa)@@en[[[target]]]] で新しい[[窓]]の[[名前]]を
([CODE(HTML)@@en[newwindow]]) 指定し、
その[[リンク]]をたどって新たな[[閲覧文脈]]を作成します。

新しい[[閲覧文脈]]の[[名前]] ([CODE(JS)@@en[[[window]].[[name]]]]) は 
[CODE(HTML)@@en[newwindow]] となるのが自然な動作です。

[[WinIE 6]] ([[Windows XP]] [[SP2]])、[[Opera]] 9
は実際そのように動作します。
[CODE(JS)@@en[[[window]].[[name]]]] は
[CODE(HTML)@@en[newwindow]] になりますし、
その中の [CODE(HTMLa)@@en[[[target]]]] が
[CODE(HTML)@@en[newwindow]] な[[リンク]]をたどると同じ[[窓]]で開かれます。

しかし、 [[Firefox]] 1.5 は、新しい窓を新しいタブとして開く設定になっていると、
[[名前]]を持たない ([CODE(JS)@@en[[[window]].[[name]]]]
が[[空文字列]]の) [[閲覧文脈]]が作られてしまいます。
新しい窓として開く設定になっていれば [[WinIE]]
や [[Opera]] と同じく [CODE(JS)@@en[[[window]].[[name]]]]
は [CODE(HTML)@@en[newwindow]] になります。

([[名無しさん]])

[47]
[CITE[XHTML 1.1 Modularization Anchor Element Target Attribute - www.TexaStar.com]] ([[Texastar.com WebMaster@@TexaStar.com]] 著, [CODE[2007-08-14 21:17:48 +09:00]] 版) <http://www.texastar.com/tips/2004/target_blank.shtml>
([[名無しさん]])

[48]
[CITE@@en[Sparanoid &#187; Blog &#187; XHTML 1.1 plus Target 1.0 and other modularizations]] ([[Sparanoid]] 著, [CODE[2007-08-14 21:24:36 +09:00]] 版) <http://sparanoid.com/blog/xhtml-11-plus-target-10-and-other-modularizations/>
([[名無しさん]])

[49]
[CITE[torresburriel.com &#187; Blog Archive &#187; A&#241;adir el m&#243;dulo target a XHTML 1.1]] ([CODE[2007-08-14 21:25:50 +09:00]] 版) <http://www.torresburriel.com/weblog/2004/04/19/anadir-el-modulo-target-a-xhtml-11/>
([[名無しさん]])

[50]
[CITE@@pl[&#321;ukasz Aranowski - strona domowa (Aster, Astercity, MP3, stacje, Kolejarz, Microsoft, XHTML, zdj&#281;cia i inne...)]] ([[Lukasz Aranowski]] 著, [CODE[2007-08-14 21:28:31 +09:00]] 版) <http://www.mendel.pl/index.php?co=xhtml>
([[名無しさん]])

[51]
[CITE@@pl[Do podstrony - Odsy&#322;acze - Kurs HTML]] ([[S&#322;awomir Kok&#322;owski]] 著, [CODE[2007-08-12 00:17:26 +09:00]] 版) <http://www.kurshtml.boo.pl/html/do_podstrony,odsylacze.html>
([[名無しさん]])

[52]
[CITE[net2ftp forum / Doctype]] ([CODE[2007-08-14 21:41:03 +09:00]] 版) <http://www.net2ftp.org/forums/viewtopic.php?pid=6679>
([[名無しさん]])

[53]
[CITE@@en[Standards-Compliant New Windows | Accessify]] ([[Ian Lloyd, Accessify '''['''http://www.accessify.com/''']''']] 著, [CODE[2007-08-17 23:17:09 +09:00]] 版) <http://www.accessify.com/features/tutorials/new-windows/>
([[名無しさん]])

[54]
[CITE@@en[XHTML 1.1 plus Target 1.0 DTD ― Information]] ([CODE[2007-09-24 16:17:49 +09:00]] 版) <http://suika.fam.cx/gate/2007/schema/schema/dd9db9d3e91e5444c7741e0d0e3943b2/prop.html>
([[名無しさん]])

[56]
[CITE[Thermaglaze Double Glazing]] ([CODE[2008-03-01 12:20:27 +09:00]] 版) <http://www.thermaglaze.com/>
([CODE(MIME)@@en[[[text/html]]]])

[PRE(HTML bad example code)[
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" 
 [ <!ATTLIST a target CDATA #IMPLIED> ]>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
]PRE]

([[名無しさん]])

[61]
[CITE[The target="" attribute]] ([[Ian Hickson <ian@@...>]] 著, [CODE[2008-04-21 05:21:56 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/13793>
([[名無しさん]])

[65]
[CITE[Lachy’s Log &#187; Blog Archive &#187; Conforming target Attribute]] ([CODE[2008-07-26 22:40:57 +09:00]] 版) <http://lachy.id.au/log/2008/04/target-attribute>
([[名無しさん]])


[66]
[CITE@@ja[冬様もすなる☆日記というもの (2008年10月)]] ([[わかば]] 著, [TIME[2008-10-17 18:50:52 +09:00]] 版) <http://suika.fam.cx/~wakaba/d/d200810#d17-2>
([[名無しさん]])


[[#comment]]


* メモ@


1.23
log
@auto-committed
@
text
@d512 4
d517 2
a518 2
[65]
[CITE[Lachy’s Log &#187; Blog Archive &#187; Conforming target Attribute]] ([TIME[2008-07-26 22:40:57 +09:00]] 版) <http://lachy.id.au/log/2008/04/target-attribute>
@


1.22
log
@auto-committed
@
text
@a87 1

a91 1

d511 6
@


1.21
log
@auto-committed
@
text
@a83 1

d87 5
@


1.20
log
@auto-committed
@
text
@d80 10
a505 1

d507 1
a507 1
[CITE[The target="" attribute]] ([[Ian Hickson <ian@@...>]] 著, [TIME[2008-04-21 05:21:56 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/13793>
a508 1

@


1.19
log
@auto-committed
@
text
@a75 1

a79 1

d495 6
@


1.18
log
@auto-committed
@
text
@d64 18
d485 3
d489 6
a494 11
[56]
[CITE[Thermaglaze Double Glazing]] ([TIME[2008-03-01 12:20:27 +09:00]] 版) <http://www.thermaglaze.com/>
([CODE(MIME)@@en[[[text/html]]]])

[PRE(HTML bad example code)[
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" 
 [ <!ATTLIST a target CDATA #IMPLIED> ]>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
]PRE]
a496 1

@


1.17
log
@auto-committed
@
text
@a57 1

d59 2
a60 2
Nice site. Thanks.
<a href=http://antenna.vyur.biz/ >antenna</a>
a63 1

d466 16
@


1.16
log
@auto-committed
@
text
@d58 8
a464 1

d466 1
a466 1
[CITE@@en[XHTML 1.1 plus Target 1.0 DTD ― Information]] ([TIME[2007-09-24 16:17:49 +09:00]] 版) <http://suika.fam.cx/gate/2007/schema/schema/dd9db9d3e91e5444c7741e0d0e3943b2/prop.html>
a467 1

@


1.15
log
@auto-committed
@
text
@d453 4
d458 2
a459 2
[53]
[CITE@@en[Standards-Compliant New Windows | Accessify]] ([[Ian Lloyd, Accessify '''['''http://www.accessify.com/''']''']] 著, [TIME[2007-08-17 23:17:09 +09:00]] 版) <http://www.accessify.com/features/tutorials/new-windows/>
@


1.14
log
@auto-committed
@
text
@a53 1

a57 1

d428 30
@


1.13
log
@auto-committed
@
text
@d54 6
d405 2
d408 20
a427 23
[45]
<http://suika.fam.cx/~wakaba/-temp/test/dom/window/name/target-name-1.html>

[CODE(HTMLa)@@en[[[target]]]] で新しい[[窓]]の[[名前]]を
([CODE(HTML)@@en[newwindow]]) 指定し、
その[[リンク]]をたどって新たな[[閲覧文脈]]を作成します。

新しい[[閲覧文脈]]の[[名前]] ([CODE(JS)@@en[[[window]].[[name]]]]) は 
[CODE(HTML)@@en[newwindow]] となるのが自然な動作です。

[[WinIE 6]] ([[Windows XP]] [[SP2]])、[[Opera]] 9
は実際そのように動作します。
[CODE(JS)@@en[[[window]].[[name]]]] は
[CODE(HTML)@@en[newwindow]] になりますし、
その中の [CODE(HTMLa)@@en[[[target]]]] が
[CODE(HTML)@@en[newwindow]] な[[リンク]]をたどると同じ[[窓]]で開かれます。

しかし、 [[Firefox]] 1.5 は、新しい窓を新しいタブとして開く設定になっていると、
[[名前]]を持たない ([CODE(JS)@@en[[[window]].[[name]]]]
が[[空文字列]]の) [[閲覧文脈]]が作られてしまいます。
新しい窓として開く設定になっていれば [[WinIE]]
や [[Opera]] と同じく [CODE(JS)@@en[[[window]].[[name]]]]
は [CODE(HTML)@@en[newwindow]] になります。
a429 1

@


1.12
log
@auto-committed
@
text
@a394 1

d396 1
a396 1
[CITE@@ja-JP[無爲徒食日記 二千七年二月]] ([[眞名垣 郁夫]] 著, [TIME[2007-02-28 15:45:43 +09:00]] 版) <http://lan.rgr.jp/diary/2007/02#Twentyfive-One>
d398 27
@


1.11
log
@auto-committed
@
text
@a178 1

d180 1
a180 1
[CITE[How to target a link to a window]] ([TIME[2007-02-28 00:30:29 +09:00]] 版) <http://web.archive.org/web/19970613222251/www82.netscape.com/eng/mozilla/2.0/relnotes/demo/target.html>
a182 1

d386 14
@


1.10
log
@auto-committed
@
text
@d175 4
d180 2
a181 2
[40]
[CITE[New HTML 3.0 Proposals]] ([TIME[2007-02-26 21:59:55 +09:00]] 版) <http://wp.netscape.com/assist/net_sites/new_html3_prop.html#Target>
@


1.9
log
@auto-committed
@
text
@d1 387
a387 357
* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]

では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]

のような使い方ができるでしょう。

[[#comment]]

* [CODE(HTMLa)@@en[target]] 属性 (HTML)

[4] [[HTML]] の 
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[16]
:状態:[[W3C]] [[勧告]] ('''[[非推奨]]''')、
[[WHATWG]] [[WD]] ('''[[非推奨]]''')
:[[要素型]]:
[CODE(HTMLe)@@en[[QN[[[a]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[area]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[base]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[button]]][http://www.w3.org/1999/xhtml]]]]
([CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[form]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[input]]][http://www.w3.org/1999/xhtml]]]]
([CODE(HTMLe)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[QN[[[link]]][http://www.w3.org/1999/xhtml]]]]
:[[属性名]]:[CODE(HTMLa)@@en[[[target]]]]
([Q@@en[target]] ([Q[対象]]) より)
:[[属性値]]:[CODE(SGML)@@en[%[[FrameTarget]];]] (>>6)
:[[既定値]]:(>>7)

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.17. Extensions to the submit buttons]]
<IW:WF2:"#extensions3">

** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]


** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]


** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。

- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]


** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]


** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]


** 歴史

*** 誕生

[24]
[CODE(HTMLa)@@en[[[target]]]] [[属性]]は、
[[フレーム]]機能の一部として [[Netscape Navigator]] 2
で導入されました。

@@@@ どの[[要素]]に? [[Windows]] 版以外では?

[[#comment]]

*** 標準化

[25] [[HTML 4]] で、[[非推奨]]ながら
[CODE(HTMLe)@@en[[[a]]]],
[CODE(HTMLe)@@en[[[area]]]],
[CODE(HTMLe)@@en[[[base]]]],
[CODE(HTMLe)@@en[[[form]]]],
[CODE(HTMLe)@@en[[[link]]]]
に [CODE(HTMLa)@@en[[[target]]]] が追加されました。

[19] HTML 4.0 仕様書本文の [CODE(HTMLe)[[[frame]]]] 要素と [CODE(HTMLe)[[[iframe]]]]
要素の定義には誤って [CODE(HTMLa)[target]] 属性の定義への参照が含まれていました。

- [CSECTION@@en[A.1.2 Errors that were corrected]]
<IW:HTML4:"appendix/changes.html#h-A.1.2">

[26] [[XHTML m12n]] では、
[[対象属性]][[モジュール]]という独立した[[モジュール]]が定義されました。

[27] [[XHTML 1.1]] [[1e]] 
は[[対象属性]][[モジュール]]を組み込みませんでした。

[[#comment]]

*** 暗黒時代

[28] [CODE(HTMLa)@@en[[[target]]]] が[[非推奨]]となり、
[[厳密DTD]] や [[XHTML 1.1]] に含まれませんでしたが、
既に下火になっていた[[フレーム]]はともかく、
[CODE(HTML)@@en[[CODE(HTMLa)@@en[[[target]]]]=[[_blank]]]]
への需要は高く、形式的な[[妥当性]]を得つつも
[CODE(HTMLa)@@en[[[target]]]] を使いたいという要求が少なくありませんでした。

[29] [[妥当性]]と [CODE(HTMLa)@@en[[[target]]]]
の両方を求める人たちは、 [[JavaScript]] と [[DOM]]
で、 [CODE(DOMa)@@en[[[target]]]] や
[CODE(DOMm)@@en[[[open]]]] などを用いて
[CODE(HTMLa)@@en[[[target]]]] を実現しようとするなどの本末転倒な[RUBY[回避法][ごまかし]]に走り出しました。

[30] >>29 のような手法は、本来[[宣言的]]に記述できるものをあえてわかりにくくすることで、
[[アクセス可能性]]や[[利用可能性]]に劣るといわれています。

[31] このような背景から、 [CODE(HTMLa)@@en[[[target]]]]
の[Q[復活]]を求める意見もあります。

[[#comment]]

*** Revisited

[32]
[[XHTML 2.0]] では、 [[XFrames]] との関係もあって、
[CODE(HTMLa)@@en[[[target]]]] が[Q[復活]]しました。

[17]
[[Web Forms 2.0]] で、
[CODE(HTMLe)@@en[[[input]]]]
([CODE(HTML)@@en[[[image]]]]、[CODE(HTML)@@en[[[submit]]]])、
[CODE(HTMLe)@@en[[[button]]]] ([CODE(HTML)@@en[[[submit]]]])
に追加されました。特に[[非推奨]]との記述はありません。

[[XHTMLモジュール]]定義 ([[参考]]) では、
多[[窓]]や[[フレーム]]に対応しているときに
[CODE(HTMLa)@@en[[[target]]]] [[属性]]が定義されるとされています。

[35]
[[HTML WG]] は、 [[XHTML Basic 1.1]] [[WD]]
で[[対象属性]][[モジュール]]を[Q[復活]]させました。

[36] しかし、 [[XHTML Basic]] の主たる対象の1つである[[携帯電話]]の業界は、
[[携帯電話]]の [[Webブラウザ]]では実装できない機能だとして、
>>35 に反発しています。

[33] 
[[Ian Hickson]] は、2007年2月、 [[Web Applications 1.0]]
への [CODE(HTMLa)@@en[[[target]]]] の追加について、
[CODE(HTMLe)@@en[[[iframe]]]] 対応のために必要との見解を
#whatwg で示しています。

それによると、存在しない[[フレーム名]]を指定するのは[[不適合]]、
存在する[[フレーム名]]を指定するのは[[適合]]とするつもりだそうです。

[34] 
[[HTML WG]] は [[XHTML 1.1]] [[2e]] [[WD]] で、
[[対象属性]][[モジュール]]を[Q[復活]]させました。

;; ただし、 [[DTD]] 実装だけで、 [[XML Schema]]
実装や[[文書型]]の定義には含まれていません。

[[#comment]]


** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]


** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]

みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?


[21]
携帯電話業界から [[XHTML Basic 1.1]] に [CODE(HTMLa)@@en[[[target]]]] を追加することへの反対が結構強いね。。。
([[名無しさん]] [WEAK[2006-08-12 15:04:21 +00:00]])

[22]
[CITE@@ja[target属性の利便性 (kuruman.org > 駄的HTML改善計画)]] ([TIME[2007-02-18 00:31:14 +09:00]] 版) 
<http://kuruman.org/dateki/target>

[[#comment]]


@


1.8
log
@auto-committed
@
text
@a0 1

d72 1
a72 2
[CODE(HTMLe)@@en[[QN[[[link]]][http://www.w3.org/1999/xhtml]]]]、
[CODE(HTMLe)@@en[[QN[[[target]]][http://www.w3.org/1999/xhtml]]]]
d161 21
d185 1
a185 1
- [CITE[A.1.2 Errors that were corrected]]
d188 37
d230 29
a258 1
に追加されました。
d351 3
@


1.7
log
@auto-committed
@
text
@d1 270
a270 264


* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]

では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]

のような使い方ができるでしょう。

[16]
area1
([[名無しさん]] [WEAK[2004-11-02 13:39:32 +00:00]])

[17]
area1
([[名無しさん]] [WEAK[2004-11-02 13:40:06 +00:00]])

[18]
area2
([[名無しさん]] [WEAK[2004-11-02 13:40:33 +00:00]])

[20]
qw werweqwerwrwer wrqerqwerqrweeeeeeeeeee
([[wrwerwer]] [23423424] [WEAK[2005-08-10 21:03:37 +00:00]])

[[#comment]]


* target 属性 (HTML, XHTML 1)

[4] [[HTML]] の [CODE(HTMLe)[[[a]]]] 要素、[CODE(HTMLe)[[[link]]]] 要素、
[CODE(HTMLe)[[[form]]]] 要素、[CODE(HTMLe)[[[area]]]] 要素、
[CODE(HTMLe)[[[base]]]] 要素の
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">

[[#comment]]


** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]


** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]


** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。

- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]


** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]


** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]


** 歴史

[19] HTML 4.0 仕様書本文の [CODE(HTMLe)[[[frame]]]] 要素と [CODE(HTMLe)[[[iframe]]]]
要素の定義には誤って [CODE(HTMLa)[target]] 属性の定義への参照が含まれていました。

- [CITE[A.1.2 Errors that were corrected]]
<IW:HTML4:"appendix/changes.html#h-A.1.2">

[[#comment]]


** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]


** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]

みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?


[21]
携帯電話業界から [[XHTML Basic 1.1]] に [CODE(HTMLa)@@en[[[target]]]] を追加することへの反対が結構強いね。。。
([[名無しさん]] [WEAK[2006-08-12 15:04:21 +00:00]])


[[#comment]]


@


1.6
log
@auto-committed
@
text
@a65 1

a69 1

d255 6
@


1.5
log
@auto-committed
@
text
@d1 260
a260 254


* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]

では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]

のような使い方ができるでしょう。

[16]
area1
([[名無しさん]] [WEAK[2004-11-02 13:39:32 +00:00]])

[17]
area1
([[名無しさん]] [WEAK[2004-11-02 13:40:06 +00:00]])


[18]
area2
([[名無しさん]] [WEAK[2004-11-02 13:40:33 +00:00]])


[[#comment]]


* target 属性 (HTML, XHTML 1)

[4] [[HTML]] の [CODE(HTMLe)[[[a]]]] 要素、[CODE(HTMLe)[[[link]]]] 要素、
[CODE(HTMLe)[[[form]]]] 要素、[CODE(HTMLe)[[[area]]]] 要素、
[CODE(HTMLe)[[[base]]]] 要素の
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">

[[#comment]]


** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]


** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]


** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。

- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]


** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]


** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]

** 歴史

[19] HTML 4.0 仕様書本文の [CODE(HTMLe)[[[frame]]]] 要素と [CODE(HTMLe)[[[iframe]]]]
要素の定義には誤って [CODE(HTMLa)[target]] 属性の定義への参照が含まれていました。

- [CITE[A.1.2 Errors that were corrected]]
<IW:HTML4:"appendix/changes.html#h-A.1.2">

[[#comment]]

** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]


** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]

みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?

[[#comment]]


@


1.4
log
@auto-committed
@
text
@d1 254
a254 246



* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]

では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]

のような使い方ができるでしょう。

[16]
area1
([[名無しさん]] [WEAK[2004-11-02 13:39:32 +00:00]])

[17]
area1
([[名無しさん]] [WEAK[2004-11-02 13:40:06 +00:00]])


[18]
area2
([[名無しさん]] [WEAK[2004-11-02 13:40:33 +00:00]])


[[#comment]]


* target 属性 (HTML, XHTML 1)

[4] [[HTML]] の [CODE(HTMLe)[[[a]]]] 要素、[CODE(HTMLe)[[[link]]]] 要素、
[CODE(HTMLe)[[[form]]]] 要素、[CODE(HTMLe)[[[area]]]] 要素、
[CODE(HTMLe)[[[base]]]] 要素の
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">

[[#comment]]


** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]


** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]


** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。

- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]


** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]


** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]


** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]


** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]

みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?

[[#comment]]


@


1.3
log
@auto-committed
@
text
@d1 246
a246 217
* ev:listener 要素 target 属性, ev:target 属性 (DOM Events)

[2] [[XML事象]]の [DFN[[CODE(XMLa)[target]] 属性]]
<http://www.w3.org/TR/xml-events#attr-listener-target>
は、[[事象聴取器]]の[[対象要素]]を指定します。
この属性の値の型は [CODE(XML)[[[IDREF]]]] です。

この属性が指定されていなければ、
[[観察者]]要素自身とその[[子孫要素]]で発生した[[事象]]がその事象聴取器によって処理されることになります。
しかし、この属性が指定されている時には、
[[識別子]]が一致した場合に限って処理します。

この性質から、対象要素は観察者要素自身かその子孫要素であるべきです。
そうでないと意味がありません。

[3] たとえば、
[PRE(XML)[
<object id="o1">
  <object id="o2">
    <object id="o3"/>
    <object id="o4"/>
  </object>
  <object id="o5"/>
</object>
<onevent ev:event="load" ev:observer="o1"
         ev:target="o2">
  ...
</onevent>
]PRE]
では、 [SAMP(XMLe)[onevent]] 要素は、
[SAMP[o2]] の物体が読み込まれた時にのみ処理されます。
(もし [CODE(XMLa)[target]] 属性がなければ、
[SAMP[o1]]〜[SAMP[o5]] のいずれの要素の物体が読み込まれた時にも処理されます。)

一見使い道があるのか疑問に思えますが、
処理される事象は対象要素のそのものについてだけであり、
子孫要素である [SAMP[o3]] や [SAMP[o4]] の事象も処理されません。
ですから、たとえば、
[PRE(XML)[
<image id="image">
  <area id="area1"/>
  <area id="area2"/>
  <ev:listener event="click" target="area1"/>
  <ev:listener event="click" target="area2"/>
  <ev:listener event="click"/><!-- 範囲外 -->
</image>
]PRE]
のような使い方ができるでしょう。

[[#comment]]


* target 属性 (HTML, XHTML 1)

[4] [[HTML]] の [CODE(HTMLe)[[[a]]]] 要素、[CODE(HTMLe)[[[link]]]] 要素、
[CODE(HTMLe)[[[form]]]] 要素、[CODE(HTMLe)[[[area]]]] 要素、
[CODE(HTMLe)[[[base]]]] 要素の
[DFN[[CODE(HTMLa)[target]] 属性]]は、
文書を開く[[フレーム]]の名前を指定します。

[5] 仕様書:
- [[HTML 4]]
-- 16.3 Specifying target frame information
<IW:HTML4:"present/frames.html#target-info">

[[#comment]]

** 代替

[10] この属性は'''非推奨'''です [SRC[HTML 4]]。
代わりに、[[スタイル・シート]]で指定できます。

[11] [[CSS3]] では、 [SAMP(CSS)[target]] 特性を使って指定できます。

[[#comment]]

** 属性値

[6] この属性の値は [CODE(SGML)[%[[FrameTarget]]]] です。
大文字・小文字は区別しません [SRC[HTML 4 16.3]]。
[[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。

[7] この属性は省略可能です。

[[#comment]]

** UA による利用

[12] リンクを辿る時に、リンク先資源を開くべきフレームは、
次のように決定するべきです。 [SRC[HTML 4 16.3.1]]

= まず、 [CODE(HTMLa)[target]] 属性を調べます。
指定されていれば、そのフレームで開きます。
= 自分に [CODE(HTMLa)[target]] 属性が無ければ、
[CODE(HTMLe)[base]] 要素の [CODE(HTMLa)[target]]
属性を調べます。指定されていれば、そのフレームで開きます。
= 自分にも [CODE(HTMLe)[base]] 要素にも [CODE(HTMLa)[target]]
属性がなければ、自分と同じフレームで開きます。
- なお、指定された名前のフレームがなければ、
新しい窓とフレームを作り、そこで開きます。
そのフレームの名前は指定された名前とします。
- UA は、利用者が [CODE(HTMLa)[target]] を上書きする仕組みを用意しても構いません。

[[#comment]]

** 他との関係

[8] この属性に指定するフレームの名前は、 (予約名以外は)
[CODE(HTMLe)[[[frame]]]] 要素や [CODE(HTMLe)[[[iframe]]]] 要素の 
[CODE(HTMLa)[[[name]]]] 属性で定義します。

[[#comment]]

** 安全性

[14] これまでの実装の中には、 [CODE(HTMLa)[target]]
属性で指定されたフレーム名に素直に従い、
たとえ他の文書・他の鯖の文書であっても該当する名前のフレームがあればそこにリンク先文書を開くものがありました。

このような実装方法は、閲覧者を不可解に思わせるだけでなく、
悪意を持つ人が他のウェブ・サイトのフレームに、
あたかもその一部であるかのように自分の文書を含めることが可能であり、
問題があると現在では考えられています。 (多くのブラウザはフレーム内の文書の
URI を常時表示してはいませんから、普通の閲覧者は気付きにくいのです。)

[15] フレーム内の文書から他者の資源にリンクする際に、
[CODE(HTMLa)[target]] を使って、あるいは使わないで、
自分のフレームの中にその資源を表示させるのは良くないことだと考える人もいます。

特に他者の資源であると明記しない場合には >>14 と同じような問題となり得ますし、
意図的に他者の資源を自分のものと見せかけると法的な責任を問われる虞もあります。

[[#comment]]

** 例

[9] 単純な例 [SRC[HTML 4 16.3]]

フレーム文書:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET rows="50%,50%">
   <FRAME name="fixed" src="init_fixed.html">
   <FRAME name="dynamic" src="init_dynamic.html">
</FRAMESET>
</HTML>
]PRE]

[SAMP(URI)[init_dynamic.html]]:
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with anchors with specific targets</TITLE>
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to 
    <A href="slide2.html" target="dynamic">slide 2.</A>
...more document...
<P>You're doing great. Now on to
    <A href="slide3.html" target="dynamic">slide 3.</A>
</BODY>
</HTML>
]PRE]

ここで、 [SAMP(URI)[init_dynamic.html]] 内の2つのリンクのいずれを辿っても、
[SAMP(HTML)[fixed]] フレームは不変で、 [SAMP(HTML)[dynamic]]
フレームだけが変わります。

[13] [CODE(HTMLe)[base]] [CODE(HTMLa)[target]] の例
[SRC[HTML 4 16.3.1]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/loose.dtd">
<HTML>
<HEAD>
<TITLE>A document with BASE with a specific target</TITLE>
<BASE href="http://www.mycom.com/Slides" target="dynamic">
</HEAD>
<BODY>
...beginning of the document...
<P>Now you may advance to <A href="slide2.html">slide 2.</A>
...more document...
<P>You're doing great. Now on to 
       <A href="slide3.html">slide 3.</A>
</BODY>
</HTML>
]PRE]

>>9 ではそれぞれの [CODE(HTMLe)[a]] に [CODE(HTMLa)[target]]
を指定しましたが、その文書のリンクの [CODE(HTMLa)[target]]
がすべて同じなら、 [CODE(HTMLe)[base]] でまとめて指定しておくのが便利です。

[[#comment]]

** メモ

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]
みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?

[[#comment]]

@


1.2
log
@auto-committed
@
text
@a0 16
#?SuikaWiki/0.9
* target 属性 (HTML, XHTML 1)

[1] 
[PRE[
::frame ("frame-name") a {
  target: "another-frame-name";
}
]PRE]
みたいな感じのことができると、
[CODE(HTMLa)[target]] 属性もいらないし、
特定の frameset だけに依存せずに style sheet を書けるよね。
最近の CSS3 draft はどうなっているのだろう?

[[#comment]]

d49 170
@


1.1
log
@auto-committed
@
text
@d2 2
d14 51
@

