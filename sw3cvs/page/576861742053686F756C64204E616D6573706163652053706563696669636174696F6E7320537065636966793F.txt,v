head	1.2;
access;
symbols
	suikawiki3-final:1.2;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2006.08.08.02.12.58;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.31.02.10.48;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@[1] This article summalizes what should be defined by
specifications that have [[XML Namespaces]]-like namespace
mechanisms.

;;
[17]
For editors of specifications that define (whole or parts of)
vocabularies, see [CITE@@en[[[XML Vocabulary Specification Guidelines]]]].

* Syntax

[3] '''Characters''':
The specification '''[[MUST]]''' define the set(s) of
[[character]]s allowed in the [[namespace prefix]]es,
[[local name]]s, and [[namespace URI]]s.  The specification
'''[[MAY]]''' impose additional restrictions to them;
for example, the set of [[character]]s that can
be used as the first [[character]] of a [[local name]]
might be much smaller than the set of [[character]]s
allowed in other positions in the [[local name]].

If the specification cites the definition
in [[XML]] [[and/or]] [[XML Namespaces]] specification(s),
it '''[[MUST]]''' clarify what version or edition
of the specifications is referenced.

[11] '''Empty Names''':
The specification '''[[MUST]]''' define whether empty
[[namespace prefix]]es, [[local name]]s, and [[namespace URI]]s
are allowed or not.  If they are allowed, it '''[[MUST]]'''
define whether they are different from specifying [CODE@@en[[[null]]]]
or not, except in [[language]]s where there is no
[CODE@@en[[[null]]]] or similar concept.

[2] '''Case¡¾sensitivility''':
The specification '''[[MUST]]''' define whether [[namespace prefix]]es, 
[[local name]]s, and [[namespace URI]]s are [[case¡¾sensitive]] or
[[case¡¾insensitive]].

;; In general, whether [[namespace prefix]]es are [[case¡¾sensitive]]
should be aligned to whether [[keyword]]s in the [[language]] are
[[case¡¾sensitive]] or not, whether [[local name]]s are
[[case¡¾sensitive]] should be aligned to whether
[[name]]s are [[case¡¾sensitive]] or not, and
[[namespace URI]]s should be [[case¡¾sensitive]].

If they are [[case¡¾insensitive]], the specification
'''[[MUST]]''' define the case¡¾folding algorithm
or comparison method.  If they allows [[non¡¾ASCII characters]],
the case¡¾mapping defined in [[Unicode]] '''[[SHOULD]]'''
be employed.

[4] '''URI Normalization and Comparison''':
The specification '''[[MUST]]''' define how [[namespace URI]]s
are [[normalize]]d or [[compare]]d.

;; In general, any [[character]] allowed in the [[language]]
should also be allowed in [[namespace URI]]s,
no [[normalization]] should be happened, and
simple character¡¾by¡¾character comparation should
be performed.  Validity checking for [[namespace URI]]s
as [[URI]]s or [[IRI]]s should not be enforced.

[12] '''Relative URI References''':
The '''[[MUST]]''' define whether [[relative reference]]s
are allowed as [[namespace URI]]s or not.  If they are allowed,
it '''[[MUST]]''' define how they are [[resolve]]d into
an [[absolute URI reference]].  It '''[[MAY]]''' choose
not to [[resolve]] them.

;; It is the recommended way that no [[relative reference]] is
allowed as [[namespace URI]]s but implementations do not
have to check whether a [[namespace URI]] is absolute or not.

* Semantics

[5] '''Expanded name or URI''':
The specification '''[[MUST]]''' define what a [[qualified name]]
represents.

;; There are two common definitions: one
thinks a [[qualified name]] is an [[expanded name]],
i.e. a pair of [[namespace URI]] and [[local name]]
([[XML Namespaces]]' way);
another thinks an [[expanded URI]] can be extracted
from a [[qualified name]] by concatenating [[namespace URI]]
and [[local name]] ([[RDF/XML]]'s way).

[6] '''Namespace Prefix Significance''':
The specification '''[[MUST]]''' define whether or how
[[namespace prefix]]es are significant.

;; A specification might define that a [[qualified name]]
is a triplet of [[namespace URI]], [[namespace prefix]],
and [[local name]].  Another specification might define
that in the [[data model]] created from the source code
there are only [[expanded URI]]s and no [[namespace prefix]]es
are preserved.

[7] '''Dynamic Re¡¾binding''':
If the specification defines how [[qualified name]]s are
represented in its dynamic or run¡¾time [[data model]]
and the [[data model]] allows [[namespace declaration]]s
being modified dynamically, it '''[[MUSY]]'''
define how modifications to [[namespace declaration]]s
affect to existing [[object]]s corresponding to
[[qualified name]]s.

* Reserved Names

[8] '''Reserved Prefixes''':
If the specification cites [[XML]] [[and/or]] [[XML Namespaces]]
specifications, it '''[[MUST]]''' clarify the [[namespace prefix]]es
[CODE(XML)@@en[[[xml]]]] and [CODE(XML)@@en[[[xmlns]]]]
have their special meanings defined in the [[XML Namespaces]]
specifications.  In particular, it '''[[MUST]]''' define
whether they can be bound to [[namespace URI]]s
different from ones defined in the [[XML Namespaces]] specifications.

[9] '''Reserved Namespace URIs''':
If the specification cites [[XML]] [[and/or]] [[XML Namespaces]]
specifications, it '''[[MUST]]''' clarify the [[namespace URI]]s
[CODE(URI)@@en[[[http://www.w3.org/XML/1998/namespace]]]] and 
[CODE(URI)@@en[[[http://www.w3.org/2000/xmlns/]]]]
have their special meanings defined in the [[XML Namespaces]]
specifications.  In particular, it '''[[MUST]]''' define
whether they can be bound to [[namespace prefix]]es
different from ones defined in the [[XML Namespaces]] specifications.

[10] '''Reserved Local Names''':
If the specification cites [[XML]] [[and/or]] [[XML Namespaces]]
specifications, it '''[[MUST]]''' clarify whether 
[[local name]]s begin with [CODE@@en[xml]] (in any combination
of lower or upper cases) are reserved or not.

;; In [[XML]], such [[name]]s are reserved by [[W3C]].  
In the [[XML Namespaces]] specifications, 
such [[local name]]s are advised to avoid.

* Resolution

[13] '''Resolution Algorithm''':
The specification '''[[MUST]]''' define how a
[[namespace prefix]] can be resolved into a [[namespace URI]].

[14] '''Reserved Name Resolution''':
The specification '''[[MUST]]''' define how a 
reserved [[namespace prefix]] can be resolved into
a [[namespace URI]] if some [[namespace prefix]]es
are reserved.

[15] '''Default Namespace''':
The specification '''[[MUST]]''' define how a
[[qualfied name]] with no [[namespace prefix]]
can be resolved or expanded.

[16] '''Error Handling''':
The specification '''[[MUST]]''' define what an implementation
should do when it detectes an error.

* memo@


1.1
log
@auto-committed
@
text
@d5 5
@

