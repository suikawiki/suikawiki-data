head	1.39;
access;
symbols
	suikawiki3-final:1.39
	before-db-leaffile:1.17
	after-upgrade-to-suikawiki-3:1.17
	before-fork-suikawiki3:1.17
	after-restore-20040122:1.17;
locks; strict;
comment	@# @;


1.39
date	2008.04.18.03.09.03;	author wakaba;	state Exp;
branches;
next	1.38;

1.38
date	2008.03.23.02.59.12;	author wakaba;	state Exp;
branches;
next	1.37;

1.37
date	2008.03.18.02.57.18;	author wakaba;	state Exp;
branches;
next	1.36;

1.36
date	2007.11.27.02.42.07;	author wakaba;	state Exp;
branches;
next	1.35;

1.35
date	2007.11.23.02.48.34;	author wakaba;	state Exp;
branches;
next	1.34;

1.34
date	2007.08.23.03.05.58;	author wakaba;	state Exp;
branches;
next	1.33;

1.33
date	2007.08.18.02.57.19;	author wakaba;	state Exp;
branches;
next	1.32;

1.32
date	2007.04.13.03.09.42;	author wakaba;	state Exp;
branches;
next	1.31;

1.31
date	2007.03.13.02.48.58;	author wakaba;	state Exp;
branches;
next	1.30;

1.30
date	2007.01.18.02.32.31;	author wakaba;	state Exp;
branches;
next	1.29;

1.29
date	2006.10.31.02.21.29;	author wakaba;	state Exp;
branches;
next	1.28;

1.28
date	2006.08.08.02.17.53;	author wakaba;	state Exp;
branches;
next	1.27;

1.27
date	2006.07.03.02.16.08;	author wakaba;	state Exp;
branches;
next	1.26;

1.26
date	2006.02.08.02.23.27;	author wakaba;	state Exp;
branches;
next	1.25;

1.25
date	2006.02.03.02.18.21;	author wakaba;	state Exp;
branches;
next	1.24;

1.24
date	2006.01.08.02.14.28;	author wakaba;	state Exp;
branches;
next	1.23;

1.23
date	2005.06.13.02.20.25;	author wakaba;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.31.02.08.11;	author wakaba;	state Exp;
branches;
next	1.21;

1.21
date	2004.11.27.02.06.15;	author wakaba;	state Exp;
branches;
next	1.20;

1.20
date	2004.10.08.02.06.07;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2004.09.23.02.04.25;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2004.08.18.02.12.25;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2003.12.18.02.03.31;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.27.02.03.52;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2003.11.23.02.02.32;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.08.02.01.57;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.27.02.03.14;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.13.02.02.15;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.29.07.17.13;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.26.07.42.56;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.28.10.14.55;	author make;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.06.12.26.41;	author make;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.27.07.25.16;	author make;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.26.04.49.36;	author w;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.29.13.23.12;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.29.09.23.13;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.30.01.25.43;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.08.01.24.05;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.59;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.39
log
@auto-committed
@
text
@[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)@@en[[[app/gg]]]],[[Google Desktop]] [[gadget]],"非標準, [[IANA]] ''未''登録"
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[CODE(MIME)@@en[[[zz-application/zz-winassoc-tgz]]]]	,	,"非標準, [[IANA]] ''未''登録"
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[CODE(MIME)@@en[[[binary/octet-stream]]]]	,[[オクテット列]]	,"非標準, [[IANA]] ''未''登録 → [CODE(MIME)@@en[[[application/octet-stream]]]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[CODE(MIME)@@en[[[dsmcc-[VAR[*]]/[VAR[*]]]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-download/jpeg]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/mpeg2-ps]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/html]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-stream/mpeg2-ts]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[CODE(MIME)@@en[[[example/[VAR[*]]]]]]	,[[例]]	,"[[IETF]] [[提案標準]], [[IANA]] 登録済"
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)@@en[[[gadget/x-googlegadget]]]],,"非標準, [[IANA]] ''未''登録"
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)@@en[[[unknown/unknown]]]]	,	,非標準 → [CODE(MIME)@@en[[[application/octet-stream]]]]	,[[HTML 5]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準
,[CODE(MIME)@@en[[[xml/user-profile]]]],[[XUP]],"非標準, [[IANA]] ''未''登録"

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[33]
[[RFC 3023]] の [CODE(MIME)@@en[+xml]]
以来、 [[XML]] と [[XML応用]]のような関係を示すために、
[[媒体型]]の末尾に [CODE(MIME)@@en[+[VAR@@ja[書式名]]]]
のような[[文字列]]をつけるようになりました。

この[[接尾辞]]は、 [[RFC 3023]] で [CODE(MIME)@@en[+xml]]
が定義されているのと、 [[RFC 4288]]
で (将来同様な規定が他の書式に対してもなされることに対して)
注意が促されている他は、明確に定義されているわけではありません。

[CODE(MIME)@@en[+]] という記号がこの慣習に従わずに使われることもあります。

[29]
,[[媒体型]]	,説明	,状態	,出典
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+fastinfoset]]]]	,[[Fast Infoset]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+gzip]]]]	,[[GNU Zip]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+json]]]]	,[[JSON]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+n3]]]]	,[[N3]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+ogg]]]]	,[[Ogg]] container format
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+rcs]]]]	,[[RCS]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,廃止
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[IETF]] [[原案標準]]	,[[RFC 3023]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+zip]]]]	,[[Zip]]

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体型の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
([[名無しさん]] [sage] [WEAK[2005-06-09 00:47:27 +00:00]])

[36]
[[RFC 2046]] の6章の

> Any format without a rigorous and public definition must be named with an "X-" prefix, and publicly specified values shall never begin with "X-".

この規定(?)に従うと、 [[RFC 2046]] で定義されている[[媒体型]]はみんな [CODE(MIME)@@en[[[X-]]]] ではじめなければならなくなってしまうw
([[名無しさん]])

[37]
>>36 ところが [CODE(MIME)@@en[[[X-]]]] にしてしまうと後者の要件に違反してしまうw
([[名無しさん]])

@


1.38
log
@auto-committed
@
text
@d3 1
@


1.37
log
@auto-committed
@
text
@d69 1
@


1.36
log
@auto-committed
@
text
@d1 464
a464 464

[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[CODE(MIME)@@en[[[zz-application/zz-winassoc-tgz]]]]	,	,"非標準, [[IANA]] ''未''登録"
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[CODE(MIME)@@en[[[binary/octet-stream]]]]	,[[オクテット列]]	,"非標準, [[IANA]] ''未''登録 → [CODE(MIME)@@en[[[application/octet-stream]]]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[CODE(MIME)@@en[[[dsmcc-[VAR[*]]/[VAR[*]]]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-download/jpeg]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/mpeg2-ps]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/html]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-stream/mpeg2-ts]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[CODE(MIME)@@en[[[example/[VAR[*]]]]]]	,[[例]]	,"[[IETF]] [[提案標準]], [[IANA]] 登録済"
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)@@en[[[unknown/unknown]]]]	,	,非標準 → [CODE(MIME)@@en[[[application/octet-stream]]]]	,[[HTML 5]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[33]
[[RFC 3023]] の [CODE(MIME)@@en[+xml]]
以来、 [[XML]] と [[XML応用]]のような関係を示すために、
[[媒体型]]の末尾に [CODE(MIME)@@en[+[VAR@@ja[書式名]]]]
のような[[文字列]]をつけるようになりました。

この[[接尾辞]]は、 [[RFC 3023]] で [CODE(MIME)@@en[+xml]]
が定義されているのと、 [[RFC 4288]]
で (将来同様な規定が他の書式に対してもなされることに対して)
注意が促されている他は、明確に定義されているわけではありません。

[CODE(MIME)@@en[+]] という記号がこの慣習に従わずに使われることもあります。

[29]
,[[媒体型]]	,説明	,状態	,出典
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+fastinfoset]]]]	,[[Fast Infoset]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+gzip]]]]	,[[GNU Zip]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+json]]]]	,[[JSON]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+n3]]]]	,[[N3]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+ogg]]]]	,[[Ogg]] container format
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+rcs]]]]	,[[RCS]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,廃止
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[IETF]] [[原案標準]]	,[[RFC 3023]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+zip]]]]	,[[Zip]]

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体型の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
([[名無しさん]] [sage] [WEAK[2005-06-09 00:47:27 +00:00]])

[36]
[[RFC 2046]] の6章の

> Any format without a rigorous and public definition must be named with an "X-" prefix, and publicly specified values shall never begin with "X-".

この規定(?)に従うと、 [[RFC 2046]] で定義されている[[媒体型]]はみんな [CODE(MIME)@@en[[[X-]]]] ではじめなければならなくなってしまうw
([[名無しさん]])

[37]
>>36 ところが [CODE(MIME)@@en[[[X-]]]] にしてしまうと後者の要件に違反してしまうw
([[名無しさん]])

@


1.35
log
@auto-committed
@
text
@d1 464
a464 450
[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[CODE(MIME)@@en[[[zz-application/zz-winassoc-tgz]]]]	,	,"非標準, [[IANA]] ''未''登録"
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[CODE(MIME)@@en[[[binary/octet-stream]]]],[[オクテット列]],"非標準, [[IANA]] ''未''登録 → [CODE(MIME)@@en[[[application/octet-stream]]]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[CODE(MIME)@@en[[[dsmcc-[VAR[*]]/[VAR[*]]]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-download/jpeg]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/mpeg2-ps]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/html]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-stream/mpeg2-ts]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[CODE(MIME)@@en[[[example/[VAR[*]]]]]]	,[[例]]	,"[[IETF]] [[提案標準]], [[IANA]] 登録済"
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)@@en[[[unknown/unknown]]]],,非標準 → [CODE(MIME)@@en[[[application/octet-stream]]]],[[HTML 5]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[33]
[[RFC 3023]] の [CODE(MIME)@@en[+xml]]
以来、 [[XML]] と [[XML応用]]のような関係を示すために、
[[媒体型]]の末尾に [CODE(MIME)@@en[+[VAR@@ja[書式名]]]]
のような[[文字列]]をつけるようになりました。

この[[接尾辞]]は、 [[RFC 3023]] で [CODE(MIME)@@en[+xml]]
が定義されているのと、 [[RFC 4288]]
で (将来同様な規定が他の書式に対してもなされることに対して)
注意が促されている他は、明確に定義されているわけではありません。

[CODE(MIME)@@en[+]] という記号がこの慣習に従わずに使われることもあります。

[29]
,[[媒体型]]	,説明	,状態	,出典
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+fastinfoset]]]]	,[[Fast Infoset]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+gzip]]]],[[GNU Zip]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+json]]]]	,[[JSON]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+n3]]]]	,[[N3]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+ogg]]]]	,[[Ogg]] container format
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+rcs]]]],[[RCS]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,廃止
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[IETF]] [[原案標準]]	,[[RFC 3023]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+zip]]]],[[Zip]]

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体型の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
([[名無しさん]] [sage] [WEAK[2005-06-09 00:47:27 +00:00]])@


1.34
log
@auto-committed
@
text
@d8 1
@


1.33
log
@auto-committed
@
text
@d1 448
a448 459

[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[CODE(MIME)@@en[[[zz-application/zz-winassoc-tgz]]]]	,	,"非標準, [[IANA]] ''未''登録"
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[CODE(MIME)@@en[[[dsmcc-[VAR[*]]/[VAR[*]]]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-download/jpeg]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/mpeg2-ps]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/html]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-stream/mpeg2-ts]]]]	,	,"[[規格]], [[IANA]] ''未''登録"
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[CODE(MIME)@@en[[[example/[VAR[*]]]]]]	,[[例]]	,"[[IETF]] [[提案標準]], [[IANA]] 登録済"
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[33]
[[RFC 3023]] の [CODE(MIME)@@en[+xml]]
以来、 [[XML]] と [[XML応用]]のような関係を示すために、
[[媒体型]]の末尾に [CODE(MIME)@@en[+[VAR@@ja[書式名]]]]
のような[[文字列]]をつけるようになりました。

この[[接尾辞]]は、 [[RFC 3023]] で [CODE(MIME)@@en[+xml]]
が定義されているのと、 [[RFC 4288]]
で (将来同様な規定が他の書式に対してもなされることに対して)
注意が促されている他は、明確に定義されているわけではありません。

[CODE(MIME)@@en[+]] という記号がこの慣習に従わずに使われることもあります。

[29]
,[[媒体型]]	,説明	,状態	,出典
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+fastinfoset]]]]	,[[Fast Infoset]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+json]]]]	,[[JSON]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+n3]]]]	,[[N3]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+ogg]]]]	,[[Ogg]] container format
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,廃止
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[IETF]] [[原案標準]]	,[[RFC 3023]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])

[36]
[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+zip]]]]
([[名無しさん]])

[37]
[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+zip]]]]
([[名無しさん]])


[38]
[CODE(MIME)@@en[[[application/x-tar+gzip]]]]
([[名無しさん]])


[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
@


1.32
log
@auto-committed
@
text
@d1 459
a459 444
[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[CODE(MIME)@@en[[[zz-application/zz-winassoc-tgz]]]],,"非標準, [[IANA]] ''未''登録"
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[CODE(MIME)@@en[[[dsmcc-[VAR[*]]/[VAR[*]]]]]],,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-download/jpeg]]]],,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/mpeg2-ps]]]],,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-file/html]]]],,"[[規格]], [[IANA]] ''未''登録"
,[CODE(MIME)@@en[[[dsmcc-stream/mpeg2-ts]]]],,"[[規格]], [[IANA]] ''未''登録"
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[CODE(MIME)@@en[[[example/[VAR[*]]]]]],[[例]],"[[IETF]] [[提案標準]], [[IANA]] 登録済"
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[33]
[[RFC 3023]] の [CODE(MIME)@@en[+xml]]
以来、 [[XML]] と [[XML応用]]のような関係を示すために、
[[媒体型]]の末尾に [CODE(MIME)@@en[+[VAR@@ja[書式名]]]]
のような[[文字列]]をつけるようになりました。

この[[接尾辞]]は、 [[RFC 3023]] で [CODE(MIME)@@en[+xml]]
が定義されているのと、 [[RFC 4288]]
で (将来同様な規定が他の書式に対してもなされることに対して)
注意が促されている他は、明確に定義されているわけではありません。

[CODE(MIME)@@en[+]] という記号がこの慣習に従わずに使われることもあります。

[29]
,[[媒体型]],説明,状態,出典
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+fastinfoset]]]],[[Fast Infoset]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+json]]]],[[JSON]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+n3]]]],[[N3]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+ogg]]]],[[Ogg]] container format
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,廃止
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[IETF]] [[原案標準]],[[RFC 3023]]
,[CODE(MIME)@@en[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
@


1.31
log
@auto-committed
@
text
@d103 1
@


1.30
log
@auto-committed
@
text
@d13 5
@


1.29
log
@auto-committed
@
text
@d78 13
d92 1
d95 6
a100 7
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[RFC 3023]]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]	,[WAP]

[33]
[CODE(MIME)@@en[[[*/*+n3]]]] [[N3]]
([[名無しさん]] [sage])
a109 6


[36]
[CODE(MIME)@@en[[[application/x-suggestions+json]]]]
([[名無しさん]])

@


1.28
log
@auto-committed
@
text
@d1 431
a431 430

[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]]	,[[ファイル・システム]][[物体]]	,"非標準, [[IANA]] ''未''登録"	,[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]]	,[[MIME]]	,"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]"	,[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]]	,未知 (自動判別)	,非標準	,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[29]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[RFC 3023]]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]	,[WAP]

[33]
[CODE(MIME)@@en[[[*/*+n3]]]] [[N3]]
([[名無しさん]] [sage])

[34]
[CODE(MIME)@@en[[[audio/amr-wb+]]]] というのが登録されています。
[CODE(MIME)@@en[[[application/xhtml+voice+xml]]]] には物言いがついたのに。
([[名無しさん]] [WEAK[2006-07-02 03:17:54 +00:00]])

[35]
ちなみに巷で使われているものにはほかに [CODE(MIME)@@en[[[application/x-xhtml+voice+xml]]]] なんてのもあります。
([[名無しさん]] [WEAK[2006-07-02 03:19:04 +00:00]])


[36]
[CODE(MIME)@@en[[[application/x-suggestions+json]]]]
([[名無しさん]])


[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
@


1.27
log
@auto-committed
@
text
@a92 1

d96 5
@


1.26
log
@auto-committed
@
text
@a83 1

d87 10
@


1.25
log
@auto-committed
@
text
@d1 418
a418 411
[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[CODE(MIME)@@en[[[inode/[VAR[*]]]]]],[[ファイル・システム]][[物体]],"非標準, [[IANA]] ''未''登録",[freedesktop.org]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)@@en[[[www/mime]]]],[[MIME]],"非標準, 廃止 →[CODE(MIME)@@en[[[message/rfc822]]]]",[[libwww]]
,[CODE(MIME)@@en[[[www/unknown]]]],未知 (自動判別),非標準,[[libwww]]
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[29]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[RFC 3023]]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]	,[WAP]

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* 実装

[32]
[CITE[freedesktop.org - Standards/shared-mime-info-spec]] 
<http://freedesktop.org/wiki/Standards_2fshared_2dmime_2dinfo_2dspec>

[[#comment]]

* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
[CITE[A question on Media Type Registrations]] <http://ietfreport.isoc.org/idref/draft-iesg-media-type/>

非 [[MIME]] 型プロトコル (具体的には [[RTP]]) で媒体型を使いたいけど
[[MIME]] のしがらみがうざいというのが最近 [[ietf-types]]
等々で議論になってます。
([[名無しさん]] [sage] [WEAK[2005-06-09 00:47:27 +00:00]])

@


1.24
log
@auto-committed
@
text
@d55 2
@


1.23
log
@auto-committed
@
text
@d1 402
a402 397

[26] 存在が知られている媒体型:
,媒体型/亜型	,説明	,状態	,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]]	,[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[[x-device/floppy]]	,[[FD]]	,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]]	,[[DWF]]	,非標準
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]]	,[[フォント]]	,非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]]	,Open Inventor 3次元 scenes	,非標準
,[[image/*]]	,画像	,[MIME]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]	,物質転送	,[RFC1437]
,[[message/*]]	,メッセージ	,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]]	,	,非標準	,
,[[model/*]]	,三次元空間	,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]]	,	,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]	,多部分メッセージ	,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]]	,[[MIDI]] ([[SMF]])	,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]	,
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]]	,	,[Namazu]
,[[text/*]]	,文	,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]	,動画	,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]]	,	,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)[[[www/source]]]]	,	,非標準	,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

- [30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]


* 大雑把な書式を表す接尾辞

[29]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+swcfg]]]]	,[[SuikaWikiConfig/2.0]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[RFC 3023]]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]	,[WAP]

[[#comment]]


* 媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

= media-type = type "/" subtype
= type = discrete-type / composite-type
= discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
= composite-type = "message" / "multipart" / extension-token
= extension-token = ietf-token / x-token
= subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
= ietf-tree = branch meta-format
= vendor-tree = "vnd." branch *("." branck) meta-format
= personal-tree = "prs." branch *("." branck) meta-format
= x-tree = "x." branch *("." branck) meta-format
= extension-tree = branch *("." branch) meta-format
= branch = 1*ttext
= meta-format = *("+" format)
= format = "xml" / extension-format
= extension-format = 1*( ttext / "." )
= ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]


* 仕様書

- RFC 1341 <urn:ietf:rfc:1341> (廃止)
- RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
- RFC 1521 <urn:ietf:rfc:1521> (廃止)
- RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
- RFC 2046 <urn:ietf:rfc:2046> 媒体型
- RFC 2048 <urn:ietf:rfc:2048>
- RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
- RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
- RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
- IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]


** RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

[PRE[
    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,
]PRE]

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

[PRE[
    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),
]PRE]

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

[PRE[
    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,
]PRE]

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

[PRE[
    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and
]PRE]

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

[PRE[
    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.
]PRE]

(5) この上位型の実体の内容転送符号化の制限


** RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

[PRE[
    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".
]PRE]

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

[PRE[
    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.
]PRE]

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

[PRE[
    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.
]PRE]

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

[PRE[
    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.
]PRE]

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

[PRE[
    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.
]PRE]

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

[PRE[
    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".
]PRE]

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

[PRE[
    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.
]PRE]

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。


** RFC 2046 6.  Experimental Media Type Values

[PRE[
   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)
]PRE]

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

[PRE[
   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.
]PRE]

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。


** HTTP および派生プロトコルでの扱い

→[CODE(WikiPage)[[[.//HTTP]]]]


** RFC の部分の License

See [[RFCのライセンス]]


* See also


* メモ

- [13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
- [14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>'''

[31]
d407 3
a409 3
等々で議論になってます。
([[名無しさん]] [sage] [WEAK[2005-06-09 00:47:27 +00:00]])

@


1.22
log
@auto-committed
@
text
@d1 404
a404 348
[26] 存在が知られている媒体型:
,媒体型/亜型,説明,状態,出典
,[CODE(MIME)[[[x-application/*]]]]	,->[CODE(MIME)[application/[VAR[*]]]]	,非推奨
,[[application/*]]	,応用一般	,[MIME]
,[[audio/*]]	,音声	,[MIME]
,[[auth/sicily]]	,認証?	,"非標準, [[FrontPage]]"
,[[chemical/*]]	,	,非標準
,[[coloreal/embedded]]	,	,非標準
,[[x-conference/x-cooltalk]],[[CoolTalk]]	,[Netscape]
,[CODE(MIME)[[[x-data/xact-error]]]]
,[[database/x-unknown]]	,	,非標準
,[[x-device/floppy]]        ,[[FD]]             ,[GNOME]
,[CODE(MIME)[[[x-directory/normal]]]]
,[CODE(MIME)[[[drawing/x-dwf]]]],[[DWF]],非標準
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[CODE(MIME)[[[font/[VAR[*]]]]]],[[フォント]],非標準 → [CODE(MIME)[[[application/[VAR[*]]]]]]
,[CODE(MIME)[[[x-form/x-openscape]]]]
,[CODE(MIME)[[[graphics/x-inventor]]]],Open Inventor 3次元 scenes,非標準
,[[image/*]]                ,画像               ,[MIME]
,[[interface/x-winamp-skin]]	,[[winamp]] [[skin]]	,非標準
,[CODE(MIME)[[[x-jigsaw/config]]]]
,[CODE(MIME)[[[x-kom/basic]]]]	,->[CODE(MIME)[[[text/x-kom-basic]]]]	,非推奨
,[CODE(MIME)[[[x-lml/x-lml]]]]
,[[matter-transport/*]]     ,物質転送           ,[RFC1437]
,[[message/*]]              ,メッセージ         ,[MIME]
,[[mforge/x-mirage]]	,	,非標準
,[[midi/mid]]	,[[MIDI]]	,非標準
,[CODE(MIME)[[[misc/ultravox]]]],,非標準,
,[[model/*]]                ,三次元空間         ,[RFC2077]
,[CODE(MIME)[[[x-model/x-mesh]]]],,時代遅れ
,[[mozilla.application/cached-xul]]	,[[XUL]] [[cache]]	,[Mozilla]
,[[multipart/*]]            ,多部分メッセージ   ,[MIME]
,[CODE(MIME)[[[x-wap.multipart/vnd.uplanet.header-set]]]]	,	,[WAP]
,[CODE(MIME)[[[x-music/x-midi]]]],[[MIDI]] ([[SMF]]),非推奨 ->[CODE(MIME)[[[audio/x-midi]]]],
,[[plugin/*]]	,	,非標準
,[CODE(MIME)[[[x-pmaildx/x-mmctrl]]]]
,[[x-postpet/*]]	,PostPet
,[CODE(MIME)[[[x-script/x-wfxscript]]]]
,[CODE(MIME)[[[x-squid-internal/vary]]]]
,[CODE(MIME)[[[x-system/x-error]]]],,[Namazu]
,[[text/*]]                 ,文                 ,[MIME]
,[CODE(MIME)[[[x-text-pc/ms-word]]]]
,[CODE(MIME)[[[x-unknown/octet-stream]]]]
,[CODE(MIME)[[[x-unknown/x-unknown]]]]
,[[vector/*]]	,vector 画像 ->[CODE(MIME)[image/[VAR[*]]]]	,非標準
,[[video/*]]                ,動画               ,[MIME]
,[[videotex/vemmi]]	,	,非標準
,[CODE(MIME)[[[x-visa-ii/x-auth]]]]
,[[windows/*]]	,	,非標準
,[CODE(MIME)[[[workbook/formulaone]]]],,非標準
,[[i-world/i-vrml]]	,->[CODE(MIME)[[[model/vrml]]]]	,非標準
,[[x-world/*]]	,->[CODE[model/[VAR[*]]]]	,非推奨
,[CODE(MIME)[[[www/source]]]],,非標準,
,[[xgi/*]]	,	,非標準

[27] MIME の[CODE[[VAR[型]]/[VAR[亜型]]]]形式によらないもの :
,[[audio-file]]	,	,非標準
,[[x-be2]]	,	,非標準
,[[default]]	,	,非標準
,[[mail-file]]	,	,非標準
,[[postscript-file]]	,	,非標準
,[[x-sun-attachment]]	,	,非標準
,[[sun-deskset-message]]	,	,非標準

-[30] [IANAREG] <http://www.iana.org/assignments/media-types/>

[[#comment]]

* 大雑把な書式を表す接尾辞
[29]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+asn1]]]]	,[[ASN.1]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+csv]]]]	,[[CSV]]	,
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+swcfg]]]],[[SuikaWikiConfig/2.0]],
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+xml]]]]	,[[XML]]	,[[RFC 3023]]
,[CODE(MIME)[[[[VAR[*]]/[VAR[*]]+wbxml]]]]	,[[WBXML]]	,[WAP]

[[#comment]]

*媒体型の命名構造

[28] RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
定義されています。例: text/plain

RFC 2048 は亜型に木 tree 構造を導入しました。木は枝を "." で組み合わせて
作ります。例: vnd.bigcompany.funnypictures

RFC 3023 は XML の媒体型には亜型の最後に "+xml" をつけることを推奨しています。
また、あまり喜ばしくないとしながらも、将来同様のメタ型を使う時にも
"+ebml" とか "+ebml+xml" とかすることを提案しています。

=media-type = type "/" subtype
=type = discrete-type / composite-type
=discrete-type = "text" / "image" / "audio" / "video" / "application" / extension-token
=composite-type = "message" / "multipart" / extension-token
=extension-token = ietf-token / x-token
=subtype = ( ietf-tree / vendor-tree / personal-tree / x-tree / extension-tree / x-token )
=ietf-tree = branch meta-format
=vendor-tree = "vnd." branch *("." branck) meta-format
=personal-tree = "prs." branch *("." branck) meta-format
=x-tree = "x." branch *("." branck) meta-format
=extension-tree = branch *("." branch) meta-format
=branch = 1*ttext
=meta-format = *("+" format)
=format = "xml" / extension-format
=extension-format = 1*( ttext / "." )
=ttext = ALPHA / DIGIT / "!" / "#" / "$" / "%" / "&" / "'" / "*" / "-" / "?" / "^" / "_" / "`" / "{" / "|" / "}" / "~"

[[#comment]]

*仕様書
-RFC 1341 <urn:ietf:rfc:1341> (廃止)
-RFC 1437 <urn:ietf:rfc:1437> matter-transport/* 媒体型
-RFC 1521 <urn:ietf:rfc:1521> (廃止)
-RFC 1590 <urn:ietf:rfc:1590> 媒体型登録手続き (廃止・・されてない)
-RFC 2046 <urn:ietf:rfc:2046> 媒体型
-RFC 2048 <urn:ietf:rfc:2048>
-RFC 2077 <urn:ietf:rfc:2077> model/* 媒体型
-RFC 2376 <urn:ietf:rfc:2376> XML 媒体型 (廃止)
-RFC 3023 <urn:ietf:rfc:3023> XML 媒体型
-IANA 登録簿 <http://www.iana.org/assignments/media-types/>
[[#comment]]

**RFC 2046 2.  Definition of a Top-Level Media Type

The definition of a top-level media type consists of:

上位媒体型の定義は次のものから構成されます。

    (1)   a name and a description of the type, including
          criteria for whether a particular type would qualify
          under that type,

(1) 型の名前と説明。特定の型をその型の下に置けるかどうかの適合基準

    (2)   the names and definitions of parameters, if any, which
          are defined for all subtypes of that type (including
          whether such parameters are required or optional),

(2) その型のすべての亜型用に定義するパラメーターがあればその名前と定義
(そのパラメーターが必須か省略可能かを含む)

    (3)   how a user agent and/or gateway should handle unknown
          subtypes of this type,

(3) 利用者代理者や関門がその型の未知の亜型をどう取り扱うべきか

    (4)   general considerations on gatewaying entities of this
          top-level type, if any, and

(4) 必要なら、この上位型の実体の関門通過に関しての考慮一般

    (5)   any restrictions on content-transfer-encodings for
          entities of this top-level type.

(5) この上位型の実体の内容転送符号化の制限

**RFC 2046 3.  Overview Of The Initial Top-Level Media Types

The five discrete top-level media types are:

5つの個々上位媒体型は次の通りです。

    (1)   text -- textual information.  The subtype "plain" in
          particular indicates plain text containing no
          formatting commands or directives of any sort. Plain
          text is intended to be displayed "as-is". No special
          software is required to get the full meaning of the
          text, aside from support for the indicated character
          set. Other subtypes are to be used for enriched text in
          forms where application software may enhance the
          appearance of the text, but such software must not be
          required in order to get the general idea of the
          content.  Possible subtypes of "text" thus include any
          word processor format that can be read without
          resorting to software that understands the format.  In
          particular, formats that employ embeddded binary
          formatting information are not considered directly
          readable. A very simple and portable subtype,
          "richtext", was defined in RFC 1341, with a further
          revision in RFC 1896 under the name "enriched".

(1) text ―― 文字情報。亜型 "plain" は特に、いかなる類の書式化命令・指令
を含まない平文 (plain-text) を示します。平文は「そのまま」表示する
ことを意味します。文の完全な意味を得るのに、指定された文字集合への対応を
除いて特別なソフトウェアは必要ありません。他の亜型は応用ソフトウェアが
文の見た目をよくする裕福文に使われるかもしれませんが、内容の
一般的な着想を得るのにはこのようなソフトウェアは必須ではありません。
ですから "text" の亜型となりえるものにはその形式を理解するソフトウェア
無しに読むことが出来る言葉処理器 (ワード・プロセッサー) の形式を含みます。
特に、バイナリ書式付け情報を埋め込んだ形式は直接可読とは言えません。
とても単純で移植性ある亜型, "richtext" (裕福文) は RFC 1341 
で定義されていましたが、 RFC 1896 で "enriched" (裕福化) という名前で
更に改訂されています。

訳注: embeddded は d が一個多い。

    (2)   image -- image data.  "Image" requires a display device
          (such as a graphical display, a graphics printer, or a
          FAX machine) to view the information. An initial
          subtype is defined for the widely-used image format
          JPEG. .  subtypes are defined for two widely-used image
          formats, jpeg and gif.

(2) image ――画像データ。 "image" は情報を見るのに表示機器 
(画像画面, 画像印刷機, FAX 機器など) が必要です。初期亜型としては
広く使われている画像形式 JPEG を定義します。。 亜型としては
2つの広く使われている画像形式, jpeg と gif を定義します。
(訳注: 誤植というか編集ミスというか。)

    (3)   audio -- audio data.  "Audio" requires an audio output
          device (such as a speaker or a telephone) to "display"
          the contents.  An initial subtype "basic" is defined in
          this document.

(3) audio ――音声データ。 "audio" は音声出力機器 (スピーカーとか電話とか)
が内容を「表示」するのに必要です。初期亜型としては "basic"
をこの文書で定義します。

    (4)   video -- video data.  "Video" requires the capability
          to display moving images, typically including
          specialized hardware and software.  An initial subtype
          "mpeg" is defined in this document.

(4) video 動画データ。 "video" は動く画像を表示する能力が必要です。
典型的には特別なハードウェアとソフトウェアを含みます。
初期亜型としては "mpeg" をこの文書で定義します。

    (5)   application -- some other kind of data, typically
          either uninterpreted binary data or information to be
          processed by an application.  The subtype "octet-
          stream" is to be used in the case of uninterpreted
          binary data, in which case the simplest recommended
          action is to offer to write the information into a file
          for the user.  The "PostScript" subtype is also defined
          for the transport of PostScript material.  Other
          expected uses for "application" include spreadsheets,
          data for mail-based scheduling systems, and languages
          for "active" (computational) messaging, and word
          processing formats that are not directly readable.
          Note that security considerations may exist for some
          types of application data, most notably
          "application/PostScript" and any form of active
          messaging.  These issues are discussed later in this
          document.

(5) appliaction 他の種類のデータ, 典型的には解釈出来ないバイナリ・データ
や応用により処理される情報です。亜型 "octet-stream" は解釈出来ない
バイナリ・データに使われ、この場合の最も簡単な推奨動作は情報を
ファイルに書き出すと利用者に申し出ることです。 "PostScript" 亜型も
PostScript 物体を転送するために定義します。他の "application"
で使うべきものには表計算, 基メイル予定系統, 「動的」(計算的)メッセージの言語,
直接可読でないワード・プロセッサーの形式があります。なお、
応用データの幾つかの型, とりわけ "application/PostScript" や動的
目セージの形式には安全性について考慮すべきことがあたりします。
この問題についてはこの文書の後の方で話します。

The two composite top-level media types are:

2つの合成上位媒体型は次の通りです。

    (1)   multipart -- data consisting of multiple entities of
          independent data types.  Four subtypes are initially
          defined, including the basic "mixed" subtype specifying
          a generic mixed set of parts, "alternative" for
          representing the same data in multiple formats,
          "parallel" for parts intended to be viewed
          simultaneously, and "digest" for multipart entities in
          which each part has a default type of "message/rfc822".

(1) multipart 複数の独立したデータ型の実体で構成されるデータ。
4つの亜型がはじめから定義されています。 "mixed" 亜型は
一般の混成の部分の集合を示し, "alternative" は同じデータを複数の形式で
表現していることを表し, "parallel" は同時に表示されることを意図した
部分を組み合わせたもので、 "digest" は各部分の既定値が "message/rfc822"
の多部分実体で構成されるものです。

    (2)   message -- an encapsulated message.  A body of media
          type "message" is itself all or a portion of some kind
          of message object.  Such objects may or may not in turn
          contain other entities.  The "rfc822" subtype is used
          when the encapsulated content is itself an RFC 822
          message.  The "partial" subtype is defined for partial
          RFC 822 messages, to permit the fragmented transmission
          of bodies that are thought to be too large to be passed
          through transport facilities in one piece.  Another
          subtype, "external-body", is defined for specifying
          large bodies by reference to an external data source.

(2) message カプセル化メッセージ。媒体型 "message" の本文は
それ自体が何らかの種類のメッセージ物体の一部又は全部です。
この物体が今度は他の実体を含むかもしれませんし、含まないかもしれません。
"rfc822" 亜型はカプセル化内容が RFC 822 メッセージである時に使います。
"partial" 亜型は RFC 822 メッセージの一部用に定義するもので、
転送機能を一片でまとめて通過させるには大き過ぎると思われる
本文を断片化して送ることが出来ます。他の亜型, "external-body"
は外部データ源を使って大きな本文を示すのに定義します。

It should be noted that the list of media type values given here may
be augmented in time, via the mechanisms described above, and that
the set of subtypes is expected to grow substantially.

媒体型値は上述の機構でいつ増補されるかもしれませんし、
亜型の集合は本質的に増えて行くだろうことに注意して下さい。

**RFC 2046 6.  Experimental Media Type Values

   A media type value beginning with the characters "X-" is a private
   value, to be used by consenting systems by mutual agreement.  Any
   format without a rigorous and public definition must be named with an
   "X-" prefix, and publicly specified values shall never begin with
   "X-".  (Older versions of the widely used Andrew system use the 
 "X-BE2" name, so new systems should probably choose a different name.)

文字 "X-" から始まる媒体型値は私用値で、相互の同意により同意系統で
使われます。厳密に公的に定義されていない形式は "X-" 接頭辞つきで
名前をつけなければなりませんし、公的規定値は "X-" で始めてはいけません。
(広く使われている Andrew の系統の古い版は "X-BE2" 名を使っていましたので、
新しい系統は違う名前を選ぶのがよろしいでしょう。)

   In general, the use of "X-" top-level types is strongly discouraged.
   Implementors should invent subtypes of the existing types whenever
   possible. In many cases, a subtype of "application" will be more
   appropriate than a new top-level type.

通常、 "X-" を上位型に使うのは強く非推奨です。実装者は出来る限り
既存の型の亜型をでっち上げるべきです。多くの場合、 "application"
の亜型にするのが新しい上位型にするのより適切です。

** HTTP および派生プロトコルでの扱い
→[CODE(WikiPage)[[[.//HTTP]]]]
** RFC の部分の License
See [[RFCのライセンス]]
*See also
*メモ
-[13] >>12 禁止ではないわけだ。
実際 HTTP な世界では登録簿に無い媒体型が結構良く使われてます。
-[14] >>13 もしかしてこの注は解釈が間違ってる? 
確かに未登録は非推奨とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してるのかもしれん。
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
- [22] [[Windoze]] では[[拡張子]]と媒体型の関連付けは、 [CODE(reg)[[[HKCR]]\.[VAR[拡張子]]\"Content Type"([[REG_SZ]])]] に値を設定することで行えます。
- [23] [[Win98]]/[[WinNT4.0]] まででは、 [[explorer]] のフォルダの設定画面の[CODE[ファイル タイプ]][[タブ]]から設定できましたが、 [[WinMe]] から初心者?にやさしい(つもりの)設定画面に変わって、媒体方の編集はまったくできなくなりました。
- [24] >>23 初心者が関連付けの設定なんかいじるのか謎ですがね。というかそもそも初心者がいじらないといけないような設計が間違ってるのであって。
- [25] [WEAK[2003-10-26 01:43:11 +00:00]] ''[[名無しさん]]'': '''' <http://proxy1.rz.uni-karlsruhe.de/stats/20020628.html>
@


1.21
log
@auto-committed
@
text
@d17 1
@


1.20
log
@auto-committed
@
text
@d40 1
@


1.19
log
@auto-committed
@
text
@d10 1
a10 1
,[CODE(MIME)[[[x-data/xact-error]]]
d36 1
@


1.18
log
@auto-committed
@
text
@d1 2
a2 2
#?SuikaWiki/0.9 page-icon="メイル"
[26]
d28 1
d34 1
a34 1
,[CODE(MIME)[[[x-music/x-midi]]]],[[MIDI]] file,非推奨 ->[CODE(MIME)[[[audio/x-midi]]]]
d51 1
d63 2
d69 5
a73 3
,[CODE(MIME)[[[*/*+csv]]]]	,[[CSV]]	,
,[CODE(MIME)[[[*/*+xml]]]]	,[[XML]]	,[RFC 3023]
,[CODE(MIME)[[[*/*+wbxml]]]]	,[[WBXML]]	,[WAP]
a331 1
-<http://www.iana.org/assignments/media-types/>
a337 1
- [15] plugin/talker, plugin/listenup, x-world/x-vrml
a338 1
- [17] [CODE[www/source]]: 不明。 [[Accept:欄]]で観測
a341 1
- [21] [CODE[+asn1]] ([[ASN.1]]), [CODE[+csv]] ([[CSV]])
@


1.17
log
@auto-committed
@
text
@d14 1
d17 2
d29 1
d33 1
d36 1
d47 1
@


1.16
log
@auto-committed
@
text
@d28 1
d56 8
d66 1
a66 1
RFC 2045 では媒体型は型 type と亜型 subtype を "/" で組み合わせたものと
@


1.15
log
@auto-committed
@
text
@d1 1
a1 1
#?SuikaWiki/0.9
d305 2
a306 52
**RFC 1945 (HTTP/1.0) 3.6; RFC 2068・2616 (HTTP/1.1) Media Types
> HTTP uses Internet Media Types [DEL[[INS[{1945}]] [13] ]] [INS[[INS[{2616}]] [17] ]] in the Content-Type [DEL[[INS[{1945}]] header field]] ([DEL[[INS[{1945}]] Section 10.5]] [INS[section [DEL[[INS[{2068}]] 14.18]] [INS[[INS[{2616}]] 14.17]]]]) [INS[[INS[{2068,2616}]] and Accept (section 14.1) header fields]]
in order to provide open and extensible data typing [INS[[INS[{2068,2616}]] and type negotiation]].

[5] [[HTTP]] は Internet [[媒体型]]を Content-Type 頭欄と
Accept 頭欄において開放的で拡張可能なデータ型指定及びデータ型折衝のために使用します。

>
-media-type     = type "/" subtype *( ";" parameter )
-type           = token
-subtype        = token

> Parameters [DEL[may]] [INS[[INS[{2616}]] MAY]] follow the type/subtype in the form of attribute/value pairs [INS[[INS[{2616}]] (as defined in section 3.6)]].

[9] 引数が型/亜型の後に属性/値の組の形で続いても'''構いません'''。

[DEL[
>[INS[{1925,2068}]]
-parameter      = attribute "=" value
-attribute      = token
-value          = token | quoted-string
]DEL]

> The type, subtype, and parameter attribute names are case-insensitive.  Parameter values [DEL[may]] [INS[[INS[{2616}]] might]] or [DEL[may]] [INS[might]] not be case-sensitive,
depending on the semantics of the parameter name. [DEL[[INS[{1945}]] LWS must not be generated]] [INS[Linear white space (LWS) MUST NOT be used]]
between the type and subtype, nor between an attribute and its value. [DEL[[DEL[[INS[{1945}]] Upon receipt of a media type with an unrecognized parameter, a user agent should treat the media type as if the unrecognized parameter and its value were not present.]] [INS[[INS[{2068}]] User agents that recognize the media-type MUST process (or arrange to be processed by any external applications used to process that type/subtype by the user agent) the parameters for that MIME type as described by that type/subtype definition to the and inform the user of any problems discovered.]]]] [INS[[INS[{2616}]] The presence or absence of a parameter might be significant to the processing of a media-type, depending on its definition within the media type registry.]]

[10] 型, 亜型, 引数属性名は大文字と小文字を区別しません。
引数値は、引数名の意味によって、区別するかもしれませんし区別しないかもしれません。
型及び亜型の間ならびに属性及びその値の間には線形空白 ([[LWS]])
を入れては'''なりません'''。[DEL[[DEL[認識できない引数のある媒体型を受信した際は、その認識できない引数と値は現れていないものとして取扱うべきです。]] [INS[ある [CODE(ABNF)[media-type]] を認識する[[利用者エージェント]]は、その MIME 型の引数を型・亜型定義で記述されているように処理 (あるいは利用者エージェントが型・亜型を処理するのに使う外部応用に処理させるように調整) し、問題が見つかれば利用者に知らせなければ'''なりません'''。]]]] [INS[引数の有無は、媒体型登録簿中の定義によっては、媒体型の処理に意味を持つかもしれません。]]

> [INS[Note[DEL[:]] [INS[that]] some]] [DEL[[INS[{1945}]] Some]]
older HTTP applications do not recognize media type parameters. [INS[When sending data to older HTTP applications, implementations]] [DEL[[INS[{1945}]] HTTP/1.0 applications]] [DEL[[INS[{1945,2068}]] should]] [INS[SHOULD]] only use media type parameters when they are [DEL[[INS[{1945}]] necessary to define the content of a message]] [INS[required by that type/subtype definition]].

[11] 古い HTTP 応用には媒体型引数を認識しないものがあることに注意してください。
古い HTTP 応用にデータを送るときには、型・亜型定義が必須としている媒体型引数だけを使う'''べきです'''。

> Media-type values are registered with the Internet Assigned Number
Authority (IANA [DEL[[INS[{1945}]]  [15] ]] [INS[[INS[{2616}]] [19] ]]).
The media type registration process is outlined in
RFC [DEL[[DEL[[DEL[1590 [13] [INS[{1945}]]]] [INS[2048 [17] [INS[{2068}]]]]]] [INS[1590 [17] [INS[{2616}]]]]]] [INS[2048 [17] [INS[{Errata}]]]].
Use of non-registered media types is discouraged.

[12] 媒体型値は Internet 割当番号事務局 (IANA)
で登録されます。媒体型登録過程は RFC 1590
にまとめられています。未登録の媒体型の使用は非推奨です。
*** 3.6.1; 3.6.7 Canonicalization and Text Defaults
→[CODE(WikiPage)[[[text/*//正規化]]]]
***3.6.2; 3.7.2 Multipart Types
→[CODE(WikiPage)[[[multipart/*]]]]

@


1.14
log
@auto-committed
@
text
@d2 1
d44 1
a44 1

d53 1
a53 1
-[[媒体型の登録]]
d84 1
a84 1
*関連文書
d86 1
d97 1
d99 1
a99 1
*RFC 2046 2.  Definition of a Top-Level Media Type
d133 1
a133 1
*RFC 2046 3.  Overview Of The Initial Top-Level Media Types
d281 1
a281 1
*RFC 2046 6.  Experimental Media Type Values
d305 3
a307 4
*RFC 2616 3.7 Media Types
>HTTP uses Internet Media Types [17] in the Content-Type (section
14.17) and Accept (section 14.1) header fields in order to provide
open and extensible data typing and type negotiation.
d312 36
a347 35
-[6]       media-type     = type "/" subtype *( ";" parameter )
-[7]       type           = token
-[8]       subtype        = token

>Parameters MAY follow the type/subtype in the form of attribute/value
pairs (as defined in section 3.6).

[9] パラメーターが型/亜型の後に属性/値の組の形で続いても'''か舞いません'''。

>The type, subtype, and parameter attribute names are 
case-insensitive. Parameter values might or might not be case-sensitive,
depending on the semantics of the parameter name. Linear white space
(LWS) MUST NOT be used between the type and subtype, nor between an
attribute and its value. The presence or absence of a parameter might
be significant to the processing of a media-type, depending on its
definition within the media type registry.

[10] 型, 亜型, パラメーター族生命は大文字と小文字を区別しません。
パラメーター値は区別するかもしれませんししないかもしれません。
パラメーター名の意味に依存します。行空白間隔 (LWS)
は型及び亜型の間並びに属性及びその値の間に入れては'''なりません'''。
パラメーターの有無は、媒体型登録簿中の定義によっては、媒体型の処理に意味を持つかも知れません。

>Note that some older HTTP applications do not recognize media type
parameters. When sending data to older HTTP applications,
implementations SHOULD only use media type parameters when they are
required by that type/subtype definition.

[11] 古い HTTP 応用には媒体型パラメーターを認識しないものがあることに注意してください。
古い HTTP 応用にデータを送るときに、実装は型/亜型定義が必須としている媒体型パラメーターだけを使う'''のがよいです'''。

>Media-type values are registered with the Internet Assigned Number
Authority (IANA [19]). The media type registration process is
outlined in RFC 1590 [17]. Use of non-registered media types is
discouraged.
d352 7
a360 3
*RFC の部分の License

See [[RFCのライセンス]]
@


1.13
log
@auto-committed
@
text
@d2 1
d8 2
d11 4
a14 1
,[[i-world/i-vrml]]	,[[VRML]]	,非標準
d17 3
d28 2
d31 4
a34 1
,[[vector/*]]	,vector 画像	,非標準
d37 1
d39 1
a39 5
,[[x-conference/x-cooltalk]],[[CoolTalk]]	,[Netscape]
,[[x-device/floppy]]        ,[[FD]]             ,[GNOME]
,[[x-ferrum-head/*]]
,[[x-ferrum-menu/*]]
,[[x-postpet/*]]	,PostPet
@


1.12
log
@auto-committed
@
text
@d26 3
d359 1
@


1.11
log
@auto-commited
@
text
@d6 1
d28 9
@


1.10
log
@semi-auto committed
@
text
@d15 1
@


1.9
log
@auto-commited
@
text
@d2 6
a7 4
,[[application/*]]          ,応用一般           ,[MIME]
,[[audio/*]]                ,音声               ,[MIME]
,[[auth/sicily]]            ,認証?              ,[[FrontPage]]
,[[chemical/x-pdb]]         ,
d9 1
d12 2
d16 1
d18 1
d20 3
a22 1
,[[x-conference/x-cooltalk]],
d24 2
d340 5
a344 1
- [20] ''Appendix A: MIME Type Detection in Internet Explorer'' <http://msdn.microsoft.com/workshop/networking/moniker/overview/appendix_a.asp>: [[M$]] の [[HTTP]] における媒体型のへたれ実装について。
@


1.8
log
@auto-commited
@
text
@d329 1
@


1.7
log
@pre-namespace
@
text
@d2 13
a14 11
,[[application/*媒体型]]          ,応用一般           ,[MIME]
,[[audio/*媒体型]]                ,音声               ,[MIME]
,[[chemical/x-pdb媒体型]]         ,
,[[image/*媒体型]]                ,画像               ,[MIME]
,[[matter-transport/*媒体型]]     ,物質転送           ,[RFC1437]
,[[message/*媒体型]]              ,メッセージ         ,[MIME]
,[[model/*媒体型]]                ,三次元空間         ,[RFC2077]
,[[multipart/*媒体型]]            ,多部分メッセージ   ,[MIME]
,[[text/*媒体型]]                 ,文                 ,[MIME]
,[[video/*媒体型]]                ,動画               ,[MIME]
,[[x-conference/x-cooltalk媒体型]],
d324 5
a328 5
- [15] plugin/talker, plugin/listenup, x-world/x-vrml
- [16] [WEAK[2002-12-29 21:16]] ''[[名無しさん]]'': ''CVS log for gnue/gnue/common/src/GMimeTypes.py'' <http://savannah.gnu.org/cgi-bin/viewcvs/gnue/gnue/common/src/GMimeTypes.py>
- [17] [CODE[www/source]]: 不明。 [[Accept:欄]]で観測
- [18] [[RFC1927]] Suggested Additional MIME Types for Associating Documents も幾つかの型を提案しています。
- [19] ''How to Register a Media Type with IANA (for the IETF tree)'' <http://www.w3.org/2002/06/registering-mediatype> [[W3C]] の規格で使う媒体型を登録するための手引き。なお、 W3C の媒体型も ietf-tree に登録されます。
@


1.6
log
@auto-commited
@
text
@d325 2
@


1.5
log
@*** empty log message ***
@
text
@d324 1
@


1.4
log
@*** empty log message ***
@
text
@d323 1
@


1.3
log
@Updated.
@
text
@d322 1
@


1.2
log
@Updated.
@
text
@d1 1
d265 1
a265 2

HTTP uses Internet Media Types [17] in the Content-Type (section
d269 2
a270 2
HTTP は Internet 媒体型を Content-Type, Accept 両頭領域で
オープンで拡張可能なデータ型付けや型折衝のために使います。
d272 3
a274 3
-media-type     = type "/" subtype *( ";" parameter )
-type           = token
-subtype        = token
d276 1
a276 1
Parameters MAY follow the type/subtype in the form of attribute/value
d279 1
a279 40
パラメーターを 型/亜型 の後に 属性/値 組の形で続けても'''構いません'''。

   The type, subtype, and parameter attribute names are case-
   insensitive. Parameter values might or might not be case-sensitive,
   depending on the semantics of the parameter name. Linear white space
   (LWS) MUST NOT be used between the type and subtype, nor between an
   attribute and its value. The presence or absence of a parameter might
   be significant to the processing of a media-type, depending on its
   definition within the media type registry.

型・亜型・パラメーター属性名は大文字・小文字を区別しません。
パラメーター値は大文字・小文字を区別するかもしれないししないかもしれないし、
パラメーター名の意味に拠ります。行空白間隔 (LWS) を型と亜型や
属性と値の間に入れてはいけません。媒体型登録簿中の定義によっては、
パラメータがあるかないかが媒体型の処理で重要であったりします。

   Note that some older HTTP applications do not recognize media type
   parameters. When sending data to older HTTP applications,
   implementations SHOULD only use media type parameters when they are
   required by that type/subtype definition.

古い HTTP 応用は媒体型パラメーターを認識しないことに注意して下さい。
古い HTTP 応用にデータを送る際は、実装は媒体型パラメーターを
型/亜型定義に必要な場合のみ使う'''べき'''です。

   Media-type values are registered with the Internet Assigned Number
   Authority (IANA [19]). The media type registration process is
   outlined in RFC 1590 [17]. Use of non-registered media types is
   discouraged.

媒体型値は IANA で登録します。媒体型登録手続きは RFC 1590 で説明されています。
非登録媒体型の使用は非推奨です。

訳注: 禁止ではないわけだ。実際 HTTP な世界では登録簿に無い媒体型が
結構良く使われてます。

もしかしてこの注は解釈が間違ってる? 確かに未登録は非推奨
とは言ってるけど、 "x-" なしのを未登録でとは言ってないな。
非推奨している「未登録媒体型」は x-媒体型のことを指してる
のかもしれん。
d281 30
a311 1
-[[MIME]]
d313 1
a313 2

*License
d316 6
@


1.1
log
@Updated.
@
text
@d315 5
@

