head	1.7;
access;
symbols
	suikawiki3-final:1.7
	before-db-leaffile:1.6
	after-upgrade-to-suikawiki-3:1.6
	before-fork-suikawiki3:1.6
	after-restore-20040122:1.6;
locks; strict;
comment	@# @;


1.7
date	2004.07.03.02.03.54;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.06.12.26.21;	author make;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.27.07.24.54;	author make;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.26.13.24.54;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.25.09.24.59;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.30.03.24.03;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.58;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.7
log
@auto-committed
@
text
@#?SuikaWiki/0.9 default-name="US-ASCII"
*MIME

[1] [[Bruce Lilly]] は、 [[ietf-822]] に送った記事
<mid:3E46CDE6.2060209@@Sonietta.blilly.com> で、 ''[[MIME]]''
はどう発音するのかとたずねました。
:Ned           :Nathaniel は英単語 [[mime]] の発音 (''マイム'') だし、僕もそうしてきたさ。綴りで (''エム・アイ・エム・エー'') 読む人もちょっといたけど、ちょっとだけさ。
:[[Keith Moore]]:''MIME'' って略語は発音出来る様に選んだんだし。
:Bruce Lilly   :それじゃあ、 RFC 2047 第3節の次の箇所は間違いですよね。
>the character set names allowed in ''an'' MIME "charset" parameter of a

:Keith Moore   :あちゃー。こりゃあ直して [[Proposed Standard]] からやり直さないとあかんなあ。
:Paul Smith    :''(w'' が抜けてます。。。

- [2] 蛇足ながら解説をば。 [[IETF]] の[[標準化過程]]では、提案標準 (Proposed)→素案標準 (Draft)→(完全)標準 (Full) と進みますが、現在 MIME (RFC 2045〜) は素案標準の段階です。
- [3] ですからこのままうまくいけば、次の [[RFC]] (出るのか不明ですが。) では MIME も晴れて full standard に昇格できるはずです。しかし、改訂の際に仕様に大きな変更が入った場合は、提案標準に差し戻されます。
- [4] ですから、ここで Bruce から''重大''な誤りを指摘されて、 Keith はまた一からやり直しか〜(wと嘆いていた(嘘)のです。解説終わり。
[[#comment]]
*CRLF (RFC 2045 2.1) 

The term CRLF, in this set of documents, refers to the sequence of
octets corresponding to the two US-ASCII characters CR (decimal value
13) and LF (decimal value 10) which, taken together, in this order,
denote a line break in RFC 822 mail.

この文書集合中の用語 CRLF は、2つの US-ASCII 文字 CR (10進値13),
LF (10進値10) に対応するオクテット列を表します。
この2文字は RFC 822 メイル中で一緒にこの順に現れて、改行を示します。

*Character Set 文字集合 (RFC 2045 2.2)

See [[charset]]
*Message メッセージ (RFC 2045 2.3)

The term "message", when not further qualified, means either a
(complete or "top-level") RFC 822 message being transferred on a
network, or a message encapsulated in a body of type "message/rfc822"
or "message/partial".

用語「メッセージ message」は修飾語句が無い場合、
(完全あるいは「最上位 top-level」の) ネットワークで転送される
RFC 822 メッセージ, または型 "message/rfc822" または "message/partial"
の本文にカプセル化されたメッセージのいずれかを意味します。
*Entity 実体 (RFC 2045 2.4)
[[#embed:実体]]
*本文部分 Body Part (RFC 2045 2.5)

The term "body part" refers to an entity inside of a multipart entity.

用語「本文部分 body part」は多部分実体の中の実体を指します。

*本体 Body (RFC 2045 2.6)
[[#embed:本体]]
**7ビット・データ 7bit Data (RFC 2045 2.7)

   "7bit data" refers to data that is all represented as relatively
   short lines with 998 octets or less between CRLF line separation
   sequences [RFC-821].  No octets with decimal values greater than 127
   are allowed and neither are NULs (octets with decimal value 0).  CR
   (decimal value 13) and LF (decimal value 10) octets only occur as
   part of CRLF line separation sequences.

「7ビット・データ 7bit data」は、 CRLF 行区切り列の間が
998オクテット以下の比較的短い行ですべて表現されるデータ [RFC-821] を指します。
10進値が127より大きいオクテットや NUL (10進値0のオクテット)は
認められません。 CR (10進値13) と LF (10進値10) のオクテットは
CRLF 行区切り列の一部としてのみ使うことが出来ます。

*8ビット・データ 8bit Data (RFC 2045 2.8)

   "8bit data" refers to data that is all represented as relatively
   short lines with 998 octets or less between CRLF line separation
   sequences [RFC-821]), but octets with decimal values greater than 127
   may be used.  As with "7bit data" CR and LF octets only occur as part
   of CRLF line separation sequences and no NULs are allowed.

「8ビット・データ 8bit data」 は、 CRLF 行区切り列の間が
998オクテット以下の比較的短い行ですべて表現されるデータ [RFC-821] を指します。
但し10進値が127より大きなオクテットを使って構いません。
「7ビット・データ 7bit data」同様に、 CR と LF のオクテットは
CRLF 行区切列の一部としてのみ使うことが出来、 NUL は認められていません。

*バイナリ・データ Binary Data (RFC 2045 2.9)

"Binary data" refers to data where any sequence of octets whatsoever is allowed.

「バイナリ・データ binary data」はどんなオクテットの列でも認められる
データを指します。

*行 Lines (RFC 2046 2.10)

   "Lines" are defined as sequences of octets separated by a CRLF
   sequences.  This is consistent with both RFC 821 and RFC 822.
   "Lines" only refers to a unit of data in a message, which may or may
   not correspond to something that is actually displayed by a user
   agent.

「行 lines」は CRLF 列で区切られたオクテットの列と定義します。
これは RFC 821, RFC 822 の両者と同じです。
「行」はメッセージ中のデータの単位のみを指します。
利用者代理者が実際に表示するものと対応していてもいなくても構いません。

[[#comment]]
*RFC の部分の License
See [[RFCのライセンス]]
*メモ
@


1.6
log
@auto-commited
@
text
@d4 1
a4 1
[1] [[BruceLilly]] は、 [[ietf-822]] に送った記事
d8 1
a8 1
:[[KeithMoore]]:''MIME'' って略語は発音出来る様に選んだんだし。
d12 1
a12 1
:Keith Moore   :あちゃー。こりゃあ直して [[ProposedStandard]] からやり直さないとあかんなあ。
d15 1
a15 1
- [2] 蛇足ながら解説をば。 [[IETF]] の[[標準化過程]]では、提案標準 (Proposed)→素案標準 (Draft)→(完全)標準 (Full) と進みますが、現在 MIME (RFC 2045〜) は提案標準の段階です。
@


1.5
log
@pre-namespace
@
text
@d11 1
d15 3
@


1.4
log
@Updated.
@
text
@d1 15
a15 2
#?SuikaWiki/0.9
*CRLF (RFC 2045 2.1)
d99 2
a100 6
*See also
-[[MIME]]
--<urn:ietf:rfc:2045>

*License

d102 1
a102 1

@


1.3
log
@Updated.
@
text
@a26 1

d28 1
a28 22

   The term "entity", refers specifically to the MIME-defined header
   fields and contents of either a message or one of the parts in the
   body of a multipart entity.  The specification of such entities is
   the essence of MIME.  Since the contents of an entity are often
   called the "body", it makes sense to speak about the body of an
   entity.  Any sort of field may be present in the header of an entity,
   but only those fields whose names begin with "content-" actually have
   any MIME-related meaning.  Note that this does NOT imply thay they
   have no meaning at all -- an entity that is also a message has non-
   MIME header fields whose meanings are defined by RFC 822.

用語「実体 entity」は具体的には、メッセージまたは多部分実体の本文中の
部分の一つの MIME 定義頭領域と内容を指します。この実体の規定が
MIME の本質であります。実体の内容はしばしば「本文 body」
と呼ばれるのですが、これは実体の本文のことを話していると理解すると
筋が通ります。実態の頭の中にはどんな領域も出現して構いませんが、
「content-」で始まる名前の領域だけが MIME 関連の意味を持ちます。
なお、これは意味を全く成さないと暗示するものでは'''ありません'''。
メッセージでもある実体は RFC 822 が意味を定義した非 MIME 頭領域を
持っています。

@


1.2
log
@Updated.
@
text
@d1 1
d57 2
a58 14
*本文 Body (RFC 2045 2.6)

The term "body", when not further qualified, means the body of an
entity, that is, the body of either a message or of a body part.

用語「本文 body」は修飾語句がない時、実体の本文を意味します。
つまり、メッセージ又は本文部分の本文です。

NOTE:  The previous four definitions are clearly circular.  This is
unavoidable, since the overall structure of a MIME message is indeed recursive.

参考: ここまでの4つの定義は明らかに循環しています。
これは MIME メッセージの全体構造が実に再帰的なので不可避なことです。

@


1.1
log
@Updated.
@
text
@d14 1
a14 52
   The term "character set" is used in MIME to refer to a method of
   converting a sequence of octets into a sequence of characters.  Note
   that unconditional and unambiguous conversion in the other direction
   is not required, in that not all characters may be representable by a
   given character set and a character set may provide more than one
   sequence of octets to represent a particular sequence of characters.

用語「character set」 「文字集合」 は MIME ではオクテット列を
文字列に変換する方法を表します。なお、逆方向への無条件かつ曖昧でない
変換は必須ではありません。全ての文字が当該文字集合で表現可能でない
かもしれませんし、その文字集合で特定の文字列を表現するのに
複数のオクテット列が使えても構いません。

   This definition is intended to allow various kinds of character
   encodings, from simple single-table mappings such as US-ASCII to
   complex table switching methods such as those that use ISO 2022's
   techniques, to be used as character sets.  However, the definition
   associated with a MIME character set name must fully specify the
   mapping to be performed.  In particular, use of external profiling
   information to determine the exact mapping is not permitted.

この定義は、 US-ASCII のように簡単な単一表対応付けから
ISO 2022 技術を使うものまで、様々な種類の文字符号化を文字集合として
使うことを認めるものです。しかし、 MIME 文字集合名に関連付けられる定義は
使われる対応付けを完全に規定するものでなければなりません。
特に、正確な対応付けに外部プロファイル情報を使うのは認められません。

   NOTE: The term "character set" was originally to describe such
   straightforward schemes as US-ASCII and ISO-8859-1 which have a
   simple one-to-one mapping from single octets to single characters.
   Multi-octet coded character sets and switching techniques make the
   situation more complex. For example, some communities use the term
   "character encoding" for what MIME calls a "character set", while
   using the phrase "coded character set" to denote an abstract mapping
   from integers (not octets) to characters.

参考: 用語「character set」「文字集合」は元々は US-ASCII や ISO-8859-1
のように単一オクテットと単一文字の一対一の単純な対応付けを持つ
分かりやすい方式を指していました。多オクテット符号化文字集合や
切り替え技術のおかげで状況が複雑になりました。例えば、
用語「文字符号化 character encoding」を MIME で言うところの
「文字集合 character set」に使い、語句「符号化文字集合 coded character set」
で整数 (オクテットで無しに) から文字への抽象的な対応付けを示す
世間もあります。

**補足

その世間てのは、 ISO 世界のことでしょう。 ISO 世界では CCS と CES
を分けて考えるのが最近の風潮です。更に、 Internet 世界でも
特に Web 系 (XML とか。) では、 ([[Unicode]] 正当化のために:))
この考えを強く主張してるみたいです。

@

