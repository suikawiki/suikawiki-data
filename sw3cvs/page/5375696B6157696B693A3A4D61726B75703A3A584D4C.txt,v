head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.3
	after-upgrade-to-suikawiki-3:1.3
	before-fork-suikawiki3:1.3
	after-restore-20040122:1.3;
locks; strict;
comment	@# @;


1.3
date	2003.09.24.07.19.38;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.31.08.29.22;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.28.10.14.22;	author make;	state Exp;
branches;
next	;


desc
@@


1.3
log
@semi-auto committed
@
text
@#?SuikaWiki/0.9
[1] [[SuikaWiki]] で [[XML]] を扱うために書かれた
[[perl]] モジュール群, [CODE(perl)[SuikaWiki::Markup::XML]]
と [CODE(perl)[SuikaWiki::Markup::XML::[VAR[*]]]]
は、 SuikaWiki から [[manakai]] に移ったのを機に
[CODE(perl)[Message::Markup::XML]] に名前が変更されました。

[CODE(WikiPage)[[[manakai//Message::Markup::XML]]]] を参照して下さい。@


1.2
log
@auto-committed
@
text
@d2 5
a6 2
[1] [CODE(perl)[SuikaWiki::Markup::XML]] は、 [[SuikaWiki]]
で使うために作られた簡易 [[XML]] 出力器 [[perl]] module です。
d8 1
a8 91
この module を使えば、簡単に安全な XML 文書を出力できます。
例:

[PRE[
my $NS_XMP = 'http://markup.example.org/';
my $x = SuikaWiki::Markup::XML->new (type => '#document');
$x->append_new_node (type => '#comment',
                     value => ' AN EXAMPLE XML DOCUMENT ');
$x->append_text ("\n");
my $r = $x->append_new_node (namespace_uri => $NS_XMP,
                             local_name => 'root');
  $r->set_attribute (version => '1.0');
  $r->append_text ("\n");
  my $h = $r->append_new_node (namespace_uri => $NS_XMP,
                               local_name => 'h');
    $h->append_text ('Abstract');
  $r->append_text ("\n");
  my $p = $r->append_new_node (namespace_uri => $NS_XMP,
                               local_name => 'p');
    $p->append_text ('This is an example ');
    $p->append_new_node (namespace_uri => $NS_XMP,
                         local_name => 'em')
      ->append_text ('XML');
    $p->append_text (' document.');
  $r->append_text ("\n");
print $x;
]PRE]

出力例:
[PRE[
<!-- AN EXAMPLE XML DOCUMENT -->
<root version="1.0" xmlns="http://markup.example.org/">
<h>Abstract</h>
<p>This is an example <em>XML</em> document.</p>
</root>
]PRE]

[2] [CODE(perl)[''SuikaWiki''::Markup::XML]] 
という名前ではありますが、特に SuikaWiki
には依存してません。 [WEAK[(改名してもいいのですが・・・ [CODE(perl)[Markup::XML]] にするのがいいか [CODE(perl)[Markup::SGML::XML]] にするのがいいかとか迷っちゃいまして。。。)]]

- [9] XML 文書を扱う [[API]] としては [[DOM]] や [[SAX]] があります。 SAX は基本的には XML を読み込むための界面です。 DOM は元々は既に読み込んだ文書木を操作する界面です。単に出力するだけには大きすぎます。
- [10] perl には既に DOM や SAX などのモジュールがありますが、気にしてはいけません。 [[TMTOWTDI]]。
[[#comment]]

*界面

[5] 確定した界面:
-new
-append_new_node
-append_text
-append_node
-stringify
-node_type
-local_name
-namespace_uri

[6] 不確定要素の残るもののほぼ確定した界面:
-inner_text
-inner_xml
-outer_xml

[7] 未確定界面: module の source 参照。

[8] 対応している型
:#element:[[要素型]]
:#attribute:[[属性]]
:#document:文書
:#fragment:文書断片
:#reference:参照 ([[実体参照]]・[[文字参照]])
:#declaration:[[マーク宣言]]
:#section:[[マーク区間]]
:#pi:[[処理指令]]
:#comment:[[注釈宣言]]
:#xml:生 XML (非推奨)

[[#comment]]

*入手

[3] [[SuikaWiki]] の CVS repository から入手できます。

[[#comment]]

*License

[4] [CODE(perl)[SuikaWiki::Markup::XML]]
及び子モジュールは [[perlと同じライセンス]]です。

*メモ
- [11] XML 文書を構文解析して [CODE(perl)[SuikaWiki::Markup::XML]] の[[実現値]]を生成するモジュール、 [CODE(perl)[[[SuikaWiki::Markup::XML::Parser]]]] もあります。
@


1.1
log
@auto-commited
@
text
@d95 1
@

