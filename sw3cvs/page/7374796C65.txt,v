head	1.22;
access;
symbols
	suikawiki3-final:1.22
	before-db-leaffile:1.4
	after-upgrade-to-suikawiki-3:1.3
	before-fork-suikawiki3:1.3
	after-restore-20040122:1.3;
locks; strict;
comment	@# @;


1.22
date	2008.09.18.03.10.55;	author wakaba;	state Exp;
branches;
next	1.21;

1.21
date	2008.06.08.02.53.47;	author wakaba;	state Exp;
branches;
next	1.20;

1.20
date	2008.05.03.02.49.48;	author wakaba;	state Exp;
branches;
next	1.19;

1.19
date	2008.03.23.02.49.39;	author wakaba;	state Exp;
branches;
next	1.18;

1.18
date	2008.02.13.02.55.31;	author wakaba;	state Exp;
branches;
next	1.17;

1.17
date	2008.01.23.02.45.40;	author wakaba;	state Exp;
branches;
next	1.16;

1.16
date	2008.01.18.02.46.50;	author wakaba;	state Exp;
branches;
next	1.15;

1.15
date	2007.12.18.02.44.42;	author wakaba;	state Exp;
branches;
next	1.14;

1.14
date	2007.06.13.02.53.53;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.08.02.48.54;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2007.04.03.02.37.28;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.27.02.39.03;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.27.02.27.22;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.31.02.26.14;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.31.02.10.23;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.08.02.06.24;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.18.02.08.34;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.03.02.04.06;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.27.02.00.46;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.13.02.01.47;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.06.12.26.33;	author make;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.27.07.25.05;	author make;	state Exp;
branches;
next	;


desc
@@


1.22
log
@auto-committed
@
text
@

* style 要素型 (HTML, XHTML 1)

[38] [[HTML]] の [DFN[[CODE(HTMLe)[style]] 要素型]]の要素を使うと、
文書の頭部 ([CODE(HTMLe)[[[head]]]]) に[[スタイル・シート]]規則を入れることができます。

[39] 仕様書:
- [[HTML 4]] 
-- [CITE[14.2.3 Header style information: the [CODE(HTMLe)[STYLE]] element]]
<IW:HTML4:"present/styles.html#style-group">
-- [CITE[14.5 Hiding style data from user agents]]
<IW:HTML4:"present/styles.html#hiding">
-- [CITE[Element content]]
<IW:HTML4:"appendix/notes.html#h-B.3.2.1">
- [[XHTML 1.0]]
-- [CSECTION[4.8. Script and Style elements]]
(参考) <IW:XHTML10:"h-4.8">
-- [CSECTION[C.14. Referencing Style Elements when serving as XML]]
(参考) <IW:XHTML10:"C_14">

[3]
:[[局所名]]:[CODE(HTMLe)[style]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]] ([[HTML 4]]):[CODE(SGML)[[[CDATA]]]]
:内容模型 ([[XHTML 1]]):[CODE(SGML)[[[PCDATA]]]]
:出現できる文脈:[CODE(HTMLe)[[[head]]]] の子供として任意個
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,[[級]]	,
,[CODE(HTMLa)[[[dir]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[書字方向]]	,[HTML 4]
,[CODE(HTMLa)[[[disabled]]]]	,	,	,無効化	,非標準
,[CODE(HTMLa)[[[id]]]]	,[[ID]]	,(なし)	,唯一識別子	,
,[CODE(HTMLa)[[[lang]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[自然言語]]	,[HTML 4]
,[CODE(HTMLa)[[[xml]]:lang]]	,	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[media]]]]	,[CODE(SGML)[%[[MediaDesc]]]]	,	,適用媒体	,[HTML 4]
,[CODE(HTMLa)[[[notation]]]]	,[CODE(SGML)[[[NOTATION]]]]	,	,スタイル言語	,[[HTML 3.0]]
,[CODE(HTMLa)[xml:[[space]]]]	,	,[CODE(XML)[[[preserve]]]]	,[[空白]]の扱い	,[XHTML 1.0]
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4]
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,(必須)	,[[スタイル言語]]	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容


*** 構文

[4] [[XHTML]] になる前の HTML では、 [CODE(HTMLe)[style]]
の[[内容]]は [CODE(SGML)[[[CDATA]]]] と宣言されていました。
これは、 [CODE(SGML)[[[STAGO]]]] ([CODE(char)[<]]) や
[CODE(SGML)[[[ERO]]]] ([CODE(char)[&]]) も含めて[[終了タグ]]までの文字列をすべて
[CODE(HTMLe)[style]] 要素の内容として扱うことを意味します。

ですから、例えば
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
'''<!--'''
   [CODE(HTMLe)[p]] {color: red; background-color: white}
'''-->'''
</[CODE(HTMLe)[style]]>
]PRE]

と記述したとしても、強調した部分は SGML の[[マーク]]ではなく、
単なる[[文字データ]]扱いになり、 SGML の[[注釈宣言]]とは見なされません。
(その一方で、 [CODE(HTMLe)[style]] が [CODE(SGML)[CDATA]]
と知らない古い UA からは注釈宣言に見えるので、中身を隠すことができるのです。)

[5] ところが、 [[XML]] では内容を [CODE(SGML)[CDATA]]
にすることができません。そこで、 [[XHTML 1]] では [CODE(HTMLe)[style]]
の内容は [CODE(XML)[(#[[PCDATA]])*]] と宣言されています。
これは、通常の内容の扱いと同じになる、つまり
[CODE(char)[<]] や [CODE(char)[&]] は [CODE(SGML)[[[stago]]]] などや
[CODE(SGML)[[[ero]]]] などと見なされ得ることを意味します。

この場合、 >>4 の注釈宣言に見える部分は本当に注釈宣言として扱われます。
このままだと [CODE(HTMLe)[style]] は実質空になってしまいます。

意図した通りに解釈させるためには
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
   [CODE(HTMLe)[p]] {color: red; background-color: white}
</[CODE(HTMLe)[style]]>
]PRE]

としなければなりません。 (当然、古い UA から隠すという機能は失われます。)

[6] スタイル・シートの一部として [CODE(char)[<]] や
[CODE(char)[&]] を書きたいとき、 >>4 では (終了タグと見なされてしまう場合を除き)
そのまま書くことができましたが、 >>5 では非[[整形式]]になってしまいます。

しかし、いちいち escape するのが面倒な場合には、
[[[CODE(XML)[CDATA]]区間]]を使って、
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
 [CODE(XML)['''<!''''''[''''''CDATA''''''[''']]
   /* -- Question of Q & A -- */
   [CODE(HTMLe)[p]] {color: red; background-color: white}
 [CODE(XML)[''']'''''']''''''>''']]
</[CODE(HTMLe)[style]]>
]PRE]

のように書くことができます。 [CODE(XML)[CDATA]] 区間の中では
[CODE(SGML)[[[MSE]]]] ([CODE(XML)[''']''']>]]) 
を除いてそのままの文字データと解釈されます。

[7] なお、 SGML 注釈宣言風の[Q[隠し方]]は HTML の一部ではなく、
スタイル言語の一部です。スタイル言語によっては使えないこともありますから、
注意してください。

[[#comment]]


*** 意味

[42] [CODE(HTMLe)[style]] の内容は、 [CODE(HTMLa)[type]] 
で識別される[[スタイル言語]]によって解釈されます。
構文等もスタイル言語によります。

[[#comment]]


*** CSS

[44] [[CSS]] の仕様書は、 SGML 
の注釈宣言のはじめと終わりのようなものについて次のように述べています。

> CSS style sheets are often embedded in HTML documents, and to be able to 
hide style sheets from older UAs, it is convenient put the style sheets 
inside HTML comments. The HTML comment tokens "<!--" and "-->" may occur 
before, after, and in between the statements. They may have whitespace 
around them. [INS[CSS1 7.1    Forward-compatible parsing <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>]]

> [INS[和訳 (参考):]] CSS スタイル・シートはしばしば HTML 文書に埋込まれまして、
古めの UA からスタイル・シートを隠すことができるように、
スタイル・シートを HTML 注釈の中に入れるのが便利です。
HTML 注釈字句 [CODE[<!--]] と [CODE[-->]] は文の前・後・間に出現できます。
そのまわりに空白を入れても構いません。

> CSS also allows the SGML comment delimiters ("<!--" and "-->") in certain 
places, but they do not delimit CSS comments. They are permitted so that 
style rules appearing in an HTML source document (in the STYLE element) may 
be hidden from pre-HTML 3.2 user agents. See the HTML 4.0 specification 
([HTML40]) for more information. [INS[CSS2 4.1.9 Comments <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>]]

> [INS[和訳 (参考):]] CSS はある場所で SGML 注釈区切子
([CODE(SGML)[<!--]] および [CODE(SGML)[-->]])
をも認めていますが、この両者は CSS 注釈を区切るものではありません。
両者を認めることによって、 HTML 原始文書 (の [CODE(HTMLe)[style]] 要素) 
に出現するスタイル規則を HTML 3.2 以前の利用者エージェントから隠すことができます。
詳しくは HTML 4.0 仕様書をご覧ください。

更に、 CSS2 附属書 D の文法規則でも規則など ([[選択子]]等 + 
[CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) 
の部分の外側ならどこにでも書けるように書かれています。

[45] 仕様書の規定を読む限りでは [CODE(HTMLe)[style]] 要素以外の場所で使う時にも
[Q[SGML 注釈区切子]]を書けるように思えますが、
試しに外部スタイル・シートなどで使ってみると正しく処理できない UA
も少なくないようです。

[47]
CSS2 は HTML 4.0 を見よと言っていますが、 HTML 4 には CSS を注釈宣言のようなもので囲んだ例が挙げられているだけです。一体何を見せたかったのでしょうかね?
([[名無しさん]])

[[#comment]]


*** メモ

[46] XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

[21] >>46 もっとも、 XSL は XML 対象のスタイル言語ですから、
たとえ書けたとしても意味がありませんね。で、実質 XML base 
のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。

[[#comment]]


** 応用

[40] [[スタイル・シート]]に対応しないか、または [CODE(HTMLa)[type]]
で指定されたスタイル言語に対応しない UA は、
[CODE(HTMLe)[style]] の内容を隠さなければなりません。
文章の一部としてレンダリングするのは[RUBY[誤り] [エラー]]です。 [SUP[ [HTML 4] ]]

対応していたらレンダリングしても良いようにも読める書き方ですが、
そういう意図ではないはずです。

[41] スタイル言語によっては、 ([[SGML]] の注釈風に記述することで)
HTML 4 非適合 UA で内容がレンダリングされないようにする機能を持つものもあります。

[[#comment]]


** 歴史

[8] 1995/05/06 の [[HTML 3.0]] draft [[DTD]]
では [CODE(HTMLe)[style]] 要素は次のように定義されています。
[PRE(SGML)[
 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT [CODE(HTMLe)[STYLE]] - O (#PCDATA)>
 <!ATTLIST [CODE(HTMLe)[STYLE]]
     [CODE(HTMLa)[notation]] NOTATION (%style-notations;) #REQUIRED
 >
]PRE]

これを次のようにして使うつもりでした。
[PRE(HTML)[
 <[CODE(HTMLe)[style]] [CODE(HTMLa)[notation]]=dsssl-lite>
   [INS[(DSSSL)]]
 </[CODE(HTMLe)[style]]>
]PRE]

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset でしょう。

[1] 1997年1月に勧告された [[HTML 3.2]] 
は将来の版で使用するとして予約だけしています。属性はありませんでした。

HTML 3.2 DTD より:

> [CODE(SGML)[<!ELEMENT [CODE(HTMLe)[STYLE]]  - - CDATA -- placeholder for style info -->]]

[18] その後に発表された ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は 
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[type]] 属性 (省略可能), 
[CODE(HTMLa)[media]] 属性 (列挙値 
[CODE(SGML)[(print | screen | projection | braille | aural | all)]], 
既定値 [CODE(HTML)[all]]), [CODE(HTMLa)[title]] 属性 (省略可能)
を規定していました。 

[20] 次の ''HTML DTD with support for Style Sheets'' 
<http://www.w3.org/TR/NOTE-html-970531.html> で、
[CODE(HTMLa)[media]] 属性は読点区切りの複数指定が出来るように 
[CODE(SGML)[CDATA]] に改められました。

[49]
[CITE@@en[draft-ietf-html-style-01]] ([CODE[2007-01-28 00:07:26 +09:00]] 版) <http://tools.ietf.org/html/draft-ietf-html-style-01>
([[名無しさん]])

[[#comment]]


** 例

[43] CSS を使った例
[PRE(HTML)[
<HEAD>
 <TITLE>Example of STYLE</TITLE>
 <STYLE type="text/css">
   H1.myclass {border-width: 1px; border: solid; text-align: center}
 </STYLE>
</HEAD>
<BODY>
 <H1 class="myclass"> This H1 is affected by our style </H1>
 <H1> This one is not affected by our style </H1>
</BODY>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[75]
[CITE[菜の花は野沢菜? - 楽天トラベルブログ - 楽天ブログ(Blog)]] ([CODE[2008-06-07 17:21:07 +09:00]] 版) <http://plaza.rakuten.co.jp/travelblog/diary/200604280000/>

The only [CODE(HTMLe)@@en[[[style]]]] element has the [CODE(HTMLa)@@en[[[title]]]]
attribute specified:
[PRE(HTML example code)[
<style type=text/css title="plaza" media="screen,print">
]PRE]

([[名無しさん]])

[[#comment]]


** 他との関係

[48]
[[XHTML]] では、 [[XML]] [[応用]]との互換性のため
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[[[id]]]]
属性を指定し、 [CODE(XML)[[[xml-stylesheet]]]]
[[処理指令]]からこれを参照するべきです。
[SRC[XHTML 1.0 C.14]]

[[#comment]]


** メモ

[52]
[CITE[Kid Language Specification]] ([CODE[2007-01-27 21:50:41 +09:00]] 版) <http://www.kid-templating.org/language.html#xml-comments>
([[名無しさん]])

[63]
[[XBL 1]] には [CODE(XMLe)@@en[[[stylesheet]]]] [[要素]]がありますが、
[[外部スタイル・シート]]のためのもので、
[[HTML]] の [CODE(HTMLe)@@en[[[style]]]] [[要素]]とは異なります。

([[名無しさん]])

[64]
[[XBL 2.0]] の [CODE(XMLe)@@en[[[style]]]] [[要素]]は、
細部や適用対象が異なりますが、大まかにいえば [[HTML]]
の [CODE(HTMLe)@@en[[[style]]]] [[要素]]と同じものです。
([[名無しさん]])

[65]
[[SVG]] の [CODE(XMLe)@@en[[[style]]]] [[要素]]は、細部が異なりますが、
[[HTML]] の [CODE(HTMLe)@@en[[[style]]]] [[要素]]と同じものです。
([[名無しさん]])

[66]
[[SMIL]] の [CODE(XMLe)@@en[[[layout]]]] [[要素]]は、色々違いはありますが
[[HTML]] の [CODE(HTMLe)@@en[[[style]]]] [[要素]]と同じ用途のものです。
([[名無しさん]])

[67]
[[SVG]] の [CODE(XMLe)@@en[[[style]]]] [[要素]]で
[CODE(XMLa)@@en[[[type]]]] [[属性]]が指定されなかった場合、
- [[Firefox]] 2 は[[要素]]自体 (だけ) を[[レンダリング]]上無視します。
[CODE(DOMa)@@en[[[sheet]]]] [[属性]]は [CODE(DOM)@@en[[[null]]]]
となります。
- [[Opera]] 9 は [CODE(MIME)@@en[[[text/css]]]] と指定されたかのように[[レンダリング]]します。
[CODE(DOMa)@@en[[[sheet]]]] [[属性]]も値を持ちます。

([[名無しさん]])

[68]
>>67 テスト <http://suika.fam.cx/~wakaba/-temp/test/svg/style/no-type-css-1.xml>
([[名無しさん]])

[69]
[[DOM]] から [[SVG]] の [CODE(XMLe)@@en[[[style]]]] [[要素]]の[[内容]]を変更しても、
[[Opera]] 9 では反映されません。

;; テスト:
<http://suika.fam.cx/~wakaba/-temp/test/svg/style/dynamic-1.xml>

([[名無しさん]])

[70]
[[WinIE 6]] では、 [CODE(HTMLa)@@en[[[type]]]] [[属性]]の値は[[大文字]]または[[小文字]]の
[CODE(MIME)@@en[[[text/css]]]] でなければならず、その他の値が指定された場合、その[[スタイル・シート]]は適用されません。
[[引数]]や[[空白]]も一切含められません。

;; [[空文字列]]であってもいけません。

([[名無しさん]])

[71]
[[Firefox]] 2 では、[CODE(HTMLa)@@en[[[type]]]] [[属性]]で
= [CODE(MIME)[[[;]]]] があれば、それ以降はすべて無視されます。
= [[空白]] (少なくても [CODE(char)[[[U+000A]]]],
[CODE(char)[[[U+000D]]]], [CODE(char)[[[U+0009]]]],
[CODE(char)[[[U+0020]]]]。 [CODE(char)[[[U+000B]]]]
や [CODE(char)[[[U+000C]]]] は不可。) は一切無視されます。
= 残った文字列が[[大文字]]または[[小文字]]で
[CODE(MIME)@@en[[[text/css]]]] または[[空文字列]]なら、[[CSS]]
[[スタイル・シート]]として使われます。
そうでなければ、その[[スタイル・シート]]は適用されません。

([[名無しさん]])

[72]
[[Opera]] 9 は [CODE(HTMLa)@@en[[[type]]]]
[[属性]]の値に関わらず [[CSS]] [[スタイル・シート]]として処理するようです。
([[名無しさん]])

[73]
[CITE[Google Scholar]] ([CODE[2008-03-22 11:26:31 +09:00]] 版) <http://scholar.google.com/intl/ja/>

>
[PRE(HTML invalid example code)[
<style><!--
body,td,a,p,.h{font-family:arial,sans-serif}
.h{color:#224499}
.q{color:#0000cc}
//-->
</style><script><!--
function sf(){document.f.q.focus();}
// -->
</script>
]PRE]

([[名無しさん]])

[[#comment]]


* style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)

[25] [[HTML]] のほとんどの要素型で定義されている
[DFN[[CODE(HTMLa)[style]] 属性]]は、その要素のスタイル情報を指定します。

[26] 仕様書:
- [[HTML 4]]
-- 14.2.1 Setting the default style sheet language
<IW:HTML4:"present/styles.html#default-style">
-- 14.2.2 Inline style information 
<IW:HTML4:"present/styles.html#style-element">
- [SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
- [MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
- [XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
- [i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
- [VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[[#comment]]


** 代替

[16] [[XHTML 1.1]] ではこの属性は'''非推奨'''とされています。
[[MathML 2.0]] でもこの属性は'''非推奨'''とされています。

代わりに、外部スタイル・シートを使って指定することができます。

[[#comment]]


** 属性値

[13] この属性の値は、 [CODE(SGML)[%[[StyleSheet]]]]
です。 [[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。
適当な[[スタイル言語]]によって解釈されます。

[27] この属性は省略可能です。

[[#comment]]


*** 属性値のスタイル言語

[28]
[[HTML 4]] では、
既定スタイル言語 ([CODE(HTTP)[[[Content-Style-Type]]:]] 欄の説明を参照。) 
の構文に従って指定します。

ただし、多くの HTML UA は [[CSS]] ([CODE(MIME)[[[text/css]]]])
に決め打ちしています。

[29] [[SVG]] では、 [CODE(XMLe)[[[svg]]]] 要素の
[CODE(XMLa)[[[contentStyleType]]]] 属性で指定した言語になります。

[30] [[MathML]], [[XUL]] では CSS で固定です。 [[i-XHTML]]
では [[i-CSS]] です。

[31] [[XSL]] のような XML 系スタイル言語を使うことって可能なのでしょうかね?

[[#comment]]


*** CSS

[36] [[CSS2]] の場合、 [CODE(HTMLa)[style]] 
属性値として指定するのは括弧無しの[RUBYB[宣言ブロック構文] [declaration block syntax]]です。
(という一文が [[HTML 4.01]] で一例として追加されました。 [[HTML 4.0]]
ではこの種の説明が一切ありませんでした。)

CSS 側には一切規定がありません (だから HTML 4.01 で慌てて追加したのでしょう)。
構文を拡張する WD [CSSATTR] が古くから提案されていますが、
[[CSS3]] にあわせて勧告になるのか、ならないのか。

- [CSS2] 4.1.8 Declarations and properties
<http://www.w3.org/TR/REC-CSS2/syndata.html#declaration>
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>

[[#comment]]


** 実装

[32] HTML 4 では [CODE(HTMLa)[style]] 属性を使う時は
[ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] の指定が必須なわけですが、
[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] 以外だと無視してくれました。
しかし [[WinIE 6]] は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[33] >>32 無指定のときは既定値の [CODE(MIME)[text/css]] となるべき (should)
だから [SUP[ [HTML 4] ]]、よくないんじゃないか?

[35] >>32 の無指定のときの結果は間違いかも。

[[#comment]]


** 他との関係

[23] HTML 4 では、 [CODE(HTMLa)[style]] 属性を使用する時は必ず
[CODE(HTTP)[[[Content-Style-Type]]]] の指定が必要です。

[37] 複数の要素にスタイルを指定するためには、 [CODE(HTMLe)[style]]
要素を使用するべきです。更に、柔軟性のために外部スタイル・シートを使用するべきです。
[SUP[ [HTML 4] ]]

[[#comment]]


** 歴史

[19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) 
はほとんどの要素型に [CODE(HTMLa)[style]] 属性を定義しています。

[57]
[CITE@@en[W3C Chat before XTech 2000: XHTML - a bridge to the Web of the future]] ([[Dan Connolly]] 著, [CODE[2000-02-21 12:36:22 +09:00]] 版) <http://lists.w3.org/Archives/Public/www-html/2000Feb/0203.html>

[CITE[IRC log from 2000-02-25T08:07-0500]] ([CODE[2000-02-26 00:53:02 +09:00]] 版) <http://www.w3.org/2000/02/25-xhtml-irc>
([[名無しさん]])

[58]
>>57 [CODE(HTMLa)@@en[[[style]]]] を削除しようかという議論をしているが特に面白いことはなかった。何か結論を出そうとしているのでもない。
([[名無しさん]])

[59]
[CITE@@en[inline CSS - score so far]] ([[JOrendorff@@ixl.com]] 著, [CODE[2000-02-23 17:52:57 +09:00]] 版) <http://lists.w3.org/Archives/Public/www-html/2000Feb/0317.html>
([[名無しさん]])

[[#comment]]


** 例

[34] [[CSS]] を使用した例
[PRE(HTML)[
<P style="font-size: 12pt; color: fuchsia">Aren't style sheets wonderful?
]PRE]

[WEAK[(HTML 4 仕様書より)]]

[24]
UA が [ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] を正しく扱っているかのテスト:
<http://suika.fam.cx/~wakaba/-temp/test/html/style/>

[[#comment]]


** メモ

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML 2.0]] では採用されない予定です。

[17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE(HTMLa)[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

[22] >>15 [CODE(MIME)[[[text/jss]]]] で可能 ([[JIS X 4052]]:2000 5.4.2 を参照。)

[50]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:20:53 +00:00]])

[51]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:21:12 +00:00]])

[53]
[CODE(XMLe)@@en[[QN[text:[[wrap]]] [http://xmlns.graougraou.com/svg/text/]]]]
has [CODE(XMLa)@@en[[[style]]]].

[54]
[CITE[HTML5 IRC logs: freenode / #whatwg / 20070503]] ([CODE[2007-05-04 21:12:45 +09:00]] 版) <http://krijnhoetmer.nl/irc-logs/whatwg/20070503#l-431>
([[名無しさん]] [WEAK[2007-05-04 12:13:34 +00:00]])

[55]
>>54

> 03:31 <Hixie> othermaciej: the current spec is a failed experiment

([[名無しさん]])

[56]

> 03:31 <othermaciej> Hixie: I'm not sure removing style="", allowing it on <font> for WYSIWYG only, and adding scoped <style> addresses any actual requirements

([[名無しさん]])

[60]
[[Opera]] 9 も [[Firefox]] 2 も、 [CODE(DOMm)@@en[[[setAttribute]]]]
で [[HTML]] の [CODE(HTMLa)@@en[[[style]]]] [[属性]]を変更すると勝手に[[属性値]]を[[正規化]]するようです ([CODE(DOMa)@@en[[[cssText]]]] と同じ?)。
([[名無しさん]])

[61]
>>60 [[Opera]] 9 で [[CSS]] として[[非妥当]]な値を与えた場合、
[CODE(CSS)[[[;]]]] が1つでも含まれていれば (その前後が[[妥当]]な[[宣言]]であろうとなかろうと)
無視するみたいです (元の [CODE(HTMLa)@@en[[[style]]]]
[[属性値]]のまま変わりません)。含まれていなければ、
[[属性値]]は[[空文字列]]になるようです。

;; <http://suika.fam.cx/~wakaba/-temp/test/dom/element/set-attr/html/style/>
([[名無しさん]])

[62]
>>61 [[空文字列]]ではなく [CODE(JS)@@en[[[null]]]] かもしれないがよくわからない。
([[名無しさん]])

[74]
[CITE@@en[We don't need the style attribute]] ([[Ian Hickson]] 著, [CODE[2003-01-16 21:19:27 +09:00]] 版) <http://lists.w3.org/Archives/Public/www-html/2003Jan/0277.html>
([[名無しさん]])

[76]
[PRE(HTML bad example code)[
style="color: green;
}
color: red;"
]PRE]

<http://suika.fam.cx/gate/2007/cssom/viewer.en.html?c=color%3A%20green%3B%0A%7D%0Acolor%3A%20red%3B%0A%0A;h=XXXXXXXXXX;p=n;x=style-attribute;i=html-div>

[[WinIE 7]] では赤色、それ以外3ブラウザでは緑色。
([[名無しさん]])

[77]
>>60 [[Safari]] 3.1 の動作は正しいです ([CODE(DOMa)@@en[[[cssText]]]]
は正規化済み、 [CODE(DOMm)@@en[[[getAttribute]]]] は元のまま。)

[[Opera]] は 9.27 の時は [CODE(DOMa)@@en[[[cssText]]]] の動作が正しく (正規化済み)、
[CODE(DOMm)@@en[[[getAttribute]]]] の動作が間違っていました (これも正規化済み) が、
9.52 では逆になっていて、 [CODE(DOMa)@@en[[[cssText]]]] の動作は誤り (元のまま)、
[CODE(DOMm)@@en[[[getAttribute]]]] の動作は正しい (元のまま) ようです。
([[名無しさん]])

[78]
>>77 [[Opera]] 9.52 で [CODE(DOMi)@@en[[[CSSStyleDeclaration]]]] 上の[[属性]]を変更すると、
[CODE(DOMa)@@en[[[cssText]]]] や [CODE(DOMa)@@en[[[style]]]]
[[内容属性]]の値は[[空文字列]]になるようです。

;; <http://suika.fam.cx/gate/2007/cssom/viewer.en.html?c=p%7B%0D%0Acolor%3A%20reD%3B%0D%0A%7D%3Bt%3B%0D%0Acolor%3A%20green%3B%0D%0Aunknown%20%3B%0D%0A%7D;h=%3Cspan%20onclick%3D%22sd().color%3D'blue'%3Bw(typeof%20(sd().cssText))%3Bu()%3B%22%3EXXXXXXXXXX;p=n;x=svg-style-attribute;i=html-div>

([[名無しさん]])

[79]
>>78 は間違いなので訂正。

変更すると、
- [[HTML]] の [CODE(HTMLa)@@en[[[style]]]] [[属性]]の場合、
-- [CODE(DOMa)@@en[[[cssText]]]] は新しい値になります (正しい)
-- [[内容属性]]は新しい値になります (正しい)
- [[SVG]] の [CODE(XMLa)@@en[[[style]]]] [[属性]]の場合、
-- [CODE(DOMa)@@en[[[cssText]]]] は[[空文字列]]になります (おかしい)
-- [[内容属性]]は新しい値になります (正しい)

([[名無しさん]])

[80]
>>77 [[Opera]] 9.52 は [[SVG]] の [CODE(XMLa)@@en[[[style]]]] [[属性]]についてはどちらも正しい。
([[名無しさん]])

[81]
>>79 どうも、 [[Opera]] 9.52 の [[SVG]] の [CODE(SVGa)@@en[[[style]]]]
[[属性]]に対応する [CODE(DOMa)@@en[[[cssText]]]] は、単に任意の文字列を読み書きできるだけの[[オブジェクト特性]] (初期値は[[空文字列]]) になっているようです。
実際の[[スタイル特性]]の変化に追随しませんし、値を設定しても[[スタイル特性]]には影響しません。
([[名無しさん]])

[82]
>>81 他方、 [[HTML]] の [CODE(HTMLa)@@en[[[style]]]] [[属性]]に対応する
[CODE(DOMa)@@en[[[cssText]]]] は、[CODE(HTMLa)@@en[[[style]]]] [[属性]]を[[文字列]]として[[反映]]しているだけのようです。
値を設定しても、[[文字列]]として[[内容属性]]が変化し、それに追随して[[スタイル特性]]も変化しますが、
[CODE(DOMa)@@en[[[cssText]]]] の値は[[内容属性]]と同じです。
[[スタイル特性]]が変更されるとそれに追随して[[内容属性]]も変化しますが、
[CODE(DOMa)@@en[[[cssText]]]] も同じ値に変化します。(なお、
[[スタイル特性]]を変更したものの、実際には値に変化が起こらない場合 (同じ値を代入した場合など) には[[内容属性]]も [CODE(DOMa)@@en[[[cssText]]]]
も変化しないみたいです。)
([[名無しさん]])

[83]

[PRE(HTML bad example code)[
style="color: red;
};
color: green;"
]PRE]

<http://suika.fam.cx/gate/2007/cssom/viewer.en.html?c=color%3A%20red%3B%0A%7D%3B%0Acolor%3A%20green%3B;h=XXXXXXXXXX;p=n;x=style-attribute;i=html-div>

[[Firefox]] 3 と [[WinIE 7]] では緑色 (正しい)。
[[Safari]] 3.1 と [[Opera]] 9.52 では赤色 (間違い)。
([[名無しさん]])


[84]
>>83 [CODE(CSS)[}]] を [CODE(CSS)[}{}]] とか [CODE(CSS)[}{]] とかに変えてみても結果は変わらず。
[[Safari]] と [[Opera]] では一度 [CODE(CSS)[}]] が現れると後はすべて無視されるのか?
([[名無しさん]])


[[#comment]]


* メモ@


1.21
log
@auto-committed
@
text
@d279 2
d282 5
a286 10
[75]
[CITE[菜の花は野沢菜? - 楽天トラベルブログ - 楽天ブログ(Blog)]] ([TIME[2008-06-07 17:21:07 +09:00]] 版) <http://plaza.rakuten.co.jp/travelblog/diary/200604280000/>

The only [CODE(HTMLe)@@en[[[style]]]] element has the [CODE(HTMLa)@@en[[[title]]]]
attribute specified:
[PRE(HTML example code)[
<style type=text/css title="plaza" media="screen,print">
]PRE]


a289 1

d632 86
@


1.20
log
@auto-committed
@
text
@d279 15
a632 1

d634 1
a634 1
[CITE@@en[We don't need the style attribute]] ([[Ian Hickson]] 著, [TIME[2003-01-16 21:19:27 +09:00]] 版) <http://lists.w3.org/Archives/Public/www-html/2003Jan/0277.html>
a635 1

@


1.19
log
@auto-committed
@
text
@d375 2
d378 12
a389 15
[73]
[CITE[Google Scholar]] ([TIME[2008-03-22 11:26:31 +09:00]] 版) <http://scholar.google.com/intl/ja/>

>
[PRE(HTML invalid example code)[
<style><!--
body,td,a,p,.h{font-family:arial,sans-serif}
.h{color:#224499}
.q{color:#0000cc}
//-->
</style><script><!--
function sf(){document.f.q.focus();}
// -->
</script>
]PRE]
a392 1

d617 6
@


1.18
log
@auto-committed
@
text
@a369 1

d371 1
a371 1
[[Opera]] 9 は [CODE(HTMLa)@@en[[[type]]]]
d373 19
@


1.17
log
@auto-committed
@
text
@d338 31
a369 6
[69]
[[DOM]] から [[SVG]] の [CODE(XMLe)@@en[[[style]]]] [[要素]]の[[内容]]を変更しても、
[[Opera]] 9 では反映されません。

;; テスト:
<http://suika.fam.cx/~wakaba/-temp/test/svg/style/dynamic-1.xml>
d371 3
@


1.16
log
@auto-committed
@
text
@a317 1

d319 1
a319 1
[[SMIL]] の [CODE(XMLe)@@en[[[layout]]]] [[要素]]は、色々違いはありますが
d321 25
@


1.15
log
@auto-committed
@
text
@d300 25
a545 1

a548 1

@


1.14
log
@auto-committed
@
text
@a429 1

d431 1
a431 1
[CITE@@en[inline CSS - score so far]] ([[JOrendorff@@ixl.com]] 著, [TIME[2000-02-23 17:52:57 +09:00]] 版) <http://lists.w3.org/Archives/Public/www-html/2000Feb/0317.html>
a433 1

d505 21
@


1.13
log
@auto-committed
@
text
@d420 16
d502 1
d504 1
a504 4
[56]

>03:31 <othermaciej> Hixie: I'm not sure removing style="", allowing it on <font> for WYSIWYG only, and adding scoped <style> addresses any actual requirements

a506 1

@


1.12
log
@auto-committed
@
text
@d1 497
a497 477

* style 要素型 (HTML, XHTML 1)

[38] [[HTML]] の [DFN[[CODE(HTMLe)[style]] 要素型]]の要素を使うと、
文書の頭部 ([CODE(HTMLe)[[[head]]]]) に[[スタイル・シート]]規則を入れることができます。

[39] 仕様書:
- [[HTML 4]] 
-- [CITE[14.2.3 Header style information: the [CODE(HTMLe)[STYLE]] element]]
<IW:HTML4:"present/styles.html#style-group">
-- [CITE[14.5 Hiding style data from user agents]]
<IW:HTML4:"present/styles.html#hiding">
-- [CITE[Element content]]
<IW:HTML4:"appendix/notes.html#h-B.3.2.1">
- [[XHTML 1.0]]
-- [CSECTION[4.8. Script and Style elements]]
(参考) <IW:XHTML10:"h-4.8">
-- [CSECTION[C.14. Referencing Style Elements when serving as XML]]
(参考) <IW:XHTML10:"C_14">

[3]
:[[局所名]]:[CODE(HTMLe)[style]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]] ([[HTML 4]]):[CODE(SGML)[[[CDATA]]]]
:内容模型 ([[XHTML 1]]):[CODE(SGML)[[[PCDATA]]]]
:出現できる文脈:[CODE(HTMLe)[[[head]]]] の子供として任意個
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,[[級]]	,
,[CODE(HTMLa)[[[dir]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[書字方向]]	,[HTML 4]
,[CODE(HTMLa)[[[disabled]]]]	,	,	,無効化	,非標準
,[CODE(HTMLa)[[[id]]]]	,[[ID]]	,(なし)	,唯一識別子	,
,[CODE(HTMLa)[[[lang]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[自然言語]]	,[HTML 4]
,[CODE(HTMLa)[[[xml]]:lang]]	,	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[media]]]]	,[CODE(SGML)[%[[MediaDesc]]]]	,	,適用媒体	,[HTML 4]
,[CODE(HTMLa)[[[notation]]]]	,[CODE(SGML)[[[NOTATION]]]]	,	,スタイル言語	,[[HTML 3.0]]
,[CODE(HTMLa)[xml:[[space]]]]	,	,[CODE(XML)[[[preserve]]]]	,[[空白]]の扱い	,[XHTML 1.0]
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4]
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,(必須)	,[[スタイル言語]]	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容


*** 構文

[4] [[XHTML]] になる前の HTML では、 [CODE(HTMLe)[style]]
の[[内容]]は [CODE(SGML)[[[CDATA]]]] と宣言されていました。
これは、 [CODE(SGML)[[[STAGO]]]] ([CODE(char)[<]]) や
[CODE(SGML)[[[ERO]]]] ([CODE(char)[&]]) も含めて[[終了タグ]]までの文字列をすべて
[CODE(HTMLe)[style]] 要素の内容として扱うことを意味します。

ですから、例えば
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
'''<!--'''
   [CODE(HTMLe)[p]] {color: red; background-color: white}
'''-->'''
</[CODE(HTMLe)[style]]>
]PRE]

と記述したとしても、強調した部分は SGML の[[マーク]]ではなく、
単なる[[文字データ]]扱いになり、 SGML の[[注釈宣言]]とは見なされません。
(その一方で、 [CODE(HTMLe)[style]] が [CODE(SGML)[CDATA]]
と知らない古い UA からは注釈宣言に見えるので、中身を隠すことができるのです。)

[5] ところが、 [[XML]] では内容を [CODE(SGML)[CDATA]]
にすることができません。そこで、 [[XHTML 1]] では [CODE(HTMLe)[style]]
の内容は [CODE(XML)[(#[[PCDATA]])*]] と宣言されています。
これは、通常の内容の扱いと同じになる、つまり
[CODE(char)[<]] や [CODE(char)[&]] は [CODE(SGML)[[[stago]]]] などや
[CODE(SGML)[[[ero]]]] などと見なされ得ることを意味します。

この場合、 >>4 の注釈宣言に見える部分は本当に注釈宣言として扱われます。
このままだと [CODE(HTMLe)[style]] は実質空になってしまいます。

意図した通りに解釈させるためには
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
   [CODE(HTMLe)[p]] {color: red; background-color: white}
</[CODE(HTMLe)[style]]>
]PRE]

としなければなりません。 (当然、古い UA から隠すという機能は失われます。)

[6] スタイル・シートの一部として [CODE(char)[<]] や
[CODE(char)[&]] を書きたいとき、 >>4 では (終了タグと見なされてしまう場合を除き)
そのまま書くことができましたが、 >>5 では非[[整形式]]になってしまいます。

しかし、いちいち escape するのが面倒な場合には、
[[[CODE(XML)[CDATA]]区間]]を使って、
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
 [CODE(XML)['''<!''''''[''''''CDATA''''''[''']]
   /* -- Question of Q & A -- */
   [CODE(HTMLe)[p]] {color: red; background-color: white}
 [CODE(XML)[''']'''''']''''''>''']]
</[CODE(HTMLe)[style]]>
]PRE]

のように書くことができます。 [CODE(XML)[CDATA]] 区間の中では
[CODE(SGML)[[[MSE]]]] ([CODE(XML)[''']''']>]]) 
を除いてそのままの文字データと解釈されます。

[7] なお、 SGML 注釈宣言風の[Q[隠し方]]は HTML の一部ではなく、
スタイル言語の一部です。スタイル言語によっては使えないこともありますから、
注意してください。

[[#comment]]


*** 意味

[42] [CODE(HTMLe)[style]] の内容は、 [CODE(HTMLa)[type]] 
で識別される[[スタイル言語]]によって解釈されます。
構文等もスタイル言語によります。

[[#comment]]


*** CSS

[44] [[CSS]] の仕様書は、 SGML 
の注釈宣言のはじめと終わりのようなものについて次のように述べています。

> CSS style sheets are often embedded in HTML documents, and to be able to 
hide style sheets from older UAs, it is convenient put the style sheets 
inside HTML comments. The HTML comment tokens "<!--" and "-->" may occur 
before, after, and in between the statements. They may have whitespace 
around them. [INS[CSS1 7.1    Forward-compatible parsing <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>]]

> [INS[和訳 (参考):]] CSS スタイル・シートはしばしば HTML 文書に埋込まれまして、
古めの UA からスタイル・シートを隠すことができるように、
スタイル・シートを HTML 注釈の中に入れるのが便利です。
HTML 注釈字句 [CODE[<!--]] と [CODE[-->]] は文の前・後・間に出現できます。
そのまわりに空白を入れても構いません。

> CSS also allows the SGML comment delimiters ("<!--" and "-->") in certain 
places, but they do not delimit CSS comments. They are permitted so that 
style rules appearing in an HTML source document (in the STYLE element) may 
be hidden from pre-HTML 3.2 user agents. See the HTML 4.0 specification 
([HTML40]) for more information. [INS[CSS2 4.1.9 Comments <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>]]

> [INS[和訳 (参考):]] CSS はある場所で SGML 注釈区切子
([CODE(SGML)[<!--]] および [CODE(SGML)[-->]])
をも認めていますが、この両者は CSS 注釈を区切るものではありません。
両者を認めることによって、 HTML 原始文書 (の [CODE(HTMLe)[style]] 要素) 
に出現するスタイル規則を HTML 3.2 以前の利用者エージェントから隠すことができます。
詳しくは HTML 4.0 仕様書をご覧ください。

更に、 CSS2 附属書 D の文法規則でも規則など ([[選択子]]等 + 
[CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) 
の部分の外側ならどこにでも書けるように書かれています。

[45] 仕様書の規定を読む限りでは [CODE(HTMLe)[style]] 要素以外の場所で使う時にも
[Q[SGML 注釈区切子]]を書けるように思えますが、
試しに外部スタイル・シートなどで使ってみると正しく処理できない UA
も少なくないようです。

[47]
CSS2 は HTML 4.0 を見よと言っていますが、 HTML 4 には CSS を注釈宣言のようなもので囲んだ例が挙げられているだけです。一体何を見せたかったのでしょうかね?
([[名無しさん]])

[[#comment]]


*** メモ

[46] XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

[21] >>46 もっとも、 XSL は XML 対象のスタイル言語ですから、
たとえ書けたとしても意味がありませんね。で、実質 XML base 
のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。

[[#comment]]


** 応用

[40] [[スタイル・シート]]に対応しないか、または [CODE(HTMLa)[type]]
で指定されたスタイル言語に対応しない UA は、
[CODE(HTMLe)[style]] の内容を隠さなければなりません。
文章の一部としてレンダリングするのは[RUBY[誤り] [エラー]]です。 [SUP[ [HTML 4] ]]

対応していたらレンダリングしても良いようにも読める書き方ですが、
そういう意図ではないはずです。

[41] スタイル言語によっては、 ([[SGML]] の注釈風に記述することで)
HTML 4 非適合 UA で内容がレンダリングされないようにする機能を持つものもあります。

[[#comment]]


** 歴史

[8] 1995/05/06 の [[HTML 3.0]] draft [[DTD]]
では [CODE(HTMLe)[style]] 要素は次のように定義されています。
[PRE(SGML)[
 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT [CODE(HTMLe)[STYLE]] - O (#PCDATA)>
 <!ATTLIST [CODE(HTMLe)[STYLE]]
     [CODE(HTMLa)[notation]] NOTATION (%style-notations;) #REQUIRED
 >
]PRE]

これを次のようにして使うつもりでした。
[PRE(HTML)[
 <[CODE(HTMLe)[style]] [CODE(HTMLa)[notation]]=dsssl-lite>
   [INS[(DSSSL)]]
 </[CODE(HTMLe)[style]]>
]PRE]

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset でしょう。

[1] 1997年1月に勧告された [[HTML 3.2]] 
は将来の版で使用するとして予約だけしています。属性はありませんでした。

HTML 3.2 DTD より:

> [CODE(SGML)[<!ELEMENT [CODE(HTMLe)[STYLE]]  - - CDATA -- placeholder for style info -->]]

[18] その後に発表された ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は 
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[type]] 属性 (省略可能), 
[CODE(HTMLa)[media]] 属性 (列挙値 
[CODE(SGML)[(print | screen | projection | braille | aural | all)]], 
既定値 [CODE(HTML)[all]]), [CODE(HTMLa)[title]] 属性 (省略可能)
を規定していました。 

[20] 次の ''HTML DTD with support for Style Sheets'' 
<http://www.w3.org/TR/NOTE-html-970531.html> で、
[CODE(HTMLa)[media]] 属性は読点区切りの複数指定が出来るように 
[CODE(SGML)[CDATA]] に改められました。

[49]
[CITE@@en[draft-ietf-html-style-01]] ([CODE[2007-01-28 00:07:26 +09:00]] 版) <http://tools.ietf.org/html/draft-ietf-html-style-01>
([[名無しさん]])

[[#comment]]


** 例

[43] CSS を使った例
[PRE(HTML)[
<HEAD>
 <TITLE>Example of STYLE</TITLE>
 <STYLE type="text/css">
   H1.myclass {border-width: 1px; border: solid; text-align: center}
 </STYLE>
</HEAD>
<BODY>
 <H1 class="myclass"> This H1 is affected by our style </H1>
 <H1> This one is not affected by our style </H1>
</BODY>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** 他との関係

[48]
[[XHTML]] では、 [[XML]] [[応用]]との互換性のため
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[[[id]]]]
属性を指定し、 [CODE(XML)[[[xml-stylesheet]]]]
[[処理指令]]からこれを参照するべきです。
[SRC[XHTML 1.0 C.14]]

[[#comment]]


** メモ

[52]
[CITE[Kid Language Specification]] ([TIME[2007-01-27 21:50:41 +09:00]] 版) <http://www.kid-templating.org/language.html#xml-comments>
([[名無しさん]])


[[#comment]]


* style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)

[25] [[HTML]] のほとんどの要素型で定義されている
[DFN[[CODE(HTMLa)[style]] 属性]]は、その要素のスタイル情報を指定します。

[26] 仕様書:
- [[HTML 4]]
-- 14.2.1 Setting the default style sheet language
<IW:HTML4:"present/styles.html#default-style">
-- 14.2.2 Inline style information 
<IW:HTML4:"present/styles.html#style-element">
- [SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
- [MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
- [XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
- [i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
- [VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[[#comment]]


** 代替

[16] [[XHTML 1.1]] ではこの属性は'''非推奨'''とされています。
[[MathML 2.0]] でもこの属性は'''非推奨'''とされています。

代わりに、外部スタイル・シートを使って指定することができます。

[[#comment]]


** 属性値

[13] この属性の値は、 [CODE(SGML)[%[[StyleSheet]]]]
です。 [[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。
適当な[[スタイル言語]]によって解釈されます。

[27] この属性は省略可能です。

[[#comment]]


*** 属性値のスタイル言語

[28]
[[HTML 4]] では、
既定スタイル言語 ([CODE(HTTP)[[[Content-Style-Type]]:]] 欄の説明を参照。) 
の構文に従って指定します。

ただし、多くの HTML UA は [[CSS]] ([CODE(MIME)[[[text/css]]]])
に決め打ちしています。

[29] [[SVG]] では、 [CODE(XMLe)[[[svg]]]] 要素の
[CODE(XMLa)[[[contentStyleType]]]] 属性で指定した言語になります。

[30] [[MathML]], [[XUL]] では CSS で固定です。 [[i-XHTML]]
では [[i-CSS]] です。

[31] [[XSL]] のような XML 系スタイル言語を使うことって可能なのでしょうかね?

[[#comment]]


*** CSS

[36] [[CSS2]] の場合、 [CODE(HTMLa)[style]] 
属性値として指定するのは括弧無しの[RUBYB[宣言ブロック構文] [declaration block syntax]]です。
(という一文が [[HTML 4.01]] で一例として追加されました。 [[HTML 4.0]]
ではこの種の説明が一切ありませんでした。)

CSS 側には一切規定がありません (だから HTML 4.01 で慌てて追加したのでしょう)。
構文を拡張する WD [CSSATTR] が古くから提案されていますが、
[[CSS3]] にあわせて勧告になるのか、ならないのか。

- [CSS2] 4.1.8 Declarations and properties
<http://www.w3.org/TR/REC-CSS2/syndata.html#declaration>
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>

[[#comment]]


** 実装

[32] HTML 4 では [CODE(HTMLa)[style]] 属性を使う時は
[ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] の指定が必須なわけですが、
[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] 以外だと無視してくれました。
しかし [[WinIE 6]] は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[33] >>32 無指定のときは既定値の [CODE(MIME)[text/css]] となるべき (should)
だから [SUP[ [HTML 4] ]]、よくないんじゃないか?

[35] >>32 の無指定のときの結果は間違いかも。

[[#comment]]


** 他との関係

[23] HTML 4 では、 [CODE(HTMLa)[style]] 属性を使用する時は必ず
[CODE(HTTP)[[[Content-Style-Type]]]] の指定が必要です。

[37] 複数の要素にスタイルを指定するためには、 [CODE(HTMLe)[style]]
要素を使用するべきです。更に、柔軟性のために外部スタイル・シートを使用するべきです。
[SUP[ [HTML 4] ]]

[[#comment]]


** 歴史

[19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) 
はほとんどの要素型に [CODE(HTMLa)[style]] 属性を定義しています。

[[#comment]]


** 例

[34] [[CSS]] を使用した例
[PRE(HTML)[
<P style="font-size: 12pt; color: fuchsia">Aren't style sheets wonderful?
]PRE]

[WEAK[(HTML 4 仕様書より)]]

[24]
UA が [ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] を正しく扱っているかのテスト:
<http://suika.fam.cx/~wakaba/-temp/test/html/style/>

[[#comment]]


** メモ

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML 2.0]] では採用されない予定です。

[17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE(HTMLa)[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

[22] >>15 [CODE(MIME)[[[text/jss]]]] で可能 ([[JIS X 4052]]:2000 5.4.2 を参照。)

[50]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:20:53 +00:00]])

[51]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:21:12 +00:00]])

[53]
[CODE(XMLe)@@en[[QN[text:[[wrap]]][http://xmlns.graougraou.com/svg/text/]]]]
has [CODE(XMLa)@@en[[[style]]]].

[[#comment]]


@


1.11
log
@auto-committed
@
text
@d1 477
a477 474


* style 要素型 (HTML, XHTML 1)

[38] [[HTML]] の [DFN[[CODE(HTMLe)[style]] 要素型]]の要素を使うと、
文書の頭部 ([CODE(HTMLe)[[[head]]]]) に[[スタイル・シート]]規則を入れることができます。

[39] 仕様書:
- [[HTML 4]] 
-- [CITE[14.2.3 Header style information: the [CODE(HTMLe)[STYLE]] element]]
<IW:HTML4:"present/styles.html#style-group">
-- [CITE[14.5 Hiding style data from user agents]]
<IW:HTML4:"present/styles.html#hiding">
-- [CITE[Element content]]
<IW:HTML4:"appendix/notes.html#h-B.3.2.1">
- [[XHTML 1.0]]
-- [CSECTION[4.8. Script and Style elements]]
(参考) <IW:XHTML10:"h-4.8">
-- [CSECTION[C.14. Referencing Style Elements when serving as XML]]
(参考) <IW:XHTML10:"C_14">

[3]
:[[局所名]]:[CODE(HTMLe)[style]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]] ([[HTML 4]]):[CODE(SGML)[[[CDATA]]]]
:内容模型 ([[XHTML 1]]):[CODE(SGML)[[[PCDATA]]]]
:出現できる文脈:[CODE(HTMLe)[[[head]]]] の子供として任意個
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,[[級]]	,
,[CODE(HTMLa)[[[dir]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[書字方向]]	,[HTML 4]
,[CODE(HTMLa)[[[disabled]]]]	,	,	,無効化	,非標準
,[CODE(HTMLa)[[[id]]]]	,[[ID]]	,(なし)	,唯一識別子	,
,[CODE(HTMLa)[[[lang]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[自然言語]]	,[HTML 4]
,[CODE(HTMLa)[[[xml]]:lang]]	,	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[media]]]]	,[CODE(SGML)[%[[MediaDesc]]]]	,	,適用媒体	,[HTML 4]
,[CODE(HTMLa)[[[notation]]]]	,[CODE(SGML)[[[NOTATION]]]]	,	,スタイル言語	,[[HTML 3.0]]
,[CODE(HTMLa)[xml:[[space]]]]	,	,[CODE(XML)[[[preserve]]]]	,[[空白]]の扱い	,[XHTML 1.0]
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4]
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,(必須)	,[[スタイル言語]]	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,[[名前空間名]]	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** 内容


*** 構文

[4] [[XHTML]] になる前の HTML では、 [CODE(HTMLe)[style]]
の[[内容]]は [CODE(SGML)[[[CDATA]]]] と宣言されていました。
これは、 [CODE(SGML)[[[STAGO]]]] ([CODE(char)[<]]) や
[CODE(SGML)[[[ERO]]]] ([CODE(char)[&]]) も含めて[[終了タグ]]までの文字列をすべて
[CODE(HTMLe)[style]] 要素の内容として扱うことを意味します。

ですから、例えば
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
'''<!--'''
   [CODE(HTMLe)[p]] {color: red; background-color: white}
'''-->'''
</[CODE(HTMLe)[style]]>
]PRE]

と記述したとしても、強調した部分は SGML の[[マーク]]ではなく、
単なる[[文字データ]]扱いになり、 SGML の[[注釈宣言]]とは見なされません。
(その一方で、 [CODE(HTMLe)[style]] が [CODE(SGML)[CDATA]]
と知らない古い UA からは注釈宣言に見えるので、中身を隠すことができるのです。)

[5] ところが、 [[XML]] では内容を [CODE(SGML)[CDATA]]
にすることができません。そこで、 [[XHTML 1]] では [CODE(HTMLe)[style]]
の内容は [CODE(XML)[(#[[PCDATA]])*]] と宣言されています。
これは、通常の内容の扱いと同じになる、つまり
[CODE(char)[<]] や [CODE(char)[&]] は [CODE(SGML)[[[stago]]]] などや
[CODE(SGML)[[[ero]]]] などと見なされ得ることを意味します。

この場合、 >>4 の注釈宣言に見える部分は本当に注釈宣言として扱われます。
このままだと [CODE(HTMLe)[style]] は実質空になってしまいます。

意図した通りに解釈させるためには
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
   [CODE(HTMLe)[p]] {color: red; background-color: white}
</[CODE(HTMLe)[style]]>
]PRE]

としなければなりません。 (当然、古い UA から隠すという機能は失われます。)

[6] スタイル・シートの一部として [CODE(char)[<]] や
[CODE(char)[&]] を書きたいとき、 >>4 では (終了タグと見なされてしまう場合を除き)
そのまま書くことができましたが、 >>5 では非[[整形式]]になってしまいます。

しかし、いちいち escape するのが面倒な場合には、
[[[CODE(XML)[CDATA]]区間]]を使って、
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
 [CODE(XML)['''<!''''''[''''''CDATA''''''[''']]
   /* -- Question of Q & A -- */
   [CODE(HTMLe)[p]] {color: red; background-color: white}
 [CODE(XML)[''']'''''']''''''>''']]
</[CODE(HTMLe)[style]]>
]PRE]

のように書くことができます。 [CODE(XML)[CDATA]] 区間の中では
[CODE(SGML)[[[MSE]]]] ([CODE(XML)[''']''']>]]) 
を除いてそのままの文字データと解釈されます。

[7] なお、 SGML 注釈宣言風の[Q[隠し方]]は HTML の一部ではなく、
スタイル言語の一部です。スタイル言語によっては使えないこともありますから、
注意してください。

[[#comment]]


*** 意味

[42] [CODE(HTMLe)[style]] の内容は、 [CODE(HTMLa)[type]] 
で識別される[[スタイル言語]]によって解釈されます。
構文等もスタイル言語によります。

[[#comment]]


*** CSS

[44] [[CSS]] の仕様書は、 SGML 
の注釈宣言のはじめと終わりのようなものについて次のように述べています。

> CSS style sheets are often embedded in HTML documents, and to be able to 
hide style sheets from older UAs, it is convenient put the style sheets 
inside HTML comments. The HTML comment tokens "<!--" and "-->" may occur 
before, after, and in between the statements. They may have whitespace 
around them. [INS[CSS1 7.1    Forward-compatible parsing <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>]]

> [INS[和訳 (参考):]] CSS スタイル・シートはしばしば HTML 文書に埋込まれまして、
古めの UA からスタイル・シートを隠すことができるように、
スタイル・シートを HTML 注釈の中に入れるのが便利です。
HTML 注釈字句 [CODE[<!--]] と [CODE[-->]] は文の前・後・間に出現できます。
そのまわりに空白を入れても構いません。

> CSS also allows the SGML comment delimiters ("<!--" and "-->") in certain 
places, but they do not delimit CSS comments. They are permitted so that 
style rules appearing in an HTML source document (in the STYLE element) may 
be hidden from pre-HTML 3.2 user agents. See the HTML 4.0 specification 
([HTML40]) for more information. [INS[CSS2 4.1.9 Comments <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>]]

> [INS[和訳 (参考):]] CSS はある場所で SGML 注釈区切子
([CODE(SGML)[<!--]] および [CODE(SGML)[-->]])
をも認めていますが、この両者は CSS 注釈を区切るものではありません。
両者を認めることによって、 HTML 原始文書 (の [CODE(HTMLe)[style]] 要素) 
に出現するスタイル規則を HTML 3.2 以前の利用者エージェントから隠すことができます。
詳しくは HTML 4.0 仕様書をご覧ください。

更に、 CSS2 附属書 D の文法規則でも規則など ([[選択子]]等 + 
[CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) 
の部分の外側ならどこにでも書けるように書かれています。

[45] 仕様書の規定を読む限りでは [CODE(HTMLe)[style]] 要素以外の場所で使う時にも
[Q[SGML 注釈区切子]]を書けるように思えますが、
試しに外部スタイル・シートなどで使ってみると正しく処理できない UA
も少なくないようです。

[47]
CSS2 は HTML 4.0 を見よと言っていますが、 HTML 4 には CSS を注釈宣言のようなもので囲んだ例が挙げられているだけです。一体何を見せたかったのでしょうかね?
([[名無しさん]])

[[#comment]]


*** メモ

[46] XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

[21] >>46 もっとも、 XSL は XML 対象のスタイル言語ですから、
たとえ書けたとしても意味がありませんね。で、実質 XML base 
のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。

[[#comment]]


** 応用

[40] [[スタイル・シート]]に対応しないか、または [CODE(HTMLa)[type]]
で指定されたスタイル言語に対応しない UA は、
[CODE(HTMLe)[style]] の内容を隠さなければなりません。
文章の一部としてレンダリングするのは[RUBY[誤り] [エラー]]です。 [SUP[ [HTML 4] ]]

対応していたらレンダリングしても良いようにも読める書き方ですが、
そういう意図ではないはずです。

[41] スタイル言語によっては、 ([[SGML]] の注釈風に記述することで)
HTML 4 非適合 UA で内容がレンダリングされないようにする機能を持つものもあります。

[[#comment]]


** 歴史

[8] 1995/05/06 の [[HTML 3.0]] draft [[DTD]]
では [CODE(HTMLe)[style]] 要素は次のように定義されています。
[PRE(SGML)[
 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT [CODE(HTMLe)[STYLE]] - O (#PCDATA)>
 <!ATTLIST [CODE(HTMLe)[STYLE]]
     [CODE(HTMLa)[notation]] NOTATION (%style-notations;) #REQUIRED
 >
]PRE]

これを次のようにして使うつもりでした。
[PRE(HTML)[
 <[CODE(HTMLe)[style]] [CODE(HTMLa)[notation]]=dsssl-lite>
   [INS[(DSSSL)]]
 </[CODE(HTMLe)[style]]>
]PRE]

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset でしょう。

[1] 1997年1月に勧告された [[HTML 3.2]] 
は将来の版で使用するとして予約だけしています。属性はありませんでした。

HTML 3.2 DTD より:

> [CODE(SGML)[<!ELEMENT [CODE(HTMLe)[STYLE]]  - - CDATA -- placeholder for style info -->]]

[18] その後に発表された ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は 
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[type]] 属性 (省略可能), 
[CODE(HTMLa)[media]] 属性 (列挙値 
[CODE(SGML)[(print | screen | projection | braille | aural | all)]], 
既定値 [CODE(HTML)[all]]), [CODE(HTMLa)[title]] 属性 (省略可能)
を規定していました。 

[20] 次の ''HTML DTD with support for Style Sheets'' 
<http://www.w3.org/TR/NOTE-html-970531.html> で、
[CODE(HTMLa)[media]] 属性は読点区切りの複数指定が出来るように 
[CODE(SGML)[CDATA]] に改められました。

[49]
[CITE@@en[draft-ietf-html-style-01]] ([CODE[2007-01-28 00:07:26 +09:00]] 版) <http://tools.ietf.org/html/draft-ietf-html-style-01>
([[名無しさん]])

[[#comment]]


** 例

[43] CSS を使った例
[PRE(HTML)[
<HEAD>
 <TITLE>Example of STYLE</TITLE>
 <STYLE type="text/css">
   H1.myclass {border-width: 1px; border: solid; text-align: center}
 </STYLE>
</HEAD>
<BODY>
 <H1 class="myclass"> This H1 is affected by our style </H1>
 <H1> This one is not affected by our style </H1>
</BODY>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** 他との関係

[48]
[[XHTML]] では、 [[XML]] [[応用]]との互換性のため
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[[[id]]]]
属性を指定し、 [CODE(XML)[[[xml-stylesheet]]]]
[[処理指令]]からこれを参照するべきです。
[SRC[XHTML 1.0 C.14]]

[[#comment]]


** メモ

[52]
[CITE[Kid Language Specification]] ([TIME[2007-01-27 21:50:41 +09:00]] 版) <http://www.kid-templating.org/language.html#xml-comments>
([[名無しさん]])


[[#comment]]


* style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)

[25] [[HTML]] のほとんどの要素型で定義されている
[DFN[[CODE(HTMLa)[style]] 属性]]は、その要素のスタイル情報を指定します。

[26] 仕様書:
- [[HTML 4]]
-- 14.2.1 Setting the default style sheet language
<IW:HTML4:"present/styles.html#default-style">
-- 14.2.2 Inline style information 
<IW:HTML4:"present/styles.html#style-element">
- [SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
- [MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
- [XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
- [i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
- [VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[[#comment]]


** 代替

[16] [[XHTML 1.1]] ではこの属性は'''非推奨'''とされています。
[[MathML 2.0]] でもこの属性は'''非推奨'''とされています。

代わりに、外部スタイル・シートを使って指定することができます。

[[#comment]]


** 属性値

[13] この属性の値は、 [CODE(SGML)[%[[StyleSheet]]]]
です。 [[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。
適当な[[スタイル言語]]によって解釈されます。

[27] この属性は省略可能です。

[[#comment]]


*** 属性値のスタイル言語

[28]
[[HTML 4]] では、
既定スタイル言語 ([CODE(HTTP)[[[Content-Style-Type]]:]] 欄の説明を参照。) 
の構文に従って指定します。

ただし、多くの HTML UA は [[CSS]] ([CODE(MIME)[[[text/css]]]])
に決め打ちしています。

[29] [[SVG]] では、 [CODE(XMLe)[[[svg]]]] 要素の
[CODE(XMLa)[[[contentStyleType]]]] 属性で指定した言語になります。

[30] [[MathML]], [[XUL]] では CSS で固定です。 [[i-XHTML]]
では [[i-CSS]] です。

[31] [[XSL]] のような XML 系スタイル言語を使うことって可能なのでしょうかね?

[[#comment]]


*** CSS

[36] [[CSS2]] の場合、 [CODE(HTMLa)[style]] 
属性値として指定するのは括弧無しの[RUBYB[宣言ブロック構文] [declaration block syntax]]です。
(という一文が [[HTML 4.01]] で一例として追加されました。 [[HTML 4.0]]
ではこの種の説明が一切ありませんでした。)

CSS 側には一切規定がありません (だから HTML 4.01 で慌てて追加したのでしょう)。
構文を拡張する WD [CSSATTR] が古くから提案されていますが、
[[CSS3]] にあわせて勧告になるのか、ならないのか。

- [CSS2] 4.1.8 Declarations and properties
<http://www.w3.org/TR/REC-CSS2/syndata.html#declaration>
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>

[[#comment]]


** 実装

[32] HTML 4 では [CODE(HTMLa)[style]] 属性を使う時は
[ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] の指定が必須なわけですが、
[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] 以外だと無視してくれました。
しかし [[WinIE 6]] は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[33] >>32 無指定のときは既定値の [CODE(MIME)[text/css]] となるべき (should)
だから [SUP[ [HTML 4] ]]、よくないんじゃないか?

[35] >>32 の無指定のときの結果は間違いかも。

[[#comment]]


** 他との関係

[23] HTML 4 では、 [CODE(HTMLa)[style]] 属性を使用する時は必ず
[CODE(HTTP)[[[Content-Style-Type]]]] の指定が必要です。

[37] 複数の要素にスタイルを指定するためには、 [CODE(HTMLe)[style]]
要素を使用するべきです。更に、柔軟性のために外部スタイル・シートを使用するべきです。
[SUP[ [HTML 4] ]]

[[#comment]]


** 歴史

[19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) 
はほとんどの要素型に [CODE(HTMLa)[style]] 属性を定義しています。

[[#comment]]


** 例

[34] [[CSS]] を使用した例
[PRE(HTML)[
<P style="font-size: 12pt; color: fuchsia">Aren't style sheets wonderful?
]PRE]

[WEAK[(HTML 4 仕様書より)]]

[24]
UA が [ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] を正しく扱っているかのテスト:
<http://suika.fam.cx/~wakaba/-temp/test/html/style/>

[[#comment]]


** メモ

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML 2.0]] では採用されない予定です。

[17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE(HTMLa)[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

[22] >>15 [CODE(MIME)[[[text/jss]]]] で可能 ([[JIS X 4052]]:2000 5.4.2 を参照。)

[50]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:20:53 +00:00]])

[51]
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([CODE[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
([[名無しさん]] [WEAK[2007-02-23 17:21:12 +00:00]])

[[#comment]]


@


1.10
log
@auto-committed
@
text
@d296 5
a467 1

d469 1
a469 1
[CITE[公開メモ日記 - JavaScriptによって事後に要素に埋め込む、style属性によるインラインスタイルシートは、これを肯定する]] ([TIME[2007-02-24 02:17:48 +09:00]] 版) <http://knoa.jp/memo/?id=2007-02-19+12:00>
a470 1

@


1.9
log
@auto-committed
@
text
@a253 1

d255 1
a255 1
[CITE@@en[draft-ietf-html-style-01]] ([TIME[2007-01-28 00:07:26 +09:00]] 版) <http://tools.ietf.org/html/draft-ietf-html-style-01>
a257 1

d458 10
@


1.8
log
@auto-committed
@
text
@d1 463
a463 455

* style 要素型 (HTML, XHTML 1)

[38] [[HTML]] の [DFN[[CODE(HTMLe)[style]] 要素型]]の要素を使うと、
文書の頭部 ([CODE(HTMLe)[[[head]]]]) に[[スタイル・シート]]規則を入れることができます。

[39] 仕様書:
-[[HTML 4]] 
-- [CITE[14.2.3 Header style information: the [CODE(HTMLe)[STYLE]] element]]
<IW:HTML4:"present/styles.html#style-group">
--[CITE[14.5 Hiding style data from user agents]]
<IW:HTML4:"present/styles.html#hiding">
--[CITE[Element content]]
<IW:HTML4:"appendix/notes.html#h-B.3.2.1">
- [[XHTML 1.0]]
--[CSECTION[4.8. Script and Style elements]]
(参考) <IW:XHTML10:"h-4.8">
--[CSECTION[C.14. Referencing Style Elements when serving as XML]]
(参考) <IW:XHTML10:"C_14">

[3]
:[[局所名]]:[CODE(HTMLe)[style]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]] ([[HTML 4]]):[CODE(SGML)[[[CDATA]]]]
:内容模型 ([[XHTML 1]]):[CODE(SGML)[[[PCDATA]]]]
:出現できる文脈:[CODE(HTMLe)[[[head]]]] の子供として任意個
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,[[級]]	,
,[CODE(HTMLa)[[[dir]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[書字方向]]	,[HTML 4]
,[CODE(HTMLa)[[[disabled]]]],,,無効化,非標準
,[CODE(HTMLa)[[[id]]]]	,[[ID]]	,(なし)	,唯一識別子	,
,[CODE(HTMLa)[[[lang]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[自然言語]]	,[HTML 4]
,[CODE(HTMLa)[[[xml]]:lang]]	,	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[media]]]]	,[CODE(SGML)[%[[MediaDesc]]]]	,	,適用媒体	,[HTML 4]
,[CODE(HTMLa)[[[notation]]]]	,[CODE(SGML)[[[NOTATION]]]]	,	,スタイル言語	,[[HTML 3.0]]
,[CODE(HTMLa)[xml:[[space]]]]	,	,[CODE(XML)[[[preserve]]]]	,[[空白]]の扱い	,[XHTML 1.0]
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4]
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,(必須)	,[[スタイル言語]]	,[HTML 4]
,[CODE(XMLa)[[[xmlns]]]],[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定,==,[[名前空間名]],W3C 勧告,[[XHTML m12n]]

[[#comment]]


** 内容


*** 構文

[4] [[XHTML]] になる前の HTML では、 [CODE(HTMLe)[style]]
の[[内容]]は [CODE(SGML)[[[CDATA]]]] と宣言されていました。
これは、 [CODE(SGML)[[[STAGO]]]] ([CODE(char)[<]]) や
[CODE(SGML)[[[ERO]]]] ([CODE(char)[&]]) も含めて[[終了タグ]]までの文字列をすべて
[CODE(HTMLe)[style]] 要素の内容として扱うことを意味します。

ですから、例えば
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
'''<!--'''
   [CODE(HTMLe)[p]] {color: red; background-color: white}
'''-->'''
</[CODE(HTMLe)[style]]>
]PRE]

と記述したとしても、強調した部分は SGML の[[マーク]]ではなく、
単なる[[文字データ]]扱いになり、 SGML の[[注釈宣言]]とは見なされません。
(その一方で、 [CODE(HTMLe)[style]] が [CODE(SGML)[CDATA]]
と知らない古い UA からは注釈宣言に見えるので、中身を隠すことができるのです。)

[5] ところが、 [[XML]] では内容を [CODE(SGML)[CDATA]]
にすることができません。そこで、 [[XHTML 1]] では [CODE(HTMLe)[style]]
の内容は [CODE(XML)[(#[[PCDATA]])*]] と宣言されています。
これは、通常の内容の扱いと同じになる、つまり
[CODE(char)[<]] や [CODE(char)[&]] は [CODE(SGML)[[[stago]]]] などや
[CODE(SGML)[[[ero]]]] などと見なされ得ることを意味します。

この場合、 >>4 の注釈宣言に見える部分は本当に注釈宣言として扱われます。
このままだと [CODE(HTMLe)[style]] は実質空になってしまいます。

意図した通りに解釈させるためには
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
   [CODE(HTMLe)[p]] {color: red; background-color: white}
</[CODE(HTMLe)[style]]>
]PRE]

としなければなりません。 (当然、古い UA から隠すという機能は失われます。)

[6] スタイル・シートの一部として [CODE(char)[<]] や
[CODE(char)[&]] を書きたいとき、 >>4 では (終了タグと見なされてしまう場合を除き)
そのまま書くことができましたが、 >>5 では非[[整形式]]になってしまいます。

しかし、いちいち escape するのが面倒な場合には、
[[[CODE(XML)[CDATA]]区間]]を使って、
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
 [CODE(XML)['''<!''''''[''''''CDATA''''''[''']]
   /* -- Question of Q & A -- */
   [CODE(HTMLe)[p]] {color: red; background-color: white}
 [CODE(XML)[''']'''''']''''''>''']]
</[CODE(HTMLe)[style]]>
]PRE]

のように書くことができます。 [CODE(XML)[CDATA]] 区間の中では
[CODE(SGML)[[[MSE]]]] ([CODE(XML)[''']''']>]]) 
を除いてそのままの文字データと解釈されます。

[7] なお、 SGML 注釈宣言風の[Q[隠し方]]は HTML の一部ではなく、
スタイル言語の一部です。スタイル言語によっては使えないこともありますから、
注意してください。

[[#comment]]


*** 意味

[42] [CODE(HTMLe)[style]] の内容は、 [CODE(HTMLa)[type]] 
で識別される[[スタイル言語]]によって解釈されます。
構文等もスタイル言語によります。

[[#comment]]


*** CSS

[44] [[CSS]] の仕様書は、 SGML 
の注釈宣言のはじめと終わりのようなものについて次のように述べています。

> CSS style sheets are often embedded in HTML documents, and to be able to 
hide style sheets from older UAs, it is convenient put the style sheets 
inside HTML comments. The HTML comment tokens "<!--" and "-->" may occur 
before, after, and in between the statements. They may have whitespace 
around them. [INS[CSS1 7.1    Forward-compatible parsing <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>]]

> [INS[和訳 (参考):]] CSS スタイル・シートはしばしば HTML 文書に埋込まれまして、
古めの UA からスタイル・シートを隠すことができるように、
スタイル・シートを HTML 注釈の中に入れるのが便利です。
HTML 注釈字句 [CODE[<!--]] と [CODE[-->]] は文の前・後・間に出現できます。
そのまわりに空白を入れても構いません。

> CSS also allows the SGML comment delimiters ("<!--" and "-->") in certain 
places, but they do not delimit CSS comments. They are permitted so that 
style rules appearing in an HTML source document (in the STYLE element) may 
be hidden from pre-HTML 3.2 user agents. See the HTML 4.0 specification 
([HTML40]) for more information. [INS[CSS2 4.1.9 Comments <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>]]

> [INS[和訳 (参考):]] CSS はある場所で SGML 注釈区切子
([CODE(SGML)[<!--]] および [CODE(SGML)[-->]])
をも認めていますが、この両者は CSS 注釈を区切るものではありません。
両者を認めることによって、 HTML 原始文書 (の [CODE(HTMLe)[style]] 要素) 
に出現するスタイル規則を HTML 3.2 以前の利用者エージェントから隠すことができます。
詳しくは HTML 4.0 仕様書をご覧ください。

更に、 CSS2 附属書 D の文法規則でも規則など ([[選択子]]等 + 
[CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) 
の部分の外側ならどこにでも書けるように書かれています。

[45] 仕様書の規定を読む限りでは [CODE(HTMLe)[style]] 要素以外の場所で使う時にも
[Q[SGML 注釈区切子]]を書けるように思えますが、
試しに外部スタイル・シートなどで使ってみると正しく処理できない UA
も少なくないようです。


[47]
CSS2 は HTML 4.0 を見よと言っていますが、 HTML 4 には CSS を注釈宣言のようなもので囲んだ例が挙げられているだけです。一体何を見せたかったのでしょうかね?
([[名無しさん]])


[[#comment]]


*** メモ

[46] XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

[21] >>46 もっとも、 XSL は XML 対象のスタイル言語ですから、
たとえ書けたとしても意味がありませんね。で、実質 XML base 
のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。

[[#comment]]


** 応用

[40] [[スタイル・シート]]に対応しないか、または [CODE(HTMLa)[type]]
で指定されたスタイル言語に対応しない UA は、
[CODE(HTMLe)[style]] の内容を隠さなければなりません。
文章の一部としてレンダリングするのは[RUBY[誤り] [エラー]]です。 [SUP[ [HTML 4] ]]

対応していたらレンダリングしても良いようにも読める書き方ですが、
そういう意図ではないはずです。

[41] スタイル言語によっては、 ([[SGML]] の注釈風に記述することで)
HTML 4 非適合 UA で内容がレンダリングされないようにする機能を持つものもあります。

[[#comment]]


** 歴史

[8] 1995/05/06 の [[HTML 3.0]] draft [[DTD]]
では [CODE(HTMLe)[style]] 要素は次のように定義されています。
[PRE(SGML)[
 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT [CODE(HTMLe)[STYLE]] - O (#PCDATA)>
 <!ATTLIST [CODE(HTMLe)[STYLE]]
     [CODE(HTMLa)[notation]] NOTATION (%style-notations;) #REQUIRED
 >
]PRE]

これを次のようにして使うつもりでした。
[PRE(HTML)[
 <[CODE(HTMLe)[style]] [CODE(HTMLa)[notation]]=dsssl-lite>
   [INS[(DSSSL)]]
 </[CODE(HTMLe)[style]]>
]PRE]

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset でしょう。

[1] 1997年1月に勧告された [[HTML 3.2]] 
は将来の版で使用するとして予約だけしています。属性はありませんでした。

HTML 3.2 DTD より:

> [CODE(SGML)[<!ELEMENT [CODE(HTMLe)[STYLE]]  - - CDATA -- placeholder for style info -->]]

[18] その後に発表された ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は 
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[type]] 属性 (省略可能), 
[CODE(HTMLa)[media]] 属性 (列挙値 
[CODE(SGML)[(print | screen | projection | braille | aural | all)]], 
既定値 [CODE(HTML)[all]]), [CODE(HTMLa)[title]] 属性 (省略可能)
を規定していました。 

[20] 次の ''HTML DTD with support for Style Sheets'' 
<http://www.w3.org/TR/NOTE-html-970531.html> で、
[CODE(HTMLa)[media]] 属性は読点区切りの複数指定が出来るように 
[CODE(SGML)[CDATA]] に改められました。

[[#comment]]


** 例

[43] CSS を使った例
[PRE(HTML)[
<HEAD>
 <TITLE>Example of STYLE</TITLE>
 <STYLE type="text/css">
   H1.myclass {border-width: 1px; border: solid; text-align: center}
 </STYLE>
</HEAD>
<BODY>
 <H1 class="myclass"> This H1 is affected by our style </H1>
 <H1> This one is not affected by our style </H1>
</BODY>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]

** 他との関係

[48]
[[XHTML]] では、 [[XML]] [[応用]]との互換性のため
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[[[id]]]]
属性を指定し、 [CODE(XML)[[[xml-stylesheet]]]]
[[処理指令]]からこれを参照するべきです。
[SRC[XHTML 1.0 C.14]]

[[#comment]]

** メモ

[[#comment]]


* style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)

[25] [[HTML]] のほとんどの要素型で定義されている
[DFN[[CODE(HTMLa)[style]] 属性]]は、その要素のスタイル情報を指定します。

[26] 仕様書:
- [[HTML 4]]
-- 14.2.1 Setting the default style sheet language
<IW:HTML4:"present/styles.html#default-style">
-- 14.2.2 Inline style information 
<IW:HTML4:"present/styles.html#style-element">
- [SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
- [MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
- [XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
- [i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
- [VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[[#comment]]


** 代替

[16] [[XHTML 1.1]] ではこの属性は'''非推奨'''とされています。
[[MathML 2.0]] でもこの属性は'''非推奨'''とされています。

代わりに、外部スタイル・シートを使って指定することができます。

[[#comment]]


** 属性値

[13] この属性の値は、 [CODE(SGML)[%[[StyleSheet]]]]
です。 [[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。
適当な[[スタイル言語]]によって解釈されます。

[27] この属性は省略可能です。

[[#comment]]


*** 属性値のスタイル言語

[28]
[[HTML 4]] では、
既定スタイル言語 ([CODE(HTTP)[[[Content-Style-Type]]:]] 欄の説明を参照。) 
の構文に従って指定します。

ただし、多くの HTML UA は [[CSS]] ([CODE(MIME)[[[text/css]]]])
に決め打ちしています。

[29] [[SVG]] では、 [CODE(XMLe)[[[svg]]]] 要素の
[CODE(XMLa)[[[contentStyleType]]]] 属性で指定した言語になります。

[30] [[MathML]], [[XUL]] では CSS で固定です。 [[i-XHTML]]
では [[i-CSS]] です。

[31] [[XSL]] のような XML 系スタイル言語を使うことって可能なのでしょうかね?

[[#comment]]


*** CSS

[36] [[CSS2]] の場合、 [CODE(HTMLa)[style]] 
属性値として指定するのは括弧無しの[RUBYB[宣言ブロック構文] [declaration block syntax]]です。
(という一文が [[HTML 4.01]] で一例として追加されました。 [[HTML 4.0]]
ではこの種の説明が一切ありませんでした。)

CSS 側には一切規定がありません (だから HTML 4.01 で慌てて追加したのでしょう)。
構文を拡張する WD [CSSATTR] が古くから提案されていますが、
[[CSS3]] にあわせて勧告になるのか、ならないのか。

- [CSS2] 4.1.8 Declarations and properties
<http://www.w3.org/TR/REC-CSS2/syndata.html#declaration>
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>

[[#comment]]


** 実装

[32] HTML 4 では [CODE(HTMLa)[style]] 属性を使う時は
[ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] の指定が必須なわけですが、
[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] 以外だと無視してくれました。
しかし [[WinIE 6]] は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[33] >>32 無指定のときは既定値の [CODE(MIME)[text/css]] となるべき (should)
だから [SUP[ [HTML 4] ]]、よくないんじゃないか?

[35] >>32 の無指定のときの結果は間違いかも。

[[#comment]]


** 他との関係

[23] HTML 4 では、 [CODE(HTMLa)[style]] 属性を使用する時は必ず
[CODE(HTTP)[[[Content-Style-Type]]]] の指定が必要です。

[37] 複数の要素にスタイルを指定するためには、 [CODE(HTMLe)[style]]
要素を使用するべきです。更に、柔軟性のために外部スタイル・シートを使用するべきです。
[SUP[ [HTML 4] ]]

[[#comment]]


** 歴史

[19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) 
はほとんどの要素型に [CODE(HTMLa)[style]] 属性を定義しています。

[[#comment]]


** 例

[34] [[CSS]] を使用した例
[PRE(HTML)[
<P style="font-size: 12pt; color: fuchsia">Aren't style sheets wonderful?
]PRE]

[WEAK[(HTML 4 仕様書より)]]

[24]
UA が [ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] を正しく扱っているかのテスト:
<http://suika.fam.cx/~wakaba/-temp/test/html/style/>

[[#comment]]


** メモ

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML 2.0]] では採用されない予定です。

[17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE(HTMLa)[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

[22] >>15 [CODE(MIME)[[[text/jss]]]] で可能 ([[JIS X 4052]]:2000 5.4.2 を参照。)

[[#comment]]


@


1.7
log
@auto-committed
@
text
@a1 1

d15 5
d277 10
@


1.6
log
@auto-committed
@
text
@a0 1
#?SuikaWiki/0.9
d18 2
d26 1
a26 1
,属性名	,値の型	,既定値	,説明	,出典
d29 1
d39 1
a39 1

@


1.5
log
@auto-committed
@
text
@d1 439
a439 437
#?SuikaWiki/0.9


* style 要素型 (HTML, XHTML 1)

[38] [[HTML]] の [DFN[[CODE(HTMLe)[style]] 要素型]]の要素を使うと、
文書の頭部 ([CODE(HTMLe)[[[head]]]]) に[[スタイル・シート]]規則を入れることができます。

[39] 仕様書:
[[HTML 4]] 
- 14.2.3 Header style information: the [CODE(HTMLe)[STYLE]] element
<IW:HTML4:"present/styles.html#style-group">
-- 14.5 Hiding style data from user agents
<IW:HTML4:"present/styles.html#hiding">

[3]
:[[開始タグ]]:必須
:[[終了タグ]]:必須
:[[内容模型]] ([[HTML 4]]):[CODE(SGML)[[[CDATA]]]]
:内容模型 ([[XHTML 1]]):[CODE(SGML)[[[PCDATA]]]]
:出現できる文脈:[CODE(HTMLe)[[[head]]]] の子供として任意個
:[[属性]]:
,属性名	,値の型	,既定値	,説明	,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,[[級]]	,
,[CODE(HTMLa)[[[dir]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[書字方向]]	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,[[ID]]	,(なし)	,唯一識別子	,
,[CODE(HTMLa)[[[lang]]]]	,	,(継承)	,[CODE(HTMLa)[title]] [[自然言語]]	,[HTML 4]
,[CODE(HTMLa)[[[xml]]:lang]]	,	,(継承)	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[media]]]]	,[CODE(SGML)[%[[MediaDesc]]]]	,	,適用媒体	,[HTML 4]
,[CODE(HTMLa)[[[notation]]]]	,[CODE(SGML)[[[NOTATION]]]]	,	,スタイル言語	,[[HTML 3.0]]
,[CODE(HTMLa)[xml:[[space]]]]	,	,[CODE(XML)[[[preserve]]]]	,[[空白]]の扱い	,[XHTML 1.0]
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4]
,[CODE(HTMLa)[[[type]]]]	,[CODE(SGML)[%[[ContentType]]]]	,(必須)	,[[スタイル言語]]	,[HTML 4]


[[#comment]]


** 内容


*** 構文

[4] [[XHTML]] になる前の HTML では、 [CODE(HTMLe)[style]]
の[[内容]]は [CODE(SGML)[[[CDATA]]]] と宣言されていました。
これは、 [CODE(SGML)[[[STAGO]]]] ([CODE(char)[<]]) や
[CODE(SGML)[[[ERO]]]] ([CODE(char)[&]]) も含めて[[終了タグ]]までの文字列をすべて
[CODE(HTMLe)[style]] 要素の内容として扱うことを意味します。

ですから、例えば
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
'''<!--'''
   [CODE(HTMLe)[p]] {color: red; background-color: white}
'''-->'''
</[CODE(HTMLe)[style]]>
]PRE]

と記述したとしても、強調した部分は SGML の[[マーク]]ではなく、
単なる[[文字データ]]扱いになり、 SGML の[[注釈宣言]]とは見なされません。
(その一方で、 [CODE(HTMLe)[style]] が [CODE(SGML)[CDATA]]
と知らない古い UA からは注釈宣言に見えるので、中身を隠すことができるのです。)

[5] ところが、 [[XML]] では内容を [CODE(SGML)[CDATA]]
にすることができません。そこで、 [[XHTML 1]] では [CODE(HTMLe)[style]]
の内容は [CODE(XML)[(#[[PCDATA]])*]] と宣言されています。
これは、通常の内容の扱いと同じになる、つまり
[CODE(char)[<]] や [CODE(char)[&]] は [CODE(SGML)[[[stago]]]] などや
[CODE(SGML)[[[ero]]]] などと見なされ得ることを意味します。

この場合、 >>4 の注釈宣言に見える部分は本当に注釈宣言として扱われます。
このままだと [CODE(HTMLe)[style]] は実質空になってしまいます。

意図した通りに解釈させるためには
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
   [CODE(HTMLe)[p]] {color: red; background-color: white}
</[CODE(HTMLe)[style]]>
]PRE]

としなければなりません。 (当然、古い UA から隠すという機能は失われます。)

[6] スタイル・シートの一部として [CODE(char)[<]] や
[CODE(char)[&]] を書きたいとき、 >>4 では (終了タグと見なされてしまう場合を除き)
そのまま書くことができましたが、 >>5 では非[[整形式]]になってしまいます。

しかし、いちいち escape するのが面倒な場合には、
[[[CODE(XML)[CDATA]]区間]]を使って、
[PRE(HTML)[
<[CODE(HTMLe)[style]] [CODE(HTMLa)[type]]="[CODE(MIME)[text/css]]">
 [CODE(XML)['''<!''''''[''''''CDATA''''''[''']]
   /* -- Question of Q & A -- */
   [CODE(HTMLe)[p]] {color: red; background-color: white}
 [CODE(XML)[''']'''''']''''''>''']]
</[CODE(HTMLe)[style]]>
]PRE]

のように書くことができます。 [CODE(XML)[CDATA]] 区間の中では
[CODE(SGML)[[[MSE]]]] ([CODE(XML)[''']''']>]]) 
を除いてそのままの文字データと解釈されます。

[7] なお、 SGML 注釈宣言風の[Q[隠し方]]は HTML の一部ではなく、
スタイル言語の一部です。スタイル言語によっては使えないこともありますから、
注意してください。

[[#comment]]


*** 意味

[42] [CODE(HTMLe)[style]] の内容は、 [CODE(HTMLa)[type]] 
で識別される[[スタイル言語]]によって解釈されます。
構文等もスタイル言語によります。

[[#comment]]


*** CSS

[44] [[CSS]] の仕様書は、 SGML 
の注釈宣言のはじめと終わりのようなものについて次のように述べています。

> CSS style sheets are often embedded in HTML documents, and to be able to 
hide style sheets from older UAs, it is convenient put the style sheets 
inside HTML comments. The HTML comment tokens "<!--" and "-->" may occur 
before, after, and in between the statements. They may have whitespace 
around them. [INS[CSS1 7.1    Forward-compatible parsing <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>]]

> [INS[和訳 (参考):]] CSS スタイル・シートはしばしば HTML 文書に埋込まれまして、
古めの UA からスタイル・シートを隠すことができるように、
スタイル・シートを HTML 注釈の中に入れるのが便利です。
HTML 注釈字句 [CODE[<!--]] と [CODE[-->]] は文の前・後・間に出現できます。
そのまわりに空白を入れても構いません。

> CSS also allows the SGML comment delimiters ("<!--" and "-->") in certain 
places, but they do not delimit CSS comments. They are permitted so that 
style rules appearing in an HTML source document (in the STYLE element) may 
be hidden from pre-HTML 3.2 user agents. See the HTML 4.0 specification 
([HTML40]) for more information. [INS[CSS2 4.1.9 Comments <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>]]

> [INS[和訳 (参考):]] CSS はある場所で SGML 注釈区切子
([CODE(SGML)[<!--]] および [CODE(SGML)[-->]])
をも認めていますが、この両者は CSS 注釈を区切るものではありません。
両者を認めることによって、 HTML 原始文書 (の [CODE(HTMLe)[style]] 要素) 
に出現するスタイル規則を HTML 3.2 以前の利用者エージェントから隠すことができます。
詳しくは HTML 4.0 仕様書をご覧ください。

更に、 CSS2 附属書 D の文法規則でも規則など ([[選択子]]等 + 
[CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) 
の部分の外側ならどこにでも書けるように書かれています。

[45] 仕様書の規定を読む限りでは [CODE(HTMLe)[style]] 要素以外の場所で使う時にも
[Q[SGML 注釈区切子]]を書けるように思えますが、
試しに外部スタイル・シートなどで使ってみると正しく処理できない UA
も少なくないようです。


[47]
CSS2 は HTML 4.0 を見よと言っていますが、 HTML 4 には CSS を注釈宣言のようなもので囲んだ例が挙げられているだけです。一体何を見せたかったのでしょうかね?
([[名無しさん]])


[[#comment]]


*** メモ

[46] XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

[21] >>46 もっとも、 XSL は XML 対象のスタイル言語ですから、
たとえ書けたとしても意味がありませんね。で、実質 XML base 
のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。

[[#comment]]


** 応用

[40] [[スタイル・シート]]に対応しないか、または [CODE(HTMLa)[type]]
で指定されたスタイル言語に対応しない UA は、
[CODE(HTMLe)[style]] の内容を隠さなければなりません。
文章の一部としてレンダリングするのは[RUBY[誤り] [エラー]]です。 [SUP[ [HTML 4] ]]

対応していたらレンダリングしても良いようにも読める書き方ですが、
そういう意図ではないはずです。

[41] スタイル言語によっては、 ([[SGML]] の注釈風に記述することで)
HTML 4 非適合 UA で内容がレンダリングされないようにする機能を持つものもあります。

[[#comment]]


** 歴史

[8] 1995/05/06 の [[HTML 3.0]] draft [[DTD]]
では [CODE(HTMLe)[style]] 要素は次のように定義されています。
[PRE(SGML)[
 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT [CODE(HTMLe)[STYLE]] - O (#PCDATA)>
 <!ATTLIST [CODE(HTMLe)[STYLE]]
     [CODE(HTMLa)[notation]] NOTATION (%style-notations;) #REQUIRED
 >
]PRE]

これを次のようにして使うつもりでした。
[PRE(HTML)[
 <[CODE(HTMLe)[style]] [CODE(HTMLa)[notation]]=dsssl-lite>
   [INS[(DSSSL)]]
 </[CODE(HTMLe)[style]]>
]PRE]

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset でしょう。

[1] 1997年1月に勧告された [[HTML 3.2]] 
は将来の版で使用するとして予約だけしています。属性はありませんでした。

HTML 3.2 DTD より:

> [CODE(SGML)[<!ELEMENT [CODE(HTMLe)[STYLE]]  - - CDATA -- placeholder for style info -->]]

[18] その後に発表された ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は 
[CODE(HTMLe)[style]] 要素に [CODE(HTMLa)[type]] 属性 (省略可能), 
[CODE(HTMLa)[media]] 属性 (列挙値 
[CODE(SGML)[(print | screen | projection | braille | aural | all)]], 
既定値 [CODE(HTML)[all]]), [CODE(HTMLa)[title]] 属性 (省略可能)
を規定していました。 

[20] 次の ''HTML DTD with support for Style Sheets'' 
<http://www.w3.org/TR/NOTE-html-970531.html> で、
[CODE(HTMLa)[media]] 属性は読点区切りの複数指定が出来るように 
[CODE(SGML)[CDATA]] に改められました。

[[#comment]]


** 例

[43] CSS を使った例
[PRE(HTML)[
<HEAD>
 <TITLE>Example of STYLE</TITLE>
 <STYLE type="text/css">
   H1.myclass {border-width: 1px; border: solid; text-align: center}
 </STYLE>
</HEAD>
<BODY>
 <H1 class="myclass"> This H1 is affected by our style </H1>
 <H1> This one is not affected by our style </H1>
</BODY>
]PRE]

[WEAK[(HTML 4 仕様書より、改)]]

[[#comment]]


** メモ

[[#comment]]


* style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)

[25] [[HTML]] のほとんどの要素型で定義されている
[DFN[[CODE(HTMLa)[style]] 属性]]は、その要素のスタイル情報を指定します。

[26] 仕様書:
- [[HTML 4]]
-- 14.2.1 Setting the default style sheet language
<IW:HTML4:"present/styles.html#default-style">
-- 14.2.2 Inline style information 
<IW:HTML4:"present/styles.html#style-element">
- [SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
- [MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
- [XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
- [i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
- [VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[[#comment]]


** 代替

[16] [[XHTML 1.1]] ではこの属性は'''非推奨'''とされています。
[[MathML 2.0]] でもこの属性は'''非推奨'''とされています。

代わりに、外部スタイル・シートを使って指定することができます。

[[#comment]]


** 属性値

[13] この属性の値は、 [CODE(SGML)[%[[StyleSheet]]]]
です。 [[SGML]] 的には [CODE(SGML)[[[CDATA]]]] です。
適当な[[スタイル言語]]によって解釈されます。

[27] この属性は省略可能です。

[[#comment]]


*** 属性値のスタイル言語

[28]
[[HTML 4]] では、
既定スタイル言語 ([CODE(HTTP)[[[Content-Style-Type]]:]] 欄の説明を参照。) 
の構文に従って指定します。

ただし、多くの HTML UA は [[CSS]] ([CODE(MIME)[[[text/css]]]])
に決め打ちしています。

[29] [[SVG]] では、 [CODE(XMLe)[[[svg]]]] 要素の
[CODE(XMLa)[[[contentStyleType]]]] 属性で指定した言語になります。

[30] [[MathML]], [[XUL]] では CSS で固定です。 [[i-XHTML]]
では [[i-CSS]] です。

[31] [[XSL]] のような XML 系スタイル言語を使うことって可能なのでしょうかね?

[[#comment]]


*** CSS

[36] [[CSS2]] の場合、 [CODE(HTMLa)[style]] 
属性値として指定するのは括弧無しの[RUBYB[宣言ブロック構文] [declaration block syntax]]です。
(という一文が [[HTML 4.01]] で一例として追加されました。 [[HTML 4.0]]
ではこの種の説明が一切ありませんでした。)

CSS 側には一切規定がありません (だから HTML 4.01 で慌てて追加したのでしょう)。
構文を拡張する WD [CSSATTR] が古くから提案されていますが、
[[CSS3]] にあわせて勧告になるのか、ならないのか。

- [CSS2] 4.1.8 Declarations and properties
<http://www.w3.org/TR/REC-CSS2/syndata.html#declaration>
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>

[[#comment]]


** 実装

[32] HTML 4 では [CODE(HTMLa)[style]] 属性を使う時は
[ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] の指定が必須なわけですが、
[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] 以外だと無視してくれました。
しかし [[WinIE 6]] は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[33] >>32 無指定のときは既定値の [CODE(MIME)[text/css]] となるべき (should)
だから [SUP[ [HTML 4] ]]、よくないんじゃないか?

[35] >>32 の無指定のときの結果は間違いかも。

[[#comment]]


** 他との関係

[23] HTML 4 では、 [CODE(HTMLa)[style]] 属性を使用する時は必ず
[CODE(HTTP)[[[Content-Style-Type]]]] の指定が必要です。

[37] 複数の要素にスタイルを指定するためには、 [CODE(HTMLe)[style]]
要素を使用するべきです。更に、柔軟性のために外部スタイル・シートを使用するべきです。
[SUP[ [HTML 4] ]]

[[#comment]]


** 歴史

[19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) 
はほとんどの要素型に [CODE(HTMLa)[style]] 属性を定義しています。

[[#comment]]


** 例

[34] [[CSS]] を使用した例
[PRE(HTML)[
<P style="font-size: 12pt; color: fuchsia">Aren't style sheets wonderful?
]PRE]

[WEAK[(HTML 4 仕様書より)]]

[24]
UA が [ABBR[CST] [[CODE(HTTP)[Content-Style-Type]]]] を正しく扱っているかのテスト:
<http://suika.fam.cx/~wakaba/-temp/test/html/style/>

[[#comment]]


** メモ

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML 2.0]] では採用されない予定です。

[17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE(HTMLa)[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

[22] >>15 [CODE(MIME)[[[text/jss]]]] で可能 ([[JIS X 4052]]:2000 5.4.2 を参照。)

[[#comment]]


@


1.4
log
@auto-committed
@
text
@d4 1
a4 1
* style 要素 (HTML, XHTML)
d6 2
a7 2
[1] [[HTML]] 3.2 は将来の版で使用するとして予約しています。
属性はありませんでした。
d9 26
a34 1
> <!ELEMENT STYLE  - - CDATA -- placeholder for style info -->
a35 2
[3] [[HTML4]] では必須の [CODE(HTML)[type]] 
属性で指定した[[スタイル言語]]の[[スタイル・シート]]が内容となります。
d37 22
a58 1
親要素は [[head]] 要素です。
d60 23
a82 1
[2] [[type]] 属性で使われる[[媒体型]]の値については、 [[type]>>2] を参照。
d84 14
a97 12
,属性名	,値の型	,既定値	,属性の意味	,初出
,[[class]]	,級	,(なし)	,級	,
,[[dir]]	,	,(継承)	,書字方向	,[HTML 4]
,[[id]]	,[[ID]]	,(なし)	,唯一識別子	,
,[[lang]]	,[[言語札]]	,(継承)	,自然言語	,[HTML 4]
,[[media]]	,[[媒体記述子]]	,'screen'	,適用媒体	,[HTML 4]
,[[style]]	,	,(なし)	,スタイル指定	,
,[[title]]	,[[CDATA]]	,(なし)	,	,[HTML 4]
,[[type]]	,[[媒体型]]	,(必須)	,スタイル言語	,[HTML 4]
,[[xmlns]]	,[[名前空間名]]	,(継承)	,[[名前空間URI]]	,[m12n]
,[[xml]]:lang	,言語札	,(継承)	,自然言語	,[XHTML 1.0]
,xml:[[space]]	,'preserve'	,'preserve'	,空白の扱い	,[XHTML 1.0]
d99 7
a105 1
[[ISO-HTML]] は HTML 4 と同じ属性を定義しています。
a106 2
- [18] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は [CODE(HTML)[style]] 要素に [CODE(HTML)[type]], [CODE(HTML)[media]] ([CODE(SGML)[(print|screen|projection|braille|aural|all)]], 既定値 [CODE(HTML)[all]]), [CODE(HTML)[title]] を規定しています。 [CODE(HTML)[media]] 以外 [CODE(SGML)[#[[IMPLIED]]]] です。
- [20] >>18 は ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970531.html> で読点区切りの複数指定が出来るように [CODE(SGML)[CDATA]] に改められました。
d110 52
a161 1
** 内容
a162 12
[4] [[内容]]は [[SGML]] [[HTML]] では [[CDATA]]
でしたが、 [[XHTML]] では [[PCDATA]] になりました。
(これは [[XML]] では要素内容を [CODE(SGML)[CDATA]]
に出来ないためです。)

このため、 XHTML ではスタイル・シートに「<」, 「>」, 「&」
を使うことは出来ません。使った場合は XML 的に解釈されます。
([[整形式]]でなければエラーとなります。)

[5] SGML HTML や[[不思議マーク付け]]では、 [CODE(HTML)[STYLE]]
要素の内容を [CODE(HTML)[STYLE]] 要素を知らない [[UA]]
が表示してしまうのを防ぐために SGML の[[注釈宣言]]のようにしていることがよくありました。例:
d164 2
a165 7
[PRE[
 <STYLE type="text/css">
 '''<!--'''
   p {color: red; background-color: white}
 '''-->'''
 </STYLE>
]PRE]
d167 1
a167 42
この SGML の注釈宣言の初めの部分と終わりの部分のように見える2箇所について、
HTML 4 のスタイル・シートの章にはこうした機能を持つスタイル言語もあると言及しています。
<http://www.w3.org/TR/html4/styles.html#hiding>

[[CSS]] の仕様書
(CSS 1: <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>,
CSS 2: <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>)
SGML の注釈宣言のようなものは CSS では無視する旨が書かれています。
しかしながら CSS 2 の説明では、「特別な場所では無視する。
詳しくは HTML 4 を見よ。」としか書いてありません。
(HTML 4 を見ても例示しかないし。)

結局、初めと終わり以外の場所や [CODE(HTML)[style]]
要素以外の CSS スタイル・シートで書けるのかも不明です。

CSS 2 附属書 D の文法規則によると規則など ([[選択子]]等
+ [CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) の部分の外側ならどこにでも書けるように書かれています。

[7] SGML HTML で CSS 以外のスタイル言語を使う場合に SGML
風注釈宣言が使えるかはその言語に依存します。また、
[[XSL]] のような XML スタイル言語が使えるのかはよくわかりません。

[6] XHTML では [CODE(HTML)[style]] 要素の内容は 
[CODE(XML)[PCDATA]] ですから、前述のように < や >
は XML 的に解釈されます。従って >>5 の例を XML
で書くと [CODE(XML)[STYLE]] 要素は空要素とみなされますし、
それ以前にもし内容に [CODE(XML)[--]] 
が入っていればエラーになります。
([[注釈宣言]]に関する XML の規定により。)

XML でも従来のように [CODE(XML)[CDATA]] 
扱いして気楽にスタイル指定を書きたい時は、
[CODE(XML)[CDATA]] [[マーク区間]]が使えます。例:

[PRE[
 <style type="text/css">
 '''<![CODE['''''']]'''
   /* -- Question of Q & A -- */
   p.q {color: red; background-color: white}
 ''']]>'''
 </style>
]PRE]
d169 1
a169 1
XHTML では XSL のような XML base のスタイル言語も使えます。
d176 4
a179 1
- [21] >>7 もっとも、 XSL は XML 対象のスタイル言語ですから、たとえ書けたとしても意味がありませんね。で、実質 XML base のスタイル言語は他にないですから、どうでも良い問題といえばそれまでではあります。
d183 1
a183 1
* STYLE 要素 (HTML 3.0 draft)
d185 4
a188 2
[8] 1995/05/06 の [[HTML3.0]] の draft [[DTD]]
では [CODE(HTML)[STYLE]] 要素は次のように定義されています。
d190 14
a203 1
[PRE[
d212 3
a214 3
 <!ELEMENT STYLE - O (#PCDATA)>
 <!ATTLIST STYLE
     notation NOTATION (%style-notations;) #REQUIRED
d218 32
a249 1
これを次のようにして使います。
d251 12
a262 4
[PRE[
 <style notation=dsssl-lite>
   [INS[(DSSSL)]]
 </style>
d265 4
a268 1
親要素は [[head]] です。
d270 1
a270 2
[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset
でしょう。
d277 9
a285 1
- [HTML4] ''Style Sheets in HTML documents'' <http://www.w3.org/TR/html4/present/styles.html#adef-style>
a289 1
- [CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>
d296 116
a411 11
[13] 値の型は、 [[SGML]]/[[XML]] 的には [[CDATA]]
であり、どんな内容でも書けます。具体的な[[スタイル言語]]は、
その含まれるマーク付け言語の定義によります。
(ただし、 [[XSL]] のような [[XML]] 
系スタイル言語が書けるのかは不明です。)
- HTML, XHTML では、 [[HTTP]] の [[Content-Style-Type:]] 欄の値で決まります。
- 多くの HTML の実装では、特に外部情報が無い時に
(駄目実装は CST: のような外部情報があっても) CSS
と仮定します。
- SVG では、 [[svg]] 要素の [[contentStyleType]] 属性の値で決まります。
- MathML, XUL, i-XHTML では [[CSS]] です。
d420 3
a422 1
[11] [[XHTML2.0]] では採用されない予定です。
d430 1
a430 1
CSS 以外のスタイル言語で [CODE[style]] 
d433 1
a433 4
- [16] MathML 2.0 ではこの属性は非推奨です。
- [17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活
- [19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) はほとんどの要素型に [CODE(HTML)[style]] 属性を定義しています。
- [22] >>15 [[text/jss]] で可能 ([[JISX4052]]:2000 5.4.2 参照。)
a434 10
[23]
HTML 4 に従うなら、 [CODE(HTTP)[[[Content-Style-Type]]:]] 頭欄の値が適当なスタイル言語を表していない限り、 [CODE(HTMLa)[style]] 属性は解釈できない (適用できない) はずです。

[[Gecko]] は確かに [CODE(HTTP)[Content-Style-Type]] が無指定または [CODE(MIME)[text/css]] でないと無視してくれました。
しかし [[WinIE]] 6 は遠慮なく適用します。
([[名無しさん]] [WEAK[2004-03-23 06:16:14 +00:00]])

[24]
参考: <http://suika.fam.cx/~wakaba/-temp/test/html/style/>
([[名無しさん]])
@


1.3
log
@auto-committed
@
text
@d1 110
a110 102
#?SuikaWiki/0.9
*style 要素 (HTML, XHTML)

[1] [[HTML]] 3.2 は将来の版で使用するとして予約しています。
属性はありませんでした。
> <!ELEMENT STYLE  - - CDATA -- placeholder for style info -->

[3] [[HTML4]] では必須の [CODE(HTML)[type]] 
属性で指定した[[スタイル言語]]の[[スタイル・シート]]が内容となります。

親要素は [[head]] 要素です。

[2] [[type]] 属性で使われる[[媒体型]]の値については、 [[type]>>2] を参照。

,属性名     ,値の型       ,既定値 ,属性の意味     ,初出
,[[class]]  ,級           ,(なし) ,級             ,
,[[dir]]    ,             ,(継承) ,書字方向       ,[HTML 4]
,[[id]]     ,[[ID]]       ,(なし) ,唯一識別子     ,
,[[lang]]   ,[[言語札]]   ,(継承) ,自然言語       ,[HTML 4]
,[[media]]  ,[[媒体記述子]],'screen',適用媒体     ,[HTML 4]
,[[style]]  ,             ,(なし) ,スタイル指定   ,
,[[title]]  ,[[CDATA]]    ,(なし) ,               ,[HTML 4]
,[[type]]   ,[[媒体型]]   ,(必須) ,スタイル言語   ,[HTML 4]
,[[xmlns]]  ,[[名前空間名]],(継承),[[名前空間URI]],[m12n]
,[[xml]]:lang,言語札      ,(継承) ,自然言語    ,[XHTML 1.0]
,xml:[[space]],'preserve','preserve',空白の扱い,[XHTML 1.0]

[[ISO-HTML]] は HTML 4 と同じ属性を定義しています。

- [18] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は [CODE(HTML)[style]] 要素に [CODE(HTML)[type]], [CODE(HTML)[media]] ([CODE(SGML)[(print|screen|projection|braille|aural|all)]], 既定値 [CODE(HTML)[all]]), [CODE(HTML)[title]] を規定しています。 [CODE(HTML)[media]] 以外 [CODE(SGML)[#[[IMPLIED]]]] です。
- [20] >>18 は ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970531.html> で読点区切りの複数指定が出来るように [CODE(SGML)[CDATA]] に改められました。
[[#comment]]

**内容

[4] [[内容]]は [[SGML]] [[HTML]] では [[CDATA]]
でしたが、 [[XHTML]] では [[PCDATA]] になりました。
(これは [[XML]] では要素内容を [CODE(SGML)[CDATA]]
に出来ないためです。)

このため、 XHTML ではスタイル・シートに「<」, 「>」, 「&」
を使うことは出来ません。使った場合は XML 的に解釈されます。
([[整形式]]でなければエラーとなります。)

[5] SGML HTML や[[不思議マーク付け]]では、 [CODE(HTML)[STYLE]]
要素の内容を [CODE(HTML)[STYLE]] 要素を知らない [[UA]]
が表示してしまうのを防ぐために SGML の[[注釈宣言]]のようにしていることがよくありました。例:

 <STYLE type="text/css">
 '''<!--'''
   p {color: red; background-color: white}
 '''-->'''
 </STYLE>

この SGML の注釈宣言の初めの部分と終わりの部分のように見える2箇所について、
HTML 4 のスタイル・シートの章にはこうした機能を持つスタイル言語もあると言及しています。
<http://www.w3.org/TR/html4/styles.html#hiding>

[[CSS]] の仕様書
(CSS 1: <http://www.w3.org/TR/REC-CSS1#forward-compatible-parsing>,
CSS 2: <http://www.w3.org/TR/REC-CSS2/syndata.html#comments>)
SGML の注釈宣言のようなものは CSS では無視する旨が書かれています。
しかしながら CSS 2 の説明では、「特別な場所では無視する。
詳しくは HTML 4 を見よ。」としか書いてありません。
(HTML 4 を見ても例示しかないし。)

結局、初めと終わり以外の場所や [CODE(HTML)[style]]
要素以外の CSS スタイル・シートで書けるのかも不明です。

CSS 2 附属書 D の文法規則によると規則など ([[選択子]]等
+ [CODE(CSS)[{]] 〜 [CODE(CSS)[}]]) の部分の外側ならどこにでも書けるように書かれています。

[7] SGML HTML で CSS 以外のスタイル言語を使う場合に SGML
風注釈宣言が使えるかはその言語に依存します。また、
[[XSL]] のような XML スタイル言語が使えるのかはよくわかりません。

[6] XHTML では [CODE(HTML)[style]] 要素の内容は 
[CODE(XML)[PCDATA]] ですから、前述のように < や >
は XML 的に解釈されます。従って >>5 の例を XML
で書くと [CODE(XML)[STYLE]] 要素は空要素とみなされますし、
それ以前にもし内容に [CODE(XML)[--]] 
が入っていればエラーになります。
([[注釈宣言]]に関する XML の規定により。)

XML でも従来のように [CODE(XML)[CDATA]] 
扱いして気楽にスタイル指定を書きたい時は、
[CODE(XML)[CDATA]] [[マーク区間]]が使えます。例:

 <style type="text/css">
 '''<![CDATA['''
   /* -- Question of Q & A -- */
   p.q {color: red; background-color: white}
 ''']]>'''
 </style>

XHTML では XSL のような XML base のスタイル言語も使えます。
但し、その場合にはもちろん [CODE(XML)[CDATA]] 
マーク区間で包むのは使えませんし、
注釈宣言での隠蔽などもってのほかです。
更に、陽に文書型宣言を行っている場合には適当に [[DTD]]
を書き換える必要があるでしょう。

d112 86
a197 80
[[#comment]]


*STYLE 要素 (HTML 3.0 draft)

[8] 1995/05/06 の [[HTML3.0]] の draft [[DTD]]
では [CODE(HTML)[STYLE]] 要素は次のように定義されています。

 <!ENTITY % style-notations "dsssl-lite | w3c-style">
 <!NOTATION dsssl-lite PUBLIC
       "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
      
 <!NOTATION w3c-style PUBLIC 
 --"IETF/RFC nnn//NOTATION W3C Style Language//EN"--
 "ISO/IEC 10179:1995//NOTATION DSSSL Style Language//EN">
 
 <!ELEMENT STYLE - O (#PCDATA)>
 <!ATTLIST STYLE
     notation NOTATION (%style-notations;) #REQUIRED
 >

これを次のようにして使います。

 <style notation=dsssl-lite>
   [INS[(DSSSL)]]
 </style>

親要素は [[head]] です。

[CODE(HTML)[w3c-style]] はおそらく [[DSSSL]] の subset
でしょう。

[[#comment]]

*style 属性 (HTML, XHTML 1, SVG, MathML, XUL, i-XHTML)
-[HTML4] ''Style Sheets in HTML documents'' <http://www.w3.org/TR/html4/present/styles.html#adef-style>
-[SVG 1.1] ''Styling - SVG 1.1 - 20030114'' <http://www.w3.org/TR/SVG11/styling#StyleAttribute>
-[MathML 2.0] ''MathML Fundamentals'' <http://www.w3.org/TR/MathML2/chapter2#fund_globatt>
-[XUL] ''XulPlanet.com - XUL Element Reference'' <http://www.xulplanet.com/references/elemref/ref_XULElement.html#attrblk>
-[i-XHTML] ''DoCoMo Net - iモード対応XHTML'' <http://www.nttdocomo.co.jp/mc-user/i/xhtml/hikaku.html>
-[CSSATTR] ''Syntax of CSS rules in HTML's "style" attribute'' <http://www.w3.org/TR/css-style-attr>
-[VML] ''VML - the Vector Markup Language'' <http://www.w3.org/TR/NOTE-VML#_Toc416858384>

[12] [CODE(HTML)[style]] 属性は、ほとんどの [[HTML]],
[[SVG]], [[MathML]], [[XUL]], [[i-XHTML]] 要素にあって、
その要素に適用するスタイル指定を値に持ちます。

[13] 値の型は、 [[SGML]]/[[XML]] 的には [[CDATA]]
であり、どんな内容でも書けます。具体的な[[スタイル言語]]は、
その含まれるマーク付け言語の定義によります。
(ただし、 [[XSL]] のような [[XML]] 
系スタイル言語が書けるのかは不明です。)
-HTML, XHTML では、 [[HTTP]] の [[Content-Style-Type:]] 欄の値で決まります。
-多くの HTML の実装では、特に外部情報が無い時に
(駄目実装は CST: のような外部情報があっても) CSS
と仮定します。
-SVG では、 [[svg]] 要素の [[contentStyleType]] 属性の値で決まります。
-MathML, XUL, i-XHTML では [[CSS]] です。

[14] [CODE(HTML)[style]] 属性はある特定の要素の表現を制御するのに便利ですが、表現と構造を分離することを考えるとあまり得策ではありません。
(例えば、一つの文書に複数のスタイル・シートを適用させることを考えると、文書そのものにスタイル指定があるのは有害です。)
その問題を理解した上で使う (永続的なスタイルの指定とか。)
のであれば問題はないでしょうが、そうでなければ 
[[i-XHTML]]/[[i-CSS]] のような “[[TagSoup]] の CSS 版”
にしかならない諸刃の剣です。

[11] [[XHTML2.0]] では採用されない予定です。

[15] さて CSS を値に使う場合の書式は、 HTML 4 も CSS 1
も CSS 2 もその他の規格も、例示で簡単に説明している程度で、
はっきりとは定義していません。現在 [[WD]]
である [CSSATTR] は、
現在の書式を更に柔軟な指定が可能に拡張したものを定義しています。

CSS 以外のスタイル言語で [CODE[style]] 
属性の値として使う方法を規定したものがあるのかは不明です。

- [16] MathML 2.0 ではこの属性は非推奨です。
- [17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活
- [19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) はほとんどの要素型に [CODE(HTML)[style]] 属性を定義しています。
d199 15
a213 3
[[#comment]]

*メモ
@


1.2
log
@auto-commited
@
text
@d15 1
d20 1
a20 1
,[[media]]  ,[[媒体記述子]],"screen" ,適用媒体    ,[HTML 4]
d24 3
d30 2
a31 2
- [18] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + StyleSheet) は [CODE(HTML)[style]] 要素に [CODE(HTML)[type]], [CODE(HTML)[media]] ([CODE(SGML)[(print|screen|projection|braille|aural|all)]], 既定値 [CODE(HTML)[all]]), [CODE(HTML)[title]] を規定しています。 [CODE(HTML)[media]] 以外 [CODE(SGML)[#[[IMPLIED]]]] です。
- [20] >>18 は ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970531.html> で読点区切りの複数指定が出来るように [CODE(SGML)[CDATA]] に改められました。
d103 1
d181 4
a184 3
- [16] MathML 2.0 ではこの属性は非推奨です。
- [17] [WEAK[2003-05-10 08:36]] ''>>11'': こんどの [[WD]] で復活
- [19] ''HTML DTD with support for Style Sheets'' <http://www.w3.org/TR/NOTE-html-970421.html> (HTML 3.2 + Style Sheet) はほとんどの要素型に [CODE(HTML)[style]] 属性を定義しています。
@


1.1
log
@pre-namespace
@
text
@d2 1
a2 1
*STYLE 要素 (HTML), style 要素 (XHTML)
d8 90
d100 82
a181 2
*メモ
- [2] [[type]] 属性で使われる[[媒体型]]の値については、 [[type]>>2] を参照。
@

