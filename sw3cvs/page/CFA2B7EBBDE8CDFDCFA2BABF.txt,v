head	1.2;
access;
symbols
	suikawiki3-final:1.2;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2004.08.13.02.06.28;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.06.08.02.09.51;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@[3]
>
:(305) 連結処理の連鎖 (chain of link processes):
最初の処理の元が[[基本文書型]]の[[実現値]]であって、
途中の処理の結果が次の元を形成して順次実行されるような処理の連らなり。
[SRC[[[JIS X 4051]]‐1992 3.]]
- 備考
鎖のどの部分でも繰り返すことができる。例えば、
複雑なページ割付け応用は、論理・棒組・ページの三つの文書型及び両端そろえ・
行数算出 (ページ組) の二つの[[連結処理]]を含むことができる。
両端そろえ処理は、論理文書の実現値から棒組の実現値を生成し、
行数算出処理は、棒組からページを次々と生成する。
二つの処理は、行数算出が異なった大きさで棒組の両端そろえを要求する間は繰り返すことができる。

備考を図にするとこんな感じ:
[PRE[
                   やり直し
              +----------------+
             ↓                |
  論理文書 ―――→ 棒組文書 ―――→ 頁文書 
           両端揃え          行数算出
]PRE]

[1] [[明示連結]]は、複数個順に適用することができます。

例:
[PRE(SGML)[
<!DOCTYPE foo SYSTEM>
<!DOCTYPE bar SYSTEM>
<!DOCTYPE baz SYSTEM>
<!LINKTYPE link1 foo bar SYSTEM>
<!LINKTYPE link2 bar baz SYSTEM>
<!LINKTYPE link3 baz #IMPLIED SYSTEM>
]PRE]

この例のように最後の連結処理は[[暗示連結]]でも OK。

[2] 連結処理の連鎖の長さは、 [[SGML宣言]]の 
[CODE(SGML)[[[LINK]] [[EXPLICIT]]]]
で指定した値以下でなければなりません
([[JIS X 4151]]‐1992 11.1.3.1 参照)。

@


1.1
log
@auto-committed
@
text
@d1 23
a23 1
#?SuikaWiki/0.9
@

