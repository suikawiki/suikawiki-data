head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.06.06.12.26.56;	author make;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-commited
@
text
@;; reply と follow はどう訳し分ければいいんでしょう?

*送り先の決定

**メイル・メッセージの返事 (reply)

-1. [[Mail-Reply-To:領域]]があれば、そこに送る。
-2. [[Reply-Tp:領域]]があれば、そこに送る。
-3. [[From:領域]]があれば、そこに送る。
-4. From: 領域は必須なので、以上で済むはず。だけど、なぜかなくて、どうしても送りたければ...
-5. [[Sender:領域]]があれば、そこに送る。
-6. [[Return-Path:領域]]があれば、そこに送る。 <> だったら諦める。

こんなもんかな。5,6は[[アレゲ]]だけど。

**メイル・メッセージの返信 (follow)

-1. [[Mail-Followup-To:領域]]があれば、そこに送る。
-2. reply の宛先と[[To:領域]]と[[Cc:領域]]に送る。

2 で、 Cc: にあったのは返信でも Cc: に入れるとよさげ。

**ニュース記事の(メイルで)返事 (reply)

メイル・メッセージの reply と同じ。 (このときも Mail-Reply-To:
をみるんだろうか?)

**ニュース記事の返信 (follou)

-1. [[Followup-To:領域]]があれば、そこに出す。
-2. ただし、 1 で値が「poster」なら、 reply する。
-3. [[Newsgroups:領域]]に出す。

あ、[[Mail-Copies-To:領域]]も見ないといけないねえ...
[[Distribution:領域]] を真似るのも忘れずに。
See also [[usefor]] (inheritable header)

**メイルのエラー通知を出す

あ、出すのは機械ですよ。普通人は書かないさ。おまけで書いとくだけです。

-1. 封筒(envelope) From (MAIL FROM:) が分かれば、そこに出す。 <> なら諦める。
-2. [[Return-Path:領域]]があれば、そこに出す。 <> なら諦める。

-3. なければ仕方無いので[[Errors-To:領域]]があるか見て、あればそこに出す。

3 は見た方がいいのか不明。 [[Envelope-To:領域]]や[[X-Envelope-To:領域]]
や[[Mail-From:領域]]は Errors-To: 程 well known 
ではないから見ない方がいいと思われ。

*[[Subject:領域]]

元の記事の Subject: 領域を複製する。このとき、頭に「Re: 」をつける。
大文字・小文字はこのままが推奨されてる ([[usefor]]では必須)。
4文字目は SP (0x20)。

元記事に [[X-NSubject:領域]] があれば、そっちを優先
・・・って、今時要らないか?

Re はラテン語起源の英単語だけど、これは他の言語に翻訳するべきじゃない。
「返: 」とか(これ「Re: と」等価じゃないし。) 「Sv: 」(どういう意味?
何語?)とかは駄目。

「Re(2):」とか「Re^2:」とか「Re[2]:」とか書く人もいるけど不適当。
「Re: Re: Re: Re:」とかみっともないのもたまに見かける。
返信時にばっさり消すべし。

転送時によく付けられる「Fwd:」, 「Fw:」、 ML でよくある
「[ML-NAME:12345]」なんてのも消すのが良い。「Re: [ML-Name:12345]
Re: [ML-NAME:11456]」 みたいに入り組んでるのも消してやると親切。

だけど調子に乗ると、こうした「構造」ではないもの、
例えば「[Announce] chicago meeting agenda」の [Ann..] も消しちゃうけど、
これは必ずしも良い結果とは思えない。返信記事の著者の判断に
委ねるべき。

Subject: の最初に [Q] とかつけて質問だと表す人もいる。
意味があるのか不明だけど、慣習的には無視してそのまま「Re: [Q]ほげほげ」
にするみたい。まあ好きにしたら? (意味不明)

返信記事の Subject: を変える時、前の記事の Subject: を残しておく
was 慣習がある。「ほげほげ (was: Foo Bar)」みたいに。
UI 的には、これが簡単に出来る項目 (例えば「新しい主題で返信」)
があっても良いかも。

けど何度も返信してるのにいつまでも was がついてるのはみっともない。
ひどい時は「かくかく (was ほげほげ (was: Foo Bar))」になったりして。
だから、返信時に was があったら、代理者は消すのが良いかも。
([[usefor]]も減らせたら良いかも☆って。)

was の最後に「:」をつけたりつけなかったり。[[usefor]]の例は
ついてるから、つけるのが良いかも。これも翻訳しない方がいいと思われ。

なお、 Subject 変更時の -_- 慣習 (See [[Message-ID:領域]])
は無視して良いと思われ。 ([[usefor]] にも載ってない。)

*[[In-Reply-To:領域]]と[[References:領域]]

それぞれつける。[[RFC2822の3.6.4]]が詳しく説明している。

UA は [[Supersedes:領域]] を簡単に使える界面を用意しておくと良いかも。
(あ、それは返信ではないね。)

[[See-Also:領域]]は便利だと思うんだけど、[[usefor]]が使うなちゅーから
使わぬべし。

*その他

[[Keywords:領域]]は複製する UA もあるけど、しなくて良い。
(See [[usefor]])

*本体

quote する。 

**[[text/plain]] で返信の時

「>」とかを行頭に。
文字は、主に「>」, 「:」, 「|」なんかが良くある。
タブを使う人もいるけど、みっともない。

quote 文字の後には SP を1つ入れると見やすくていい。

quote が重なるとみっともない。けどそれは著者の責任で
UA の責任ではないな:-)

昔は、「>」が一杯 (引用ばっか)の記事はニュース系統が撥ねて
送れなかったそうな。そのせいで「:」とかが流行ったそうですが。

ということで、「Foo-san> あいうえお」のように名前を入れる
風習もある。

空白行には引用符をつけなかったりもする。その方がみやすい場面も
多々ある。それから、「Foo-san>」書式が使われているなら
それ以上引用符をつけない (「> Foo-san>」にしない) 賢い UA
もある。 (確かに不要だ。)

引用の前には、引用元を明示する。基本的には
「Joe D. Bloggs <jdbloggs@@foo.example> wrote:」という形
だけど、色々流儀が。

Message-ID とか日付とかニュース組名とか主題もつけて長くなる。
あんまり一杯つけすぎるとうざい。 Reference: 領域とかも
あるんだし。

説明部分を「>」一杯で先導する流儀。

  >>>>>> In message <mid:foo.bar.hoge@@msgid.example>,
  >>>>>>   Mr. Foo H Bar <im:foo@@bar.example> wrote:

もよく見かける。「wrote」とかは各言語に翻訳されて「曰く」
になってたりする。

[[usefor]]お勧めの書式の例

      On comp.foo in <1234@@bar.example> on 24 Dec 1997 16:40:20 +0000,
         Joe D. Bloggs <jdbloggs@@bar.example> wrote:

      Am 24. Dez 1997 schrieb Helmut Schmidt <helmut@@bar.example>:

-前の記事の著者の名前とメイル・アドレス入れる'''べし'''。
-長くなる時は頭みたいに FWS で折り返すべし。
-Message-ID は <...> とか <news:...> とか入れる'''べし'''。
-最後に「:」ってつける'''べし'''。

メイルに応用するなら Message-ID に <mid:...> を使っても良いでしょ。

返信記事の著者は UA による自動引用を適当に削ったりして
記事を書く。けどなまくらして(?)、自動引用の上に本文を書いて
自動引用はそのまま放置とか、返信記事で要らない部分を削らなかったり
する人もいる。みっともないし資源の無駄だしうざい。

賢い UA はこういうのを察知して(どうやって?)警告すれば良い。

署名 (.signature) をつけるときは、自動引用の後にする。
前につけるだらぶちな実装があったらしい...

** text/html で返信の場合

BLOCKQUOTE 要素を使う。元の記事の Message-ID を、
cite 属性で明示する。例:

  <blockquote cite="mid:foo.msg@@msgid.example">
  <p>
  Foo bar, hogehoge.
  </p>
  </blockquote>

間抜けな UI の UA だと、引用部分と返信本文部分の区別が
付けがたいらしく、 blockquote 要素内に返信を書く人が
後をたたない:-) (もっとも、そういう人は普段から HTML
でインデントに blockquote 要素を使っているのかも(藁))

**その他の媒体型での返信

基本的には text/plain と同じかと。引用を明示する方法がある
媒体型なら、 text/html 同様に。え? text/css で返信?
注釈 /* */ の内側を、 text/plain と見なしたらどうでしょうか?

image/png で返信? Microsoft Paint の文字入力でも、
エディター画面の写真でも、好きなようにしたら?

audio/* では、・・・勝手にしろ。

**元の記事が非 text/plain, text/html の場合

基本的には同じだと思うのですが、 multipart/* とかだと
どう返信すればいいんでしょ? とりあえず、 multipart/*
で text/plain (disposition: inline) があれば、それを全部
引用するのかなあ?

*See also
-[[電子メイル]]
-[[電子ニュース]]
-[[RFC822と仲間達の頭領域名]]
--[[From:領域]]
--[[Reply-To:領域]]
--[[To:領域]]
--[[Sender:領域]]
--[[Cc:領域]]
--[[Mail-Followup-To:領域]]
--[[Mail-Reply-To:領域]]
--[[Newsgroups:領域]]
--[[Followup-To:領域]]
--[[Return-Path:領域]]
--[[Subject:領域]]
--[[記事の識別子]]
---[[Message-ID:領域]]
---[[In-Reply-To:領域]]
---[[References:領域]]
---[[Supersedes:領域]]
---[[See-Also:領域]]
-[[メッセージの署名部分]]
- [1] [WEAK[2002-12-25 19:04]] ''[[名無しさん]]'': 送り先の既定値の決定について [wl:11013] 以降で議論されています。
- [2] [WEAK[2002-12-29 14:59]] ''[[名無しさん]]'': [mew-dist 22773]〜も
- [3] [CODE[>>>>>>]] みたいなのを使うと、 [[Mozilla]] のように引用を見やすくする (つもりの) MUA で見た時に (それに対応していないと) むしろ醜くなったりする。
- [4] >>3 まあこの場合は Mozilla が悪いんだが、便利な機能だけにねぇ。
- [5] [WEAK[2003-01-12 11:17]] ''[[名無しさん]]'': ちょっと小耳に挟んだんですけど、 [SAMP[From: 名前 <foo@@bar.example>]] なメッセージに返信する時に、 [[RFC]] 違反になる虞があるから [SAMP[To: 名前 <foo@@bar.example>]] とせずに、 [SAMP[To: <foo@@bar.example>]] にする [[MUA]] があるそうです。 (メッセージ編集画面での話です。) [[display-name]] 入れたい時は手動でどうぞ、ということらしいです。
- [6] [WEAK[2003-01-12 11:19]] ''5'': 多分 [[quoted-string]] の中に [[encoded-word]] が含まれることを嫌がってるんだと思うんですが、変な話ですよねぇ。 [SAMP["名前"]] という文字列なのなら丸ごと符号化して [CODE[encoded-word]] にすればそれで済むし、 [SAMP["]] が [[quoted-string]] の引用符なのなら [CODE[display-name]] としての意味はないんだから削って[SAMP[名前]]だけ [CODE[encoded-word]] にすれば済む話だし。
@
