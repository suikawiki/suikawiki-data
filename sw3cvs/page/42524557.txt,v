head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2008.07.27.02.52.29;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.13.02.03.42;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.13.02.01.46;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@

* BREW method (HTCPCP)

[1] [[HTCPCP/1.0]] の [[method]] [DFN[[CODE(HTTP)[BREW]]]] 
は、珈琲鯖を制御する method です。構文的には [CODE(HTTP)[[[POST]]]]
method と同じように機能します。


[2]
ZDFjXC  <a href="http://qyyarkczeann.com/">qyyarkczeann</a>, [url=http://htfbhuysbqev.com/]htfbhuysbqev[/url], [link=http://ozfuytkcgmhy.com/]ozfuytkcgmhy[/link], http://srgmmscuhmnc.com/
([[yzgdulms]] [lkdsdo@@hyoile.com] [WEAK[2008-07-25 08:54:15 +00:00]])


[[#comment]]


** 仕様書から


*** RFC 2324 (HTCPCP/1.0) 2.1.1 The BREW method, and the use of POST

> Commands to control a coffee pot are sent from client to coffee
server using either the BREW or POST method, and a message body with
Content-Type set to "application/coffee-pot-command".

珈琲ポットを制御する命令は、
クライアントから珈琲鯖に 
[CODE(HTTP)[BREW]] method 又は
[CODE(HTTP)[[[POST]]]] method を使って、
メッセージ本体の [CODE(HTTP)[[[Content-Type]]]]
を [CODE(MIME)[[[application/coffee-pot-command]]]]
に設定して送信します。

> A coffee pot server MUST accept both the BREW and POST method
equivalently.  However, the use of POST for causing actions to happen
is deprecated.

珈琲ポット鯖は、 [CODE(HTTP)[BREW]]
method も [CODE(HTTP)[POST]] method も同等に受け入れなければ'''なりません'''。
しかし、行動を起こす時に [CODE(HTTP)[POST]]
を使用することは非推奨です。

> Coffee pots heat water using electronic mechanisms, so there is no
fire. Thus, no firewalls are necessary, and firewall control policy
is irrelevant. However, POST may be a trademark for coffee, and so
the BREW method has been added. The BREW method may be used with
other HTTP-based protocols (e.g., the Hyper Text Brewery Control
Protocol).

珈琲ポットは電子的機構を使って水を熱するので、
火は使いません。従って、[[防火壁]]は不要であり、
防火壁制御方針も無関係です。しかし、
[CODE(HTTP)[POST]] は珈琲に関しては商標かもしれないので、
[CODE(HTTP)[BREW]] method が追加されました。
[CODE(HTTP)[BREW]] method は他の HTTP
を基にしたプロトコル (例えばハイパーテキスト醸造制御プロトコル)
でも使われるかもしれません。


*** RFC の部分の License

[[RFCのライセンス]]参照。


** メモ

[[#comment]]


* メモ@


1.2
log
@auto-committed
@
text
@d1 71
a71 53
#?SuikaWiki/0.9
* BREW method (HTCPCP)
[1] [[HTCPCP/1.0]] の [[method]] [DFN[[CODE(HTTP)[BREW]]]] 
は、珈琲鯖を制御する method です。構文的には [CODE(HTTP)[[[POST]]]]
method と同じように機能します。

[[#comment]]

** 仕様書から
*** RFC 2324 (HTCPCP/1.0) 2.1.1 The BREW method, and the use of POST
>Commands to control a coffee pot are sent from client to coffee
server using either the BREW or POST method, and a message body with
Content-Type set to "application/coffee-pot-command".

珈琲ポットを制御する命令は、
クライアントから珈琲鯖に 
[CODE(HTTP)[BREW]] method 又は
[CODE(HTTP)[[[POST]]]] method を使って、
メッセージ本体の [CODE(HTTP)[[[Content-Type]]]]
を [CODE(MIME)[[[application/coffee-pot-command]]]]
に設定して送信します。

>A coffee pot server MUST accept both the BREW and POST method
equivalently.  However, the use of POST for causing actions to happen
is deprecated.

珈琲ポット鯖は、 [CODE(HTTP)[BREW]]
method も [CODE(HTTP)[POST]] method も同等に受け入れなければ'''なりません'''。
しかし、行動を起こす時に [CODE(HTTP)[POST]]
を使用することは非推奨です。

>Coffee pots heat water using electronic mechanisms, so there is no
fire. Thus, no firewalls are necessary, and firewall control policy
is irrelevant. However, POST may be a trademark for coffee, and so
the BREW method has been added. The BREW method may be used with
other HTTP-based protocols (e.g., the Hyper Text Brewery Control
Protocol).

珈琲ポットは電子的機構を使って水を熱するので、
火は使いません。従って、[[防火壁]]は不要であり、
防火壁制御方針も無関係です。しかし、
[CODE(HTTP)[POST]] は珈琲に関しては商標かもしれないので、
[CODE(HTTP)[BREW]] method が追加されました。
[CODE(HTTP)[BREW]] method は他の HTTP
を基にしたプロトコル (例えばハイパーテキスト醸造制御プロトコル)
でも使われるかもしれません。

*** RFC の部分の License
[[RFCのライセンス]]参照。
** メモ

[[#comment]]
* メモ
@


1.1
log
@auto-committed
@
text
@d2 5
a6 1
[1] 
d9 2
a10 2
* 仕様書から
** RFC 2324 (HTCPCP/1.0) 2.1.1 The BREW method, and the use of POST
d16 1
a16 1
クライアントから珈琲サーバーに 
d20 1
a20 1
を [CODE[[[application/coffee-pot-command]]]]
d27 1
a27 1
珈琲ポットサーバーは、 [CODE(HTTP)[BREW]]
d48 1
a48 1
** RFC の部分の License
d50 4
a53 1
* メモ@

