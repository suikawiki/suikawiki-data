head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2004.05.13.02.08.18;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.13.02.01.46;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@* Require 頭欄 (RTSP)
[7] [DFN[[CODE(RTSP)[Require:]] 頭欄]]は、
ある必要な機能が実装されているかどうかを問合せるために使用します。

[8] [[起点鯖]]ではなく[[串]]に問合せるための同様の頭欄として
[CODE(RTSP)[[[Proxy-Require]]]] があります。
また、 [[HTTP]] で似たような頭欄として [CODE(HTTP)[[[Man]]]]
があります。

[[#comment]]
**RFC 2326 (RTSP) 12.32 Require
>The Require header is used by clients to query the server about
options that it may or may not support. The server MUST respond to
this header by using the Unsupported header to negatively acknowledge
those options which are NOT supported.

[1] Require 頭はクライアントがサーバーに、対応しているかもしれないしいないかもしれない選択肢について問い合わせるのに使います。
サーバーは対応して'''いない'''選択肢について Unsupported
頭を使って否定応答し'''なければなりません'''。

>This is to make sure that the client-server interaction will
proceed without delay when all options are understood by both
sides, and only slow down if options are not understood (as in the
case above). For a well-matched client-server pair, the interaction
proceeds quickly, saving a round-trip often required by negotiation
mechanisms. In addition, it also removes state ambiguity when the
client requires features that the server does not understand.

[2] これにより、全ての選択肢を両者が理解した場合は遅延なく,
選択肢を理解出来なかった (上記の) 
場合には遅めるだけで、クライアント‐サーバー対話を進めるよう取り計らえます。

-[3]   Require =   "Require" ":"  1#option-tag

[4]
>   Example:
     C->S:   SETUP rtsp://server.com/foo/bar/baz.rm RTSP/1.0
             CSeq: 302
             Require: funky-feature
             Funky-Parameter: funkystuff

     S->C:   RTSP/1.0 551 Option not supported
             CSeq: 302
             Unsupported: funky-feature

     C->S:   SETUP rtsp://server.com/foo/bar/baz.rm RTSP/1.0
             CSeq: 303

     S->C:   RTSP/1.0 200 OK
             CSeq: 303

>In this example, "funky-feature" is the feature tag which indicates
to the client that the fictional Funky-Parameter field is required.
The relationship between "funky-feature" and Funky-Parameter is not
communicated via the RTSP exchange, since that relationship is an
immutable property of "funky-feature" and thus should not be
transmitted with every exchange.

[5] この例では、 [CODE(ABNF)["funky-feature"]]
が架空の [CODE[Funky-Parameter]] 
欄が必須であるとクライアントに示す機能札です。
[CODE(ABNF)["funky-feature"]] と [CODE[Funky-Parameter]]
の関係については RTSP 交換では伝達されません。
なぜならこの関係は [CODE(ABNF)["funky-feature"]]
の不変の属性であって毎度の交換で伝送しなくても良いからです。

>Proxies and other intermediary devices SHOULD ignore features that
are not understood in this field. If a particular extension requires
that intermediate devices support it, the extension should be tagged
in the Proxy-Require field instead (see Section 12.27).

[6] 串及び他の中間機器はこの欄にある理解出来ない機能を無視する'''のが良いです'''。
特定の拡張に中間機器が対応する必要がある時は、その拡張は代わりに
Proxy-Require 欄に札付けするのがよいです。

**RFC の部分の License
[[RFCのライセンス]]
** メモ
[[#comment]]
*メモ
@


1.1
log
@auto-committed
@
text
@d1 11
a11 2
#?SuikaWiki/0.9
*RFC 2326 12.32 Require
d76 1
a76 1
*RFC の部分の License
d78 2
@

