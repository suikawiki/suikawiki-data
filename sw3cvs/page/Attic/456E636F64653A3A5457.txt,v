head	1.2;
access;
symbols
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.05.03.02.03.19;	author wakaba;	state dead;
branches;
next	1.1;

1.1
date	2002.10.13.13.24.27;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@#?SuikaWiki/0.9
*Encode::TW の問題点

[[Unicode]] の [[Big5]] への対応がいい加減だった結果、
[[UnicodeConsortium]] の配布する表は滅茶苦茶で、結果
各実装の Big5 の表も滅茶苦茶です。そもそも Big5 の文字には
(いい加減な扱いの結果) きちんと対応する [[Unicode]]
の文字が存在しないものが少なくないのですが、どうしようもないので
多くの実装が滅茶苦茶な表を受け入れています。

こうした事情から、 Encode::TW も Big5 の文書を
まともな [[UCS]] の文書に変換する用途には使えません。

Apple の変換表 (Encode::TW では MacChineseTrad)
はこの問題に対処するために [[Unicode]] に対する独自拡張を
使っていますので、スタンスには好感が持てますが
Big5 の文書をまともな [[UCS]] の文書に変換する用途には
結局使い物になりません。

Encode::TW 特有の問題ではないので追求するのは酷ですが、
利用者はこうした問題があることを認識しておくべきでしょう。

CNS 11643 についても同様のことが言えますが、更に
Big5 と CNS 11643 の対応する文字が、それぞれの Unicode
との変換が異なるためにきちんと対応しないという問題もあります。
この問題は Encode::TW レベルで(頑張れば)対処できるはずです。

*Perl 5.8.0 の Encode::TW
**NAME

Encode::TW - Taiwan-based Chinese Encodings 基台湾中国の符号化

**SYNOPSIS

    use Encode qw/encode decode/; 
    $big5 = encode("big5", $utf8); # loads Encode::TW implicitly
                                   # 自動的に Encode::TW を読み込む
    $utf8 = decode("big5", $big5); # ditto    同上

**DESCRIPTION

This module implements tradition Chinese charset encodings as used
in Taiwan and Hong Kong.
Encodings supported are as follows.

このモジュールは台湾と香港で使われている伝統字の中国の
charset 符号化を実装します。対応している符号化は次のとおり。

  Canonical   Alias		Description
  正規名      別名              説明
  --------------------------------------------------------------------
  big5-eten   /\bbig-?5$/i	Big5 encoding (with ETen extensions)
	      /\bbig5-?et(en)?$/i [[Big5]] 符号化 ([[ETen]] 拡張込)
	      /\btca-?big5$/i
  big5-hkscs  /\bbig5-?hk(scs)?$/i
              /\bhk(scs)?-?big5$/i
                                Big5 + Cantonese characters in Hong Kong
                                Big5 と香港で使われる広東漢字
  MacChineseTrad		Big5 + Apple Vendor Mappings
  cp950		                Code Page 950 
                                = Big5 + Microsoft vendor mappings
  --------------------------------------------------------------------

To find out how to use this module in detail, see L<Encode>.

このモジュールをどう使うかの詳細は [[Encode]] を参照。

**NOTES

Due to size concerns, C<EUC-TW> (Extended Unix Character), C<CCCII>
(Chinese Character Code for Information Interchange), C<BIG5PLUS>
(CMEX's Big5+) and C<BIG5EXT> (CMEX's Big5e) are distributed separately
on CPAN, under the name L<Encode::HanExtra>. That module also contains
extra China-based encodings.

大きさの関係上、 [[EUC-TW]] (拡張 Un*x 文字), [[CCCII]],
BIG5PLUS ([[CMEX]] の [[Big-5+]]), BIG5EXT ([[CMEX]] の
[[Big-5E]]) は別途 [[CPAN]] で [[Encode::HanExtra]] として
配布しています。このモジュールは追加の基中国符号化も
含んでいます。

[INS[
訳注: [[EUC]] の説明 Extended Unix Character は誤りで、
Extended Unix Code が正しい。
]INS]

**BUGS

Since the original C<big5> encoding (1984) is not supported anywhere
(glibc and DOS-based systems uses C<big5> to mean C<big5-eten>; Microsoft
uses C<big5> to mean C<cp950>), a conscious decision was made to alias
C<big5> to C<big5-eten>, which is the de facto superset of the original
big5.

元の big5 符号化 (1984) はどこでも対応していない
([[glibc]] や基 [[DOS]] 系統は big5 を big5-eten 
の意味で使っている。 [[Microsoft]] は big5 を cp950
の意味で使っている。) ので、意図的に big5 を元の big5
の superset であり[[デファクト標準]]たる big5-eten
の別名としました。

The C<CNS11643> encoding files are not complete. For common C<CNS11643>
manipulation, please use C<EUC-TW> in L<Encode::HanExtra>, which contains
planes 1-7.

CNS 11643 符号化ファイルは完全ではありません。
共通の CNS11643 の扱いについては、 [[Encode::HanExtra]]
の EUC-TW を使って下さい。こちらは字面 1-7 を含みます。

The ASCII region (0x00-0x7f) is preserved for all encodings, even
though this conflicts with mappings by the Unicode Consortium.  See

ASCII の範囲 (0x00-0x7F) は全ての符号化で保持されます。
たとえ [[UnicodeConsortium]] の表と対立してもです。

<http://www.debian.or.jp/~kubota/unicode-symbols.html.en>

to find out why it is implemented that way.

どうしてこう実装したかについては
<http://www.debian.or.jp/~kubota/unicode-symbols.html>
をご覧下さい。

**SEE ALSO

[[Encode]]

**この部分の license

[[perlと同じライセンス]]。

*メモ
@


1.1
log
@Updated.
@
text
@@

