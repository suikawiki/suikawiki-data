head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.10.03.02.02.08;	author wakaba;	state dead;
branches;
next	1.1;

1.1
date	2003.06.28.10.14.16;	author make;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@*HTTP/1.1 (RFC 2616)

**14.14 Content-Location

   The Content-Location entity-header field MAY be used to supply the
   resource location for the entity enclosed in the message when that
   entity is accessible from a location separate from the requested
   resource's URI. A server SHOULD provide a Content-Location for the
   variant corresponding to the response entity; especially in the case
   where a resource has multiple entities associated with it, and those
   entities actually have separate locations by which they might be
   individually accessed, the server SHOULD provide a Content-Location
   for the particular variant which is returned.

       Content-Location = "Content-Location" ":"
                         ( absoluteURI | relativeURI )

   The value of Content-Location also defines the base URI for the
   entity.

   The Content-Location value is not a replacement for the original
   requested URI; it is only a statement of the location of the resource
   corresponding to this particular entity at the time of the request.
   Future requests MAY specify the Content-Location URI as the request-
   URI if the desire is to identify the source of that particular
   entity.

   A cache cannot assume that an entity with a Content-Location
   different from the URI used to retrieve it can be used to respond to
   later requests on that Content-Location URI. However, the Content-
   Location can be used to differentiate between multiple entities
   retrieved from a single requested resource, as described in section
   13.6.

   If the Content-Location is a relative URI, the relative URI is
   interpreted relative to the Request-URI.

   The meaning of the Content-Location header in PUT or POST requests is
   undefined; servers are free to ignore it in those cases.

*RFC 2110 (MHTML)

content-location ::= "Content-Location:" ( absoluteURI |
                            relativeURI )

See [[RFC2110によるContent-Base:領域とContent-Location:領域]]

*RFC 2557 (MHTML)

content-location =   "Content-Location:" [CFWS] URI [CFWS]

URI              =   absoluteURI | relativeURI

規定抜粋:

**4.4.1 Encoding of URIs containing inappropriate characters

> Some documents may contain URIs with characters that are
> inappropriate for an RFC 822 header, either because the URI itself
> has an incorrect syntax according to [URL] or the URI syntax standard
>   has been changed to allow characters not previously allowed in MIME
>   headers. These URIs cannot be sent directly in a message header. If
>   such a URI occurs, all spaces and other illegal characters in it must
>   be encoded using one of the methods described in [MIME3] section 4.
>   This encoding MUST only be done in the header, not in the HTML text.
>   Receiving clients MUST decode the [MIME3] encoding in the heading
>   before comparing URIs in body text to URIs in Content-Location
>   headers.

**4.4.2 Folding of long URIs

>   Since MIME header fields have a limited length and long URIs can
>   result in Content-Location headers that exceed this length, Content-
>   Location headers may have to be folded.

>   Encoding as discussed in clause 4.4.1 MUST be done before such
>   folding.  After that, the folding can be done, using the algorithm
>   defined in [URLBODY] section 3.1.


*SEE ALSO
-[[RFC822と仲間達の頭領域名]]
--[[URIを値に持つ領域]]
---[[Content-Base:領域]]
---[[Location:領域]]
-[[HTTP]]
--[[HTTP/1.0]]
--[[HTTP/1.1]]
-[[MIME]]
--[[MHTML]]
--[[URLBODY]]
--[[encoded-word]]
--[[RFC2321]]
-[[HTML]]
-[[URI]]
--[[URL]]

@


1.1
log
@auto-commited
@
text
@@

