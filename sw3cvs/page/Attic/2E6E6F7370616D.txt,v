head	1.3;
access;
symbols
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.3
date	2004.04.13.02.00.59;	author wakaba;	state dead;
branches;
next	1.2;

1.2
date	2003.06.06.12.26.15;	author make;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.03.03.19.13;	author w;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] [[spam]] よけになるとして一時期はやったおまじない。実際には意味はない。

[2] spam 業者によるメイル・アドレスの機械的収集を防ぐ
(というか無意味化する) ため、擬似 [[TLD]] [CODE[nospam]]
を使って、 <MAIL:foo@@bar.example> を <MAIL:foo@@bar.example.nospam>
とする方法が考案されました。

[5] しかしこれは簡単な処理ですぐに対抗出来ますから、更なる効果を求めて
nospam の文字列をメイル・アドレスの他の場所に紛れさせたり、違う文字列に替えたりしました。

[3] しかし >>2 のような行動を取る人に対して、多くの批判がありました。
-[4] そのような''対策''は役に立たない。 [CODE(perl)[s/\.nospam//g]] 
で簡単に消せる。 (そこで >>5 のような方法が採られた。)
-[6] 各 Internet 標準等に対する違反である。 (特にメイル・アドレスとして不正な文字の混入は実装がどう誤動作するかわからない。)
-[7] そのメイル・アドレスを使って返信なり何なりする人の手間が無闇に増えるだけだ。
(特に >>5 で手の込んだ加工をしたのを見ると返信する気も失せることもあり、送受信両者にとって損失である。)
-[8] そもそもメイル・アドレスが既に (対策以前に) spam
業者の手に渡っていればそれが転売等々されるだろうし、結局 spam はなくならない。
((.nospam が流行ったころは簡単に無料又は安価のメイル・アドレスを入手できる時代にはまだちょっと早かった。))

[9] そのうち費用対効果の悪さに気づいてきたのか、こういう小手先の対策をする人はいなくなりました。

[10] 更に、現代においては[[アドレス帳]]を調べて云々とかする[[ワーム]]が存在することなどから考えても、このような対策を講じることは全くもって無意味でしょう。
- [11] ドメイン名系 [[ML]] に [CODE[.nospam]] 系 [[From:]] で投稿してくる香具師には問詰めたくなるよな。
@


1.2
log
@auto-commited
@
text
@@


1.1
log
@update to latest version
@
text
@d25 1
@

