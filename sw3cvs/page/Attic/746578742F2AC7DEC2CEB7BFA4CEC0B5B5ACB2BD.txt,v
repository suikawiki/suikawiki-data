head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.06.06.12.26.33;	author make;	state dead;
branches;
next	1.2;

1.2
date	2002.10.30.13.24.51;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.58;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-commited
@
text
@#?SuikaWiki/0.9
*RFC 2046 4.1.1.  Representation of Line Breaks [INS[改行の表現]]
>The canonical form of any MIME "text" subtype MUST always represent a
line break as a CRLF sequence.  Similarly, any occurrence of CRLF in
MIME "text" MUST represent a line break.  Use of CR and LF outside of
line break sequences is also forbidden.

[[MIME]] "text" 亜型の正規形は常に改行を [[CRLF]]
列で表さなければ'''なりません'''。同様に、 MIME "text" 中の
CRLF は改行を表さなければ'''なりません'''。
CR と LF を改行シーケンス以外で使用することも禁止します。

>This rule applies regardless of format or character set or sets involved.

この規則はどんな形式や文字集合であっても適用されます。

>'''NOTE''': The proper interpretation of line breaks when a body is
displayed depends on the media type. In particular, while it is
appropriate to treat a line break as a transition to a new line when
displaying a "text/plain" body, this treatment is actually incorrect
for other subtypes of "text" like "text/enriched" [RFC-1896].
Similarly, whether or not line breaks should be added during display
operations is also a function of the media type. It should not be
necessary to add any line breaks to display "text/plain" correctly,
whereas proper display of "text/enriched" requires the appropriate
addition of line breaks.

'''参考''': 本体が表示される時の改行の適切な解釈は媒体型によります。
特に、 "text/plain"
本体を表示する時に改行を新しい行へ移るものとして扱うのは適切ですが、
"text/enriched" [RFC-1896] のような "text"
の他の亜型には実際この扱いは間違いです。
同様に、改行が表示操作により追加されるべきかどうかも媒体型の機能によります。
"text/plain" を正しく表示するのに改行を追加する必要があるのは望ましくありませんが、
"text/enriched" の適切な表示には適切に改行を追加する必要があります。

>'''NOTE''': Some protocols defines a maximum line length.  E.g.
SMTP [RFC-821] allows a maximum of 998 octets before the next CRLF sequence.
To be transported by such protocols, data which includes too long
segments without CRLF sequences must be encoded with a suitable
content-transfer-encoding.

'''参考''': 幾つかの[[プロトコル]]は最大行長を決めています。
例えば [[SMTP]] は最大で998オクテットがそれに続く CRLF
シーケンスの前にあることを認めています。このようなプロトコルで転送するには、
CRLF シーケンスなしの長過ぎる部分を含むデータは適切な内容転送符号化で符号化しなければなりません。

*RFC 2616 3.7.1 Canonicalization and Text Defaults [INS[正規化と Text 既定値]]

>Internet media types are registered with a canonical form. An
entity-body transferred via HTTP messages MUST be represented in the
appropriate canonical form prior to its transmission except for
"text" types, as defined in the next paragraph.

Internet 媒体型は正規形とともに登録されます。
[[HTTP]] [[メッセージ]]で転送される実体本文は、次の段落で定義する
"text" 型を除いては、転送の前に適切な正規形で表現し'''なければなりません'''。

   When in canonical form, media subtypes of the "text" type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).

正規形では、 "text" 型の媒体亜型は CRLF を文改行に使います。 HTTP
はこの要件を緩和し、文媒体を生の CR や LF だけを改行の表現に使って
転送することを、実体本文全体で一貫している場合は認めます。
HTTP 応用は CRLF, 単独 CR, 単独 LF を HTTP で受け取った文媒体の改行の表現
であるとして認めなければ'''なりません'''。加えて、文がオクテット 13 および
10 をそれぞれ CR と LF に使わない、幾つかの多バイト文字集合の場合のような
文字集合で表現されている場合は、 HTTP haその文字集合で定義されている CR や
LF と同等のオクテット列を使うことを認めます。この柔軟性は、
実体本文中の文媒体にのみ適応されます。単独の CR や LF は HTTP
制御構造 (頭領域や多部分区切りなど) の中では CRLF の代わりに使っては
'''いけません'''。

If an entity-body is encoded with a content-coding, the underlying
data MUST be in a form defined above prior to being encoded.

実体本文が内容符号化で符号化されている時は、中のデータは
符号化の前に上に定義した形にして'''おかなければなりません'''。

   The "charset" parameter is used with some media types to define the
   character set (section 3.4) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the "text"
   type are defined to have a default charset value of "ISO-8859-1" when
   received via HTTP. Data in character sets other than "ISO-8859-1" or
   its subsets MUST be labeled with an appropriate charset value. See
   section 3.4.1 for compatibility problems.

"charset" パラメーターを幾つかの媒体型でデータの文字集合を定義するのに
使います。 HTTP で受信した時に、送信者により明示された charset 
パラメーターが無い場合は、
"text" の媒体亜型は既定の charset 値 "ISO-8859-1" を持つものと定義します。
"ISO-8859-1" かその部分集合でない文字集合のデータは適切な charset
値で札付けし'''なければなりません'''。互換性問題については3.4.1節を
参照して下さい。

*See also
-RFC 1341 <urn:ietf:rfc:1341>
-RFC 1521 <urn:ietf:rfc:1521>
-RFC 2045 <urn:ietf:rfc:2045>
-RFC 2046 <urn:ietf:rfc:2046>
-RFC 2048 <urn:ietf:rfc:2048>
-RFC 2616 <urn:ietf:rfc:2616>

*RFC の部分の License

See [[RFCのライセンス]]

*メモ
@


1.2
log
@Updated.
@
text
@@


1.1
log
@Updated.
@
text
@d1 46
d48 1
d50 1
a50 3
*RFC 2616 3.7.1 Canonicalization and Text Defaults

Internet media types are registered with a canonical form. An
d56 2
a57 2
HTTP メッセージで転送される実体本文は、次の段落で定義する "text" 型を
除いては、転送の前に適切な正規形で表現し'''なければなりません'''。
d109 6
a114 10
-[[MIME]]
--[[媒体型]]
---[[text/*媒体型]]
--RFC 1341 <urn:ietf:rfc:1341>
--RFC 1521 <urn:ietf:rfc:1521>
--RFC 2045 <urn:ietf:rfc:2045>
--RFC 2046 <urn:ietf:rfc:2046>
--RFC 2048 <urn:ietf:rfc:2048>
-[[HTTP]]
--RFC 2616 <urn:ietf:rfc:2616>
d116 1
a116 1
*License
d120 1
@

