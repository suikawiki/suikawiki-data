head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2003.11.08.02.01.56;	author wakaba;	state dead;
branches;
next	1.2;

1.2
date	2002.12.15.06.25.50;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.58;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@#?SuikaWiki/0.9 obsoleted="yes"
⇒[[Transfer-Encoding:欄]]@


1.2
log
@Updated.
@
text
@@


1.1
log
@Updated.
@
text
@d1 2
a2 125
*RFC 2616 の 14.41 Transfer-Encoding

   The Transfer-Encoding general-header field indicates what (if any)
   type of transformation has been applied to the message body in order
   to safely transfer it between the sender and the recipient. This
   differs from the content-coding in that the transfer-coding is a
   property of the message, not of the entity.

・・・これは、内容符号化 (content-coding) とは、
転送符号化はメッセージの属性であって実体の属性では無いという点で異なります。

-Transfer-Encoding       = "Transfer-Encoding" ":" 1#transfer-coding

Transfer-codings are defined in section 3.6. An example is:

-Transfer-Encoding: chunked

If multiple encodings have been applied to an entity, the transfer-codings 
MUST be listed in the order in which they were applied.  Additional information 
about the encoding parameters MAY be provided by other entity-header fields not 
defined by this specification.

複数の符号化が実体に適用された場合、転送符号化は適用された順に
列し'''なければなりません'''。符号化の特質 (parameter) についての追加情報を
この仕様書が定義していない他の実体頭領域で提供しても'''構いません'''。

Many older HTTP/1.0 applications do not understand the Transfer-Encoding header.

多くの古めの HTTP/1.0 応用は Transfer-Encoding 頭を解しません。

*RFC 2616 の 3.6 Transfer Codings

Transfer-coding values are used to indicate an encoding transformation that 
has been, can be, or may need to be applied to an entity-body in order to 
ensure "safe transport" through the network.  This differs from a content 
coding in that the transfer-coding is a property of the message, not of the 
original entity.

transfer-coding (転送符号化) 値は、網中の「安全転送」を確かなものとする
ために実体本体 (entity-body) に適用されている, あるいはされることが出来る,
する必要があるかもしれない符号化転送を示すのに使います。これは
内容符号化 (content coding) とは、メッセージの属性であって、
元の実体の属性では無いという点で異なっています。

-transfer-coding         = "chunked" | transfer-extension
-transfer-extension      = token *( ";" parameter )

Parameters are in  the form of attribute/value pairs.

-parameter               = attribute "=" value
-attribute               = token
-value                   = token | quoted-string

All transfer-coding values are case-insensitive. HTTP/1.1 uses
transfer-coding values in the TE header field (section 14.39) and in
the Transfer-Encoding header field (section 14.41).

   Whenever a transfer-coding is applied to a message-body, the set of
   transfer-codings MUST include "chunked", unless the message is
   terminated by closing the connection. When the "chunked" transfer-
   coding is used, it MUST be the last transfer-coding applied to the
   message-body. The "chunked" transfer-coding MUST NOT be applied more
   than once to a message-body. These rules allow the recipient to
   determine the transfer-length of the message (section 4.4).

   Transfer-codings are analogous to the Content-Transfer-Encoding
   values of MIME [7], which were designed to enable safe transport of
   binary data over a 7-bit transport service. However, safe transport
   has a different focus for an 8bit-clean transfer protocol. In HTTP,
   the only unsafe characteristic of message-bodies is the difficulty in
   determining the exact body length (section 7.2.2), or the desire to
   encrypt data over a shared transport.

   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   transfer-coding value tokens. Initially, the registry contains the
   following tokens: "chunked" (section 3.6.1), "identity" (section
   3.6.2), "gzip" (section 3.5), "compress" (section 3.5), and "deflate"
   (section 3.5).

   New transfer-coding value tokens SHOULD be registered in the same way
   as new content-coding value tokens (section 3.5).

   A server which receives an entity-body with a transfer-coding it does
   not understand SHOULD return 501 (Unimplemented), and close the
   connection. A server MUST NOT send transfer-codings to an HTTP/1.0
   client.


*利用可能な値

IANA 登録簿 <http://www.iana.org/assignments/http-parameters> より

-"chunked" [[chunked符号化]]

RFC 2616 3.6節によると、内容符号化として使われる次の値も転送符号化に
使えるようですが、 IANA 登録簿には載っていません。

-"identity"
-"gzip"
-"compress"
-"deflate"

実装は次の値も解せるのが望ましいでしょう。

-"x-gzip"
-"x-compress"

値 "trailers" は転送符号化ではありませんが、 [[TE:領域]]
では転送符号化に準じて扱われています。

*See also
-IANA 登録簿 http-parameters <http://www.iana.org/assignments/http-parameters>
-[[符号化]]
--[[転送符号化]]
--[[圧縮]]
--[[RFC822と仲間達の頭領域名]]
---[[Content-Transfer-Encoding:領域]]
---[[Content-Encoding:領域]]
---[[TE:領域]]
---[[Trailer:領域]]
---[[Content-Type:領域]]

*ライセンス

See [[RFCのライセンス]]
@

