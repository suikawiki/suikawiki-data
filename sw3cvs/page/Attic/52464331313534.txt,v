head	1.2;
access;
symbols
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.2
date	2004.05.31.02.04.02;	author wakaba;	state dead;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.58;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@*現在からみた RFC 1154

こんなわけのわからんことを言ってる。

The use of Encoding updates RFC 1049 (Content-Type), and is a
suggested update to RFCs 1113, 1114, and 1115 (Privacy Enhancement) [4,7,8].
(1. このメモの位置付け)

The list of standard keywords is intended to be the same as the list
used for the Content-Type: header described in [6].  This RFC
proposes additions to the list.  Implementations can then treat
"Content-Type" as an alias of "Encoding", which will always have only
one body part. (3.3 <keyword>)

そもそも定義がこんないい加減なんで気が引けるのだが、

     [<count> <keyword> [<options>], ]* [<count>] <keyword> [<options>]

     where:

        <count>   := a decimal integer
        <keyword> := a single alphanumeric token starting with an alpha
        <options> := keyword-dependent options

[[RFC1049によるContent-Type:領域の定義]]では、
<options> に沿うとする部分は「;」区切りの複数のオプションだったはずだ。
まあそれは RFC 1154 では <options> になるのだとする。
ところが、 RFC 1049 の最後のオプションは「,」区切りのリストだ!
となると判断は微妙に面倒になる。 (この構文的に見分けるのは不可能ではない
から、そう問題でないといえば問題でない。)

TEXT 型は、 7ビットなら ASCII、8ビットなら ISO 8859-1 だってさ。

[[RFC1505]] で廃止。だけど RFC 1505 の Encoding: 領域とは互換性がない。

*SEE ALSO
-[[MIME]]
-[[Content-Type:領域]]
-[[Encoding:領域]]

*LICENSE

See [[RFCのライセンス]]
@


1.1
log
@Updated.
@
text
@@

