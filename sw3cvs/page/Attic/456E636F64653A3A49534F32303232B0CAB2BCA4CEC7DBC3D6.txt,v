head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2003.06.06.12.26.19;	author make;	state dead;
branches;
next	1.1;

1.1
date	2002.10.18.06.24.33;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-commited
@
text
@#?SuikaWiki/0.9
Encode::ISO2022 以下の [[ISO/IEC2022]] に基づく構造の[[符号]]
の変換用の定義モジュールをどう配置するか悩みます。努力目標:
=同時に使いそうな[[符号]]は1つのモジュールに入れる
=似たような構造の[[符号]]は1つのモジュールにまとめる
=使用頻度の低い符号が高い符号と同じモジュールに入らないようにする

もちろん、これらは完全には両立しません。どの辺で折り合いを
つけるかってことです。

利用者側からすれば、一度 install してしまえばモジュール名は
気にする必要はないので、もっぱら読み込み速度 (ほとんどかわらない
とは思うが。) やメンテナンスのしやすさや美しさの問題になります。

*現状 (2002.10)
-CP932
--[[ISO-2022-JP]] に似た [[Windows]] でよく使われる[[符号]]
-EightBit
--[[EUC]] 及び [[CompoundText]]
-ISO646
--[[ISO/IEC646]] の版で他に含まれないもの
-JIS
--[[JIS]] が規定するが使用頻度の低い符号
-JISCompatible
--JIS が規定する互換用の ISO-2022-JP-* 及び EUC-J*
-RFC1345
--[[RFC1345]] に表があるが他の規格で定義されているか不明な符号
-SevenBit
--[[ISO-2022-JP]]-* などすべての ISO-2022-*

*改良版構造 (案)
-CTEXT
--Compound Text
-EightBit
--[[iso-2022-8bit-ss2]]
-EUCJA
--[[日本語EUC]]
-EUCJADerivative
--EUCJA に対応する JIS 不適合の符号
-EUCKR
--[[EUC-KR]]
-EUCZH
--[[EUC-CN]], [[EUC-TW]]
-INT
--ISO-2022-INT-*
-ISO646
--ISO/IEC 646 の版 (他モジュールで定義されないもの)
-JIS
--JIS が定義する符号 (他モジュールで定義されないもの)
-JUNET
--ISO-2022-JP-*
-JUNETCompatible
--E::I2::JUNET に対応する互換用符号
-JUNETDerivative
--JUNET に対応する JIS 不適合の符号
-RFC1345
--RFC 1345 にある符号 (他のモジュールで定義されていないもの)
-SevenBit
--[[iso-2022-7bit]]-*

Request for commments.
- [1] 2002-10-18 (金) 14:23 ''[[名無しさん]]'': derivative には x-iso-2022-jp-cp932 とかを入れますが、もっといい名前はないですか。
- [2] 2002-10-18 (金) 14:24 ''[[名無しさん]]'': DontComformToJIS とかだと長いし。
@


1.1
log
@Updated.
@
text
@@

