head	1.10;
access;
symbols
	suikawiki3-final:1.10;
locks; strict;
comment	@# @;
expand	@o@;


1.10
date	2008.10.08.02.59.22;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.18.03.07.33;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.06.18.02.07.00;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.13.02.06.02;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.08.02.06.16;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.03.02.12.05;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.18.02.08.06;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.08.02.05.23;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.03.02.06.48;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.18.02.03.07;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.10
log
@auto-committed
@
text
@* frame 要素型 (HTML, XHTML 1)

[9] [[HTML]] の [DFN[[CODE(HTMLe)[frame]] 要素]]は、
[RUBY[[[枠]]] [フレーム] [frame]]の内容と見た目を定義します。

[10] 仕様書:
- [[HTML 4]]
-- [CITE[16.2.2 The [CODE(HTMLe)[FRAME]] element]] 
<IW:HTML4:"present/frames.html#edef-FRAME">
-- [CITE[16.4.2 Long descriptions of frames]]
<IW:HTML4:"present/frames.html#idx-accessibility-1">

[12]
:[[局所名]]:[CODE(HTMLe)[frame]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:禁止 (HTML 4), 必須 (XHTML 1)
:出現できる文脈:[CODE(HTMLe)[[[frameset]]]] の子供として任意個
:[[内容模型]]:空 ([[強制空要素]])
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)@@en[[[allowcrossdomainxhr]]]],,,非標準,[[Air]]
,[CODE(HTMLa)@@en[[[application]]]],[CODE(HTML)@@en[[[on]]]] | [CODE(HTMLe)@@en[[[off]]]],,,非標準,[[HTA]]
,[CODE(HTMLa)[[[bordercolor]]]]	,[CODE(SGML)[%[[Color]]]]	,	,境界線色	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,級	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,データ源	,非標準
,[CODE(HTMLa)@@en[[[documentroot]]]],,,非標準,[[Air]]
,[CODE(HTMLa)[[[frameborder]]]]	,[CODE(SGML)[[CODE(HTML)[1]] | [CODE(HTML)[0]]]]	,[CODE(HTML)[1]]	,枠境界線	,[HTML 4] 枠
,[CODE(HTMLa)[[[framespacing]]]]	,	,	,枠間隔	,非標準
,[CODE(HTMLa)[[[id]]]]	,[CODE(SGML)[[[ID]]]]	,(なし)	,固有識別子	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,長い説明の参照	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginheight]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白高さ	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginwidth]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白幅	,[HTML 4] 枠
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,枠名	,[HTML 4] 枠
,[CODE(HTMLa)[[[noresize]]]]	,([[真偽値属性]])	,([[偽]])	,寸法可変性	,[HTML 4] 枠
,[CODE(HTMLa)@@en[[[ondominitialize]]]],,,非標準,[[Air]]
,[CODE(HTMLa)@@en[[[sandboxroot]]]],,,非標準,[[Air]]
,[CODE(HTMLa)[[[scrolling]]]]	,	,[CODE(HTML)[[[auto]]]]	,	,[HTML 4] 枠
,[CODE(HTMLa)[[[security]]]],,,安全上の扱い,非標準,[[WinIE]]
,[CODE(HTMLa)[[[src]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,枠内容	,[HTML 4] 枠
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** フレーム内容

[14] フレームの内容を直接画像とすることは望ましくありません。
(非視覚 UA 向けに) 画像の説明を記述できなくなってしまうからです。 
[SRC[HTML 4 16.4.2]]

例えば、
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A poorly-designed frameset document</TITLE>
</HEAD>
<FRAMESET cols="20%, 80%">
   <FRAME src="table_of_contents.html">
   <FRAME src="ostrich.gif" longdesc="ostrich-desc.html">
</FRAMESET>
</HTML>
]PRE]

のような場合、確かに [CODE(HTMLa)[[[longdesc]]]]
属性を使うことはできますが、 [CODE(HTMLa)[longdesc]]
は本来フレームの初期内容ではなくフレーム自体を説明するべきものです。

リンクによって他の画像に替えられると、その画像の説明はなくなってしまいます。

[15] という HTML 4 仕様書にある >>14 の考え方は適当ではないと言う人もいます。
曰く、画像が非視覚 UA で表示できないのは代替文を埋め込めない画像形式や画像を表示できない
UA の限界で、ありとあらゆる状況で内容を得ることができるようにするのは無理なことです。

また、フレームを使わない場合でも [CODE(HTMLe)[a]]
を使って画像にリンクすることがありますが、
それも好ましくないと言うのでなければ一貫しません。
そのようなリンクを行うときには、必要で可能であればリンク元に画像の説明があるはずです。
フレーム内であってもそれは同じことでしょう。

また、あるフレームに表示される画像が有限なら、
[CODE(HTMLa)[longdesc]] 文書にすべての代替文を記述しておくのも一つの方法です。

[16]
HTML 4 仕様書は、
回避策として画像を埋め込んだだけのダミー文書を用意することを勧めていますけど、
無駄なだけですよね。

[[#comment]]


** 他との関係

[11] HTML には、特定実装の拡張で、同名別用法の
[CODE(HTMLe)[frame]] 要素型が存在します (>>8)。

[[#comment]]


** 例

[13] フレームの見た目を指定した例 [SRC[HTML 4 16.2.2.2]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET cols="33%,33%,33%">
  <FRAMESET rows="*,200">
      <FRAME src="contents_of_frame1.html" scrolling="no">
      <FRAME src="contents_of_frame2.gif" 
                marginwidth="10" marginheight="15"
                noresize>
  </FRAMESET>
  <FRAME src="contents_of_frame3.html" frameborder="0">
  <FRAME src="contents_of_frame4.html" frameborder="0">
</FRAMESET>
</HTML>
]PRE]

この例では、フレーム1は scroll できなくなります。
フレーム2は画像の周りに余白が付きますし、
大きさを変えることができなくなります。

フレーム3とフレーム4の間には境界線をつけません。
フレーム1とフレーム2とフレーム3の間の境界線は付きます。
(フレーム2とフレーム3の間に境界線が引かれることに注意。)

[[#comment]]


** メモ

[[#comment]]


* animate 要素の子供の frame 要素 (HTML)

[8] [[HTML]] の [CODE(HTMLe)[[[animate]]]] 要素の子要素として使われる
[DFN[[CODE(HTMLe)[frame]] 要素]]は、アニメーションのこまを指定します。

[[#comment]]


* table 要素 frame 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[table]]]] 要素の [DFN[[CODE(HTMLa)[frame]] 属性]]は、
表の枠のつけ方を指定します。

仕様書: 
- [[HTML 4]]
-- [CODE(HTMLe)[table]] 要素 [CODE(HTMLa)[frame]] 属性
<IW:HTML4:"struct/tables.html#adef-frame">
-- [CITE[A.3.7 table_changesChanges for tables]]
<IW:HTML4:"appendix/changes.html#table_changes">
-- [CITE[B.5.2 Recommended Layout Algorithms]]
<IW:HTML4:"appendix/notes.html#layout">

[[#comment]]


** スタイル・シート代替

[5] この属性は、 HTML 4 では'''非推奨'''とはされていません。
[[表]]の特殊性によるものとも思えませんし、 [[HTML 4.0]]
の時点で表を扱えない [[CSS1]] だけで [[CSS2]] 
がまだ勧告されていなかったのが原因かもしれません。

[6] [[CSS]] での代替方法は >>2 の表をご覧下さい。
[[XSL]] でも同じような指定ができます。

[[#comment]]


** 属性値

[2] この属性は[[列挙型]]属性です。

,属性値	,説明	,CSS 代替
,[CODE(HTML)[[[void]]]] (既定値)	,なし	,[SAMP(CSS)[border-style: none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[below]]]]	,下	,[SAMP(CSS)[border-style: none none [VAR[あり]] none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[hsides]]]]	,上下	,[SAMP(CSS)[border-style: [VAR[あり]] none]]
,[CODE(HTML)[[[vsides]]]]	,左右	,[SAMP(CSS)[border-style: none [VAR[あり]]]]
,[CODE(HTML)[[[lhs]]]]	,左	,[SAMP(CSS)[border-style: none none none [VAR[あり]]]]
,[CODE(HTML)[[[rhs]]]]	,右	,[SAMP(CSS)[border-style: none [VAR[あり]] none none]]
,[CODE(HTML)[[[box]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]
,[CODE(HTML)[[[border]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]

[3] [[DTD]] では特に既定値は指定されていませんが、
仕様書本文では [CODE(HTML)[void]] とされています。

[7] [CODE(HTMLa)[[[border]]]] 属性値の [CODE(HTML)[0]] は
[CODE(HTML)[frame=void]] を、それ以外は [CODE(HTML)[frame=border]]
をほのめかすと HTML 4 仕様書には書かれています。
これが >>3 の理由でしょう。

同時に [CODE(HTMLa)[[[rules]]]] 属性も補われますが、
こちらには仕様書に[Q[別途指定がなければ]]と注記があります。
ということは、 [CODE(HTMLa)[frame]] 属性は陽に指定してあっても
[CODE(HTMLa)[border]] 属性が優先するのかもしれません。

(なお、この規定は[Q[互換性のためにそうするべき (shoukd)]] というものです。)

[4] 列挙型ですから、 [[SGML宣言]]の指定によっては
[SAMP(HTML)[frame="above"]] を単に [SAMP(HTML)[above]]
とだけ書いたりもできるのですが、 
[[WWWブラウザ]]のほとんどはそのような書き方には対応していないでしょう。

唯一の例外は [CODE(HTML)[border]] で、これは
[CODE(HTML)[border]] とだけ書く ([CODE(HTMLa)[[[border]]]]
属性の [CODE(SGML)[[[vi]]]] と[[属性値指定]]が省略できるという非 SGML 的な)
従来からの方法との互換のための trickey な方法としてわざわざ入れられています。
[Q[真偽値属性値]] [CODE(HTML)[border]] の歴史については
[CODE(HTMLa)[[[border]]]] 属性の説明をごらんください。


[20]

- [[HTML 4]]
-- [[厳密DTD]]
<IW:HTML4:"sgml/dtd.html#TFrame">
-- [[移行用DTD]]
<IW:HTML4:"sgml/loosedtd.html#TFrame">

([[名無しさん]] [sage])


[[#comment]]


** 歴史

[17] HTML 4 表の開発の時には、将来的に他の表要素にも [CODE(HTMLa)[frame]]
属性を指定できるようにすることを考慮に入れていたそうです。
しかし、 HTML 4 の時点では処理が複雑になり過ぎる割に需要が少ないと判断したようです。
[SRC[HTML 4.01 A.3.7, B.5.1.3, B.5.2]]

[18] [CODE(HTMLa)[frame]] 属性の値は [CODE(HTMLa)[[[rules]]]] 属性や
[CODE(HTMLa)[[[align]]]] 属性や [CODE(HTMLa)[[[valign]]]]
属性と整合性のあるものとできた方が良かったのですが、[[素のSGML]]
で[[列挙型]]とするためにはかないませんでした。 [CODE(HTMLa)[frame]]
を [CODE(SGML)[[[CDATA]]]] にする案もありましたが、 W3C HTML [[WG]]
は名前の整合よりも SGML 的に[[妥当性検証]]可能である方が良いと判断したそうです
[SRC[HTML 4 B.5.2]]。

[19]
HTML 4 DTD の[[注釈]] (参考) には、
(HTML 表モデルの基となった) [[CALS]]
の表とは [CODE(HTMLa)[[[valign]]]]
属性との関係で属性値が異なっていると注記されています。
([[名無しさん]] [sage])

[[#comment]]


** メモ

[[#comment]]


* メモ@


1.9
log
@auto-committed
@
text
@a0 1

d23 1
a23 1
,[CODE(HTMLa)[[[application]]]]	,	,	,	,非標準
@


1.8
log
@auto-committed
@
text
@a1 1

d23 1
d29 1
d38 2
@


1.7
log
@auto-committed
@
text
@d1 225
a225 225



* frame 要素型 (HTML, XHTML 1)

[9] [[HTML]] の [DFN[[CODE(HTMLe)[frame]] 要素]]は、
[RUBY[[[枠]]] [フレーム] [frame]]の内容と見た目を定義します。

[10] 仕様書:
- [[HTML 4]]
-- [CITE[16.2.2 The [CODE(HTMLe)[FRAME]] element]] 
<IW:HTML4:"present/frames.html#edef-FRAME">
-- [CITE[16.4.2 Long descriptions of frames]]
<IW:HTML4:"present/frames.html#idx-accessibility-1">

[12]
:[[局所名]]:[CODE(HTMLe)[frame]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:禁止 (HTML 4), 必須 (XHTML 1)
:出現できる文脈:[CODE(HTMLe)[[[frameset]]]] の子供として任意個
:[[内容模型]]:空 ([[強制空要素]])
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態	,出典
,[CODE(HTMLa)[[[application]]]]	,	,	,	,非標準
,[CODE(HTMLa)[[[bordercolor]]]]	,[CODE(SGML)[%[[Color]]]]	,	,境界線色	,非標準
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,級	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[datafld]]]]	,	,	,データ欄	,非標準
,[CODE(HTMLa)[[[datasrc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,データ源	,非標準
,[CODE(HTMLa)[[[frameborder]]]]	,[CODE(SGML)[[CODE(HTML)[1]] | [CODE(HTML)[0]]]]	,[CODE(HTML)[1]]	,枠境界線	,[HTML 4] 枠
,[CODE(HTMLa)[[[framespacing]]]]	,	,	,枠間隔	,非標準
,[CODE(HTMLa)[[[id]]]]	,[CODE(SGML)[[[ID]]]]	,(なし)	,固有識別子	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,長い説明の参照	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginheight]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白高さ	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginwidth]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白幅	,[HTML 4] 枠
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,枠名	,[HTML 4] 枠
,[CODE(HTMLa)[[[noresize]]]]	,([[真偽値属性]])	,([[偽]])	,寸法可変性	,[HTML 4] 枠
,[CODE(HTMLa)[[[scrolling]]]]	,	,[CODE(HTML)[[[auto]]]]	,	,[HTML 4] 枠
,[CODE(HTMLa)[[[src]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,枠内容	,[HTML 4] 枠
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(XMLa)[[[xmlns]]]]	,[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定	,==	,W3C 勧告	,[[XHTML m12n]]


[[#comment]]


** フレーム内容

[14] フレームの内容を直接画像とすることは望ましくありません。
(非視覚 UA 向けに) 画像の説明を記述できなくなってしまうからです。 
[SRC[HTML 4 16.4.2]]

例えば、
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A poorly-designed frameset document</TITLE>
</HEAD>
<FRAMESET cols="20%, 80%">
   <FRAME src="table_of_contents.html">
   <FRAME src="ostrich.gif" longdesc="ostrich-desc.html">
</FRAMESET>
</HTML>
]PRE]

のような場合、確かに [CODE(HTMLa)[[[longdesc]]]]
属性を使うことはできますが、 [CODE(HTMLa)[longdesc]]
は本来フレームの初期内容ではなくフレーム自体を説明するべきものです。

リンクによって他の画像に替えられると、その画像の説明はなくなってしまいます。

[15] という HTML 4 仕様書にある >>14 の考え方は適当ではないと言う人もいます。
曰く、画像が非視覚 UA で表示できないのは代替文を埋め込めない画像形式や画像を表示できない
UA の限界で、ありとあらゆる状況で内容を得ることができるようにするのは無理なことです。

また、フレームを使わない場合でも [CODE(HTMLe)[a]]
を使って画像にリンクすることがありますが、
それも好ましくないと言うのでなければ一貫しません。
そのようなリンクを行うときには、必要で可能であればリンク元に画像の説明があるはずです。
フレーム内であってもそれは同じことでしょう。

また、あるフレームに表示される画像が有限なら、
[CODE(HTMLa)[longdesc]] 文書にすべての代替文を記述しておくのも一つの方法です。

[16]
HTML 4 仕様書は、
回避策として画像を埋め込んだだけのダミー文書を用意することを勧めていますけど、
無駄なだけですよね。

[[#comment]]


** 他との関係

[11] HTML には、特定実装の拡張で、同名別用法の
[CODE(HTMLe)[frame]] 要素型が存在します (>>8)。

[[#comment]]


** 例

[13] フレームの見た目を指定した例 [SRC[HTML 4 16.2.2.2]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET cols="33%,33%,33%">
  <FRAMESET rows="*,200">
      <FRAME src="contents_of_frame1.html" scrolling="no">
      <FRAME src="contents_of_frame2.gif" 
                marginwidth="10" marginheight="15"
                noresize>
  </FRAMESET>
  <FRAME src="contents_of_frame3.html" frameborder="0">
  <FRAME src="contents_of_frame4.html" frameborder="0">
</FRAMESET>
</HTML>
]PRE]

この例では、フレーム1は scroll できなくなります。
フレーム2は画像の周りに余白が付きますし、
大きさを変えることができなくなります。

フレーム3とフレーム4の間には境界線をつけません。
フレーム1とフレーム2とフレーム3の間の境界線は付きます。
(フレーム2とフレーム3の間に境界線が引かれることに注意。)

[[#comment]]


** メモ

[[#comment]]


* animate 要素の子供の frame 要素 (HTML)

[8] [[HTML]] の [CODE(HTMLe)[[[animate]]]] 要素の子要素として使われる
[DFN[[CODE(HTMLe)[frame]] 要素]]は、アニメーションのこまを指定します。

[[#comment]]


* table 要素 frame 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[table]]]] 要素の [DFN[[CODE(HTMLa)[frame]] 属性]]は、
表の枠のつけ方を指定します。

仕様書: 
- [[HTML 4]]
-- [CODE(HTMLe)[table]] 要素 [CODE(HTMLa)[frame]] 属性
<IW:HTML4:"struct/tables.html#adef-frame">
-- [CITE[A.3.7 table_changesChanges for tables]]
<IW:HTML4:"appendix/changes.html#table_changes">
-- [CITE[B.5.2 Recommended Layout Algorithms]]
<IW:HTML4:"appendix/notes.html#layout">

[[#comment]]


** スタイル・シート代替

[5] この属性は、 HTML 4 では'''非推奨'''とはされていません。
[[表]]の特殊性によるものとも思えませんし、 [[HTML 4.0]]
の時点で表を扱えない [[CSS1]] だけで [[CSS2]] 
がまだ勧告されていなかったのが原因かもしれません。

[6] [[CSS]] での代替方法は >>2 の表をご覧下さい。
[[XSL]] でも同じような指定ができます。

[[#comment]]


** 属性値

[2] この属性は[[列挙型]]属性です。

,属性値	,説明	,CSS 代替
,[CODE(HTML)[[[void]]]] (既定値)	,なし	,[SAMP(CSS)[border-style: none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[below]]]]	,下	,[SAMP(CSS)[border-style: none none [VAR[あり]] none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[hsides]]]]	,上下	,[SAMP(CSS)[border-style: [VAR[あり]] none]]
,[CODE(HTML)[[[vsides]]]]	,左右	,[SAMP(CSS)[border-style: none [VAR[あり]]]]
,[CODE(HTML)[[[lhs]]]]	,左	,[SAMP(CSS)[border-style: none none none [VAR[あり]]]]
,[CODE(HTML)[[[rhs]]]]	,右	,[SAMP(CSS)[border-style: none [VAR[あり]] none none]]
,[CODE(HTML)[[[box]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]
,[CODE(HTML)[[[border]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]

[3] [[DTD]] では特に既定値は指定されていませんが、
仕様書本文では [CODE(HTML)[void]] とされています。

[7] [CODE(HTMLa)[[[border]]]] 属性値の [CODE(HTML)[0]] は
[CODE(HTML)[frame=void]] を、それ以外は [CODE(HTML)[frame=border]]
をほのめかすと HTML 4 仕様書には書かれています。
これが >>3 の理由でしょう。

同時に [CODE(HTMLa)[[[rules]]]] 属性も補われますが、
こちらには仕様書に[Q[別途指定がなければ]]と注記があります。
ということは、 [CODE(HTMLa)[frame]] 属性は陽に指定してあっても
[CODE(HTMLa)[border]] 属性が優先するのかもしれません。

(なお、この規定は[Q[互換性のためにそうするべき (shoukd)]] というものです。)

[4] 列挙型ですから、 [[SGML宣言]]の指定によっては
[SAMP(HTML)[frame="above"]] を単に [SAMP(HTML)[above]]
とだけ書いたりもできるのですが、 
[[WWWブラウザ]]のほとんどはそのような書き方には対応していないでしょう。

唯一の例外は [CODE(HTML)[border]] で、これは
[CODE(HTML)[border]] とだけ書く ([CODE(HTMLa)[[[border]]]]
属性の [CODE(SGML)[[[vi]]]] と[[属性値指定]]が省略できるという非 SGML 的な)
従来からの方法との互換のための trickey な方法としてわざわざ入れられています。
[Q[真偽値属性値]] [CODE(HTML)[border]] の歴史については
[CODE(HTMLa)[[[border]]]] 属性の説明をごらんください。


[20]
d232 37
a268 37

([[名無しさん]] [sage])


[[#comment]]


** 歴史

[17] HTML 4 表の開発の時には、将来的に他の表要素にも [CODE(HTMLa)[frame]]
属性を指定できるようにすることを考慮に入れていたそうです。
しかし、 HTML 4 の時点では処理が複雑になり過ぎる割に需要が少ないと判断したようです。
[SRC[HTML 4.01 A.3.7, B.5.1.3, B.5.2]]

[18] [CODE(HTMLa)[frame]] 属性の値は [CODE(HTMLa)[[[rules]]]] 属性や
[CODE(HTMLa)[[[align]]]] 属性や [CODE(HTMLa)[[[valign]]]]
属性と整合性のあるものとできた方が良かったのですが、[[素のSGML]]
で[[列挙型]]とするためにはかないませんでした。 [CODE(HTMLa)[frame]]
を [CODE(SGML)[[[CDATA]]]] にする案もありましたが、 W3C HTML [[WG]]
は名前の整合よりも SGML 的に[[妥当性検証]]可能である方が良いと判断したそうです
[SRC[HTML 4 B.5.2]]。

[19]
HTML 4 DTD の[[注釈]] (参考) には、
(HTML 表モデルの基となった) [[CALS]]
の表とは [CODE(HTMLa)[[[valign]]]]
属性との関係で属性値が異なっていると注記されています。
([[名無しさん]] [sage])

[[#comment]]


** メモ

[[#comment]]


@


1.6
log
@auto-committed
@
text
@d1 225
a225 1
* frame 要素型 (HTML, XHTML 1)
a226 4
[9] [[HTML]] の [DFN[[CODE(HTMLe)[frame]] 要素]]は、
[RUBY[[[枠]]] [フレーム] [frame]]の内容と見た目を定義します。

[10] 仕様書:
d228 41
a268 238
-- [CITE[16.2.2 The [CODE(HTMLe)[FRAME]] element]] 
<IW:HTML4:"present/frames.html#edef-FRAME">
-- [CITE[16.4.2 Long descriptions of frames]]
<IW:HTML4:"present/frames.html#idx-accessibility-1">

[12]
:[[局所名]]:[CODE(HTMLe)[frame]]
:[[名前空間名]]:[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]]
:[[開始タグ]]:必須
:[[終了タグ]]:禁止 (HTML 4), 必須 (XHTML 1)
:出現できる文脈:[CODE(HTMLe)[[[frameset]]]] の子供として任意個
:[[内容模型]]:空 ([[強制空要素]])
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,状態,出典
,[CODE(HTMLa)[[[application]]]],,,,非標準
,[CODE(HTMLa)[[[bordercolor]]]],[CODE(SGML)[%[[Color]]]],,境界線色,非標準
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,級	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[datafld]]]],,,データ欄,非標準
,[CODE(HTMLa)[[[datasrc]]]],[CODE(SGML)[%[[URI]]]],(なし),データ源,非標準
,[CODE(HTMLa)[[[frameborder]]]]	,[CODE(SGML)[[CODE(HTML)[1]] | [CODE(HTML)[0]]]]	,[CODE(HTML)[1]]	,枠境界線	,[HTML 4] 枠
,[CODE(HTMLa)[[[framespacing]]]],,,枠間隔,非標準
,[CODE(HTMLa)[[[id]]]]	,[CODE(SGML)[[[ID]]]]	,(なし)	,固有識別子	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,長い説明の参照	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginheight]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白高さ	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginwidth]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白幅	,[HTML 4] 枠
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,枠名	,[HTML 4] 枠
,[CODE(HTMLa)[[[noresize]]]]	,([[真偽値属性]])	,([[偽]])	,寸法可変性	,[HTML 4] 枠
,[CODE(HTMLa)[[[scrolling]]]]	,	,[CODE(HTML)[[[auto]]]]	,	,[HTML 4] 枠
,[CODE(HTMLa)[[[src]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,枠内容	,[HTML 4] 枠
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(XMLa)[[[xmlns]]]],[CODE(URI)[[[http://www.w3.org/1999/xhtml]]]] 固定,==,W3C 勧告,[[XHTML m12n]]

[[#comment]]


** フレーム内容

[14] フレームの内容を直接画像とすることは望ましくありません。
(非視覚 UA 向けに) 画像の説明を記述できなくなってしまうからです。 
[SRC[HTML 4 16.4.2]]

例えば、
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A poorly-designed frameset document</TITLE>
</HEAD>
<FRAMESET cols="20%, 80%">
   <FRAME src="table_of_contents.html">
   <FRAME src="ostrich.gif" longdesc="ostrich-desc.html">
</FRAMESET>
</HTML>
]PRE]

のような場合、確かに [CODE(HTMLa)[[[longdesc]]]]
属性を使うことはできますが、 [CODE(HTMLa)[longdesc]]
は本来フレームの初期内容ではなくフレーム自体を説明するべきものです。

リンクによって他の画像に替えられると、その画像の説明はなくなってしまいます。

[15] という HTML 4 仕様書にある >>14 の考え方は適当ではないと言う人もいます。
曰く、画像が非視覚 UA で表示できないのは代替文を埋め込めない画像形式や画像を表示できない
UA の限界で、ありとあらゆる状況で内容を得ることができるようにするのは無理なことです。

また、フレームを使わない場合でも [CODE(HTMLe)[a]]
を使って画像にリンクすることがありますが、
それも好ましくないと言うのでなければ一貫しません。
そのようなリンクを行うときには、必要で可能であればリンク元に画像の説明があるはずです。
フレーム内であってもそれは同じことでしょう。

また、あるフレームに表示される画像が有限なら、
[CODE(HTMLa)[longdesc]] 文書にすべての代替文を記述しておくのも一つの方法です。


[16]
HTML 4 仕様書は、
回避策として画像を埋め込んだだけのダミー文書を用意することを勧めていますけど、
無駄なだけですよね。


[[#comment]]


** 他との関係

[11] HTML には、特定実装の拡張で、同名別用法の
[CODE(HTMLe)[frame]] 要素型が存在します (>>8)。

[[#comment]]


** 例

[13] フレームの見た目を指定した例 [SRC[HTML 4 16.2.2.2]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET cols="33%,33%,33%">
  <FRAMESET rows="*,200">
      <FRAME src="contents_of_frame1.html" scrolling="no">
      <FRAME src="contents_of_frame2.gif" 
                marginwidth="10" marginheight="15"
                noresize>
  </FRAMESET>
  <FRAME src="contents_of_frame3.html" frameborder="0">
  <FRAME src="contents_of_frame4.html" frameborder="0">
</FRAMESET>
</HTML>
]PRE]

この例では、フレーム1は scroll できなくなります。
フレーム2は画像の周りに余白が付きますし、
大きさを変えることができなくなります。

フレーム3とフレーム4の間には境界線をつけません。
フレーム1とフレーム2とフレーム3の間の境界線は付きます。
(フレーム2とフレーム3の間に境界線が引かれることに注意。)

[[#comment]]


** メモ

[[#comment]]


* animate 要素の子供の frame 要素 (HTML)

[8] [[HTML]] の [CODE(HTMLe)[[[animate]]]] 要素の子要素として使われる
[DFN[[CODE(HTMLe)[frame]] 要素]]は、アニメーションのこまを指定します。

[[#comment]]


* table 要素 frame 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[table]]]] 要素の [DFN[[CODE(HTMLa)[frame]] 属性]]は、
表の枠のつけ方を指定します。

仕様書: 
- [[HTML 4]]
-- [CODE(HTMLe)[table]] 要素 [CODE(HTMLa)[frame]] 属性
<IW:HTML4:"struct/tables.html#adef-frame">
-- [CITE[A.3.7 table_changesChanges for tables]]
<IW:HTML4:"appendix/changes.html#table_changes">
--[CITE[B.5.2 Recommended Layout Algorithms]]
<IW:HTML4:"appendix/notes.html#layout">

[[#comment]]


** スタイル・シート代替

[5] この属性は、 HTML 4 では'''非推奨'''とはされていません。
[[表]]の特殊性によるものとも思えませんし、 [[HTML 4.0]]
の時点で表を扱えない [[CSS1]] だけで [[CSS2]] 
がまだ勧告されていなかったのが原因かもしれません。

[6] [[CSS]] での代替方法は >>2 の表をご覧下さい。
[[XSL]] でも同じような指定ができます。

[[#comment]]


** 属性値

[2] この属性は[[列挙型]]属性です。

,属性値	,説明	,CSS 代替
,[CODE(HTML)[[[void]]]] (既定値)	,なし	,[SAMP(CSS)[border-style: none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[below]]]]	,下	,[SAMP(CSS)[border-style: none none [VAR[あり]] none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[hsides]]]]	,上下	,[SAMP(CSS)[border-style: [VAR[あり]] none]]
,[CODE(HTML)[[[vsides]]]]	,左右	,[SAMP(CSS)[border-style: none [VAR[あり]]]]
,[CODE(HTML)[[[lhs]]]]	,左	,[SAMP(CSS)[border-style: none none none [VAR[あり]]]]
,[CODE(HTML)[[[rhs]]]]	,右	,[SAMP(CSS)[border-style: none [VAR[あり]] none none]]
,[CODE(HTML)[[[box]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]
,[CODE(HTML)[[[border]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]

[3] [[DTD]] では特に既定値は指定されていませんが、
仕様書本文では [CODE(HTML)[void]] とされています。

[7] [CODE(HTMLa)[[[border]]]] 属性値の [CODE(HTML)[0]] は
[CODE(HTML)[frame=void]] を、それ以外は [CODE(HTML)[frame=border]]
をほのめかすと HTML 4 仕様書には書かれています。
これが >>3 の理由でしょう。

同時に [CODE(HTMLa)[[[rules]]]] 属性も補われますが、
こちらには仕様書に[Q[別途指定がなければ]]と注記があります。
ということは、 [CODE(HTMLa)[frame]] 属性は陽に指定してあっても
[CODE(HTMLa)[border]] 属性が優先するのかもしれません。

(なお、この規定は[Q[互換性のためにそうするべき (shoukd)]] というものです。)

[4] 列挙型ですから、 [[SGML宣言]]の指定によっては
[SAMP(HTML)[frame="above"]] を単に [SAMP(HTML)[above]]
とだけ書いたりもできるのですが、 
[[WWWブラウザ]]のほとんどはそのような書き方には対応していないでしょう。

唯一の例外は [CODE(HTML)[border]] で、これは
[CODE(HTML)[border]] とだけ書く ([CODE(HTMLa)[[[border]]]]
属性の [CODE(SGML)[[[vi]]]] と[[属性値指定]]が省略できるという非 SGML 的な)
従来からの方法との互換のための trickey な方法としてわざわざ入れられています。
[Q[真偽値属性値]] [CODE(HTML)[border]] の歴史については
[CODE(HTMLa)[[[border]]]] 属性の説明をごらんください。

[[#comment]]

** 歴史

[17] HTML 4 表の開発の時には、将来的に他の表要素にも [CODE(HTMLa)[frame]]
属性を指定できるようにすることを考慮に入れていたそうです。
しかし、 HTML 4 の時点では処理が複雑になり過ぎる割に需要が少ないと判断したようです。
[SRC[HTML 4.01 A.3.7, B.5.1.3, B.5.2]]

[18] [CODE(HTMLa)[frame]] 属性の値は [CODE(HTMLa)[[[rules]]]] 属性や
[CODE(HTMLa)[[[align]]]] 属性や [CODE(HTMLa)[[[valign]]]]
属性と整合性のあるものとできた方が良かったのですが、[[素のSGML]]
で[[列挙型]]とするためにはかないませんでした。 [CODE(HTMLa)[frame]]
を [CODE(SGML)[[[CDATA]]]] にする案もありましたが、 W3C HTML [[WG]]
は名前の整合よりも SGML 的に[[妥当性検証]]可能である方が良いと判断したそうです
[SRC[HTML 4 B.5.2]]。

[[#comment]]

** メモ

[[#comment]]


@


1.5
log
@auto-committed
@
text
@a0 1

d14 2
d17 1
a17 2
:[[終了タグ]] (HTML 4):禁止
:終了タグ (XHTML 1):必須
d21 3
a23 1
,属性名	,属性値	,既定値	,説明	,出典
d25 2
d28 1
d39 1
a39 1

@


1.4
log
@auto-committed
@
text
@a1 1

d155 2
d222 11
a232 1
属性を指定できるようにすることを考慮に入れていたそうです [SRC[HTML 4.01 A.3.7]]。
@


1.3
log
@auto-committed
@
text
@d1 229
a229 218



* frame 要素型 (HTML, XHTML 1)

[9] [[HTML]] の [DFN[[CODE(HTMLe)[frame]] 要素]]は、
[RUBY[[[枠]]] [フレーム] [frame]]]]の内容と見た目を定義します。

[10] 仕様書:
- [[HTML 4]]
-- 16.2.2 The [CODE(HTMLe)[FRAME]] element <IW:HTML4:"present/frames.html#edef-FRAME">
-- 16.4.2 Long descriptions of frames
<IW:HTML4:"present/frames.html#idx-accessibility-1">

[12]
:[[開始タグ]]:必須
:[[終了タグ]] (HTML 4):禁止
:終了タグ (XHTML 1):必須
:出現できる文脈:[CODE(HTMLe)[[[frameset]]]] の子供として任意個
:[[内容模型]]:空 ([[強制空要素]])
:[[属性]]:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[class]]]]	,	,(なし)	,級	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[frameborder]]]]	,[CODE(SGML)[[CODE(HTML)[1]] | [CODE(HTML)[0]]]]	,[CODE(HTML)[1]]	,枠境界線	,[HTML 4] 枠
,[CODE(HTMLa)[[[id]]]]	,[CODE(SGML)[[[ID]]]]	,(なし)	,固有識別子	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[longdesc]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,長い説明の参照	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginheight]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白高さ	,[HTML 4] 枠
,[CODE(HTMLa)[[[marginwidth]]]]	,[CODE(SGML)[%[[Pixels]]]]	,	,余白幅	,[HTML 4] 枠
,[CODE(HTMLa)[[[name]]]]	,	,(なし)	,枠名	,[HTML 4] 枠
,[CODE(HTMLa)[[[noresize]]]]	,([[真偽値属性]])	,([[偽]])	,寸法可変性	,[HTML 4] 枠
,[CODE(HTMLa)[[[scrolling]]]]	,	,[CODE(HTML)[[[auto]]]]	,	,[HTML 4] 枠
,[CODE(HTMLa)[[[src]]]]	,[CODE(SGML)[%[[URI]]]]	,(なし)	,枠内容	,[HTML 4] 枠
,[CODE(HTMLa)[[[style]]]]	,	,(なし)	,スタイル指定	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[title]]]]	,[CODE(SGML)[%[[Text]]]]	,(なし)	,注釈的題	,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]


[[#comment]]


** フレーム内容

[14] フレームの内容を直接画像とすることは望ましくありません。
(非視覚 UA 向けに) 画像の説明を記述できなくなってしまうからです。 
[SRC[HTML 4 16.4.2]]

例えば、
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A poorly-designed frameset document</TITLE>
</HEAD>
<FRAMESET cols="20%, 80%">
   <FRAME src="table_of_contents.html">
   <FRAME src="ostrich.gif" longdesc="ostrich-desc.html">
</FRAMESET>
</HTML>
]PRE]

のような場合、確かに [CODE(HTMLa)[[[longdesc]]]]
属性を使うことはできますが、 [CODE(HTMLa)[longdesc]]
は本来フレームの初期内容ではなくフレーム自体を説明するべきものです。

リンクによって他の画像に替えられると、その画像の説明はなくなってしまいます。

[15] という HTML 4 仕様書にある >>14 の考え方は適当ではないと言う人もいます。
曰く、画像が非視覚 UA で表示できないのは代替文を埋め込めない画像形式や画像を表示できない
UA の限界で、ありとあらゆる状況で内容を得ることができるようにするのは無理なことです。

また、フレームを使わない場合でも [CODE(HTMLe)[a]]
を使って画像にリンクすることがありますが、
それも好ましくないと言うのでなければ一貫しません。
そのようなリンクを行うときには、必要で可能であればリンク元に画像の説明があるはずです。
フレーム内であってもそれは同じことでしょう。

また、あるフレームに表示される画像が有限なら、
[CODE(HTMLa)[longdesc]] 文書にすべての代替文を記述しておくのも一つの方法です。


[16]
HTML 4 仕様書は、回避策として画像を埋め込んだだけのダミー文書を用意することを勧めていますけど、無駄なだけですよね。
([[名無しさん]])


[[#comment]]


** 他との関係

[11] HTML には、特定実装の拡張で、同名別用法の
[CODE(HTMLe)[frame]] 要素型が存在します (>>8)。

[[#comment]]


** 例

[13] フレームの見た目を指定した例 [SRC[HTML 4 16.2.2.2]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET cols="33%,33%,33%">
  <FRAMESET rows="*,200">
      <FRAME src="contents_of_frame1.html" scrolling="no">
      <FRAME src="contents_of_frame2.gif" 
                marginwidth="10" marginheight="15"
                noresize>
  </FRAMESET>
  <FRAME src="contents_of_frame3.html" frameborder="0">
  <FRAME src="contents_of_frame4.html" frameborder="0">
</FRAMESET>
</HTML>
]PRE]

この例では、フレーム1は scroll できなくなります。
フレーム2は画像の周りに余白が付きますし、
大きさを変えることができなくなります。

フレーム3とフレーム4の間には境界線をつけません。
フレーム1とフレーム2とフレーム3の間の境界線は付きます。
(フレーム2とフレーム3の間に境界線が引かれることに注意。)

[[#comment]]


** メモ

[[#comment]]


* animate 要素の子供の frame 要素 (HTML)

[8] [[HTML]] の [CODE(HTMLe)[[[animate]]]] 要素の子要素として使われる
[DFN[[CODE(HTMLe)[frame]] 要素]]は、アニメーションのこまを指定します。

[[#comment]]


* table 要素 frame 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[table]]]] 要素の [DFN[[CODE(HTMLa)[frame]] 属性]]は、
表の枠のつけ方を指定します。

仕様書: [[HTML 4]]
<IW:HTML4:"struct/tables.html#adef-frame">

[[#comment]]


** スタイル・シート代替

[5] この属性は、 HTML 4 では'''非推奨'''とはされていません。
[[表]]の特殊性によるものとも思えませんし、 [[HTML 4.0]]
の時点で表を扱えない [[CSS1]] だけで [[CSS2]] 
がまだ勧告されていなかったのが原因かもしれません。

[6] [[CSS]] での代替方法は >>2 の表をご覧下さい。
[[XSL]] でも同じような指定ができます。

[[#comment]]


** 属性値

[2] この属性は[[列挙型]]属性です。

,属性値	,説明	,CSS 代替
,[CODE(HTML)[[[void]]]] (既定値)	,なし	,[SAMP(CSS)[border-style: none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[below]]]]	,下	,[SAMP(CSS)[border-style: none none [VAR[あり]] none]]
,[CODE(HTML)[[[above]]]]	,上	,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[hsides]]]]	,上下	,[SAMP(CSS)[border-style: [VAR[あり]] none]]
,[CODE(HTML)[[[vsides]]]]	,左右	,[SAMP(CSS)[border-style: none [VAR[あり]]]]
,[CODE(HTML)[[[lhs]]]]	,左	,[SAMP(CSS)[border-style: none none none [VAR[あり]]]]
,[CODE(HTML)[[[rhs]]]]	,右	,[SAMP(CSS)[border-style: none [VAR[あり]] none none]]
,[CODE(HTML)[[[box]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]
,[CODE(HTML)[[[border]]]]	,すべて	,[SAMP(CSS)[border-style: [VAR[あり]]]]

[3] [[DTD]] では特に既定値は指定されていませんが、
仕様書本文では [CODE(HTML)[void]] とされています。

[7] [CODE(HTMLa)[[[border]]]] 属性値の [CODE(HTML)[0]] は
[CODE(HTML)[frame=void]] を、それ以外は [CODE(HTML)[frame=border]]
をほのめかすと HTML 4 仕様書には書かれています。
これが >>3 の理由でしょう。

同時に [CODE(HTMLa)[[[rules]]]] 属性も補われますが、
こちらには仕様書に[Q[別途指定がなければ]]と注記があります。
ということは、 [CODE(HTMLa)[frame]] 属性は陽に指定してあっても
[CODE(HTMLa)[border]] 属性が優先するのかもしれません。

(なお、この規定は[Q[互換性のためにそうするべき (shoukd)]] というものです。)

[4] 列挙型ですから、 [[SGML宣言]]の指定によっては
[SAMP(HTML)[frame="above"]] を単に [SAMP(HTML)[above]]
とだけ書いたりもできるのですが、 
[[WWWブラウザ]]のほとんどはそのような書き方には対応していないでしょう。

唯一の例外は [CODE(HTML)[border]] で、これは
[CODE(HTML)[border]] とだけ書く ([CODE(HTMLa)[[[border]]]]
属性の [CODE(SGML)[[[vi]]]] と[[属性値指定]]が省略できるという非 SGML 的な)
従来からの方法との互換のための trickey な方法としてわざわざ入れられています。
[Q[真偽値属性値]] [CODE(HTML)[border]] の歴史については
[CODE(HTMLa)[[[border]]]] 属性の説明をごらんください。

[[#comment]]


** メモ

[[#comment]]


@


1.2
log
@auto-committed
@
text
@d1 219
a219 155
* frame 要素型 (HTML, XHTML 1)

[9] [[HTML]] の [DFN[[CODE(HTMLe)[frame]] 要素]]は、
[RUBY[[[枠]]][フレーム][frame]]]の内容と見た目を定義します。

[10] 仕様書:
- [[HTML 4]]
-- 16.2.2 The [CODE(HTMLe)[FRAME]] element <IW:HTML4:"present/frames.html#edef-FRAME">

[12]
:[[開始タグ]]:必須
:[[終了タグ]] (HTML 4): 禁止
:終了タグ (XHTML 1):必須
:出現できる文脈:[CODE(HTMLe)[[[frameset]]]] の子供として任意個
:[[内容模型]]:空 ([[強制空要素]])
:[[属性]]:
,属性名,属性値,既定値,説明,出典
,[CODE(HTMLa)[[[class]]]],,(なし),級,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[frameborder]]]],[CODE(SGML)[[CODE(HTML)[1]] | [CODE(HTML)[0]]]],[CODE(HTML)[1]],枠境界線,[HTML 4] 枠
,[CODE(HTMLa)[[[id]]]],[CODE(SGML)[[[ID]]]],(なし),固有識別子,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[longdesc]]]],[CODE(SGML)[%[[URI]]]],(なし),長い説明の参照,[HTML 4] 枠
,[CODE(HTMLa)[[[marginheight]]]],[CODE(SGML)[%[[Pixels]]]],,余白高さ,[HTML 4] 枠
,[CODE(HTMLa)[[[marginwidth]]]],[CODE(SGML)[%[[Pixels]]]],,余白幅,[HTML 4] 枠
,[CODE(HTMLa)[[[name]]]],,(なし),枠名,[HTML 4] 枠
,[CODE(HTMLa)[[[noresize]]]],([[真偽値属性]]),([[偽]]),寸法可変性,[HTML 4] 枠
,[CODE(HTMLa)[[[scrolling]]]],,[CODE(HTML)[[[auto]]]],,[HTML 4] 枠
,[CODE(HTMLa)[[[src]]]],[CODE(SGML)[%[[[URI]]]],(なし),枠内容,[HTML 4] 枠
,[CODE(HTMLa)[[[style]]]],,(なし),スタイル指定,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]
,[CODE(HTMLa)[[[title]]]],[CODE(SGML)[%[[Text]]]],(なし),注釈的題,[HTML 4] [CODE(SGML)[%[[coreattrs]]]]

[[#comment]]

** 他との関係

[11] HTML には、特定実装の拡張で、同名別用法の
[CODE(HTMLe)[frame]] 要素型が存在します (>>8)。

[[#comment]]

** 例

[13] フレームの見た目を指定した例 [SRC[HTML 4 16.2.2.2]]
[PRE(HTML)[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN"
   "http://www.w3.org/TR/html4/frameset.dtd">
<HTML>
<HEAD>
<TITLE>A frameset document</TITLE>
</HEAD>
<FRAMESET cols="33%,33%,33%">
  <FRAMESET rows="*,200">
      <FRAME src="contents_of_frame1.html" scrolling="no">
      <FRAME src="contents_of_frame2.gif" 
                marginwidth="10" marginheight="15"
                noresize>
  </FRAMESET>
  <FRAME src="contents_of_frame3.html" frameborder="0">
  <FRAME src="contents_of_frame4.html" frameborder="0">
</FRAMESET>
</HTML>
]PRE]

この例では、フレーム1は scroll できなくなります。
フレーム2は画像の周りに余白が付きますし、
大きさを変えることができなくなります。

フレーム3とフレーム4の間には境界線をつけません。
フレーム1とフレーム2とフレーム3の間の境界線は付きます。
(フレーム2とフレーム3の間に境界線が引かれることに注意。)

[[#comment]]

** メモ

[[#comment]]

* animate 要素の子供の frame 要素 (HTML)

[8] [[HTML]] の [CODE(HTMLe)[[[animate]]]] 要素の子要素として使われる
[DFN[[CODE(HTMLe)[frame]] 要素]]は、アニメーションのこまを指定します。

[[#comment]]

* table 要素 frame 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[table]]]] 要素の [DFN[[CODE(HTMLa)[frame]] 属性]]は、
表の枠のつけ方を指定します。

仕様書: [[HTML 4]]
<IW:HTML4:"struct/tables.html#adef-frame">

[[#comment]]

** スタイル・シート代替

[5] この属性は、 HTML 4 では'''非推奨'''とはされていません。
[[表]]の特殊性によるものとも思えませんし、 [[HTML 4.0]]
の時点で表を扱えない [[CSS1]] だけで [[CSS2]] 
がまだ勧告されていなかったのが原因かもしれません。

[6] [[CSS]] での代替方法は >>2 の表をご覧下さい。
[[XSL]] でも同じような指定ができます。

[[#comment]]

** 属性値

[2] この属性は[[列挙型]]属性です。

,属性値,説明,CSS 代替
,[CODE(HTML)[[[void]]]] (既定値),なし,[SAMP(CSS)[border-style: none]]
,[CODE(HTML)[[[above]]]],上,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[below]]]],下,[SAMP(CSS)[border-style: none none [VAR[あり]] none]]
,[CODE(HTML)[[[above]]]],上,[SAMP(CSS)[border-style: [VAR[あり]] none none none]]
,[CODE(HTML)[[[hsides]]]],上下,[SAMP(CSS)[border-style: [VAR[あり]] none]]
,[CODE(HTML)[[[vsides]]]],左右,[SAMP(CSS)[border-style: none [VAR[あり]]]]
,[CODE(HTML)[[[lhs]]]],左,[SAMP(CSS)[border-style: none none none [VAR[あり]]]]
,[CODE(HTML)[[[rhs]]]],右,[SAMP(CSS)[border-style: none [VAR[あり]] none none]]
,[CODE(HTML)[[[box]]]],すべて,[SAMP(CSS)[border-style: [VAR[あり]]]]
,[CODE(HTML)[[[border]]]],すべて,[SAMP(CSS)[border-style: [VAR[あり]]]]

[3] [[DTD]] では特に既定値は指定されていませんが、
仕様書本文では [CODE(HTML)[void]] とされています。

[7] [CODE(HTMLa)[[[border]]]] 属性値の [CODE(HTML)[0]] は
[CODE(HTML)[frame=void]] を、それ以外は [CODE(HTML)[frame=border]]
をほのめかすと HTML 4 仕様書には書かれています。
これが >>3 の理由でしょう。

同時に [CODE(HTMLa)[[[rules]]]] 属性も補われますが、
こちらには仕様書に[Q[別途指定がなければ]]と注記があります。
ということは、 [CODE(HTMLa)[frame]] 属性は陽に指定してあっても
[CODE(HTMLa)[border]] 属性が優先するのかもしれません。

(なお、この規定は[Q[互換性のためにそうするべき (shoukd)]] というものです。)

[4] 列挙型ですから、 [[SGML宣言]]の指定によっては
[SAMP(HTML)[frame="above"]] を単に [SAMP(HTML)[above]]
とだけ書いたりもできるのですが、 
[[WWWブラウザ]]のほとんどはそのような書き方には対応していないでしょう。

唯一の例外は [CODE(HTML)[border]] で、これは
[CODE(HTML)[border]] とだけ書く ([CODE(HTMLa)[[[border]]]]
属性の [CODE(SGML)[[[vi]]]] と[[属性値指定]]が省略できるという非 SGML 的な)
従来からの方法との互換のための trickey な方法としてわざわざ入れられています。
[Q[真偽値属性値]] [CODE(HTML)[border]] の歴史については
[CODE(HTMLa)[[[border]]]] 属性の説明をごらんください。

[[#comment]]

** メモ

[[#comment]]

* メモ
@


1.1
log
@auto-committed
@
text
@d1 83
@

