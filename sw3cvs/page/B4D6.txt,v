head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.02.18.02.04.32;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] 小説では[RUBY[間] [ま]]が大事であり、だから云々とかいう話は [CODE(HTMLe)[[[br]]]], [CODE(HTMLe)[[[hr]]]] が[[物理要素]]なのかどうかという話や[[パラグラフ非段落説]]を織り交ぜながら延々と循環しています。

[[SGML]] や [[XML]] は、というか [[HyTime]] や [[XML情報集合]]が、といいますか、文書を幾つかの塊に分割すると、それぞれの塊が更に幾つかの塊に分解できて、いずれ[[原子]]
(= [[文字]]など) にたどり着くと言う模型を採用しています。
文書は幾つかの章に分割されて、章は幾つかの節に分割されて、節は幾つかの段落に分割されて、段落はいくつかの文に分割されて、文は幾つかの語句に分割されて、語句は幾つかの文字に分割できる、ということです。
適当に[DFN[包含構造模型]]とでも呼びましょうか。

一方で、境界を印すことで構造を暗示する方法も考えられます。
たとえば改行をもって段落区切りを表すとし、
空行を更に挟むことで節や章のようなより大きな構造において距離があることを表すとしてみたらどうでしょう。
物理的マークだと思うなら、空行ではなく、
[SAMP[<sep distance="[VAR[n]]"/>]]
とでも表しても同じことです。
このタグは空行の数を表すのではなく、前後の段落の構造的距離を表します。
文書を視覚的に表示する時に、段落を区切る方法が間を空けることだけだとしたら、大きな構造の合間ほど広くする
(章間よりも節間の方を広く取る) のが自然でしょう。
その自然な間隔^H^H感覚をそのままマークできます。
[DFN[(距離による) 構造暗示法]]とでも呼んでおきましょうか。

計算機で色々処理をする上では、包含構造模型的に構造が手に入ったほうが色々楽です。 [WEAK[(たとえば、この段落は赤色に、とか思った時のことを考えるべし。)]]
一方で、人は一般に常[RUBY[何時] [なんどき]]でも文書構造を意識しながら文書を書くわけではなくて、多分に感覚的なものが支配していると思われます。 [WEAK[(この辺でちょこっと開けた方がいいかな、とか。)]] だから文書を書くときには構造暗示法でマークできると楽かもしれません。

[[WYSIWYG]] な編集ソフトウェアなどでは、構造暗示的に表示・編集しつつ、できあがるマークは包含構造になっているといいかもしれません。
また、 SGML では[[マーク最小化]]機構を使うと、
構造暗示的マークから包含構造木を得ることが出来ます。

マークする人が著者と一致しない場合、たとえば他人の書いた文章をマークする場合で、技巧的な空白の使い方 (= 構造が自明でない) で、しかも著者と連絡が取れない時 (著者は死亡しているとか。) を考えてみましょう。
できるだけ著者の意向は反映したいとして、そんな文章はもはや構造と表現を切り離したマークはできない、 [[SVG]]
でも使ってろと諦めるのはまだはやい。
包含構造でマークしようとすると、マーク者の解釈を多分に反映させてしまうことになりますが、構造暗示的マークなら、表現された状態により近いので、比較的マーク者の解釈を排除しつつマークできるでしょう。

ところで、鋭い方でなくとももうおわかりかと思いますが、
構造暗示的マークは包含構造マークと物理構造マークの中間くらいに位置すると考えられます。構造暗示的マークはともすれば物理マークに陥りがちなので十分気を付けないといけません。

[2] >>1 のような試論がある程度説得力を持つとすれば、
散々問題になる [CODE(HTMLe)[br]] 要素の「物理」性は、
他の、 [CODE(HTMLe)[[[p]]]] 要素のような包含構造マークとは性質が異なるのだと説明できるでしょう。
@
