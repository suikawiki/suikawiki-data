head	1.8;
access;
symbols
	suikawiki3-final:1.8
	before-db-leaffile:1.3
	after-upgrade-to-suikawiki-3:1.3
	before-fork-suikawiki3:1.3
	after-restore-20040122:1.3;
locks; strict;
comment	@# @;


1.8
date	2008.08.31.02.27.27;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2008.08.27.02.40.59;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.23.02.46.43;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.13.03.12.10;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.27.02.04.36;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.13.02.03.04;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.16.09.18.52;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.28.10.14.19;	author make;	state Exp;
branches;
next	;


desc
@@


1.8
log
@auto-committed
@
text
@
[1] 【[[SGML]]】 [Q[文脈上の[[制約]]。[[区切子]]に割当ててある文字列の直後に [CODE(SGML)[[[mdc]]]] が続く場合、[[文脈依存区切子]]として[[認知]]する。]] ([[JIS X 4151]]‐1992 8.6.2(1)(d) 参照)

[2] >>1 ではなんのことだかさっぱりですが、要は[[マーク区間終了]]のことを言っているのです。

[3] [CODE(SGML)[[[msc]]]] として認知され得る文字列が見つかった時に、制約 [CODE(SGML)[MSE]] となります。ここで文字列 [CODE(SGML)[mdc]] が続いていることがわかれば、文脈依存区切子が認知されます。すなわち、 [CODE(SGML)[msc]] + [CODE(SGML)[mdc]] がマーク区間終了とみなされ、継続中だった[[マーク区間]]がそこに終了します。

[4] >>3 を[[規格参照具象構文]]を仮定して言い直すと、マーク区間を解釈中に [CODE(SGML)[ ] ] ]] を発見すると、その直後に [CODE(SGML)[>]] がないか探します。あった場合は [CODE(SGML)[ ] ] > ]] を認知し、もってマーク区間を終了させます。

[5]
VQwNGw  <a href="http://wdbxdogxllbb.com/">wdbxdogxllbb</a>, [url=http://sxqfyhizmmjg.com/]sxqfyhizmmjg[/url], [link=http://cvnhhmaqxrho.com/]cvnhhmaqxrho[/link], http://uufuhxkdwbwt.com/
([[pmmqicfbj]] [tdohgo@@lclkbk.com] [WEAK[2008-07-10 23:06:16 +00:00]])

[6]
VQwNGw  <a href="http://wdbxdogxllbb.com/">wdbxdogxllbb</a>, [url=http://sxqfyhizmmjg.com/]sxqfyhizmmjg[/url], [link=http://cvnhhmaqxrho.com/]cvnhhmaqxrho[/link], http://uufuhxkdwbwt.com/
([[pmmqicfbj]] [tdohgo@@lclkbk.com] [WEAK[2008-07-10 23:06:24 +00:00]])

[7]
respect 
([[Specna]] [shaqze@@gmail.com])

[8]
respect 
([[Nepus]] [kaeqei@@gmail.com])

[9]
respect 
([[Weter]] [rokwzu@@gmail.com])

[10]
respect 
([[Prasd]] [wesxnf@@gmail.com])

[11]
respect 
([[Wernu]] [wernca@@gmail.com])

[12]
respect 
([[Spinu]] [angmfu@@gmail.com])

[13]
respect 
([[Specna]] [shaytj@@gmail.com])


[14]
respect 
([[Weter]] [rokllk@@gmail.com])

@


1.7
log
@auto-committed
@
text
@a29 1

d33 17
@


1.6
log
@auto-committed
@
text
@a25 1

d29 5
@


1.5
log
@auto-committed
@
text
@a13 1

d17 13
@


1.4
log
@auto-committed
@
text
@d1 18
a18 8
#?SuikaWiki/0.9
[1] 【[[SGML]]】 [Q[文脈上の[[制約]]。[[区切子]]に割当ててある文字列の直後に [CODE(SGML)[[[mdc]]]] が続く場合、[[文脈依存区切子]]として[[認知]]する。]] ([[JIS X 4151]]‐1992 8.6.2(1)(d) 参照)

[2] >>1 ではなんのことだかさっぱりですが、要は[[マーク区間終了]]のことを言っているのです。

[3] [CODE(SGML)[[[msc]]]] として認知され得る文字列が見つかった時に、制約 [CODE(SGML)[MSE]] となります。ここで文字列 [CODE(SGML)[mdc]] が続いていることがわかれば、文脈依存区切子が認知されます。すなわち、 [CODE(SGML)[msc]] + [CODE(SGML)[mdc]] がマーク区間終了とみなされ、継続中だった[[マーク区間]]がそこに終了します。

[4] >>3 を[[規格参照具象構文]]を仮定して言い直すと、マーク区間を解釈中に [CODE(SGML)[ ] ] ]] を発見すると、その直後に [CODE(SGML)[>]] がないか探します。あった場合は [CODE(SGML)[ ] ] > ]] を認知し、もってマーク区間を終了させます。
@


1.3
log
@auto-committed
@
text
@d2 1
a2 1
[1] 【[[SGML]]】 文脈上の[[制約]]。[[区切子]]に割当ててある文字列の直後に [CODE(SGML)[[[mdc]]]] が続く場合、[[文脈依存区切子]]として[[認知]]する。 ([[JISX4151]]‐1992 8.6.2(1)(d) 参照)
@


1.2
log
@auto-committed
@
text
@d2 1
d4 5
a8 4
- [1] 【[[SGML]]】 文脈上の[[制約]]。[[区切子]]に割当ててある文字列の直後に [CODE(SGML)[[[mdc]]]] が続く場合、[[文脈依存区切子]]として[[認知]]する。 ([[JISX4151]]‐1992 8.6.2(1)(d))
- [2] >>1 ではなんのことだかさっぱりですが、要は[[マーク区間終了]]のことを言っているのです。
- [3] [CODE(SGML)[[[msc]]]] として認知され得る文字列が見つかった時に、制約 [CODE(SGML)[MSE]] となります。ここで文字列 [CODE(SGML)[mdc]] が続いていることがわかれば、文脈依存区切子が認知されます。すなわち、 [CODE(SGML)[msc]] + [CODE(SGML)[mdc]] がマーク区間終了とみなされ、継続中だった[[マーク区間]]がそこに終了します。
- [4] >>3 を[[規格参照具象構文]]を仮定して言い直すと、マーク区間を解釈中に [CODE(SGML)[ ] ] ]] を発見すると、その直後に [CODE(SGML)[>]] がないか探します。あった場合は [CODE(SGML)[ ] ] > ]] を認知し、もってマーク区間を終了させます。
@


1.1
log
@auto-commited
@
text
@d1 6
a6 3
#?SuikaWiki/0.9

- [1] 【[[SGML]]】 文脈上の[[制約]]。[[区切子]]に割当ててある文字列の直後に [CODE(SGML)[[[mdc]]]] が続く場合、[[文脈依存区切子]]として[[認知]]する。 ([[JISX4151]]‐1992 8.6.2(1)(d))
@

