head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.2
date	2003.10.03.02.02.14;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.28.10.15.08;	author make;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@#?SuikaWiki/0.9

- [1] [[XML]] 1.0 の仕様書にある推奨事項。
- [2] [互換文字] [[Unicode]] の[[互換文字]]の使用は非推奨 <http://www.w3.org/TR/REC-xml#dt-character>。
- [3] (推奨じゃないが) [CODE(ABNF)["XML"]] で始まる[[名前]]は XML 関連規格で使用するのに予約されています。
- [4] [コロンを含む名前] [[XML名前空間]]以外の目的で[[コロン]]を含む名前は使用するべきではありません (が、[[XML処理系]]はそれも受け付けなければなりません)。
- [5] [[CODE(XML)[<]] を含む実体] [CODE(XML)[<]] を[[実体指定値]]に持つ[[実体]](宣言)は、構文的に可能ではあるもののこれを参照すると必ず[[整形式]]性[[誤り]]となるため、使用しないことを強く勧める <http://www.w3.org/TR/REC-xml#sec-common-syn>。
- [6] >>5 [[引数実体]]なら問題ない??

- [35] >>6 引数実体でも [CODE(XML)[<]] は使用不可。[[完全記憶]]である必要があるから。
- [36] >>35 そうなんだろうか? [[MSXML]] は次の例を意図したように解釈してくれる。 [SAMP(XML)[<!ENTITY % lt "<"><!ENTITY ent "%lt;foo></foo>"><!ENTITY % entdef "%lt;!ENTITY ent2 'offf'>">%entdef;]] M$XML が正しいと主張するわけではないけど、たまたま手元に M$XML しか XML parser がなかったんで。。。
- [37] >>36 仕様書の >>6 の注意書きは特に一般実体に限定されていない。
- [38] >>36 妥当性制約 Proper Declaration/PE Nesting <http://www.w3.org/TR/REC-xml#vc-PEinMarkupDecl> にマーク宣言の最初と最後の文字は同じ実体にないと駄目だと書いてある。よって[[誤り]]。誤りの回復は処理系依存だから M$XML の挙動も間違ってはいない。

[29] >>38 その解釈の時点ではまだ実体宣言じゃなくて単なる実体値の一部となる文字列でしかないから問題ないという解釈もある。


- [7] [XML の版] [[XML文書]]が XML 1.0 仕様書にしたがっていることを示すため、 [[XML宣言]]の [CODE(XML)[[[version]]]] 擬似属性の値に [CODE(XML)[1.0]] を指定するべき <http://www.w3.org/TR/REC-xml#sec-prolog-dtd>。 
- [8] [空要素タグ] [[相互運用性のため]]、[[空要素タグ]]は[[内容モデル]]が [CODE(XML)[[[EMPTY]]]] である要素型では使用するべきで、そうでない要素型には使用するべきではありません <http://www.w3.org/TR/REC-xml#sec-starttags>。
- [9] [内容モデル中の未宣言要素型] (推奨ではない) [[利用者の任意選択]]により、 [[XML処理系]]は[[内容モデル]]で未宣言の[[要素型]]が出てきたときに警告してもよい。但しこれは[[誤り]]ではない。 <http://www.w3.org/TR/REC-xml#elemdecls>


- [12] [内容モデル中の引数実体] 相互運用性のため、内容モデル中の[[引数実体参照]]の[[置換文]]は、最低1つの非[[空白]]文字を含めるのがよい。また、その最初及び最後の非空白文字はいずれも[[接続子]] ([CODE(XML)[|]] 又は [CODE(XML)[,]]) でないのがよい。 <http://www.w3.org/TR/REC-xml#vc-PEinGroup>
- [13] [属性並び宣言で未宣言の要素型] (警告) 利用者の任意選択により、[[属性並び宣言]]の対象の要素型が宣言されていない場合に警告しても良い。これは誤りではない。 <http://www.w3.org/TR/REC-xml#attdecls>
- [14] [Web SGML 属性並び宣言] (警告) 相互運用性のため、利用者の任意選択により、1つの要素型に対して複数の属性並び宣言がある場合、1つの属性に複数の宣言がある場合に警告してもよいが、誤りではない。 <http://www.w3.org/TR/REC-xml#attdecls>
- [15] [列挙型属性値の重複] 相互運用性のため、同じ要素型の複数の列挙型の属性の値で同じものを使うべきではない。 <http://www.w3.org/TR/REC-xml#sec-attribute-types>
- [17] [定義済み実体の再定義] 相互運用性のため、[[妥当]]文書は [CODE(XML)[lt]] などの[[定義済み実体]]を [[DTD]] 中で陽に定義するべきです。 <http://www.w3.org/TR/REC-xml#vc-entdeclared>
- [18] [実体宣言の重複] (警告) 利用者の任意選択により、同じ名前の[[実体]]についての[[実体宣言]]が複数ある場合に警告しても良い。 <http://www.w3.org/TR/REC-xml#sec-entity-decl>
- [19] [[URI]] の処理関係: [[..//URI]] 参照。
- [20] [[文字コード]]関係: [[charset//XML]] 参照。

- [23] >>17 <http://www.w3.org/TR/REC-xml#sec-predefined-ent>
- [24] [記法処理系の非存在] (誤りではない。警告でもない。) 宣言された[[記法]]のデータの処理系が存在しない場合でも誤りではない。 <http://www.w3.org/TR/REC-xml#Notations> [WEAK[(どうするかは応用が決めることがあって XML 仕様や処理系の関わる範囲ではないということだろう。)]]
- [25] 妥当性を検証しない XML 処理系を使う[[応用]]は、 XML 処理系間の相互運用性のため、妥当性を検証しない処理系では得られるか不明な機能 [WEAK[(既定属性値とか。)]] に依存しないのがよい。そういうのが必要な応用は妥当性を検証する処理系を使うべき。 <http://www.w3.org/TR/REC-xml#safe-behavior>
- [26] [符号化名札一致] (参考) 符号化変換系処理の実装者は上位プロトコル (実際の符号化方式) と XML の符号化宣言の値が不一致とならないように注意するべき。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [27] [符号化名札供給に関する規定] (参考) 転送プロトコル等々で複数の符号化方式名の札がある時にそれらの優先度を XML 文書を供給する上位プロトコルが規定するべきです。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [28] [>>27 ファイル・システムにおいて] (参考) 相互運用性の観点から、 [[BOM]] や符号化宣言を使うべきです。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [31] [制御文字・非文字] [CODE(char)[U+007F]]〜[CODE(char)[U+009F]] ([CODE(char)[U+0085]] を除く。) {制御文字}, [CODE(char)[U+FD0[VAR[h]]]] [VAR[([CODE[0]]〜[CODE[F]])]], [CODE(char)[U+[VAR[hh]]FFFE]]〜[CODE(char)[U+[VAR[hh]]FFFF]] [WEAK[([VAR[hh]] = [CODE[00]]〜[CODE[10]])]] {非文字}  (<http://www.w3.org/XML/xml-V10-2e-errata#E46>)
- [32] [XML の版] >>7 の部分は errata <http://www.w3.org/XML/xml-V10-2e-errata#E38> で規定が全く改められました。版の値は [CODE(XML)[1.0]] でなければなりません (生成規則上の規定 = 整形式制約)。
@


1.1
log
@auto-commited
@
text
@d1 39
a39 40
#?SuikaWiki/0.9

- [1] [[XML]] 1.0 の仕様書にある推奨事項。
- [2] [互換文字] [[Unicode]] の[[互換文字]]の使用は非推奨 <http://www.w3.org/TR/REC-xml#dt-character>。
- [3] (推奨じゃないが) [CODE(ABNF)["XML"]] で始まる[[名前]]は XML 関連規格で使用するのに予約されています。
- [4] [コロンを含む名前] [[XML名前空間]]以外の目的で[[コロン]]を含む名前は使用するべきではありません (が、[[XML処理系]]はそれも受け付けなければなりません)。
- [5] [[CODE(XML)[<]] を含む実体] [CODE(XML)[<]] を[[実体指定値]]に持つ[[実体]](宣言)は、構文的に可能ではあるもののこれを参照すると必ず[[整形式]]性[[誤り]]となるため、使用しないことを強く勧める <http://www.w3.org/TR/REC-xml#sec-common-syn>。
- [6] >>5 [[引数実体]]なら問題ない??
- [7] [XML の版] [[XML文書]]が XML 1.0 仕様書にしたがっていることを示すため、 [[XML宣言]]の [CODE(XML)[[[version]]]] 擬似属性の値に [CODE(XML)[1.0]] を指定するべき <http://www.w3.org/TR/REC-xml#sec-prolog-dtd>。 
- [8] [空要素タグ] [[相互運用性のため]]、[[空要素タグ]]は[[内容モデル]]が [CODE(XML)[[[EMPTY]]]] である要素型では使用するべきで、そうでない要素型には使用するべきではありません <http://www.w3.org/TR/REC-xml#sec-starttags>。
- [9] [内容モデル中の未宣言要素型] (推奨ではない) [[利用者の任意選択]]により、 [[XML処理系]]は[[内容モデル]]で未宣言の[[要素型]]が出てきたときに警告してもよい。但しこれは[[誤り]]ではない。 <http://www.w3.org/TR/REC-xml#elemdecls>
- [10] [内容モデル中の要素型重複] (誤り) 文書中のある要素が内容モデル中の一つ以上の要素型の出現と[[一致]]し得るなら、これは誤りである。 <http://www.w3.org/TR/REC-xml#sec-element-content>
- [11] >>10 <http://www.w3.org/TR/REC-xml#determinism> も参照。
- [12] [内容モデル中の引数実体] 相互運用性のため、内容モデル中の[[引数実体参照]]の[[置換文]]は、最低1つの非[[空白]]文字を含めるのがよい。また、その最初及び最後の非空白文字はいずれも[[接続子]] ([CODE(XML)[|]] 又は [CODE(XML)[,]]) でないのがよい。 <http://www.w3.org/TR/REC-xml#vc-PEinGroup>
- [13] [属性並び宣言で未宣言の要素型] (警告) 利用者の任意選択により、[[属性並び宣言]]の対象の要素型が宣言されていない場合に警告しても良い。これは誤りではない。 <http://www.w3.org/TR/REC-xml#attdecls>
- [14] [Web SGML 属性並び宣言] (警告) 相互運用性のため、利用者の任意選択により、1つの要素型に対して複数の属性並び宣言がある場合、1つの属性に複数の宣言がある場合に警告してもよいが、誤りではない。 <http://www.w3.org/TR/REC-xml#attdecls>
- [15] [列挙型属性値の重複] 相互運用性のため、同じ要素型の複数の
- [16] 列挙型の属性の値で同じものを使うべきではない。 <http://www.w3.org/TR/REC-xml#sec-attribute-types>
- [17] [定義済み実体の再定義] 相互運用性のため、[[妥当]]文書は [CODE(XML)[lt]] などの[[定義済み実体]]を [[DTD]] 中で陽に定義するべきです。 <http://www.w3.org/TR/REC-xml#vc-entdeclared>
- [18] [実体宣言の重複] (警告) 利用者の任意選択により、同じ名前の[[実体]]についての[[実体宣言]]が複数ある場合に警告しても良い。 <http://www.w3.org/TR/REC-xml#sec-entity-decl>
- [19] [[URI]] の処理関係: [[..//URI]] 参照。
- [20] [[文字コード]]関係: [[charset//XML]] 参照。
- [21] [文字コード情報の欠如] (誤り) 上位転送プロトコルから文字コードに関する情報が提供されず、 [[符号化宣言]]も [[BOM]] もなく、それでいて [[UTF-8]] 以外の符号化方式が使われているなら、それは誤りである。
- [22] >>21 で注意しないといけないのは、一般には致命的でない誤りであっても、 [WEAK[(少し後の段落の規定により、)]] 符号化宣言や BOM が存在せず、しかし UTF-8 として不正なオクテットが含まれていると致命的誤りとされます。 [WEAK[(これは UTF-8 に関わらず、一般の符号化方式で不正なオクテットは致命的誤りです。 >>21-22 で言えることはつまり、 charset 情報がない実体が UTF-8 として正当に見えればそれは運がよければそのまま通るかもしれない、ということです。)]]
- [23] >>17 <http://www.w3.org/TR/REC-xml#sec-predefined-ent>
- [24] [記法処理系の非存在] (誤りではない。警告でもない。) 宣言された[[記法]]のデータの処理系が存在しない場合でも誤りではない。 <http://www.w3.org/TR/REC-xml#Notations> [WEAK[(どうするかは応用が決めることがあって XML 仕様や処理系の関わる範囲ではないということだろう。)]]
- [25] 妥当性を検証しない XML 処理系を使う[[応用]]は、 XML 処理系間の相互運用性のため、妥当性を検証しない処理系では得られるか不明な機能 [WEAK[(既定属性値とか。)]] に依存しないのがよい。そういうのが必要な応用は妥当性を検証する処理系を使うべき。 <http://www.w3.org/TR/REC-xml#safe-behavior>
- [26] [符号化名札一致] (参考) 符号化変換系処理の実装者は上位プロトコル (実際の符号化方式) と XML の符号化宣言の値が不一致とならないように注意するべき。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [27] [符号化名札供給に関する規定] (参考) 転送プロトコル等々で複数の符号化方式名の札がある時にそれらの優先度を XML 文書を供給する上位プロトコルが規定するべきです。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [28] [>>27 ファイル・システムにおいて] (参考) 相互運用性の観点から、 [[BOM]] や符号化宣言を使うべきです。 <http://www.w3.org/TR/REC-xml#sec-guessing-no-ext-info>
- [29] [実体値中の非解析実体参照] [[実体値]]中での[[非解析実体]]への参照は非推奨。 [WEAK[(Errata <http://www.w3.org/XML/xml-V10-2e-errata#E55> で修正。元々は禁止だった。)]]
- [30] >>29 (誤り) [WEAK[(元は致命的誤り。)]]
- [31] [制御文字・非文字] [CODE(char)[U+007F]]〜[CODE(char)[U+009F]] ([CODE(char)[U+0085]] を除く。) {制御文字}, [CODE(char)[U+FD0[VAR[h]]]] [VAR[([CODE[0]]〜[CODE[F]])]], [CODE(char)[U+[VAR[hh]]FFFE]]〜[CODE(char)[U+[VAR[hh]]FFFF]] [WEAK[([VAR[hh]] = [CODE[00]]〜[CODE[10]])]] {非文字}  (<http://www.w3.org/XML/xml-V10-2e-errata#E46>)
- [32] [XML の版] >>7 の部分は errata <http://www.w3.org/XML/xml-V10-2e-errata#E38> で規定が全く改められました。版の値は [CODE(XML)[1.0]] でなければなりません (生成規則上の規定)。
- [33] >>10 修正 <http://www.w3.org/XML/xml-V10-2e-errata#E34> も参照。[[非決定性内容モデル]]であった時に誤りとなるのは[[文書実現値]]の方ではなく DTD の方です。
- [34] >>22 errata でわざわざ追加されています <http://www.w3.org/XML/xml-V10-2e-errata#E27> が、 UTF-8 で不正なバイト列 (非最小表現) が出現した場合にも致命的誤りとなります。 [WEAK[(こんなことまでわざわざ書くなんて、 Un*code 系は優遇されすぎだよなあ。そんなの UCS を読め、でいいのに。まあ Uni*ode マンセーは国?是だからしゃーないな。)]]
- [35] >>6 引数実体でも [CODE(XML)[<]] は使用不可。[[完全記憶]]である必要があるから。
- [36] >>35 そうなんだろうか? [[MSXML]] は次の例を意図したように解釈してくれる。 [SAMP(XML)[<!ENTITY % lt "<"><!ENTITY ent "%lt;foo></foo>"><!ENTITY % entdef "%lt;!ENTITY ent2 'offf'>">%entdef;]] M$XML が正しいと主張するわけではないけど、たまたま手元に M$XML しか XML parser がなかったんで。。。
- [37] >>36 仕様書の >>6 の注意書きは特に一般実体に限定されていない。
- [38] >>36 妥当性制約 Proper Declaration/PE Nesting <http://www.w3.org/TR/REC-xml#vc-PEinMarkupDecl> にマーク宣言の最初と最後の文字は同じ実体にないと駄目だと書いてある。よって[[誤り]]。誤りの回復は処理系依存だから M$XML の挙動も間違ってはいない。
@

