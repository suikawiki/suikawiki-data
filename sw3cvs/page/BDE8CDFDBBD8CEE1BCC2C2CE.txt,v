head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2003.10.27.02.03.13;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] [[参照]]時に、[[処理指令]]の[[システムデータ]]として扱われる[[実体]]。
Processing instruction entity。
([[JISX4151]]‐1992 定義 (128))

[2] 例えば、 [SAMP(SGML)[<![[ENTITY]] foo [[PI]] "something">]]
と宣言した上で [SAMP(SGML)[&foo;]] と書いたとします。
すると、参照が展開される時に、この参照があった場所に元から
[SAMP(SGML)[<?something?>]] のように書いてあったのと同じような扱いがなされます。

[3]
処理指令はシステム依存ですから、[[文書実現値]]内に直接記述してしまうと可搬性が低下します。
[WEAK[だからこそ処理指令ではなく[[記述的マーク]]が推奨されるのですが、それでもどうしても必要になることもあります。]]
できる限りは可搬でありたいときに処理指令実体が有用です。

例えば、強制改頁をさせたいとします。
あるシステムでは [SAMP(SGML)[<?page break?>]]
と書けば改頁しますが、別のシステムでは
[SAMP(SGML)[<?進む : 次頁先頭?>]]
と書かないといけないとします。処理指令実体が使えないとすると、
両システム間で移動するごとに全改頁を書き換えないといけません。
しかし、処理指令実体の参照 [SAMP(SGML)[&pbr;]]
としておいて、[[文書型定義]]で
[SAMP(SGML)[<!ENTITY pbr PI "page break">]]
又は [SAMP(SGML)[<!ENTITY pbr PI "進む : 次頁先頭">]]
としておけば、システム間移動時にはここ1箇所を書き換えるだけで済みます。

[4] 参考。実際には、システム依存だけど使わないといけない処理指令は複数種類あるでしょう。
そういうときは[[条件区間]]と併用すると楽になります。
[PRE[
<!ENTITY % system1 "INCLUDE">
<!ENTITY % system2 "IGNORE">
<![%system1;[
<!ENTITY pbr PI "page break">
<!ENTITY br  PI "line break">
<!ENTITY one PI "one column">
<!ENTITY two PI "two column">
]]>
<![%system2;[
<!ENTITY pbr PI "進む : 次頁先頭">
<!ENTITY br  PI "進む : 次行先頭">
<!ENTITY one PI "COLUMN : 1">
<!ENTITY two PI "COLUMN : 2">
]]>
]PRE]
@
