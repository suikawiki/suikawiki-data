head	1.2;
access;
symbols
	suikawiki3-final:1.2;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2004.08.13.02.06.32;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.08.02.05.57;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@

[1]
[[InterWiki]] の始点アンカーを [[Wiki//InterWikiName]] で定義できるようにしてみました。
この wiki の [Q[DOM3]] とか [Q[HTML4]] の定義を見てもらえばわかりますが、 [CODE[Site[@@Name = 'foo']//IWReference2Label]] に雛形を書いておくと、 [[SuikaWiki/0.9]] で [SAMP['''<'''IW:foo:bar'''>''']] のように書いたのを HTML 化する時にその雛形を実現値化します。
([[名無しさん]] [WEAK[2004-08-06 03:44:50 +00:00]])

[2]
ほとんどなんでもできますが、有効な使い方の例としては、この wiki の [Q[HTML4]] のように、一つの [SAMP['''<'''IW:HTML4:""'''>''']] だけで HTML 4 の3つの勧告に同時にリンクすることができます (<IW:HTML4:"">)。
([[名無しさん]] [WEAK[2004-08-06 03:46:34 +00:00]])

[3]
難点は Wiki//InterWikiName の記述がすごくうざいことですが、こればかりはどうしようもありません。
([[名無しさん]] [WEAK[2004-08-06 03:47:23 +00:00]])

[4]
TODO: pwiki (パラグラフ指向実験) と expwiki (何の実験だかよく覚えてない(藁)) を本体に merge。

どちらも随分前の幹からの派生だけど、幹に merge してちゃんと動くのだろうか?

([[名無しさん]] [WEAK[2004-08-06 03:49:07 +00:00]])

[5]
>>4 pwiki を CVS に入れました。
派生元から [CODE[paragraph-200404]] という枝を生やしています。
Paragraph 化に伴って分かった paragraph 機能とは無関係の問題の修正はそのうち幹に
merge します。それ以外もいずれ。 (でも実用にはちょっと詰めが甘いので、
放置かも。)

Expwiki は内容の構文解析結果の XML 木をそのまま (キャッシュとして)
保存する実験でした。こちらも WikiDB 界面の修正はそのうち merge
しますが、実験結果はあまりよくなかったのですよねぇ。
どうしましょう。

([[名無しさん]] [WEAK[2004-08-11 00:46:02 +00:00]])


[6]
>>5 XML 木の生成が時間を食っている処理 (の1つ)
だということは以前の検証で判明していたと思うのですが、
それを改善できなかったということは、
改善方向として余りよいものではなかったのか、
それとも他の部分の遅さへの貢献 (>>7) が大きすぎて改善効果が見えなかったのか。
(でも厳密に処理時間を測定するのは面倒だ・・・。)

[7] 注: とりわけ plugin の load の overhead が深刻であることが分かっている。



([[名無しさん]] [WEAK[2004-08-11 00:49:17 +00:00]])

@


1.1
log
@auto-committed
@
text
@d1 1
a1 1
#?SuikaWiki/0.9
d16 6
d23 25
a47 2
[4]
TODO: pwiki (パラグラフ指向実験) と expwiki (何の実験だかよく覚えてない(藁)) を本体に merge。
a48 1
どちらも随分前の幹からの派生だけど、幹に merge してちゃんと動くのだろうか?
d50 1
a50 1
([[名無しさん]] [WEAK[2004-08-06 03:49:07 +00:00]])
@

