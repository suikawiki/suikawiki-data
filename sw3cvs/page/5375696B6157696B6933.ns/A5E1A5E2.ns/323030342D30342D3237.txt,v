head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.05.03.02.03.39;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9

[1]
最近激しく重い。 Access が多杉なんだな。

まあ SW が重いのが悪いわけだが。
([[名無しさん]] [WEAK[2004-04-27 10:04:16 +00:00]])

[2]
>>1 同時 access 制限が15までになっているのですが、同時に動いている wiki.cgi が多いとその分 CPU 力が分散されて余計に時間がかかるかもしれないので、試しに 10 に減らしてみました。
思い切って5くらいにしようかと思いましたが、そうするとスタイルシートとかを一気に取りにこられるとすぐに満杯になってしまいそうなのでとりあえず 5 くらい。

今のところ、以前と同じ程度の処理時間にまで回復したように思えますが、単に access 過多が解消しただけかもしれませんので、
効果があったのかどうかはよくわかりません。

([[名無しさん]] [WEAK[2004-04-27 12:13:16 +00:00]])

[3]
でもこの調子だと、同じ鯖で複数個の wiki.cgi を同時に使うのはちょっとしんどいかも。せいぜい多くて2,3が限度かと。規模にもよりますが。
([[名無しさん]] [WEAK[2004-04-27 12:14:26 +00:00]])

[4]
>>1-3 とは全然関係ないのですけど、
いわゆる[[パラグラフ指向]]な wiki というのを試しています。
実装の方針としては、内容 (段落) は番号を振って格納しておいて、 WikiName には番号の並びを関連付けます。たとえば WikiName [VAR[n]] の内容が [SAMP[([VAR[s]], [VAR[t]], [VAR[u]])]]
なら、 [VAR[n]] を要求された時に番号 [VAR[s]], [VAR[t]], [VAR[u]] の内容をまとめて一つの文書にして返します。

基本的には今の SuikaWiki SWHCS をそのまま使えるのですが、 SuikaWiki SWHCS では操作対象が WikiName == WikiPage だったのに、段落指向にすると WikiName == WikiPage と番号 == 段落の操作の二種類が必要になってしまいます。

page--summary のような操作が二重に必要になってしまうわけですが、どうしたものでしょう。
([[名無しさん]] [WEAK[2004-04-27 12:21:36 +00:00]])


[5]
それと Last-Modified。 HTTP のを出す必要がありますが、そのためにわざわざ全段落のをチェックして最新のをさがすのは面倒。

段落を編集するごとに WikiPage の lastmodified も更新してしまえばいいのですけど、そうすると WikiName -> 番号の写像の逆写像も持っていないと面倒でやってられません。

でも逆写像も持っていれば、どこからも参照されていなくなったことが検出できるので、ごみ掃除が楽になりますね。参照個数を調べるのも超楽だ。
何かの理由でその情報が整合しなくなった時は問題だけど、その辺は気にすることでもないのかもしれない。
([[名無しさん]] [WEAK[2004-04-27 12:26:04 +00:00]])

@
