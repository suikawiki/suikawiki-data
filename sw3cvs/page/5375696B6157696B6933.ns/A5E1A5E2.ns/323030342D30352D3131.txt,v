head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.05.13.02.09.46;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9

[1]
で、 CSS の静的版をちゃんと組み込んでみました。

mode=write で内容の型の event content_written または content_removed や content_type_changed_from を発生させるようにしました。 (Event の界面はいずれきちんと整理しないといけません。)

で、 CSS static mode では、これらの event hook によって CSS file を (WikiDB を通して) 追加したり削除したりします。
(いまのところ write の時しか実装していませんが、 WikiPageRename module とか WikiForm とかも何とかしないと。)

これで編集のたびにファイル版 (静的版) も同期されるのですが、最初の導入の時に一々空編集は面倒ですし、後から何かの理由で消してしまった時に 404 になるのはつまらないので、 .htaccess を使って、存在しなければ wiki.cgi に新しい物を作らせることにしました。
(このへんは Apache に依存してしまいます (.htaccess や環境変数 [CODE(CGI)[[[REDIRECT_REQUEST_URI]]]]) し、 .htaccess に絶対 path を書かないといけないので、無設定での運用は無理ぽ (というか面倒) です。)

この機能をもうちょっと進めれば本文の静的出力に使えます。最近この wiki は人大杉が本当にひどい状態なので、静的で負荷削減しかないでしょう。
ただ、今の動的で使える機能の結構多くが静的にすると使えなくなるのはいかんともしがたいです。 See also とか Referer は [CODE(HTMLe)[object]] にしてしまおうかと結構本気に考えてます。
([[名無しさん]] [WEAK[2004-05-11 12:15:35 +00:00]])

[2]
CSS の中に相対 URI があると困ったことになります。これもいつか対策をと思っていましたけど[Q[いつか]]じゃだめぽ。

あとメモ。静的出力先ディレクトリで [[SSI]] が有効になっていたりすると危険です。
([[名無しさん]] [WEAK[2004-05-11 12:19:07 +00:00]])


[3]
>>2 一応 .htaccess で Options -Includes にしておこう。
([[名無しさん]] [WEAK[2004-05-11 12:22:03 +00:00]])

@
