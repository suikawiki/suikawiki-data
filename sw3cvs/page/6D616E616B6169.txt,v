head	1.7;
access;
symbols
	suikawiki3-final:1.7
	before-db-leaffile:1.4
	after-upgrade-to-suikawiki-3:1.4
	before-fork-suikawiki3:1.4
	after-restore-20040122:1.4;
locks; strict;
comment	@# @;


1.7
date	2007.05.08.02.47.42;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.18.02.11.45;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.27.02.08.04;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.24.07.19.39;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.03.02.00.13;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.29.07.17.13;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.31;	author make;	state Exp;
branches;
next	;


desc
@@


1.7
log
@auto-committed
@
text
@
[1]  [DFN[[RUBY[manakai] [まなかい]]]] は、
[[Perl]] で [[822]] メッセージ ([[電子メイル]]や[[電子ニュース]]のメッセージ)
や [[XML]] [[実体]]などを取扱うためのモジュール群です。

[2] Perl で使える 822/[[MIME]] 処理モジュールは他にも色々ありますが、
どれも不必要にプロトコルを意識することなく使えるものとは言えません。
たとえば、 [CODE(822)[[[From]]]] 欄の 
[CODE(ABNF)[[[display-name]]]] の値を指定する時に
[CODE(ABNF)[[[token]]]] と [CODE(ABNF)[[[quoted-string]]]]
は自動的にどちらが適当か選んで欲しいですし、
本文が [CODE(charset)[[[ISO-2022-JP]]]] でも
[CODE(charset)[[[UTF-8]]]] でも外側からは同じように扱える方が嬉しいです。

manakai の [CODE(perl)[[[Message::Entity]]]] 系モジュール群がこれを実現します。


[7]
fgfdgdf
([[gfhgf]] [gfhgffdg] [WEAK[2007-05-05 09:13:53 +00:00]])


[[#comment]]


* 主な構成モジュール

[3] いつの間にか大所帯化していますが...
- [CODE(perl)[Message::Entity]] 系: 822 メッセージを扱います。
- [CODE(perl)[[[Message::Markup::XML]]]] 系: 
[[XML]] 文書を扱います。
- [CODE(perl)@@en[[[Message::DOM]]]]系:
[[DOM]]の実装です。
- [CODE(perl)[[[Message::Util::Formatter]]]] 系:
雛形と引数から結果を作るための汎用モジュール群です。
- [CODE(perl)[[[Message::Util::Error]]]] 系:
[CODE(perl)[[[Error]]]] モジュールの subclass
で、誤りの型 (種類) を定義して使うことができます。
- [[dis]]: [[モジュール]]本体のコード、[[文書]]、
[[試験]]用コードなどを統合的に管理するシステムです。
[[manakai]]の[[DOM]]実装や[[dis]]自体も[[dis]]で記述されています。
- その他: 支援モジュールなど。


* 入手

[4] CVS repository から入手できます。

<IW:SuikaCVS:"messaging/manakai/">

通常は幹の先端をどうぞ。
大規模な実験はたまに枝でやってます。
安定版は今はありません。
詳しくは [[manakai//CVS]] をご覧下さい。


* ライセンス

[5] [[perlと同じライセンス]]です。

新しい[[モジュール]]は、諸般の都合により[[perlと同じライセンス]]または[[MPL]]/[[GPL]]/[[LGPL]]から選択できるようになっています。


* メモ

[6]
この wiki の manakai//* の文書群の中には古いものが多いので注意してください。

Message::Entity 系 (Message::Field::*, Message::MIME::* など) の開発は現在停止状態です。一応一通り使える状態にはなっています。 (開発者は普段メイル書くのに使っているらしいです。)
この系統は pod がいい加減なので何とかしたいと思っていますが手が回りません。
内部構造も大改造したいのですが、
当分先になるでしょう。

Message::Util::Formatter や Message::Util::Error は [[SuikaWiki 3]] で大々的に使っているので最近までちょくちょくいじっていましたが、大分安定してきました。

Message::Markup::XML 系も SuikaWiki
で使っています。
こちらは今 Parser 書きなおし中です。
[[DOM]] が微妙に実装してありますが使い物にならないので Parser ができたらなんとかします。
([[名無しさん]] [WEAK[2004-04-25 11:52:18 +00:00]])@


1.6
log
@auto-committed
@
text
@d1 80
a80 74

[1]  [DFN[[RUBY[manakai] [まなかい]]]] は、
[[Perl]] で [[822]] メッセージ ([[電子メイル]]や[[電子ニュース]]のメッセージ)
や [[XML]] [[実体]]などを取扱うためのモジュール群です。

[2] Perl で使える 822/[[MIME]] 処理モジュールは他にも色々ありますが、
どれも不必要にプロトコルを意識することなく使えるものとは言えません。
たとえば、 [CODE(822)[[[From]]]] 欄の 
[CODE(ABNF)[[[display-name]]]] の値を指定する時に
[CODE(ABNF)[[[token]]]] と [CODE(ABNF)[[[quoted-string]]]]
は自動的にどちらが適当か選んで欲しいですし、
本文が [CODE(charset)[[[ISO-2022-JP]]]] でも
[CODE(charset)[[[UTF-8]]]] でも外側からは同じように扱える方が嬉しいです。

manakai の [CODE(perl)[[[Message::Entity]]]] 系モジュール群がこれを実現します。

[[#comment]]


* 主な構成モジュール

[3] いつの間にか大所帯化していますが...
- [CODE(perl)[Message::Entity]] 系: 822 メッセージを扱います。
- [CODE(perl)[[[Message::Markup::XML]]]] 系: 
[[XML]] 文書を扱います。
- [CODE(perl)@@en[[[Message::DOM]]]]系:
[[DOM]]の実装です。
- [CODE(perl)[[[Message::Util::Formatter]]]] 系:
雛形と引数から結果を作るための汎用モジュール群です。
- [CODE(perl)[[[Message::Util::Error]]]] 系:
[CODE(perl)[[[Error]]]] モジュールの subclass
で、誤りの型 (種類) を定義して使うことができます。
- [[dis]]: [[モジュール]]本体のコード、[[文書]]、
[[試験]]用コードなどを統合的に管理するシステムです。
[[manakai]]の[[DOM]]実装や[[dis]]自体も[[dis]]で記述されています。
- その他: 支援モジュールなど。


* 入手

[4] CVS repository から入手できます。

<IW:SuikaCVS:"messaging/manakai/">

通常は幹の先端をどうぞ。
大規模な実験はたまに枝でやってます。
安定版は今はありません。
詳しくは [[manakai//CVS]] をご覧下さい。


* ライセンス

[5] [[perlと同じライセンス]]です。

新しい[[モジュール]]は、諸般の都合により[[perlと同じライセンス]]または[[MPL]]/[[GPL]]/[[LGPL]]から選択できるようになっています。

* メモ

[6]
この wiki の manakai//* の文書群の中には古いものが多いので注意してください。

Message::Entity 系 (Message::Field::*, Message::MIME::* など) の開発は現在停止状態です。一応一通り使える状態にはなっています。 (開発者は普段メイル書くのに使っているらしいです。)
この系統は pod がいい加減なので何とかしたいと思っていますが手が回りません。
内部構造も大改造したいのですが、
当分先になるでしょう。

Message::Util::Formatter や Message::Util::Error は [[SuikaWiki 3]] で大々的に使っているので最近までちょくちょくいじっていましたが、大分安定してきました。

Message::Markup::XML 系も SuikaWiki
で使っています。
こちらは今 Parser 書きなおし中です。
[[DOM]] が微妙に実装してありますが使い物にならないので Parser ができたらなんとかします。
([[名無しさん]] [WEAK[2004-04-25 11:52:18 +00:00]])

@


1.5
log
@auto-committed
@
text
@d1 59
a59 54
#?SuikaWiki/0.9

[1]  [DFN[[RUBY[manakai] [まなかい]]]] は、
[[Perl]] で [[822]] メッセージ ([[電子メイル]]や[[電子ニュース]]のメッセージ)
や [[XML]] [[実体]]などを取扱うためのモジュール群です。

[2] Perl で使える 822/[[MIME]] 処理モジュールは他にも色々ありますが、
どれも不必要にプロトコルを意識することなく使えるものとは言えません。
たとえば、 [CODE(822)[[[From]]]] 欄の 
[CODE(ABNF)[[[display-name]]]] の値を指定する時に
[CODE(ABNF)[[[token]]]] と [CODE(ABNF)[[[quoted-string]]]]
は自動的にどちらが適当か選んで欲しいですし、
本文が [CODE(charset)[[[ISO-2022-JP]]]] でも
[CODE(charset)[[[UTF-8]]]] でも外側からは同じように扱える方が嬉しいです。

manakai の [CODE(perl)[[[Message::Entity]]]] 系モジュール群がこれを実現します。

[[#comment]]


* 主な構成モジュール

[3] いつの間にか大所帯化していますが...
- [CODE(perl)[Message::Entity]] 系: 822 メッセージを扱います。
- [CODE(perl)[[[Message::Markup::XML]]]] 系: 
[[XML]] 文書を扱います。
- [CODE(perl)[[[Message::Util::Formatter]]]] 系:
雛形と引数から結果を作るための汎用モジュール群です。
- [CODE(perl)[[[Message::Util::Error]]]] 系:
[CODE(perl)[[[Error]]]] モジュールの subclass
で、誤りの型 (種類) を定義して使うことができます。
- その他: 支援モジュールなど。


* 入手

[4] CVS repository から入手できます。

<IW:SuikaCVS:"messaging/manakai/">

通常は幹の先端をどうぞ。
大規模な実験はたまに枝でやってます。
安定版は今はありません。
詳しくは [[manakai//CVS]] をご覧下さい。


* ライセンス

[5] [[perlと同じライセンス]]です。


* メモ

[6]
d72 3
a74 3
[[DOM]] が微妙に実装してありますが使い物にならないので Parser ができたらなんとかします。
([[名無しさん]] [WEAK[2004-04-25 11:52:18 +00:00]])

@


1.4
log
@semi-auto committed
@
text
@d1 55
a55 1
#?SuikaWiki/0.9 page-icon="メイル"
d57 13
a69 11
- [1] [[perl]] で [[RFC822]] 系[[メッセージ]] ([[電子メイル]], [[電子ニュース]], [[HTTP]], [[SIP]] など) を扱うための[[モジュール]]群。
- [2] 旧称 (仮称) Message-pm。
- [3] [WEAK[2003-07-29 06:58:23 +00:00]] ''[[名無しさん]]'': 現在、とりあえずメイルやニュースがそれっぽく使えるようになったところで、作者の都合により開発がとまってます。近いうちに再開したいと作者は申しております。まあメイルを送る程度なら現状でも十分使えます。
- [4] manakai では、メッセージの構造 ([[MIME]] の[[複数部分]][[本体]]など。) をそのまま[[オブジェクト志向]]で扱えます。また、各規格に関する細かい知識がなくても、大まかな使い方さえわかっていれば、あとは [[RFC]] に極力適合するよう努力します。[WEAK[おかしな条件でない限り標準適合メッセージを意識せずに生成できます。]]
- [5] もちろん perl 5.7.3 以降の [[utf8]] 文字列に対応。[[文字コード]]を意識することなくメッセージの読み書きが出来ます。
- [6] [WEAK[2003-08-17 03:36:48 +00:00]] ''[[わかば]]'': 現状に合わない古い文書ばっかりでごめんなさい。
- [7] [CODE[manakai]] は[CODE[まなかい]]と読みます (そのままです)。
- [8] <IW:SuikaCVS:"messaging/manakai/">
- [9] [WEAK[2003-09-21 02:45:19 +00:00]] ''[[名無しさん]]'': 開発版は昔 0.1 というのが release されましたが、まともなものだったかどうかは覚えてません。 [WEAK[(Release 版である以上とりあえず動くもののはずですが。)]] どうせ開発版使うなら CVS の先端をお使い下さい。先月 [[Makefile.PL]] 関連が入りましたし、先日 [[SuikaWiki]] から移ってきた XML parser の code も入ってます。
- [10] >>9 CVS を確認してみました。ほとんどのファイルは release 0.1 == HEAD みたいです。 0.1 release してから1年くらいあんまり進歩してないってことか。。。 release 0.1 から stable 枝伸ばして運用中のものとの互換性を確保する予定だったのが、その後ほとんど進捗がないのでこれも放置されてます。本来 (ちゃんと開発が進んでれば) stable 枝に commit されるべき修正も幹に入ってるので、先端が一番安定版です:-)
- [11] '''わかば''': stable 枝なんて存在自体忘れておりました。。。
@


1.3
log
@auto-committed
@
text
@d9 5
@


1.2
log
@auto-commited
@
text
@d8 1
@


1.1
log
@auto-commited
@
text
@d3 5
@

