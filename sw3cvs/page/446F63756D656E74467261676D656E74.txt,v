head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.3
date	2008.03.13.02.54.57;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.08.02.08.44;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.18;	author make;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@

* DocumentFragment 節・ DocumentFragment 界面 (DOM)

[3] [RUBYB[文書素片] [Document fragment]]は、
その名の通り[[文書]]の[[素片]]です。

[[XML]] の ([[内容]]から参照されている) 
[[整形式]][[外部解析対象実体]]に丁度相当します。

[6]
[RUBYB[文書] [[[Document]]]][RUBY[節] [ノード]]は、
[[要素節]]を1つしか持てません。
それに対して、文書断片節は複数の要素節を持てますし、
その節の外側に[[文節]]などを自由に配置できます。

[1] [RUBYB[文書断片節] [[CODE(DOM)[DocumentFragment]] node]]は、
次の種類の[[節]]を子供に持てます:
- [CODE(DOM)[[[Element]]]] (要素節) [DOM1]
- [CODE(DOM)[[[ProcessingInstruction]]]] (処理指令節) [DOM1]
- [CODE(DOM)[[[Comment]]]] (注釈節) [DOM1]
- [CODE(DOM)[[[Text]]]] (文節) [DOM1]
- [CODE(DOM)[[[CDATASection]]]] (文字データ節) [DOM1]
- [CODE(DOM)[[[EntityReference]]]] (実体参照節) [DOM1]

[2] [CODE(DOMi)[DocumentFragment]] 界面 (Interface)
は、 [CODE(DOMi)[[[Node]]]] 界面を継承します。
(DOM 1 では追加の[RUBY[構成員] [メンバー]]の定義はありません。)

[4] 文書素片[RUBY[物体] [オブジェクト]]を
[WEAK[([CODE(DOMmethod)[[[appendChild]]]] などにより)]]
他の節のどこかに挿入すると、 
[WEAK[(他の節物体ならその節がそのままその位置に挿入されるのに対し、)]]
当該文書断片の''子節''がその位置に挿入されます。
その文書断片は空 (子節なし) になります。

[5] 文書の一部を用意しておいて、それを組立てるのに便利です。
例えば、次の架空の言語の DOM 束縛を使って書いた code
は、見出し要素節と段落群(文書断片)節から章要素節を作ります。

[PRE[
 my $heading := $document.createElement ('h');
 $heading.appendChild ($document.createTextNode ('Heading'));
 my $paragraphs := $document.createDocumentFragment ();
 for my $i (1..10) {
   my $paragraph := $document.createElement ('p');
   $paragraph.appendChild ($document.createTextNode ("Paragraph $i");
   $paragraphs.appendChild ($paragraph);
 }
 ;; ここで、 $heading 節は
 ;;   <h>:$heading
 ;;    +-- "Heading"
 ;;  $paragraphs 節は
 ;;   {断片}:$paragraphs
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 1"
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 2"
 ;;    :
 ;;    +-- <p>
 ;;         +-- "Paragraph 10"
 ;; という構造になっている。
 
 my $section = makeSection ($heading, $paragraphs);
 
 function makeSection ($heading, $paragraphs) {
   my $section = $document.createElement ('section');
   $section.appendChild ($heading);
   $section.appendChild ($paragraph);
   return $section;
 }
 
 ;; 最終的に、 $section 節は次のような構造となる。
 ;;   <section>
 ;;     +-- <h>:$heading
 ;;     |    +-- "Heading"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 1"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 2"
 ;;     :
 ;;     +-- <p>
 ;;          +-- "Paragraph 10"
 ;; {断片} の節そのものは消滅したことに注意。
]PRE]

[7] 仕様書:
- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-B63ED1A3>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3>

[8]
[CITE[文書ツリーを多数回変更するときはDocument Fragmentを経由する (agenda)]] ([TIME[2008-02-20 02:55:06 +09:00]] 版) <http://jintrick.net/agenda/2008/02/document-fragment.html>
([[名無しさん]])

[[#comment]]


* メモ@


1.2
log
@auto-committed
@
text
@d1 98
a98 91
#?SuikaWiki/0.9
*DocumentFragment 節・ DocumentFragment 界面 (DOM)

[3] [RUBYB[文書素片] [Document fragment]]は、
その名の通り[[文書]]の[[素片]]です。

[[XML]] の ([[内容]]から参照されている) 
[[整形式]][[外部解析対象実体]]に丁度相当します。

[6]
[RUBYB[文書][[[Document]]]][RUBY[節] [ノード]]は、
[[要素節]]を1つしか持てません。
それに対して、文書断片節は複数の要素節を持てますし、
その節の外側に[[文節]]などを自由に配置できます。

[1] [RUBYB[文書断片節] [[CODE(DOM)[DocumentFragment]] node]]は、
次の種類の[[節]]を子供に持てます:
-[CODE(DOM)[[[Element]]]] (要素節) [DOM1]
-[CODE(DOM)[[[ProcessingInstruction]]]] (処理指令節) [DOM1]
-[CODE(DOM)[[[Comment]]]] (注釈節) [DOM1]
-[CODE(DOM)[[[Text]]]] (文節) [DOM1]
-[CODE(DOM)[[[CDATASection]]]] (文字データ節) [DOM1]
-[CODE(DOM)[[[EntityReference]]]] (実体参照節) [DOM1]

[2] [CODE(DOMi)[DocumentFragment]] 界面 (Interface)
は、 [CODE(DOMi)[[[Node]]]] 界面を継承します。
(DOM 1 では追加の[RUBY[構成員][メンバー]]の定義はありません。)

[4] 文書素片[RUBY[物体] [オブジェクト]]を
[WEAK[([CODE(DOMmethod)[[[appendChild]]]] などにより)]]
他の節のどこかに挿入すると、 
[WEAK[(他の節物体ならその節がそのままその位置に挿入されるのに対し、)]]
当該文書断片の''子節''がその位置に挿入されます。
その文書断片は空 (子節なし) になります。

[5] 文書の一部を用意しておいて、それを組立てるのに便利です。
例えば、次の架空の言語の DOM 束縛を使って書いた code
は、見出し要素節と段落群(文書断片)節から章要素節を作ります。

[PRE[
 my $heading := $document.createElement ('h');
 $heading.appendChild ($document.createTextNode ('Heading'));
 my $paragraphs := $document.createDocumentFragment ();
 for my $i (1..10) {
   my $paragraph := $document.createElement ('p');
   $paragraph.appendChild ($document.createTextNode ("Paragraph $i");
   $paragraphs.appendChild ($paragraph);
 }
 ;; ここで、 $heading 節は
 ;;   <h>:$heading
 ;;    +-- "Heading"
 ;;  $paragraphs 節は
 ;;   {断片}:$paragraphs
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 1"
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 2"
 ;;    :
 ;;    +-- <p>
 ;;         +-- "Paragraph 10"
 ;; という構造になっている。
 
 my $section = makeSection ($heading, $paragraphs);
 
 function makeSection ($heading, $paragraphs) {
   my $section = $document.createElement ('section');
   $section.appendChild ($heading);
   $section.appendChild ($paragraph);
   return $section;
 }
 
 ;; 最終的に、 $section 節は次のような構造となる。
 ;;   <section>
 ;;     +-- <h>:$heading
 ;;     |    +-- "Heading"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 1"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 2"
 ;;     :
 ;;     +-- <p>
 ;;          +-- "Paragraph 10"
 ;; {断片} の節そのものは消滅したことに注意。
]PRE]

[7] 仕様書:
-[DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-B63ED1A3>
-[DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3>
[[#comment]]

*メモ@


1.1
log
@auto-commited
@
text
@d4 2
a5 3
[3] [RUBYB[文書断片] [Document fragment]]は、
その名の通り[[文書]]の[[断片]]です。 [[XML]]
の[[整形式]][[解析実体]]に丁度相当します。
d7 6
a12 1
文書[RUBY[節] [ノード]]は、要素節を1つしか持てません。
d14 1
a14 1
その節の外側に文節などを自由に配置できます。
d16 8
a23 7
[1] [RUBYB[文書断片節] [[CODE(DOM)[DocumentFragment]] node]]は、次の[[節]]を子供に持てます:
:[[Element]] (要素節):[DOM1]
:[[ProcessingInstruction]] (処理指令節):[DOM1]
:[[Comment]] (注釈節):[DOM1]
:[[Text]] (文節):[DOM1]
:[[CDATASection]] (文字データ節):[DOM1]
:[[EntityReference]] (実体参照節):[DOM1]
d27 1
a27 1
(DOM 1 では追加の構成員の定義はありません。)
d29 1
a29 1
[4] 文書断片[RUBY[物体] [オブジェクト]]を
d86 1
@

