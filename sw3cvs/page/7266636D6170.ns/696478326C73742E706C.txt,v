head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.1
date	2003.06.06.12.26.54;	author make;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-commited
@
text
@#?perl/5

use strict;
local $/ = "\n\n";
our %Point = (
	next	=> 0,
	obsoletes	=> 500,
	also	=> 10,
	updates	=> 200,
	obsoletedBy	=> 600,
	updatedBy	=> 400,
);

my $prev = '';

while (<>) {
if (/^(\d+)\s+.+?(\([^()]+\)(?:[^()]+\([^()]+\))*)/s) {
  my $all = $_;
  my $this = 'RFC '.(0+$1);
  print $prev . '!' . $this . '!' . $Point{next} . "\n" if $prev && $Point{next};
  $prev = $this;
  my $l = $2;
  $l =~ s/[\x20\t\r\n]+/\x20/gs;
  $l =~ s{\(([^()]+)\)}{
    my $i = $1;
    if ($i =~ /Obsoletes (.+)/) {
      for (items2items ($1)) {
        print $_ . '!' . $this . '!' . $Point{obsoletes} . "\n";
        print $this . '!' . $_ . '!' . $Point{obsoletes} . "\n";
      }
    #} elsif ($i =~ /Obsoleted by (.+)/) {
    #  for (items2items ($1)) {
    #    print $this . '!' . $_ . '!' . $Point{obsoletedBy} . "\n";
    #  }
    } elsif ($i =~ /Also (.+)/) {
      for (items2items ($1)) {
        print $_ . '!' . $this . '!' . $Point{also} . "\n";
        print $this . '!' . $_ . '!' . $Point{also} . "\n";
      }
    } elsif ($i =~ /Updates (.+)/) {
      for (items2items ($1)) {
        print $_ . '!' . $this . '!' . $Point{updates} . "\n";
        print $this . '!' . $_ . '!' . $Point{updates} . "\n";
      }
    #} elsif ($i =~ /Updated by (.+)/) {
    #  for (items2items ($1)) {
    #    print $this . '!' . $_ . '!' . $Point{updatedBy} . "\n";
    #  }
    }
  }ge;
}
}

sub items2items ($) {
  my @@r;
  for (split /, /, shift) {
    if (/^([A-Z]{3})(\d+)$/) {
      push @@r, $1 . ' ' . (0+$2);
    } else {
      push @@r, $_;
    }
  }
  @@r;
}
@
