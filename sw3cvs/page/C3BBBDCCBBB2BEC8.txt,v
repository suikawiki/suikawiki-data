head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2004.02.23.02.04.33;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.27.02.03.13;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] [[具象構文]]によって[[短縮参照区切子機能]]に割り当てられる[[文字列]]。短縮参照列。 Short reference (string)。 ([[JISX4151]]‐1992 定義 (155))

[2] 短縮参照は、[[現対応表]]によって[[一般実体]]に対応付けてある場合には、その実体に置換します。対応付けていない場合には、[[区切子]]として認知できるなら、[[分離子]] [CODE(SGML)[[[s]]]] として扱い、そうでなければ[[データ]]として扱います。 (8.4.6 参照。)

[4] 短縮参照を使うと、一般の自然言語の記述で、あるいは計算機上での自然言語記述で慣習的に使われている記号によるマーク付けを 
SGML 的に処理させることができます。たとえば、引用符 [CODE(char)["]]
を引用要素の[[タグ]] ([SAMP(SGML)[<q>]] や [SAMP(SGML)[</q>]])
として解釈させることが出来ます。

[WEAK[参考: HTML の [CODE(HTMLe)[[[q]]]] 要素を使うと、未対応ブラウザで表示した時に引用符が補われないことがよく問題視されましたが、本来 (SGML 的慣習に従うなら)、 [CODE(HTMLe)[q]] 要素の開始タグ・終了タグは短縮参照を使うべきだったのです。そうすれば未対応ブラウザの問題はなかったはずです。 (が、 HTML でいままで使われていなかった短縮参照を使い出すことによる問題の方が大きかったでしょうね。)]]

[5]
短縮参照機能は、 [[SGML]] の任意選択の機能ではありません。
ですから、すべての適合 SGML 解析器は短縮参照を扱えるはずです。

似た機能として[[データタグ]]というものがあり、こちらは[[マーク]]である文字列を同時にデータとして扱うことが出来るようになりますが、
短縮参照ほど柔軟性がありませんし、なにより任意選択の機能なので、
実装されていない可能性があります。

[[#comment]]

* 参考文献
- [3] [[マークの付けかた]] - 短縮参照
<http://www.satoshii.org/markup/sgml/shortref>
[[#comment]]

* メモ
@


1.1
log
@auto-committed
@
text
@d2 27
a28 2
[1] [[具象構文]]によって[[短縮参照区切子機能]]に割り当てられる[[文字列]]。短縮参照列。 Short reference (string)。 ([[JISX4151]]‐1992 定義 (155))
- [2] 短縮参照は、[[現対応表]]によって[[一般実体]]に対応付けてある場合には、その実体に置換します。対応付けていない場合には、[[区切子]]として認知できるなら、[[分離子]] [CODE(SGML)[[[s]]]] として扱い、そうでなければ[[データ]]として扱います。 (8.4.6 参照。)
@

