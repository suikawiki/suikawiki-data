head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2003.12.13.02.03.04;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9 page-icon="HTTP"
[1] [CODE(HTTP)[X-WAP-Proxy-Cookie]] 頭欄は、[[クッキー串]]が[[起源サーバー]]からの
[[Cookie]] を ([[利用者エージェント]]の代わりに) 蓄積するべきかどうかの利用者エージェントの意思表示に、
あるいは利用者エージェントからクッキー串への状態情報の送信に使用します。
<http://www.openmobilealliance.org/wapdocs/wap-223-httpsm-20001213-a.pdf> 7.1, 9.2
で定義されています。

-[2] [CODE(HTTP)[[DFN[X-WAP-Proxy-Cookie]] := "X-WAP-Proxy-Cookie" *[[WSP]] ":" [ [[FWS]] ] choice]]

[3] [CODE(ABNF)[choice]]:
:[CODE(HTTP)[[[cache]]]:クッキー串は[[利用者エージェント]]の代わりにクッキーを[[キャッシュ]]するとともに、[[起源サーバー]]に送信します。
:[CODE(HTTP)[[[cache-has-state]]]:クッキー串は利用者エージェントの代わりにクッキーをキャッシュするとともに、起源サーバーに送信します。[[利用者エージェント・セッション]]で既に [CODE(HTTP)[X-Wap-Proxy-Set-Cookie]] 欄を最低1つ受信している場合には [CODE(HTTP)[cache]] ではなくこちらを使用しまして、 UA とクッキー串で同期します。キャッシュ串は以前の UA セッションを元にしたクッキーを捨てるべきかとかを判定できます。
:[CODE(HTTP)[[[delete]]]:クッキー串は起源サーバーにクッキーを送りませんし、受信したクッキーを送りもしません。串は濾紙 (「クッキー・モンスター」) として動作し、 UA に送信する前にすべてのクッキーを削除します。
:[CODE(HTTP)[[[none]]]: HTTP クッキー頭欄群を途中で邪魔せずに素通しします ([DFN[貫通 (pass‐through) クッキー串]])。これが既定の動作です。
:[CODE(HTTP)[[[session]]]:[CODE(HTTP)[[[Set-Cookie]]]] 頭欄に [CODE(HTTP)[[[max-age]]]] 属性があるかどうかで、クッキー串で蓄積するか UA に渡すかを決めます。 (セッションを基にしたクッキーと長生きクッキーで保存場所を分離するのに使えます。)
:[CODE(HTTP)[[[session-has-state]]]:[CODE(HTTP)[session]] とほぼ同じですが、 [CODE(HTTP)[cache]] に対する [CODE(HTTP)[cache-has-state]] のように機能します。

[4]
,                   ,[ABBR[起サ] [起源サーバー]]→[ABBR[串] [クッキー串のキャッシュ]],[ABBR[串] [クッキー串のキャッシュ]]→[ABBR[起サ] [起源サーバー]],[ABBR[串] [クッキー串のキャッシュ]]: [ABBR[セ基] [セッションを基にしたクッキー]]消去,[ABBR[非セ] [セッションを基にしていないクッキー]]消去,[ABBR[起サ] [起源サーバー]]→[ABBR[ク] [クライアント]]
,[CODE(HTTP)[cache]],●,●,●
,[CODE(HTTP)[cache-has-stale]],●,●,
,[CODE(HTTP)[delete]],×,×,×,×,×
,[CODE(HTTP)[none]] (既定値),−,−,−,−,●
,[CODE(HTTP)[session]],[ABBR[非セ] [セッションを基にしていないクッキー]],●,●
,[CODE(HTTP)[session-has-stale]],[ABBR[非セ] [セッションを基にしていないクッキー]],●,

:●:[[MUST]]。
:×:[[MUSTNOT]]。
:セッションを基にしたクッキー:[CODE(HTTP)[[[max-age]]]] 属性なしで起源サーバーから送られてきたクッキー

[5] [CODE(HTTP)[session]] 系では、セッションを基にしたクッキーはクッキー串に蓄積、
そうでなければ貫通。

[6] クッキー串が UA から [CODE(HTTP)[Cookie]] 頭欄を受け取ったときで
[CODE(HTTP)[cache]] 系または [CODE(HTTP)[session]] 系のときには、
クッキー串は [CODE(HTTP)[Cookie]] 頭欄に追加しても構いません。
名前・ [CODE(HTTP)[[[path]]]]・[CODE(HTTP)[[[domain]]]] が一致する時には UA
が指定した通りにサーバーに送らなければ'''なりません'''。

[CODE(HTTP)[delete]] または [CODE(HTTP)[none]] のときには素通ししなければ'''なりません'''。

[7] クッキー串が UA の代わりにクッキーを管理することにしたら、
中継要求を転送する前に [CODE(HTTP)[X-WAP-Proxy-Cookie]] 頭欄を削除しなければ'''なりません'''。
管理しないことにした場合はそのまま残さなければ'''なりません'''。

[8] [CODE(HTTP)[Set-Cookie]] で [CODE(HTTP)[[[secure]]]] 属性がついているときにはクッキー串はそれを蓄積しては'''いけません'''。
必ず UA に引き渡します。
- [9] UA は、前にセッション中に [CODE(HTTP)[X-WAP-Proxy-Set-Cookie]] を受取っている時には [CODE(HTTP)[-has-state]] 系にしないと'''いけません'''。 (10.2 参照)
@
