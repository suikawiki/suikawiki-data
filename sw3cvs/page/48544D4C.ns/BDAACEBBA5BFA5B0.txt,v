head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.03.27.02.00.47;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[1] [[WinIE]] は [[HTML文書]]内の未知の[[要素型]]の要素の[[開始タグ]]・終了タグを[[強制空要素]]のタグとして処理します。

参考: ''Internet Explorer (Windows) CSSバグリスト'' <http://cssbug.at.infoseek.co.jp/detail/winie/b146.html>

では、この仕様は正しいでしょうか、間違いでしょうか。

[[SGML]] 的には、 [SAMP(HTML)[</foo>]]
の [SAMP[</foo]] まで読んで、それが [CODE(SGML)[[[etago]]]]
と [[GI]] であると解釈します。 [SAMP[foo]]
という GI を知らないからといって後戻りして
[SAMP[<]] を [CODE(SGML)[[[stago]]]] 
と認知しなおすことはできません。
(WinIE で [CODE(HTML)[</]] が [CODE(SGML)[etago]]
であることは間違いありません。そうでないと巷の HTML
文書をまともに読むことすらできなくなります。
[WEAK[(SGML 構文解析器ではない WinIE の[[システム宣言]]なんて推測しても空しいだけだけど。)]])

であるからにして、 WinIE の挙動は SGML
違反である、と思ったのですが、逃げ道があることに気づきました。
SGML は SGML 文書を解釈してどんな [[DOM]] 
木を作るかを一切規定していません。
非妥当 SGML 文書の誤り回復の結果として未知の要素型名の終了タグを
[CODE[/]] + 要素型名の[[要素節]]に写像しても、
少なくても SGML に文句を言われる筋合いは無いかもしれません。

@
