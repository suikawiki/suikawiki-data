head	1.6;
access;
symbols
	suikawiki3-final:1.6;
locks; strict;
comment	@# @;
expand	@o@;


1.6
date	2008.07.03.04.11.27;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2007.06.18.02.51.17;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.03.02.28.05;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.31.02.17.47;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2005.11.23.02.19.18;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.31.02.06.53;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.6
log
@auto-committed
@
text
@

* onload 属性 (HTML, XHTML 1)

[1] [[HTML]] の [CODE(HTMLe)[[[body]]]] 要素と
[CODE(HTMLe)[[[frameset]]]] 要素の [DFN[[CODE(HTMLa)[onload]] 属性]]は、
[[UA]] が[[窓]]またはすべての[[フレーム]]を読込み終えた時に発生する[[事象]]に関する[[内在事象]]属性です。

[2] 仕様書:
- [[HTML 4]]
-- [CODE(HTMLa)[onload]] 属性
<IW:HTML4:"interact/scripts.html#adef-onload">

[10]
aaaaa
([[bb]] [ee] [WEAK[2006-10-29 13:35:48 +00:00]])


[14]
<a href=http://newbeltso.110mb.com >white studded belt</a>
<a href=http://jerseysnewk.110mb.com >south jersey fertility</a>
<a href=http://tightsop.110mb.com >tights pussy</a>
([[dorinvc]] [dorinta@@yahoo.com])


[[#comment]]


** 代替

[3] 内在事象属性は[[表現と構造の分離]]の原則に反するので、
好ましくないと考える人もいます。また、 [[DOM 0]]
に基づく古い設計です。

代わりに、 [CODE(HTMLe)[[[script]]]] 要素などにより関連付けたスクリプト内で
[[DOM 2]] 以上の[[事象]]に関するメソッド等が利用できます。
DOM 水準2 や DOM 水準 3 の HTML 事象モジュールはこの属性に対応する
DOM の事象 [CODE(DOM)[[[load]]]] を用意しています。

[[#comment]]


** 属性値

[4] この属性の値は [CODE(SGML)[%[[Script]]]] です。 [[SGML]]
的には [CODE(SGML)[[[CDATA]]]] です。[[スクリプト言語]]は、
[CODE(HTTP)[[[Content-Script-Type]]]] によります。

[5] この属性は省略可能です。

[[#comment]]


** 他との関係

[6] この属性に対応する DOM の事象は [CODE(DOM)[[[load]]]]
です。そちらもあわせてごらんください。

[7] 反対の意味の [CODE(HTMLa)[[[onunload]]]] 属性もあります。

[[#comment]]


** 例

[8] 新しい窓の読込み時の動作を規定する例 (JavaScript) [SRC[HTML 4 18.2.3]]
[PRE(HTML)[
<SCRIPT type="text/javascript">
      function my_onload() {
         . . .
      }
      var win = window.open("some/other/URI")
      if (win) win.onload = my_onload
</SCRIPT>
]PRE]

なんで HTML 4 仕様書がわざわざこんな例を [Q[interesting]]
とかいって取り上げているのか謎です。 DOM 水準 0
では [CODE(JS)[window.onload]] で [CODE(HTMLe)[body]]
要素の [CODE(HTMLa)[onload]] に access できるのでしょうか?

新しい窓の読込み時の動作を規定する例 (Tcl) [SRC[HTML 4 18.2.3]]
[PRE(HTML)[
 <SCRIPT type="text/tcl">
     proc my_onload {} {
       . . .
     }
     set win [window open "some/other/URI"]
     if {$win != ""} {
         $win onload my_onload
     }
 </SCRIPT>
]PRE]

それに、 [CODE(DOMm)[[[open]]]] したあとに [CODE(DOMa)[onload]]
を設定しても、場合によっては既に読込みが終わっているのではないかと思うのですが、
DOM 水準 0 ブラウザの実装との絶妙なバランスによって正しく動作していたのでしょうかねぇ。

[[#comment]]


** メモ

[9]
[CITE[Internet Explorer の JavaScript の脆弱性に関する注意喚起]] <http://www.jpcert.or.jp/at/2005/at050010.txt>
([[名無しさん]] [WEAK[2005-11-23 00:41:40 +00:00]])

[11]
[CITE[Bug 225244 &#8211; onload attribute not allowed in HTML tags other then BODY and FRAMESET]] ([CODE[2007-02-28 19:55:36 +09:00]] 版) <https://bugzilla.mozilla.org/show_bug.cgi?id=225244>
([[名無しさん]])

[12]
[CITE[A blog? with Σαιτω - onload と Safari]] ([CODE[2007-06-15 18:42:57 +09:00]] 版) <http://d.hatena.ne.jp/saiton/20070615/1181861435>
([[名無しさん]] [WEAK[2007-06-15 12:36:39 +00:00]])

[13]
[CITE[Safari and page load timing]] ([CODE[2007-06-16 11:18:57 +09:00]] 版) <http://www.howtocreate.co.uk/safaribenchmarks.html>
([[名無しさん]] [WEAK[2007-06-16 02:24:23 +00:00]])

[[#comment]]


* メモ@


1.5
log
@auto-committed
@
text
@d18 8
a115 1

d117 1
a117 1
[CITE[Safari and page load timing]] ([TIME[2007-06-16 11:18:57 +09:00]] 版) <http://www.howtocreate.co.uk/safaribenchmarks.html>
a118 1

@


1.4
log
@auto-committed
@
text
@a99 1

d101 1
a101 1
[CITE[Bug 225244 &#8211; onload attribute not allowed in HTML tags other then BODY and FRAMESET]] ([TIME[2007-02-28 19:55:36 +09:00]] 版) <https://bugzilla.mozilla.org/show_bug.cgi?id=225244>
d103 9
@


1.3
log
@auto-committed
@
text
@a13 1

a17 1

d99 6
@


1.2
log
@auto-committed
@
text
@d14 6
a100 1

@


1.1
log
@auto-committed
@
text
@d1 100
a100 87
* onload 属性 (HTML, XHTML 1)
[1] [[HTML]] の [CODE(HTMLe)[[[body]]]] 要素と
[CODE(HTMLe)[[[frameset]]]] 要素の [DFN[[CODE(HTMLa)[onload]] 属性]]は、
[[UA]] が[[窓]]またはすべての[[フレーム]]を読込み終えた時に発生する[[事象]]に関する[[内在事象]]属性です。

[2] 仕様書:
- [[HTML 4]]
-- [CODE(HTMLa)[onload]] 属性
<IW:HTML4:"interact/scripts.html#adef-onload">

[[#comment]]

** 代替

[3] 内在事象属性は[[表現と構造の分離]]の原則に反するので、
好ましくないと考える人もいます。また、 [[DOM 0]]
に基づく古い設計です。

代わりに、 [CODE(HTMLe)[[[script]]]] 要素などにより関連付けたスクリプト内で
[[DOM 2]] 以上の[[事象]]に関するメソッド等が利用できます。
DOM 水準2 や DOM 水準 3 の HTML 事象モジュールはこの属性に対応する
DOM の事象 [CODE(DOM)[[[load]]]] を用意しています。

[[#comment]]

** 属性値

[4] この属性の値は [CODE(SGML)[%[[Script]]]] です。 [[SGML]]
的には [CODE(SGML)[[[CDATA]]]] です。[[スクリプト言語]]は、
[CODE(HTTP)[[[Content-Script-Type]]]] によります。

[5] この属性は省略可能です。

[[#comment]]

** 他との関係

[6] この属性に対応する DOM の事象は [CODE(DOM)[[[load]]]]
です。そちらもあわせてごらんください。

[7] 反対の意味の [CODE(HTMLa)[[[onunload]]]] 属性もあります。

[[#comment]]

** 例

[8] 新しい窓の読込み時の動作を規定する例 (JavaScript) [SRC[HTML 4 18.2.3]]
[PRE(HTML)[
<SCRIPT type="text/javascript">
      function my_onload() {
         . . .
      }

      var win = window.open("some/other/URI")
      if (win) win.onload = my_onload
</SCRIPT>
]PRE]

なんで HTML 4 仕様書がわざわざこんな例を [Q[interesting]]
とかいって取り上げているのか謎です。 DOM 水準 0
では [CODE(JS)[window.onload]] で [CODE(HTMLe)[body]]
要素の [CODE(HTMLa)[onload]] に access できるのでしょうか?

新しい窓の読込み時の動作を規定する例 (Tcl) [SRC[HTML 4 18.2.3]]
[PRE(HTML)[
 <SCRIPT type="text/tcl">
     proc my_onload {} {
       . . .
     }
     set win [window open "some/other/URI"]
     if {$win != ""} {
         $win onload my_onload
     }
 </SCRIPT>
]PRE]

それに、 [CODE(DOMm)[[[open]]]] したあとに [CODE(DOMa)[onload]]
を設定しても、場合によっては既に読込みが終わっているのではないかと思うのですが、
DOM 水準 0 ブラウザの実装との絶妙なバランスによって正しく動作していたのでしょうかねぇ。

[[#comment]]

** メモ

[[#comment]]

* メモ
@

