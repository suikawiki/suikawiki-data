head	1.12;
access;
symbols
	suikawiki3-final:1.12
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.12
date	2007.04.23.02.25.09;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2007.04.03.02.34.12;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2006.12.27.02.16.40;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.18.02.14.06;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2006.02.03.02.14.32;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.27.02.12.32;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.18.02.06.05;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.18.02.05.31;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.13.02.06.00;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.13.02.08.49;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.08.02.05.19;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.28;	author make;	state Exp;
branches;
next	;


desc
@@


1.12
log
@auto-committed
@
text
@
[13]
[DFN[XML [RUBY[束縛言語] [そくばくげんご] @@en[binding language]]]]
([DFN@@en[[ABBR[XBL]]]]) は、
[[XML]] [[要素]]に[[スタイル・シート]]、[[スクリプト]]、
仮想的な[[内容]] ([DFN[[[影木]]]]) などを結びつける
([DFN[[[束縛]]する]]) ための[[マーク付け言語]]です。

[17]
[[XBL]] は[[表現と構造の分離]]、あるいは [[MVC]]
モデルの実現に有効と考えられています。

最も分かりやすいと思われるのが [[HTML]] の[[ファイルうp]]
[[制御子]]で、 [[HTML]] [[文書]]内では [CODE(HTMLe)@@en[[[input]]]]
[[要素]]1つで表されますが、多くの 
[[Webブラウザ]]は[[ファイル名]]のための[[テキスト入力]][[制御子]]と、
視覚的に[[ファイル]]を選択するための[[押しボタン]][[制御子]]
[WEAK[(など)]] の組合せで[[レンダリング]]されます。
[[Gecko]] では、実際にこの[Q[意味的には1つのもの]]と[Q[実際上は複数組合わさった複雑なもの]]の[Q[[[束縛]]]]のために
[[XBL]] を使っています。

[14] '''3つの XBL''':
現在 [DFN[XBL]] と呼ばれているものには3種類あります。
- [DFN[[[XBL 1]]]]: [[Gecko]] 
[WEAK[([[Mozilla Suite]], [[Mozilla Firefox]] など)]]
が実装しています。
- [DFN[[[XBL 2.0]]]]: [[Mozilla財団]]が中心となって開発中の、
[[XBL 1.0]] の後継仕様です。
- [DFN[[[sXBL]]]]: [[W3C]] が開発中の、 [[SVG 1.2]]
で使うための仕様です。

[[Mozilla]] [[XBL 2.0]] と [[sXBL]] はまだ仕様が完成しておらず、
実装もありません。

3つの [[XBL]] 仕様は設計思想が似ていますが、互換性はありません。


* 歴史

[15]
[DFN[[[XBL 1.0]]]] 仕様は、2000年11月に [[Netscape]] 
社により策定されました [SRC@@en[[XBL 1.0] の履歴参照]]。
そして、2001年2月には、 [[W3C]] に[[提出]]されました
[SRC@@en[XBL 1.0 NOTE]]。

- [XBL 1.0] [CITE@@en[XBL (Extensible Binding Language) 1.0]] 
<http://www.mozilla.org/projects/xbl/xbl.html>
- [XBL 1.0 NOTE] [CITE[XBL - XML Binding Language]] 
<http://www.w3.org/TR/2001/NOTE-xbl-20010223/>

[16]
[[Gecko]] は [[XBL 1.0]] 仕様に基づいてこれを実装しましたが、
すべての部分で仕様通りとはなっておらず、また、
必要に応じて拡張が行われました。

[[Gecko]] の実装する [DFN[[[XBL 1]]]]
に関する正式な仕様書のようなものはありませんが、
[[XULPlanet]] の参照マニュアル [SRC@@en[XULPlanet]]
(と [[Gecko]] の[[ソース・コード]]自体) 
が規範的なものと考えられています。

なお、2003年に [[Mozilla.org]] の公開している [[XBL 1.0]]
仕様書 [SRC@@en[XBL 1.0]] は微妙に改訂されていますが、
依然、実際の [[Gecko]] の実装とは異なっています。

- [XULPlanet] [CITE@@en[Element Reference]] 
<http://www.xulplanet.com/references/elemref/#xbl>

[17]
時は流れて2004年、 [[W3C]] [[SVG WG]] は [[SVG 1.2]]
の仕様策定を進めていましたが、 
[DFN@@en[[ABBR[[[[RCC]]] [Rendering Custom Content]]]]
という、丁度 [[XBL]] と同じような機能がありました。
[[W3C]] [[CSS WG]] は [[XBL 1.0]] の[[提出]] (>>15) 
[WEAK[(と、 [[Microsoft]] の [ABBR@@en[[[HTC]]] [HTML Components]] など類似の提案)]] を受けて
[[CSS 3]] でこの機能を扱うことにしていましたので、
独自の [ABBR@@en[[[RCC]]] [Rendering Custom Content]] は開発を中止し、 
[[W3C]] で開発する [[XBL 2.0]] を [[SVG]] でも採用することに決めました。

[[W3C]] [DFN@@en[[[Binding Task Force]]]] は、まず [[SVG 1.2]]
で必要な機能を規定する
[DFN@@en[[ABBR[[[sXBL]]] [SVG's XML Binding Language]]]] 仕様を完成させ、
後に [[SVG]] 以外にも適用できる [[W3C]] [DFN@@en[[[XBL 2.0]]]]
仕様に発展させるという計画で、作業を進めています。

[18]
ところが2005年10月、 [[Mozilla財団]]は、 [[W3C]] における
[[XBL 2.0]] 標準化の方針の対立から、独自の [DFN@@en[[[XBL 2.0]]]]
仕様案を公表し、開発を進めています [SRC@@en[XBL 2.0]]。
[[W3C]] の [[XBL 2.0]] が未だ [[WD]] すら公開されていない状況で、
[[Mozilla]] の [[XBL 2.0]] は既に完成に近い状態で、
近い将来の [[Gecko]] の他、 [[Opera]] と [[Safari]]
も実装するのではないかと期待されています。

[[W3C]] と [[Mozilla]] の [[XBL 2.0]] に関する対立に関しては、
[[XBL 2.0]] の項をご覧下さい。

- [XBL 2.0] [CITE@@en[XML Binding Language 2.0]] 
<http://www.mozilla.org/projects/xbl/xbl2.html>

[27]
Not bad man! Look what i founf hier!!!!!
[PRE[
 http://bed-bath-and-beyond-ivan.blogspot.com/ <a href= http://bed-bath-and-beyond-ivan.blogspot.com/ >bed bath and beyound</a> [url= http://bed-bath-and-beyond-ivan.blogspot.com/ ]bed bath and beyound[/url]   
http://bed-bath-and-beyond-ivan.blogspot.com/
([[Prohor!]] [openbfor@@rtydg.com])
]PRE]

[[#comment]]


* メモ

- [1] ''XulPlanet.com -'' <http://www.xulplanet.com/downloads/xabyl/>: [[Visual]] な XBL editor。
- [2] ''XBL - XML Binding Language'' <http://www.w3.org/TR/xbl/>
- [3] ''Surfin' Safari'' <http://www.mozillazine.org/weblogs/hyatt/archives/2003_05.html#003262>: XBL と [[XSLT]] の比較。 XBL と XSLT は全然違うものだけど、 XBL で出来ることは一見 XSLT でもできて、 XBL は不要なようにも思える。そんな意見を斬っている。
- [4] >>3 
- [5] >>3 [WEAK[もちろんそれの著者は分かっているんだけど、]] XBL と XSLT は対立するものじゃなくて、用途に応じて使い分けるものだよね。 XSLT と [[CSS]] が対立するものではないように。だから、 XSLT + CSS + XBL という使い方も十分ありえるわけ。

[6]
''SVG's XML Binding Language (sXBL)'' <http://www.w3.org/TR/sXBL/>

汎用の XBL 2.0 が W3C SVG WG で準備中だそうです。。。

([[名無しさん]] [WEAK[2004-09-07 03:36:07 +00:00]])

[7]
''XBL (Extensible Binding Language) 1.0'' <http://www.mozilla.org/projects/xbl/xbl.html>

Mozilla.org の XBL 1.0 の解説。
([[名無しさん]])

[8]
[[Gecko]] の [CODE(CSS)[[[-moz-binding]]]] で縛った XBL は[[文書順]]ないし表示した状態の上から順番に処理されていくわけじゃなくて、何かの順番 (無作為なのか、というよりもむしろレンダリング中の何かの作業をした順なのか)  で処理されていくっぽい。
ためしに連番を振らせてみるとわかる。

でももしかすると、実行開始は同時だけど並行処理の結果連番用の変数に access するところに到達するまでの順番が狂ってるのかもしれん。

ところでそうすると、安全を求めるならスクリプト内で [[lock]] とかせねばならぬということか? その辺どういう実装になってるんだ?
([[名無しさん]] [Firefox 0.9])

[9]
[[Gecko]] では[[フォーム]][[制御子]]は一部
[[XBL]] で実装されています。ですから、
それに何かを追加しようとして
[PRE(CSS example)[
[SAMP(HTMLe)[textarea]] {
  [[-moz-binding]]: url([VAR[foo]]#[VAR[bar]]);
}
]PRE]

なんてしちゃうと、本来の機能を殺してしまいます。
例えば [CODE(HTMLe)[textarea]] の場合は矢印鍵による文章内の移動ができなくなってしまいます。

これを回避するためには、
[CODE(XMLe)[[[binding]]]] 要素に
[CODE(XMLa)[[[extends]]]] 属性を指定して、
既存の XBL を継承するという形にしてやります。
[CODE(XMLa)[extends]] 属性の値は XBL
の [[URI参照]]か、 [[QName]]
だそうで、 QName の場合はその QName
の要素型の機能を継承するということらしいですが、
うまく動作しないという話もありますし、
実際動きませんでした。
[WEAK[(そもそも本質的に区別できない URI 参照と QName を同じ属性の値にするなというのもある。)]]

ということで、 [CODE(XMLa)[extends]]
にはブラウザの既定のスタイル・シートで指定された束縛の
URI 参照 [WEAK[([SAMP(URI)[[[resource]]:]] なんちゃら)]]
を指定することになります。
ただし、これが過去から将来までのすべての
Gecko 系ブラウザで機能するのかというと、
甚だ怪しい。しかも XBL
でエラーが発生すると何も言わずに束縛された要素が非表示になってしまうから困ります。

ちなみに、 [SAMP(HTMLe)[textarea]]
の場合、 [[Firefox]] では元々の XBL
束縛先は
[SAMP(URI)[resource://gre/res/builtin/platformHTMLBindings.xml#textAreas]]
でした。
しかし古い [[Mozilla Suite]]
(最近の Mozilla Suite は未調査)
ではこれは存在せず、
[SAMP(URI)[resource:///res/builtin/platformHTMLBindings.xml#textAreas]]
と指定すれば Mozilla Suite
でも Firefox でも動くようです。

([[名無しさん]] [WEAK[2005-03-09 08:11:36 +00:00]])

[10]
なお、 >>2 や >>7 の XBL 1.0 は古い文書で、
今の Gecko の実装とは違っているところが色々あります。
[[XUL Planet]] の tutorial や reference
を見た方が良いです。

[CITE[10.1 - Introduction to XBL]] <http://xulplanet.com/tutorials/xultu/introxbl.html>
([[名無しさん]] [WEAK[2005-03-09 08:15:50 +00:00]])

[11]
[CITE[Index of /specs/xbl]] <http://www.hixie.ch/specs/xbl/>
([[名無しさん]])

[12]
>>8 
2年位前までの Gecko は文書順だったような。
最近のはむしろ積極的に逆文書順にしているようにも見える。
([[名無しさん]] [sage] [WEAK[2005-04-17 03:05:04 +00:00]])

[19]
[CITE[XBL - MDC]] <http://developer.mozilla.org/en/docs/XBL>
([[名無しさん]])

[20]
[CITE[XTech 2005 Presentations:Extending Gecko with XBL and XTF - MDC]] <http://developer.mozilla.org/en/docs/XTech_2005_Presentations:Extending_Gecko_with_XBL_and_XTF>
([[名無しさん]])

[21]
[CITE[XUL Tutorial:Introduction to XBL - MDC]] <http://developer.mozilla.org/en/docs/XUL_Tutorial:Introduction_to_XBL>
([[名無しさん]])

[22]
実はこいつも対立規格だったりするのか??

[CITE[XML Handlers]] 
<http://hades.mn.aptest.com/htmlwg/WD-xml-handlers-20030609/>

[CITE[XHTML 2.0 - XHTML Handler Module]] 
<http://www.w3.org/TR/2005/WD-xhtml2-20050527/mod-handler.html>

([[名無しさん]] [sage])

[23]
>>22

[CITE[XML Events 2]] <http://hades.mn.aptest.com/htmlwg/xml-events/>

2004年12月
([[名無しさん]] [sage])

[24]
ofqcgnwv blvuz bkaefxnl mnzxer ldyv qgjmr sjvaoyqdb
([[rxeon vgjbfls]] [xpzmtb@@mail.com])

[25]
ofqcgnwv blvuz bkaefxnl mnzxer ldyv qgjmr sjvaoyqdb
([[rxeon vgjbfls]] [xpzmtb@@mail.com])

[26]
ofqcgnwv blvuz bkaefxnl mnzxer ldyv qgjmr sjvaoyqdb
([[rxeon vgjbfls]] [xpzmtb@@mail.com])

[28]
[CITE[XUL Apps > Tips > ホイールスクロールで普通のボックスの内容をスクロールする - outsider reflex]] ([[Piro(SHIMODA Hiroshi)]] 著, [TIME[2007-04-23 09:24:02 +09:00]] 版) <http://piro.sakura.ne.jp/xul/tips/x0030.html#path>
([[名無しさん]])

@


1.11
log
@auto-committed
@
text
@d102 3
a104 2
Not bad man! Look what i founf hier!!!!!
 http://bed-bath-and-beyond-ivan.blogspot.com/ <a href= http://bed-bath-and-beyond-ivan.blogspot.com/ >bed bath and beyound</a> [url= http://bed-bath-and-beyond-ivan.blogspot.com/ ]bed bath and beyound[/url]   
d107 1
a107 1

d250 6
a255 1
([[rxeon vgjbfls]] [xpzmtb@@mail.com])@


1.10
log
@auto-committed
@
text
@d101 7
d249 1
a249 2
([[rxeon vgjbfls]] [xpzmtb@@mail.com])

@


1.9
log
@auto-committed
@
text
@d225 4
a228 4
>>22

[CITE[XML Events 2]] <http://hades.mn.aptest.com/htmlwg/xml-events/>

d231 12
@


1.8
log
@auto-committed
@
text
@d213 19
@


1.7
log
@auto-committed
@
text
@d1 212
a212 198
[13]
[DFN[XML [RUBY[束縛言語][そくばくげんご]@@en[binding language]]]]
([DFN@@en[[ABBR[XBL]]]]) は、
[[XML]] [[要素]]に[[スタイル・シート]]、[[スクリプト]]、
仮想的な[[内容]] ([DFN[[[影木]]]]) などを結びつける
([DFN[[[束縛]]する]]) ための[[マーク付け言語]]です。

[17]
[[XBL]] は[[表現と構造の分離]]、あるいは [[MVC]]
モデルの実現に有効と考えられています。

最も分かりやすいと思われるのが [[HTML]] の[[ファイルうp]]
[[制御子]]で、 [[HTML]] [[文書]]内では [CODE(HTMLe)@@en[[[input]]]]
[[要素]]1つで表されますが、多くの 
[[Webブラウザ]]は[[ファイル名]]のための[[テキスト入力]][[制御子]]と、
視覚的に[[ファイル]]を選択するための[[押しボタン]][[制御子]]
[WEAK[(など)]] の組合せで[[レンダリング]]されます。
[[Gecko]] では、実際にこの[Q[意味的には1つのもの]]と[Q[実際上は複数組合わさった複雑なもの]]の[Q[[[束縛]]]]のために
[[XBL]] を使っています。

[14] '''3つの XBL''':
現在 [DFN[XBL]] と呼ばれているものには3種類あります。
- [DFN[[[XBL 1]]]]: [[Gecko]] 
[WEAK[([[Mozilla Suite]], [[Mozilla Firefox]] など)]]
が実装しています。
- [DFN[[[XBL 2.0]]]]: [[Mozilla財団]]が中心となって開発中の、
[[XBL 1.0]] の後継仕様です。
- [DFN[[[sXBL]]]]: [[W3C]] が開発中の、 [[SVG 1.2]]
で使うための仕様です。

[[Mozilla]] [[XBL 2.0]] と [[sXBL]] はまだ仕様が完成しておらず、
実装もありません。

3つの [[XBL]] 仕様は設計思想が似ていますが、互換性はありません。

* 歴史

[15]
[DFN[[[XBL 1.0]]]] 仕様は、2000年11月に [[Netscape]] 
社により策定されました [SRC@@en[[XBL 1.0] の履歴参照]]。
そして、2001年2月には、 [[W3C]] に[[提出]]されました
[SRC@@en[XBL 1.0 NOTE]]。

-[XBL 1.0] [CITE@@en[XBL (Extensible Binding Language) 1.0]] 
<http://www.mozilla.org/projects/xbl/xbl.html>
-[XBL 1.0 NOTE] [CITE[XBL - XML Binding Language]] 
<http://www.w3.org/TR/2001/NOTE-xbl-20010223/>

[16]
[[Gecko]] は [[XBL 1.0]] 仕様に基づいてこれを実装しましたが、
すべての部分で仕様通りとはなっておらず、また、
必要に応じて拡張が行われました。

[[Gecko]] の実装する [DFN[[[XBL 1]]]]
に関する正式な仕様書のようなものはありませんが、
[[XULPlanet]] の参照マニュアル [SRC@@en[XULPlanet]]
(と [[Gecko]] の[[ソース・コード]]自体) 
が規範的なものと考えられています。

なお、2003年に [[Mozilla.org]] の公開している [[XBL 1.0]]
仕様書 [SRC@@en[XBL 1.0]] は微妙に改訂されていますが、
依然、実際の [[Gecko]] の実装とは異なっています。

-[XULPlanet] [CITE@@en[Element Reference]] 
<http://www.xulplanet.com/references/elemref/#xbl>

[17]
時は流れて2004年、 [[W3C]] [[SVG WG]] は [[SVG 1.2]]
の仕様策定を進めていましたが、 
[DFN@@en[[ABBR[[[[RCC]]][Rendering Custom Content]]]]
という、丁度 [[XBL]] と同じような機能がありました。
[[W3C]] [[CSS WG]] は [[XBL 1.0]] の[[提出]] (>>15) 
[WEAK[(と、 [[Microsoft]] の [ABBR@@en[[[HTC]]][HTML Components]] など類似の提案)]] を受けて
[[CSS 3]] でこの機能を扱うことにしていましたので、
独自の [ABBR@@en[[[RCC]]][Rendering Custom Content]] は開発を中止し、 
[[W3C]] で開発する [[XBL 2.0]] を [[SVG]] でも採用することに決めました。

[[W3C]] [DFN@@en[[[Binding Task Force]]]] は、まず [[SVG 1.2]]
で必要な機能を規定する
[DFN@@en[[ABBR[[[sXBL]]][SVG's XML Binding Language]]]] 仕様を完成させ、
後に [[SVG]] 以外にも適用できる [[W3C]] [DFN@@en[[[XBL 2.0]]]]
仕様に発展させるという計画で、作業を進めています。

[18]
ところが2005年10月、 [[Mozilla財団]]は、 [[W3C]] における
[[XBL 2.0]] 標準化の方針の対立から、独自の [DFN@@en[[[XBL 2.0]]]]
仕様案を公表し、開発を進めています [SRC@@en[XBL 2.0]]。
[[W3C]] の [[XBL 2.0]] が未だ [[WD]] すら公開されていない状況で、
[[Mozilla]] の [[XBL 2.0]] は既に完成に近い状態で、
近い将来の [[Gecko]] の他、 [[Opera]] と [[Safari]]
も実装するのではないかと期待されています。

[[W3C]] と [[Mozilla]] の [[XBL 2.0]] に関する対立に関しては、
[[XBL 2.0]] の項をご覧下さい。

- [XBL 2.0] [CITE@@en[XML Binding Language 2.0]] 
<http://www.mozilla.org/projects/xbl/xbl2.html>

[[#comment]]

* メモ

- [1] ''XulPlanet.com -'' <http://www.xulplanet.com/downloads/xabyl/>: [[Visual]] な XBL editor。
- [2] ''XBL - XML Binding Language'' <http://www.w3.org/TR/xbl/>
- [3] ''Surfin' Safari'' <http://www.mozillazine.org/weblogs/hyatt/archives/2003_05.html#003262>: XBL と [[XSLT]] の比較。 XBL と XSLT は全然違うものだけど、 XBL で出来ることは一見 XSLT でもできて、 XBL は不要なようにも思える。そんな意見を斬っている。
- [4] >>3 
- [5] >>3 [WEAK[もちろんそれの著者は分かっているんだけど、]] XBL と XSLT は対立するものじゃなくて、用途に応じて使い分けるものだよね。 XSLT と [[CSS]] が対立するものではないように。だから、 XSLT + CSS + XBL という使い方も十分ありえるわけ。

[6]
''SVG's XML Binding Language (sXBL)'' <http://www.w3.org/TR/sXBL/>

汎用の XBL 2.0 が W3C SVG WG で準備中だそうです。。。

([[名無しさん]] [WEAK[2004-09-07 03:36:07 +00:00]])

[7]
''XBL (Extensible Binding Language) 1.0'' <http://www.mozilla.org/projects/xbl/xbl.html>

Mozilla.org の XBL 1.0 の解説。
([[名無しさん]])

[8]
[[Gecko]] の [CODE(CSS)[[[-moz-binding]]]] で縛った XBL は[[文書順]]ないし表示した状態の上から順番に処理されていくわけじゃなくて、何かの順番 (無作為なのか、というよりもむしろレンダリング中の何かの作業をした順なのか)  で処理されていくっぽい。
ためしに連番を振らせてみるとわかる。

でももしかすると、実行開始は同時だけど並行処理の結果連番用の変数に access するところに到達するまでの順番が狂ってるのかもしれん。

ところでそうすると、安全を求めるならスクリプト内で [[lock]] とかせねばならぬということか? その辺どういう実装になってるんだ?
([[名無しさん]] [Firefox 0.9])

[9]
[[Gecko]] では[[フォーム]][[制御子]]は一部
[[XBL]] で実装されています。ですから、
それに何かを追加しようとして
[PRE(CSS example)[
[SAMP(HTMLe)[textarea]] {
  [[-moz-binding]]: url([VAR[foo]]#[VAR[bar]]);
}
]PRE]

なんてしちゃうと、本来の機能を殺してしまいます。
例えば [CODE(HTMLe)[textarea]] の場合は矢印鍵による文章内の移動ができなくなってしまいます。

これを回避するためには、
[CODE(XMLe)[[[binding]]]] 要素に
[CODE(XMLa)[[[extends]]]] 属性を指定して、
既存の XBL を継承するという形にしてやります。
[CODE(XMLa)[extends]] 属性の値は XBL
の [[URI参照]]か、 [[QName]]
だそうで、 QName の場合はその QName
の要素型の機能を継承するということらしいですが、
うまく動作しないという話もありますし、
実際動きませんでした。
[WEAK[(そもそも本質的に区別できない URI 参照と QName を同じ属性の値にするなというのもある。)]]

ということで、 [CODE(XMLa)[extends]]
にはブラウザの既定のスタイル・シートで指定された束縛の
URI 参照 [WEAK[([SAMP(URI)[[[resource]]:]] なんちゃら)]]
を指定することになります。
ただし、これが過去から将来までのすべての
Gecko 系ブラウザで機能するのかというと、
甚だ怪しい。しかも XBL
でエラーが発生すると何も言わずに束縛された要素が非表示になってしまうから困ります。

ちなみに、 [SAMP(HTMLe)[textarea]]
の場合、 [[Firefox]] では元々の XBL
束縛先は
[SAMP(URI)[resource://gre/res/builtin/platformHTMLBindings.xml#textAreas]]
でした。
しかし古い [[Mozilla Suite]]
(最近の Mozilla Suite は未調査)
ではこれは存在せず、
[SAMP(URI)[resource:///res/builtin/platformHTMLBindings.xml#textAreas]]
と指定すれば Mozilla Suite
でも Firefox でも動くようです。

([[名無しさん]] [WEAK[2005-03-09 08:11:36 +00:00]])

[10]
なお、 >>2 や >>7 の XBL 1.0 は古い文書で、
今の Gecko の実装とは違っているところが色々あります。
[[XUL Planet]] の tutorial や reference
を見た方が良いです。

[CITE[10.1 - Introduction to XBL]] <http://xulplanet.com/tutorials/xultu/introxbl.html>
([[名無しさん]] [WEAK[2005-03-09 08:15:50 +00:00]])

[11]
[CITE[Index of /specs/xbl]] <http://www.hixie.ch/specs/xbl/>
([[名無しさん]])


[12]
>>8 
2年位前までの Gecko は文書順だったような。
最近のはむしろ積極的に逆文書順にしているようにも見える。
([[名無しさん]] [sage] [WEAK[2005-04-17 03:05:04 +00:00]])

@


1.6
log
@auto-committed
@
text
@d1 193
a193 93


- [1] ''XulPlanet.com -'' <http://www.xulplanet.com/downloads/xabyl/>: [[Visual]] な XBL editor。
- [2] ''XBL - XML Binding Language'' <http://www.w3.org/TR/xbl/>
- [3] ''Surfin' Safari'' <http://www.mozillazine.org/weblogs/hyatt/archives/2003_05.html#003262>: XBL と [[XSLT]] の比較。 XBL と XSLT は全然違うものだけど、 XBL で出来ることは一見 XSLT でもできて、 XBL は不要なようにも思える。そんな意見を斬っている。
- [4] >>3 
- [5] >>3 [WEAK[もちろんそれの著者は分かっているんだけど、]] XBL と XSLT は対立するものじゃなくて、用途に応じて使い分けるものだよね。 XSLT と [[CSS]] が対立するものではないように。だから、 XSLT + CSS + XBL という使い方も十分ありえるわけ。

[6]
''SVG's XML Binding Language (sXBL)'' <http://www.w3.org/TR/sXBL/>

汎用の XBL 2.0 が W3C SVG WG で準備中だそうです。。。

([[名無しさん]] [WEAK[2004-09-07 03:36:07 +00:00]])

[7]
''XBL (Extensible Binding Language) 1.0'' <http://www.mozilla.org/projects/xbl/xbl.html>

Mozilla.org の XBL 1.0 の解説。
([[名無しさん]])

[8]
[[Gecko]] の [CODE(CSS)[[[-moz-binding]]]] で縛った XBL は[[文書順]]ないし表示した状態の上から順番に処理されていくわけじゃなくて、何かの順番 (無作為なのか、というよりもむしろレンダリング中の何かの作業をした順なのか)  で処理されていくっぽい。
ためしに連番を振らせてみるとわかる。

でももしかすると、実行開始は同時だけど並行処理の結果連番用の変数に access するところに到達するまでの順番が狂ってるのかもしれん。

ところでそうすると、安全を求めるならスクリプト内で [[lock]] とかせねばならぬということか? その辺どういう実装になってるんだ?
([[名無しさん]] [Firefox 0.9])

[9]
[[Gecko]] では[[フォーム]][[制御子]]は一部
[[XBL]] で実装されています。ですから、
それに何かを追加しようとして
[PRE(CSS example)[
[SAMP(HTMLe)[textarea]] {
  [[-moz-binding]]: url([VAR[foo]]#[VAR[bar]]);
}
]PRE]

なんてしちゃうと、本来の機能を殺してしまいます。
例えば [CODE(HTMLe)[textarea]] の場合は矢印鍵による文章内の移動ができなくなってしまいます。

これを回避するためには、
[CODE(XMLe)[[[binding]]]] 要素に
[CODE(XMLa)[[[extends]]]] 属性を指定して、
既存の XBL を継承するという形にしてやります。
[CODE(XMLa)[extends]] 属性の値は XBL
の [[URI参照]]か、 [[QName]]
だそうで、 QName の場合はその QName
の要素型の機能を継承するということらしいですが、
うまく動作しないという話もありますし、
実際動きませんでした。
[WEAK[(そもそも本質的に区別できない URI 参照と QName を同じ属性の値にするなというのもある。)]]

ということで、 [CODE(XMLa)[extends]]
にはブラウザの既定のスタイル・シートで指定された束縛の
URI 参照 [WEAK[([SAMP(URI)[[[resource]]:]] なんちゃら)]]
を指定することになります。
ただし、これが過去から将来までのすべての
Gecko 系ブラウザで機能するのかというと、
甚だ怪しい。しかも XBL
でエラーが発生すると何も言わずに束縛された要素が非表示になってしまうから困ります。

ちなみに、 [SAMP(HTMLe)[textarea]]
の場合、 [[Firefox]] では元々の XBL
束縛先は
[SAMP(URI)[resource://gre/res/builtin/platformHTMLBindings.xml#textAreas]]
でした。
しかし古い [[Mozilla Suite]]
(最近の Mozilla Suite は未調査)
ではこれは存在せず、
[SAMP(URI)[resource:///res/builtin/platformHTMLBindings.xml#textAreas]]
と指定すれば Mozilla Suite
でも Firefox でも動くようです。

([[名無しさん]] [WEAK[2005-03-09 08:11:36 +00:00]])

[10]
なお、 >>2 や >>7 の XBL 1.0 は古い文書で、
今の Gecko の実装とは違っているところが色々あります。
[[XUL Planet]] の tutorial や reference
を見た方が良いです。

[CITE[10.1 - Introduction to XBL]] <http://xulplanet.com/tutorials/xultu/introxbl.html>
([[名無しさん]] [WEAK[2005-03-09 08:15:50 +00:00]])

[11]
[CITE[Index of /specs/xbl]] <http://www.hixie.ch/specs/xbl/>
([[名無しさん]])


[12]
d196 3
a198 3
最近のはむしろ積極的に逆文書順にしているようにも見える。
([[名無しさん]] [sage] [WEAK[2005-04-17 03:05:04 +00:00]])

@


1.5
log
@auto-committed
@
text
@a87 1

d91 7
@


1.4
log
@auto-committed
@
text
@d79 5
a84 6
[10]
なお、 >>2 や >>7 の XBL 1.0 は古い文書で、
今の Gecko の実装とは違っているところが色々あります。
[[XUL Planet]] の tutorial や reference
を見た方が良いです。

d87 5
@


1.3
log
@auto-committed
@
text
@d22 5
a27 6
[8]
[[Gecko]] の [CODE(CSS)[[[-moz-binding]]]] で縛った XBL は[[文書順]]ないし表示した状態の上から順番に処理されていくわけじゃなくて、何かの順番 (無作為なのか、というよりもむしろレンダリング中の何かの作業をした順なのか)  で処理されていくっぽい。
ためしに連番を振らせてみるとわかる。

でももしかすると、実行開始は同時だけど並行処理の結果連番用の変数に access するところに到達するまでの順番が狂ってるのかもしれん。

d30 58
@


1.2
log
@auto-committed
@
text
@d16 2
a18 3
[7]
''XBL (Extensible Binding Language) 1.0'' <http://www.mozilla.org/projects/xbl/xbl.html>

d21 10
@


1.1
log
@auto-commited
@
text
@d1 1
a1 1
#?SuikaWiki/0.9
d8 15
@

