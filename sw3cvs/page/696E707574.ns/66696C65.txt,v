head	1.14;
access;
symbols
	suikawiki3-final:1.14
	before-db-leaffile:1.3
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;
expand	@b@;


1.14
date	2007.12.03.02.58.20;	author wakaba;	state Exp;
branches;
next	1.13;

1.13
date	2007.09.23.02.48.43;	author wakaba;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.13.02.21.40;	author wakaba;	state Exp;
branches;
next	1.11;

1.11
date	2006.04.18.02.17.12;	author wakaba;	state Exp;
branches;
next	1.10;

1.10
date	2006.02.03.02.19.17;	author wakaba;	state Exp;
branches;
next	1.9;

1.9
date	2005.09.18.02.10.20;	author wakaba;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.23.02.05.50;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.08.02.11.58;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.13.02.12.13;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.18.02.05.48;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.08.02.06.38;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.18.02.07.20;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.22.06.31.41;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.13.02.02.18;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.14
log
@auto-committed
@
text
@
[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">
-- [CITE[B.10.1 Security issues for forms]]
<IW:HTML4:"appendix/notes.html#forms-security">
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.15. Extensions to file upload controls]]
<IW:WF2:"#upload">

[7] 属性:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[accept]]]]	,[CODE(SGML)[%[[ContentTypes]]]]	,	,受入れ媒体型	,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]]	,[CODE(SGML)[%[[Character]]]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[align]]]]	,	,	,配置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,(真偽値属性)	,(偽)	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[language]]]]	,	,	,スクリプト言語	,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]]	,	,	,制御子名	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を失した時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,現在値変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を得た時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]]	,[CODE(SGML)[%[[Script]]]]	,	,文選択時	,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]]	,(真偽値属性)	,(偽)	,読取専用	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]]	,'''[CODE(HTML)[file]]'''	,[CODE(HTML)[[[text]]]]	,制御子の種類	,[HTML 4]
,[CODE(HTMLa)[[[value]]]]	,	,	,初期値	,[HTML 4]

[[#comment]]


* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]

[[#comment]]


* ファイル選択

[17] '''ファイル・システム上にないファイル''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
必ずしも[[ファイル・システム]]に現在存在するファイルを選択しなければならないのではありません。
賢い利用者エージェントはその場で文書ファイルを作成したり、
絵を描いたり、録音したりする機能を提供しているかもしれません。

そうはいってもそのことは HTML 4 では明確になっていませんでした。
実際にそのような機能を実装している利用者エージェントがあるのかどうかは不明です。
しかし、 [CODE(HTMLe)[input]] [CODE(HTMLa)[type]]
を拡張して写真撮影や録音の機能を追加しようという提案
[SRC[[[device-upload]]]] に対し、 W3C HTML WG
は [CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
で十分対応できるという結論を下しています。

[[Web Forms 2.0]] はこの辺りの扱いも幾分明確化しようと試みています。

[38] '''ファイル・システムに存在しないファイルの名前'''

[[提出]]時の[[ファイル名]]は、
その[[ファイル]]が[[ファイル・システム]]に保存されていない
(その場で作られた) ものであるなどの理由で[[ファイル名]]を陽に持たないなら、
[[空文字列]]と[['''しなければなりません''']]。
[SRC@@en[WF2 2.15]]

[33] '''遠隔ファイル''':
[[ファイル]]として選択され得るのは手元のファイルだけではありません。
使用している環境さえ対応していれば、
[[ネットワーク]]で接続された近くの[[計算機]]上の[[共有]]された[[ファイル]]でも選択できるのが普通です。
その他の任意の遠隔[[資源]]を選択することも仕様上問題となる点はなく、
>>14 のように [WEAK[(一時ファイルを一旦作成する形ながら)]]
既に実装もされています。

[18] '''複数ファイルの選択''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
複数のファイルを選択できます。このことは HTML 4
などの仕様上も明確であり、 [CODE(MIME)[[[multipart/form-data]]]]
による提出方法も規定されています。

しかし、実際には複数のファイルを選択できる利用者エージェントがあるのかどうかは不明です。
多くの利用者エージェントは高々1つしか選択できません。
また、[[フォーム処理エージェント]]もその状況を反映して複数ファイルが提出されることを想定していないものがほとんどと推定されます。

[[Web Forms 2.0]] はこの状況と互換性を保ちつつ複数ファイルを選択可能にしようと試みています。
[CODE(HTMLa)@@en[[[min]]]]、[CODE(HTMLa)@@en[[[max]]]]
の項を参照してください。

[36] '''提出できないファイル'''

存在しない[[ファイル]]や何らかの理由で[[うp]]できない[[ファイル]]が指定されている場合、
それらの[[ファイル]]は[[提出]]されません。
また、 [CODE(HTMLa)@@en[[[min]]]]、[CODE(HTMLa)@@en[[[max]]]]、
[CODE(HTMLa)@@en[[[required]]]] の検査の際にも、
指定されていないものとして扱われます。
[[利用者]]には問題を報告することが[['''推奨''']]されていますが、
[[スクリプト]]がこれを知る手段は用意されていません。
[SRC@@en[WF2 2.15]]

;; [[スクリプト]]から知ることができないのは、
[[安全性]]や[[個人情報保護]]の観点から、
どの[[ファイル]]が存在していないかを漏らせるべきではないというのが理由です。

[[#comment]]


* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[37] '''失敗の通知'''

[[利用者エージェント]]は、
一般の[[フォーム]]の[[提出]]時の失敗と同様に、
[[ファイル]]の[[うp]]の失敗についても、
便利で[[アクセス可能]]な方法で[[利用者]]に説明[['''するべきです''']]。
[SRC@@en[WF2 2.15]]

[[#comment]]


* 実装

[19] [[Netscape Navigator 2]] [WEAK[(2.02 日本語版、 [[Windows 95]] 版で確認)]]
では [[Windows]] 標準の共通対話箱によりファイルを1つ選択できましたが、
ファイルの種類が標準で [[HTML]] ([[拡張子]]が [CODE(file)[.html]]
または [CODE(file)[.htm]]) に絞られていたため、
他の種類のファイルを選ぶには毎回手動で[Q[すべてのファイル]]
に絞り直さなければならず、不便でした。

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[32] [[WinIE 3]] は標準ではファイル選択制御子に対応していません。
追加のソフトウェア部品として提供されていました。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。

[14] '''遠隔ファイル''':
[[WinIE]] で [[Internet Shortcut]] を選択すると、
shortcut ではなく、リンク先 URI の資源を取ってきて、その一時ファイルのファイル名が表示・送信されるようです。

Internet Shortcut でない [[Shortcut]] がリンク先のファイル名に直されるのと同様、
[[Common Dialog]] control の仕様のようです [WEAK[(普通の shortcut のリンク先ににするかどうかは common dialog 呼び出しの option で指定できますから、それと同じ option か、新設の別の option でこの機能を無効化できると思いますが、詳しくは [[MSDN]] でも見て調べてください)]]。
WinIE に限らず、 [[Mozilla]] や[[メモ帳]]などでも再現しますから、 Common Dialog Control に組み込まれた機能とみて間違いないでしょう。

聞くところによりますと、この機能が実装されているのは [[Windows Me]]
と [[Windows 2000]] 以降の [[Windows NT]] だそうです。
おそらく Common Dialog Control の版に依存しますから、 WinIE の版などにも左右されるかもしれません。

[34]
[CITE[file upload]] <http://dog.intcul.tohoku.ac.jp/html/javascript/input_file.html>
([[名無しさん]] [sage])

[35]
[CITE[Bug 63687 - UI for <input type="file"> allowing multiple files to be uploaded]] <https://bugzilla.mozilla.org/show_bug.cgi?id=63687>
([[名無しさん]] [sage])

[[#comment]]


* 可用性

[20] 選択した[[ファイル]]の大きさに比例して[[提出]]に時間がかかるはずです。
[[利用者エージェント]]は[[利用者]]の便宜を図って、
例えば予想転送時間を算出したり、提出中にそのことを分かりやすく利用者に知らせたり工夫するべきです。

また、大きなファイルを提出させる[[フォーム]]の[[著者]]は、
[[利用者]]に時間がかかることの注意を促すと良いかもしれません。
(但しどちらかといえば[[利用者界面]]の問題に属するものであって、
著者が深く介入するべきでもないでしょう。)

[[#comment]]


* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[15] HTML 4 仕様書は、利用者に明確に確認させずに
[ABBR[UA] [利用者エージェント]]がファイルを送るべきではなく、
確認を取ることが期待されていると述べています。
[SRC[HTML 4 B.10.1]] 

[ABBR[[[CSS]]] [Cascading Style Sheets]] などで [CODE(HTMLe)[input]]
要素を非表示にすることもできますが、
それによって利用者が気づかぬうちにファイルが送られてしまうことが無いように
[ABBR[UA] [利用者エージェント]] 実装者は注意しなければならないでしょう。

[16] [ABBR[HTML] [Hypertext Markup Language]] 
にはデータを転送する方法が用意されていません。
[ABBR[[[TLS]]]] を使うなど別途安全を確保する必要があります。

また、[[フォーム処理エージェント]]は[ABBR[[[うp]]] [upload]]されたファイルを適切に扱うべきです
[SRC[HTML 4 B.10.1]]。

[21] 選択した[[ファイル]]の情報を[[スクリプト]]から取得・
制御できると便利なこともあるかもしれません。しかし、
[[利用者]]が知らないうちに勝手な[[ファイル]]を送信したり、
勝手に[[ファイル]]の内容や情報を取得したりするために悪用される危険性もあります。

[[#form:'':'']]

#comment]


* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]


* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

- [4] >>2 の Opera の挙動はバグですよねぇ。そもそも >>1 の仮定自体が規格外ですから Opera を責めるつもりはまったくないですけど、引用符で囲むことに意味を見出せません。 Opera は既存ブラウザの互換性を幾分考えて設計されているのですから、わざわざ非互換にしたのだとしたら激しく謎です。

[39]
[CITE@@ja[Taken SPC : Firefox 3 における <input type="file"> で指定されたファイルへのアクセス]] ([CODE[2007-09-21 14:32:31 +09:00]] 版) <http://taken.s101.xrea.com/blog/article.php?id=809>
([[名無しさん]])

[40]
[CITE[はてなダイアリー日記 - 「今日の1枚」での http:// や ftp:// で始まるURLの入力について]] ([CODE[2007-09-20 19:01:35 +09:00]] 版) <http://d.hatena.ne.jp/hatenadiary/20070919/1190166904>
([[名無しさん]])

[41]
[CITE[input type="file" value inconsistencies]] ([[Daniel Veditz <dveditz@@...>]] 著, [CODE[2007-11-14 07:57:22 +09:00]] 版) <http://permalink.gmane.org/gmane.org.w3c.whatwg.discuss/12396>
([[名無しさん]])

[42]
[CITE[Bug 143220 &#8211; '''['''FIX''']'''Script can get the value of a file control, including the path]] ([TIME[2007-12-01 11:45:05 +09:00]] 版) <https://bugzilla.mozilla.org/show_bug.cgi?id=143220>
([[名無しさん]])

@


1.13
log
@auto-committed
@
text
@d262 9
a270 1
[CITE[はてなダイアリー日記 - 「今日の1枚」での http:// や ftp:// で始まるURLの入力について]] ([TIME[2007-09-20 19:01:35 +09:00]] 版) <http://d.hatena.ne.jp/hatenadiary/20070919/1190166904>
@


1.12
log
@auto-committed
@
text
@d1 264
a264 258
[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">
-- [CITE[B.10.1 Security issues for forms]]
<IW:HTML4:"appendix/notes.html#forms-security">
- [[Web Forms 2.0]]
-- [CSECTION@@en[2.15. Extensions to file upload controls]]
<IW:WF2:"#upload">

[7] 属性:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[accept]]]]	,[CODE(SGML)[%[[ContentTypes]]]]	,	,受入れ媒体型	,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]]	,[CODE(SGML)[%[[Character]]]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[align]]]]	,	,	,配置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,(真偽値属性)	,(偽)	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[language]]]]	,	,	,スクリプト言語	,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]]	,	,	,制御子名	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を失した時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,現在値変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を得た時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]]	,[CODE(SGML)[%[[Script]]]]	,	,文選択時	,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]]	,(真偽値属性)	,(偽)	,読取専用	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]]	,'''[CODE(HTML)[file]]'''	,[CODE(HTML)[[[text]]]]	,制御子の種類	,[HTML 4]
,[CODE(HTMLa)[[[value]]]]	,	,	,初期値	,[HTML 4]

[[#comment]]


* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]




[[#comment]]


* ファイル選択

[17] '''ファイル・システム上にないファイル''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
必ずしも[[ファイル・システム]]に現在存在するファイルを選択しなければならないのではありません。
賢い利用者エージェントはその場で文書ファイルを作成したり、
絵を描いたり、録音したりする機能を提供しているかもしれません。

そうはいってもそのことは HTML 4 では明確になっていませんでした。
実際にそのような機能を実装している利用者エージェントがあるのかどうかは不明です。
しかし、 [CODE(HTMLe)[input]] [CODE(HTMLa)[type]]
を拡張して写真撮影や録音の機能を追加しようという提案
[SRC[[[device-upload]]]] に対し、 W3C HTML WG
は [CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
で十分対応できるという結論を下しています。

[[Web Forms 2.0]] はこの辺りの扱いも幾分明確化しようと試みています。

[38] '''ファイル・システムに存在しないファイルの名前'''

[[提出]]時の[[ファイル名]]は、
その[[ファイル]]が[[ファイル・システム]]に保存されていない
(その場で作られた) ものであるなどの理由で[[ファイル名]]を陽に持たないなら、
[[空文字列]]と[['''しなければなりません''']]。
[SRC@@en[WF2 2.15]]

[33] '''遠隔ファイル''':
[[ファイル]]として選択され得るのは手元のファイルだけではありません。
使用している環境さえ対応していれば、
[[ネットワーク]]で接続された近くの[[計算機]]上の[[共有]]された[[ファイル]]でも選択できるのが普通です。
その他の任意の遠隔[[資源]]を選択することも仕様上問題となる点はなく、
>>14 のように [WEAK[(一時ファイルを一旦作成する形ながら)]]
既に実装もされています。

[18] '''複数ファイルの選択''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
複数のファイルを選択できます。このことは HTML 4
などの仕様上も明確であり、 [CODE(MIME)[[[multipart/form-data]]]]
による提出方法も規定されています。

しかし、実際には複数のファイルを選択できる利用者エージェントがあるのかどうかは不明です。
多くの利用者エージェントは高々1つしか選択できません。
また、[[フォーム処理エージェント]]もその状況を反映して複数ファイルが提出されることを想定していないものがほとんどと推定されます。

[[Web Forms 2.0]] はこの状況と互換性を保ちつつ複数ファイルを選択可能にしようと試みています。
[CODE(HTMLa)@@en[[[min]]]]、[CODE(HTMLa)@@en[[[max]]]]
の項を参照してください。

[36] '''提出できないファイル'''

存在しない[[ファイル]]や何らかの理由で[[うp]]できない[[ファイル]]が指定されている場合、
それらの[[ファイル]]は[[提出]]されません。
また、 [CODE(HTMLa)@@en[[[min]]]]、[CODE(HTMLa)@@en[[[max]]]]、
[CODE(HTMLa)@@en[[[required]]]] の検査の際にも、
指定されていないものとして扱われます。
[[利用者]]には問題を報告することが[['''推奨''']]されていますが、
[[スクリプト]]がこれを知る手段は用意されていません。
[SRC@@en[WF2 2.15]]

;; [[スクリプト]]から知ることができないのは、
[[安全性]]や[[個人情報保護]]の観点から、
どの[[ファイル]]が存在していないかを漏らせるべきではないというのが理由です。

[[#comment]]


* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[37] '''失敗の通知'''

[[利用者エージェント]]は、
一般の[[フォーム]]の[[提出]]時の失敗と同様に、
[[ファイル]]の[[うp]]の失敗についても、
便利で[[アクセス可能]]な方法で[[利用者]]に説明[['''するべきです''']]。
[SRC@@en[WF2 2.15]]


[[#comment]]


* 実装

[19] [[Netscape Navigator 2]] [WEAK[(2.02 日本語版、 [[Windows 95]] 版で確認)]]
では [[Windows]] 標準の共通対話箱によりファイルを1つ選択できましたが、
ファイルの種類が標準で [[HTML]] ([[拡張子]]が [CODE(file)[.html]]
または [CODE(file)[.htm]]) に絞られていたため、
他の種類のファイルを選ぶには毎回手動で[Q[すべてのファイル]]
に絞り直さなければならず、不便でした。

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[32] [[WinIE 3]] は標準ではファイル選択制御子に対応していません。
追加のソフトウェア部品として提供されていました。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。

[14] '''遠隔ファイル''':
[[WinIE]] で [[Internet Shortcut]] を選択すると、
shortcut ではなく、リンク先 URI の資源を取ってきて、その一時ファイルのファイル名が表示・送信されるようです。

Internet Shortcut でない [[Shortcut]] がリンク先のファイル名に直されるのと同様、
[[Common Dialog]] control の仕様のようです [WEAK[(普通の shortcut のリンク先ににするかどうかは common dialog 呼び出しの option で指定できますから、それと同じ option か、新設の別の option でこの機能を無効化できると思いますが、詳しくは [[MSDN]] でも見て調べてください)]]。
WinIE に限らず、 [[Mozilla]] や[[メモ帳]]などでも再現しますから、 Common Dialog Control に組み込まれた機能とみて間違いないでしょう。

聞くところによりますと、この機能が実装されているのは [[Windows Me]]
と [[Windows 2000]] 以降の [[Windows NT]] だそうです。
おそらく Common Dialog Control の版に依存しますから、 WinIE の版などにも左右されるかもしれません。

[34]
[CITE[file upload]] <http://dog.intcul.tohoku.ac.jp/html/javascript/input_file.html>
([[名無しさん]] [sage])

[35]
[CITE[Bug 63687 - UI for <input type="file"> allowing multiple files to be uploaded]] <https://bugzilla.mozilla.org/show_bug.cgi?id=63687>
([[名無しさん]] [sage])

[[#comment]]


* 可用性

[20] 選択した[[ファイル]]の大きさに比例して[[提出]]に時間がかかるはずです。
[[利用者エージェント]]は[[利用者]]の便宜を図って、
例えば予想転送時間を算出したり、提出中にそのことを分かりやすく利用者に知らせたり工夫するべきです。

また、大きなファイルを提出させる[[フォーム]]の[[著者]]は、
[[利用者]]に時間がかかることの注意を促すと良いかもしれません。
(但しどちらかといえば[[利用者界面]]の問題に属するものであって、
著者が深く介入するべきでもないでしょう。)

[[#comment]]


* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[15] HTML 4 仕様書は、利用者に明確に確認させずに
[ABBR[UA] [利用者エージェント]]がファイルを送るべきではなく、
確認を取ることが期待されていると述べています。
[SRC[HTML 4 B.10.1]] 

[ABBR[[[CSS]]] [Cascading Style Sheets]] などで [CODE(HTMLe)[input]]
要素を非表示にすることもできますが、
それによって利用者が気づかぬうちにファイルが送られてしまうことが無いように
[ABBR[UA] [利用者エージェント]] 実装者は注意しなければならないでしょう。

[16] [ABBR[HTML] [Hypertext Markup Language]] 
にはデータを転送する方法が用意されていません。
[ABBR[[[TLS]]]] を使うなど別途安全を確保する必要があります。

また、[[フォーム処理エージェント]]は[ABBR[[[うp]]] [upload]]されたファイルを適切に扱うべきです
[SRC[HTML 4 B.10.1]]。

[21] 選択した[[ファイル]]の情報を[[スクリプト]]から取得・
制御できると便利なこともあるかもしれません。しかし、
[[利用者]]が知らないうちに勝手な[[ファイル]]を送信したり、
勝手に[[ファイル]]の内容や情報を取得したりするために悪用される危険性もあります。

[[#form:'':'']]

#comment]


* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]


* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

- [4] >>2 の Opera の挙動はバグですよねぇ。そもそも >>1 の仮定自体が規格外ですから Opera を責めるつもりはまったくないですけど、引用符で囲むことに意味を見出せません。 Opera は既存ブラウザの互換性を幾分考えて設計されているのですから、わざわざ非互換にしたのだとしたら激しく謎です。@


1.11
log
@auto-committed
@
text
@d1 257
a257 224

[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">
-- [CITE[B.10.1 Security issues for forms]]
<IW:HTML4:"appendix/notes.html#forms-security">

[7] 属性:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[accept]]]]	,[CODE(SGML)[%[[ContentTypes]]]]	,	,受入れ媒体型	,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]]	,[CODE(SGML)[%[[Character]]]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[align]]]]	,	,	,配置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,(真偽値属性)	,(偽)	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[language]]]]	,	,	,スクリプト言語	,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]]	,	,	,制御子名	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を失した時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,現在値変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を得た時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]]	,[CODE(SGML)[%[[Script]]]]	,	,文選択時	,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]]	,(真偽値属性)	,(偽)	,読取専用	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]]	,'''[CODE(HTML)[file]]'''	,[CODE(HTML)[[[text]]]]	,制御子の種類	,[HTML 4]
,[CODE(HTMLa)[[[value]]]]	,	,	,初期値	,[HTML 4]

[[#comment]]


* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]


[36]
aaa
([[名無しさん]] [WEAK[2006-04-13 05:49:04 +00:00]])


[[#comment]]


* ファイル選択

[17] '''ファイル・システム上にないファイル''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
必ずしも[[ファイル・システム]]に現在存在するファイルを選択しなければならないのではありません。
賢い利用者エージェントはその場で文書ファイルを作成したり、
絵を描いたり、録音したりする機能を提供しているかもしれません。

そうはいってもそのことは HTML 4 では明確になっていませんでした。
実際にそのような機能を実装している利用者エージェントがあるのかどうかは不明です。
しかし、 [CODE(HTMLe)[input]] [CODE(HTMLa)[type]]
を拡張して写真撮影や録音の機能を追加しようという提案
[SRC[[[device-upload]]]] に対し、 W3C HTML WG
は [CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
で十分対応できるという結論を下しています。

[[Web Forms 2.0]] はこの辺りの扱いも幾分明確化しようと試みています。

[33] '''遠隔ファイル''':
[[ファイル]]として選択され得るのは手元のファイルだけではありません。
使用している環境さえ対応していれば、
[[ネットワーク]]で接続された近くの[[計算機]]上の[[共有]]された[[ファイル]]でも選択できるのが普通です。
その他の任意の遠隔[[資源]]を選択することも仕様上問題となる点はなく、
>>14 のように [WEAK[(一時ファイルを一旦作成する形ながら)]]
既に実装もされています。

[18] '''複数ファイルの選択''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
複数のファイルを選択できます。このことは HTML 4
などの仕様上も明確であり、 [CODE(MIME)[[[multipart/form-data]]]]
による提出方法も規定されています。

しかし、実際には複数のファイルを選択できる利用者エージェントがあるのかどうかは不明です。
多くの利用者エージェントは高々1つしか選択できません。
また、[[フォーム処理エージェント]]もその状況を反映して複数ファイルが提出されることを想定していないものがほとんどと推定されます。

[[Web Forms 2.0]] はこの状況と互換性を保ちつつ複数ファイルを選択可能にしようと試みています。

[[#comment]]


* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


* 実装

[19] [[Netscape Navigator 2]] [WEAK[(2.02 日本語版、 [[Windows 95]] 版で確認)]]
では [[Windows]] 標準の共通対話箱によりファイルを1つ選択できましたが、
ファイルの種類が標準で [[HTML]] ([[拡張子]]が [CODE(file)[.html]]
または [CODE(file)[.htm]]) に絞られていたため、
他の種類のファイルを選ぶには毎回手動で[Q[すべてのファイル]]
に絞り直さなければならず、不便でした。

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[32] [[WinIE 3]] は標準ではファイル選択制御子に対応していません。
追加のソフトウェア部品として提供されていました。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。

[14] '''遠隔ファイル''':
[[WinIE]] で [[Internet Shortcut]] を選択すると、
shortcut ではなく、リンク先 URI の資源を取ってきて、その一時ファイルのファイル名が表示・送信されるようです。

Internet Shortcut でない [[Shortcut]] がリンク先のファイル名に直されるのと同様、
[[Common Dialog]] control の仕様のようです [WEAK[(普通の shortcut のリンク先ににするかどうかは common dialog 呼び出しの option で指定できますから、それと同じ option か、新設の別の option でこの機能を無効化できると思いますが、詳しくは [[MSDN]] でも見て調べてください)]]。
WinIE に限らず、 [[Mozilla]] や[[メモ帳]]などでも再現しますから、 Common Dialog Control に組み込まれた機能とみて間違いないでしょう。

聞くところによりますと、この機能が実装されているのは [[Windows Me]]
と [[Windows 2000]] 以降の [[Windows NT]] だそうです。
おそらく Common Dialog Control の版に依存しますから、 WinIE の版などにも左右されるかもしれません。

[34]
[CITE[file upload]] <http://dog.intcul.tohoku.ac.jp/html/javascript/input_file.html>
([[名無しさん]] [sage])

[35]
[CITE[Bug 63687 - UI for <input type="file"> allowing multiple files to be uploaded]] <https://bugzilla.mozilla.org/show_bug.cgi?id=63687>
([[名無しさん]] [sage])

[[#comment]]


* 可用性

[20] 選択した[[ファイル]]の大きさに比例して[[提出]]に時間がかかるはずです。
[[利用者エージェント]]は[[利用者]]の便宜を図って、
例えば予想転送時間を算出したり、提出中にそのことを分かりやすく利用者に知らせたり工夫するべきです。

また、大きなファイルを提出させる[[フォーム]]の[[著者]]は、
[[利用者]]に時間がかかることの注意を促すと良いかもしれません。
(但しどちらかといえば[[利用者界面]]の問題に属するものであって、
著者が深く介入するべきでもないでしょう。)

[[#comment]]


* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[15] HTML 4 仕様書は、利用者に明確に確認させずに
[ABBR[UA] [利用者エージェント]]がファイルを送るべきではなく、
確認を取ることが期待されていると述べています。
[SRC[HTML 4 B.10.1]] 

[ABBR[[[CSS]]] [Cascading Style Sheets]] などで [CODE(HTMLe)[input]]
要素を非表示にすることもできますが、
それによって利用者が気づかぬうちにファイルが送られてしまうことが無いように
[ABBR[UA] [利用者エージェント]] 実装者は注意しなければならないでしょう。

[16] [ABBR[HTML] [Hypertext Markup Language]] 
にはデータを転送する方法が用意されていません。
[ABBR[[[TLS]]]] を使うなど別途安全を確保する必要があります。

また、[[フォーム処理エージェント]]は[ABBR[[[うp]]] [upload]]されたファイルを適切に扱うべきです
[SRC[HTML 4 B.10.1]]。

[21] 選択した[[ファイル]]の情報を[[スクリプト]]から取得・
制御できると便利なこともあるかもしれません。しかし、
[[利用者]]が知らないうちに勝手な[[ファイル]]を送信したり、
勝手に[[ファイル]]の内容や情報を取得したりするために悪用される危険性もあります。

[[#form:'':'']]

#comment]


* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]


* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

@


1.10
log
@auto-committed
@
text
@d56 6
a150 1

a153 1

@


1.9
log
@auto-committed
@
text
@a140 1

d146 5
d201 3
a203 1
[[#form:'':'']]#comment]
@


1.8
log
@auto-committed
@
text
@d1 214
a214 202
[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">
--[CITE[B.10.1 Security issues for forms]]
<IW:HTML4:"appendix/notes.html#forms-security">

[7] 属性:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[accept]]]]	,[CODE(SGML)[%[[ContentTypes]]]]	,	,受入れ媒体型	,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]]	,[CODE(SGML)[%[[Character]]]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[align]]]]	,	,	,配置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,(真偽値属性)	,(偽)	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[language]]]]	,	,	,スクリプト言語	,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]]	,	,	,制御子名	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を失した時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,現在値変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を得た時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]]	,[CODE(SGML)[%[[Script]]]]	,	,文選択時	,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]]	,(真偽値属性)	,(偽)	,読取専用	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]]	,'''[CODE(HTML)[file]]'''	,[CODE(HTML)[[[text]]]]	,制御子の種類	,[HTML 4]
,[CODE(HTMLa)[[[value]]]]	,	,	,初期値	,[HTML 4]

[[#comment]]


* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]

[[#comment]]

* ファイル選択

[17] '''ファイル・システム上にないファイル''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
必ずしも[[ファイル・システム]]に現在存在するファイルを選択しなければならないのではありません。
賢い利用者エージェントはその場で文書ファイルを作成したり、
絵を描いたり、録音したりする機能を提供しているかもしれません。

そうはいってもそのことは HTML 4 では明確になっていませんでした。
実際にそのような機能を実装している利用者エージェントがあるのかどうかは不明です。
しかし、 [CODE(HTMLe)[input]] [CODE(HTMLa)[type]]
を拡張して写真撮影や録音の機能を追加しようという提案
[SRC[[[device-upload]]]] に対し、 W3C HTML WG
は [CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
で十分対応できるという結論を下しています。

[[Web Forms 2.0]] はこの辺りの扱いも幾分明確化しようと試みています。

[33] '''遠隔ファイル''':
[[ファイル]]として選択され得るのは手元のファイルだけではありません。
使用している環境さえ対応していれば、
[[ネットワーク]]で接続された近くの[[計算機]]上の[[共有]]された[[ファイル]]でも選択できるのが普通です。
その他の任意の遠隔[[資源]]を選択することも仕様上問題となる点はなく、
>>14 のように [WEAK[(一時ファイルを一旦作成する形ながら)]]
既に実装もされています。

[18] '''複数ファイルの選択''':
[CODE(HTMLe)[input]] [CODE(HTMLa)[type]] [CODE(HTML)[file]]
によって作られるファイル選択制御子は、
複数のファイルを選択できます。このことは HTML 4
などの仕様上も明確であり、 [CODE(MIME)[[[multipart/form-data]]]]
による提出方法も規定されています。

しかし、実際には複数のファイルを選択できる利用者エージェントがあるのかどうかは不明です。
多くの利用者エージェントは高々1つしか選択できません。
また、[[フォーム処理エージェント]]もその状況を反映して複数ファイルが提出されることを想定していないものがほとんどと推定されます。

[[Web Forms 2.0]] はこの状況と互換性を保ちつつ複数ファイルを選択可能にしようと試みています。

[[#comment]]

* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


* 実装

[19] [[Netscape Navigator 2]] [WEAK[(2.02 日本語版、 [[Windows 95]] 版で確認)]]
では [[Windows]] 標準の共通対話箱によりファイルを1つ選択できましたが、
ファイルの種類が標準で [[HTML]] ([[拡張子]]が [CODE(file)[.html]]
または [CODE(file)[.htm]]) に絞られていたため、
他の種類のファイルを選ぶには毎回手動で[Q[すべてのファイル]]
に絞り直さなければならず、不便でした。

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[32] [[WinIE 3]] は標準ではファイル選択制御子に対応していません。
追加のソフトウェア部品として提供されていました。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。

[14] '''遠隔ファイル''':
[[WinIE]] で [[Internet Shortcut]] を選択すると、
shortcut ではなく、リンク先 URI の資源を取ってきて、その一時ファイルのファイル名が表示・送信されるようです。

Internet Shortcut でない [[Shortcut]] がリンク先のファイル名に直されるのと同様、
[[Common Dialog]] control の仕様のようです [WEAK[(普通の shortcut のリンク先ににするかどうかは common dialog 呼び出しの option で指定できますから、それと同じ option か、新設の別の option でこの機能を無効化できると思いますが、詳しくは [[MSDN]] でも見て調べてください)]]。
WinIE に限らず、 [[Mozilla]] や[[メモ帳]]などでも再現しますから、 Common Dialog Control に組み込まれた機能とみて間違いないでしょう。

聞くところによりますと、この機能が実装されているのは [[Windows Me]]
と [[Windows 2000]] 以降の [[Windows NT]] だそうです。
おそらく Common Dialog Control の版に依存しますから、 WinIE の版などにも左右されるかもしれません。

[[#comment]]

* 可用性

[20] 選択した[[ファイル]]の大きさに比例して[[提出]]に時間がかかるはずです。
[[利用者エージェント]]は[[利用者]]の便宜を図って、
例えば予想転送時間を算出したり、提出中にそのことを分かりやすく利用者に知らせたり工夫するべきです。

また、大きなファイルを提出させる[[フォーム]]の[[著者]]は、
[[利用者]]に時間がかかることの注意を促すと良いかもしれません。
(但しどちらかといえば[[利用者界面]]の問題に属するものであって、
著者が深く介入するべきでもないでしょう。)

[[#comment]]

* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[15] HTML 4 仕様書は、利用者に明確に確認させずに
[ABBR[UA][利用者エージェント]]がファイルを送るべきではなく、
確認を取ることが期待されていると述べています。
[SRC[HTML 4 B.10.1]] 

[ABBR[[[CSS]]][Cascading Style Sheets]] などで [CODE(HTMLe)[input]]
要素を非表示にすることもできますが、
それによって利用者が気づかぬうちにファイルが送られてしまうことが無いように
[ABBR[UA][利用者エージェント]] 実装者は注意しなければならないでしょう。

[16] [ABBR[HTML][Hypertext Markup Language]] 
にはデータを転送する方法が用意されていません。
[ABBR[[[TLS]]]] を使うなど別途安全を確保する必要があります。

また、[[フォーム処理エージェント]]は[ABBR[[[うp]]][upload]]されたファイルを適切に扱うべきです
[SRC[HTML 4 B.10.1]]。

[21] 選択した[[ファイル]]の情報を[[スクリプト]]から取得・
制御できると便利なこともあるかもしれません。しかし、
[[利用者]]が知らないうちに勝手な[[ファイル]]を送信したり、
勝手に[[ファイル]]の内容や情報を取得したりするために悪用される危険性もあります。

[[#comment]

* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]


* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

@


1.7
log
@auto-committed
@
text
@d76 8
d108 7
d120 3
d126 1
a126 2

[14]
a136 1
([[名無しさん]])
d138 12
a152 1

d180 5
@


1.6
log
@auto-committed
@
text
@a0 1

d57 33
@


1.5
log
@auto-committed
@
text
@d1 77
a77 76


[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">

[7] 属性:
,属性名	,属性値	,既定値	,説明	,出典
,[CODE(HTMLa)[[[accept]]]]	,[CODE(SGML)[%[[ContentTypes]]]]	,	,受入れ媒体型	,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]]	,[CODE(SGML)[%[[Character]]]]	,	,	,[HTML 4]
,[CODE(HTMLa)[[[align]]]]	,	,	,配置	,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]	,	,	,[[級]]	,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]	,	,	,[[書字方向]]	,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]]	,(真偽値属性)	,(偽)	,無効	,[HTML 4]
,[CODE(HTMLa)[[[id]]]]	,	,	,一意識別子	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]	,	,	,[[自然言語]]	,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]]	,	,	,自然言語	,[XHTML 1]
,[CODE(HTMLa)[[[language]]]]	,	,	,スクリプト言語	,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]]	,	,	,制御子名	,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を失した時	,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]]	,[CODE(SGML)[%[[Script]]]]	,	,現在値変更時	,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]]	,	,	,	,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]]	,[CODE(SGML)[%[[Script]]]]	,	,焦点を得た時	,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]]	,	,	,	,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]]	,[CODE(SGML)[%[[Script]]]]	,	,文選択時	,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]]	,(真偽値属性)	,(偽)	,読取専用	,[HTML 4]
,[CODE(HTMLa)[[[style]]]]	,	,	,スタイル情報	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]]	,[CODE(SGML)[[[NUMBER]]]]	,	,タブ順	,[HTML 4]
,[CODE(HTMLa)[[[title]]]]	,	,	,注釈的題	,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]]	,'''[CODE(HTML)[file]]'''	,[CODE(HTML)[[[text]]]]	,制御子の種類	,[HTML 4]
,[CODE(HTMLa)[[[value]]]]	,	,	,初期値	,[HTML 4]

[[#comment]]


* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]

[[#comment]]


* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[[#comment]]


* 実装

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。


[14]
d87 52
a138 36
おそらく Common Dialog Control の版に依存しますから、 WinIE の版などにも左右されるかもしれません。
([[名無しさん]])


[[#comment]]


* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[[#comment]]


* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]


* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

@


1.4
log
@auto-committed
@
text
@d1 122
a122 99
[5] [[HTML]] の [CODE(HTMLe)[[[input]]]] 要素は、 [CODE(HTMLa)[[[type]]]]
属性が [DFN[[CODE(HTML)[file]]]] の時、[DFN[ファイル選択制御子]]となります。

[6] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
-- file select control
<IW:HTML4:"interact/forms.html#file-select">
-- 17.4 The [CODE(HTMLe)[INPUT]] element
<IW:HTML4:"interact/forms.html#edef-INPUT">

[7] 属性:
,属性名,属性値,既定値,説明,出典
,[CODE(HTMLa)[[[accept]]]],[CODE(SGML)[%[[ContentTypes]]]],,受入れ媒体型,[HTML 4]
,[CODE(HTMLa)[[[accesskey]]]],[CODE(SGML)[%[[Character]]]],,,[HTML 4]
,[CODE(HTMLa)[[[align]]]],,,配置,[HTML 4] 非推奨
,[CODE(HTMLa)[[[class]]]]   ,,,[[級]]       ,[HTML 4] %[[coreattrs]]
,[CODE(HTMLa)[[[dir]]]]     ,,,[[書字方向]] ,[HTML 4] %[[i18n]]
,[CODE(HTMLa)[[[disabled]]]],(真偽値属性),(偽),無効,[HTML 4]
,[CODE(HTMLa)[[[id]]]]      ,,,一意識別子   ,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[lang]]]]    ,,,[[自然言語]] ,[HTML 4] %i18n
,[CODE(HTMLa)[[[xml]]:lang]],,,自然言語     ,[XHTML 1]
,[CODE(HTMLa)[[[language]]]],,,スクリプト言語,[[WinIE 4]]+
,[CODE(HTMLa)[[[name]]]],,,制御子名,[HTML 4]
,[CODE(HTMLa)[[[onblur]]]],[CODE(SGML)[%[[Script]]]],,焦点を失した時,[HTML 4]
,[CODE(HTMLa)[[[onchange]]]],[CODE(SGML)[%[[Script]]]],,現在値変更時,[HTML 4]
,[CODE(HTMLa)[[[onclick]]]] ,,,             ,[HTML 4] %[[events]]
,[CODE(HTMLa)[[[ondblclick]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onfocus]]]],[CODE(SGML)[%[[Script]]]],,焦点を得た時,[HTML 4]
,[CODE(HTMLa)[[[onkeydown]]]],,,            ,[HTML 4] %events
,[CODE(HTMLa)[[[onkeypress]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onkeyup]]]] ,,,             ,[HTML 4] %events
,[CODE(HTMLa)[[[onmousedown]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmousemove]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseout]]]],,,           ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseover]]]],,,          ,[HTML 4] %events
,[CODE(HTMLa)[[[onmouseup]]]],,,            ,[HTML 4] %events
,[CODE(HTMLa)[[[onselect]]]],[CODE(SGML)[%[[Script]]]],,文選択時,[HTML 4]
,[CODE(HTMLa)[[[readonly]]]],(真偽値属性),(偽),読取専用,[HTML 4]
,[CODE(HTMLa)[[[style]]]]   ,,,スタイル情報 ,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[tabindex]]]],[CODE(SGML)[[[NUMBER]]]],,タブ順,[HTML 4]
,[CODE(HTMLa)[[[title]]]]   ,,,注釈的題     ,[HTML 4] %coreattrs
,[CODE(HTMLa)[[[type]]]],'''[CODE(HTML)[file]]''',[CODE(HTML)[[[text]]]],制御子の種類,[HTML 4]
,[CODE(HTMLa)[[[value]]]],,,初期値,[HTML 4]

[[#comment]]

* 初期値・現在値

[8] [[UA]] は、 [CODE(HTMLa)[value]] 属性の値を初期ファイル名としても構いません。
[SRC[HTML 4 17.4.1]]

[[#comment]]

* 提出

[10] 提出の時の挙動についてはフォームの[[提出]]の説明をご覧ください。

[[#comment]]

* 実装

[12] ''File Upload CGIで知らないと困ること'' <http://www.tsden.org/ryutaroh/fileupload-j.shtml>

現在となっては古い内容ですが、
ブラウザのファイル送信機能の実装には色々と問題があったことが分かります。

[13] [[NC4]] では、[[漢字コード]]の問題で、非 ASCII
文字を含むファイル名のファイルは選択できても送信できないことがありました。

[[#comment]]

* 安全性

[11] ファイル選択制御子を使ってファイルを選択すると、
提出した時のそのファイルが送られることになります。
利用者は、本当に送信しても良いファイルであるのか、
送信しても良い相手なのか、十分に注意するべきです。

[3] 特に、 >>8 のように初期ファイル名を指定できるので、
利用者が十分な確認をせずにフォームを提出してしまうと、
意図せずにファイルを送信してしまうこととなり、危険です。

[[#comment]]

* 他との関係

[9] [CODE(HTMLe)[[[form]]]] 要素の [CODE(HTMLa)[[[enctype]]]]
属性は、 [CODE(HTML)[file]] 制御子を使う時には 
[CODE(MIME)[[[multipart/form-data]]]] とするべきです
[SRC[HTML 4 17.3]]。

[[#comment]]

* メモ

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)

- [4] >>2 の Opera の挙動はバグですよねぇ。そもそも >>1 の仮定自体が規格外ですから Opera を責めるつもりはまったくないですけど、引用符で囲むことに意味を見出せません。 Opera は既存ブラウザの互換性を幾分考えて設計されているのですから、わざわざ非互換にしたのだとしたら激しく謎です。
@


1.3
log
@auto-committed
@
text
@d1 99
a99 19
#?SuikaWiki/0.9

- [1] [CODE(HTML)[type=file]] なのに親 [CODE(HTMLe)[[[form]]]] が [CODE(HTML)[[[enctype]]="[CODE(MIME)[[[multipart/form-data]]]]"]] でない場合の動作ですが、 [[WinIE6]], [[Mozilla]] 1.4, [[Opera]] 7.20 で [CODE(MIME)[[[application/x-www-form-urlencoded]]]], [CODE(MIME)[[[text/plain]]]] (Opera は未対応) ともに、ファイル名が送られました。ファイル名未指定のときには空文字列が送られました。
- [2] 面白いことに、ファイル名は、 WinIE は[[完全経路名]], Opera は完全経路名を [CODE(char)["]] でくくったもの、 Mozilla は狭義の[[ファイル名]]でした。 (Opera の [CODE(MIME)[multipart/form-data]] との動作の違いに注意。)
- [3] [WEAK[2004-01-20 08:15:26 +00:00]] ''[[aaaa]]'': 
- [4] >>2 の Opera の挙動はバグですよねぇ。そもそも >>1 の仮定自体が規格外ですから Opera を責めるつもりはまったくないですけど、引用符で囲むことに意味を見出せません。 Opera は既存ブラウザの互換性を幾分考えて設計されているのですから、わざわざ非互換にしたのだとしたら激しく謎です。

[5]

([[名無しさん]] [WEAK[2004-03-17 15:54:06 +00:00]])

[6]

([[名無しさん]] [WEAK[2004-03-17 15:54:09 +00:00]])


[7]

([[名無しさん]] [WEAK[2004-03-17 15:54:12 +00:00]])
@


1.2
log
@auto-committed
@
text
@d7 13
@


1.1
log
@auto-committed
@
text
@d5 2
@

