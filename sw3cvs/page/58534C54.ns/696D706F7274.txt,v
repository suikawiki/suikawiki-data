head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2008.07.18.03.36.33;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.24.07.19.43;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@
[1] [CODE(XSLTe)[[VAR[xslt:]]import]] 要素型は、
別の[[スタイル・シート]]を[[輸入]]するのに使います。
<http://www.w3.org/TR/xslt#import>

[2]
,[CODE(XSLTa)[[[href]]]]	,[[URI]]	,(必須)	,取込むスタイル・シート

この要素は[[強制空要素]]です。

また、[[最上位要素]]としてのみ存在できます。
但し、他の種類の最上位要素よりも前にある必要があります。
また、 [CODE(XSLTe)[[VAR[xslt:]]import]]
要素同士の順序が優先順位に影響します。

[3] 輸入は、[[取込み]]と同じようなものですが、
輸入されたスタイル・シートの内容よりも輸入したスタイル・シートの内容の方が優先されます。

より詳しくは:

[CODE(XSLTe)[[VAR[xslt:]]import]] 要素を含んでいる
[CODE(XSLTe)[[VAR[xslt:]][[stylesheet]]]] 要素は、
[DFN[[[輸入木]]]]を形成するものとして扱います。
輸入木においては、[CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素はその子の [CODE(XSLTe)[[VAR[xslt:]]import]]
要素に対応する[DFN[[[輸入子]]]]をそれぞれ持ちます。
[WEAK[(なお、 [CODE(XSLTe)[[VAR[xslt:]][[include]]]]) 要素は輸入木を構築する前に解決しておきます。]]

輸入木を後順 (post‐order; 親より子を先に辿る順序) 
で辿った時に、
先に辿ることになる [CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素は後から辿ることになる
[CODE(XSLTe)[[VAR[xslt:]]stylesheet]] 要素よりも低い優先順位を持ちます。

例えば、
:スタイル・シート A:[CODE(XSLT)[<stylesheet id="A"><import href="#B"/><import href="#C"/></stylesheet>]]
:スタイル・シート B:[CODE(XSLT)[<stylesheet id="B"><import href="#D"/></stylesheet>]]
:スタイル・シート C:[CODE(XSLT)[<stylesheet id="C"><import href="#E"/></stylesheet>]]

であるときには、
- [CODE(XSLT)[<stylesheet id="A">]]
-- [CODE(XSLT)[<stylesheet id="B">]]
--- [CODE(XSLT)[<stylesheet id="D">]]
-- [CODE(XSLT)[<stylesheet id="C">]]
--- [CODE(XSLT)[<stylesheet id="E">]]

という輸入木ができて、輸入優先順位は高い順に
A → C → E → B → D となります。

[4] 直接又は間接に、自身を輸入することは[[誤り]]です。

[5] [CODE(XSLTe)[[VAR[xslt:]][[apply-imports]]]]
要素を使うと、局所的に輸入の効果を与えることが出来て、
ここでの説明とは又違った結果になります。


[6]
<a href=http://mapsnew.blog.espresso.repubblica.it/map1.html >jeans 18w</a><a href=http://mapsnew.blog.espresso.repubblica.it/map2.html >rubber cat suit</a><a href=http://mapsnew.blog.espresso.repubblica.it/map3.html >abercrombie man shorts</a><a href=http://mapsnew.blog.espresso.repubblica.it/map4.html >power rangers pajamas</a>
([[mariodn]] [marioou@@yahoo.com])

@


1.1
log
@semi-auto committed
@
text
@d1 60
a60 55
#?SuikaWiki/0.9
[1] [CODE(XSLTe)[[VAR[xslt:]]import]] 要素型は、
別の[[スタイル・シート]]を[[輸入]]するのに使います。
<http://www.w3.org/TR/xslt#import>

[2]
,[CODE(XSLTa)[[[href]]]],[[URI]] ,(必須)  ,取込むスタイル・シート

この要素は[[強制空要素]]です。

また、[[最上位要素]]としてのみ存在できます。
但し、他の種類の最上位要素よりも前にある必要があります。
また、 [CODE(XSLTe)[[VAR[xslt:]]import]]
要素同士の順序が優先順位に影響します。

[3] 輸入は、[[取込み]]と同じようなものですが、
輸入されたスタイル・シートの内容よりも輸入したスタイル・シートの内容の方が優先されます。

より詳しくは:

[CODE(XSLTe)[[VAR[xslt:]]import]] 要素を含んでいる
[CODE(XSLTe)[[VAR[xslt:]][[stylesheet]]]] 要素は、
[DFN[[[輸入木]]]]を形成するものとして扱います。
輸入木においては、[CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素はその子の [CODE(XSLTe)[[VAR[xslt:]]import]]
要素に対応する[DFN[[[輸入子]]]]をそれぞれ持ちます。
[WEAK[(なお、 [CODE(XSLTe)[[VAR[xslt:]][[include]]]]) 要素は輸入木を構築する前に解決しておきます。]]

輸入木を後順 (post‐order; 親より子を先に辿る順序) 
で辿った時に、
先に辿ることになる [CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素は後から辿ることになる
[CODE(XSLTe)[[VAR[xslt:]]stylesheet]] 要素よりも低い優先順位を持ちます。

例えば、
: スタイル・シート A : [CODE(XSLT)[<stylesheet id="A"><import href="#B"/><import href="#C"/></stylesheet>]]
: スタイル・シート B : [CODE(XSLT)[<stylesheet id="B"><import href="#D"/></stylesheet>]]
: スタイル・シート C : [CODE(XSLT)[<stylesheet id="C"><import href="#E"/></stylesheet>]]

であるときには、
- [CODE(XSLT)[<stylesheet id="A">]]
-- [CODE(XSLT)[<stylesheet id="B">]]
--- [CODE(XSLT)[<stylesheet id="D">]]
-- [CODE(XSLT)[<stylesheet id="C">]]
--- [CODE(XSLT)[<stylesheet id="E">]]

という輸入木ができて、輸入優先順位は高い順に
A → C → E → B → D となります。

[4] 直接又は間接に、自身を輸入することは[[誤り]]です。

[5] [CODE(XSLTe)[[VAR[xslt:]][[apply-imports]]]]
要素を使うと、局所的に輸入の効果を与えることが出来て、
ここでの説明とは又違った結果になります。

@

