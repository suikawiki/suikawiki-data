head	1.5;
access;
symbols
	suikawiki3-final:1.5
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.5
date	2008.08.18.02.37.27;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.18.02.04.15;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.08.02.05.18;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.18.02.03.52;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.06.12.26.18;	author make;	state Exp;
branches;
next	;


desc
@@


1.5
log
@auto-committed
@
text
@
[1] [[DOM]] では、処理を行えない時に[DFN[[RUBYB[例外] [exception]]]]が発生します。
特に DOM 全般で発生し得る例外や DOM Core Module・XML Module で使われる例外が
[DFN[[CODE(DOM)[DOMException]]]] です。

ちなみに、処理が行えない時というのは (1) 論理的理由から行えない時、
(2) データが失われた時 (3) 実装が不安定な時などです。
通常索引に範囲外の値が指定された場合などは例外ではなく
[CODE(DOM)[[[null]]]] 値が返される程度で済まされます。
また、束縛によっては例外という概念がないので、返し値などで伝達されることになります。

[4] [CODE(DOM)[DOMException]] は DOM Core Module の一部です。
すべての DOM 実装が完全に実装しなければなりません。

[5] 仕様書:
- [DOM 1] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM1:"level-one-core.html#ID-17189187">
- [DOM 2] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM2:"Core/core.html#ID-17189187">
- [DOM 3] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM3:"Core/core.html#ID-17189187">

[6] [CODE(DOM)[DOMException]] の例外の種類は定義群
[CODE(DOM)[[[ExceptionCode]]]] の定数で識別されます。

[7]
,名前	,型	,出典
,[CODE(DOM)[[[code]]]]	,[CODE(DOM)[[[unsigned]] [[short]]]]	,"[DOM 1,2,3]"

[8]
[CODE(DOM)[DOMSTRING_SIZE_ERR]] はほとんどすべての [CODE(DOM)[DOMString]] 型メソッド・属性で発生し得ると思うのですが、
仕様書には一部のメソッド・属性にしか書いてありません。
例えば [CODE(DOM)[[CODE(DOMi)[[[Node]]]].[CODE(DOMa)[[[localName]]]]]] 取得時に起こっても不思議はないのですが、
実際にはそんな猛烈な長さの名前など到底使われそうにも無いからなのか、例外が発生し得るとは書いてありません。
([[名無しさん]])

[9]
[CITE[IRC logs: freenode / #whatwg / 20080811]] ([CODE[2008-08-14 19:22:43 +09:00]] 版) <http://krijnhoetmer.nl/irc-logs/whatwg/20080811>
([[名無しさん]])


[10]
[CITE@@en[Exception Codes - WHATWG Wiki]] ([TIME[2008-08-11 07:36:37 +09:00]] 版) <http://wiki.whatwg.org/wiki/Exception_Codes>
([[名無しさん]])

@


1.4
log
@auto-committed
@
text
@a1 1

a29 1

d31 3
a33 3
[CODE(DOM)[DOMSTRING_SIZE_ERR]] はほとんどすべての [CODE(DOM)[DOMString]] 型メソッド・属性で発生し得ると思うのですが、
仕様書には一部のメソッド・属性にしか書いてありません。
例えば [CODE(DOM)[[CODE(DOMi)[[[Node]]]].[CODE(DOMa)[[[localName]]]]]] 取得時に起こっても不思議はないのですが、
d35 9
@


1.3
log
@auto-committed
@
text
@d1 38
a38 31
[1] [[DOM]] では、処理を行えない時に[DFN[[RUBYB[例外][exception]]]]が発生します。
特に DOM 全般で発生し得る例外や DOM Core Module・XML Module で使われる例外が
[DFN[[CODE(DOM)[DOMException]]]] です。

ちなみに、処理が行えない時というのは (1) 論理的理由から行えない時、
(2) データが失われた時 (3) 実装が不安定な時などです。
通常索引に範囲外の値が指定された場合などは例外ではなく
[CODE(DOM)[[[null]]]] 値が返される程度で済まされます。
また、束縛によっては例外という概念がないので、返し値などで伝達されることになります。

[4] [CODE(DOM)[DOMException]] は DOM Core Module の一部です。
すべての DOM 実装が完全に実装しなければなりません。

[5] 仕様書:
- [DOM 1] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM1:"level-one-core.html#ID-17189187">
- [DOM 2] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM2:"Core/core.html#ID-17189187">
- [DOM 3] Core Exception [CODE(DOM)[DOMException]]
<IW:DOM3:"Core/core.html#ID-17189187">

[6] [CODE(DOM)[DOMException]] の例外の種類は定義群
[CODE(DOM)[[[ExceptionCode]]]] の定数で識別されます。

[7]
,名前                 ,型                                 ,出典
,[CODE(DOM)[[[code]]]],[CODE(DOM)[[[unsigned]] [[short]]]],"[DOM 1,2,3]"




@


1.2
log
@auto-committed
@
text
@d1 31
a31 32
#?SuikaWiki/0.9
[1] [[DOM]] の操作が行えない時には、[[例外]] (Exception)
が発生します。

[CODE(DOMinterface)[DOMException]] は DOM では必須の機能です。

-「DOM の操作が行えない時」には、データが失われた等の論理的理由に拠る場合と、実装が不安定になっている場合があります。
-実装はその他の場合にその他の (実装依存の) 例外を発生させても構いません。
-DOM が束縛される言語によっては、例外という概念が無いこともあります。その場合はその言語にある例外伝達手法が使われます。
-[CODE[DOMException := ExceptionCode / unsigned-short]]

[CODE(DOM)[ExceptionCode]]:
,INDEX_SIZE_ERR              ,1 ,索引又は寸法が負か、制限値以上,[DOM1]
,DOMSTRING_SIZE_ERR          ,2 ,指定範囲の文が [CODE(DOM)[[[DOMString]]]] に一致しない,[DOM1]
,HIERARCHY_REQUEST_ERR       ,3 ,挿入位置にその[[節]]は存在できない,[DOM1]
,WRONG_DOCUMENT_ERR          ,4 ,節は異なる文書のもの,[DOM1]
,INVALID_CHARACTER_ERR       ,5 ,不正な文字          ,[DOM1]
,NO_DATA_ALLOWED_ERR         ,6 ,その節にはデータを指定できない,[DOM1]
,NO_MODIFICATION_ALLOWED_ERR ,7 ,その物体は編集できない,[DOM1]
,NOT_FOUND_ERR               ,8 ,存在しない文脈で節を参照,[DOM1]
,NOT_SUPPORTED_ERR           ,9 ,要求された型は未実装 ,[DOM1]
,INUSE_ATTRIBUTE_ERR         ,10,加える属性はどこかで使用済,[DOM1]
,INVALID_STATE_ERR           ,11,使用不能な物体を使おうとした,[DOM2]
,SYNTAX_ERR                  ,12,不正な文字列         ,[DOM2]
,INVALID_MODIFICATION_ERR    ,13,物体の型を修正しようとした,[DOM2]
,NAMESPACE_ERR               ,14,名前空間的に不正に物体を作成又は修正しようとした,[DOM2]
,INVALID_ACCESS_ERR          ,15,パラメーター又は演算が当該物体では不可,[DOM2]

-[DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-17189187>
-[DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-17189187>
- [2] DOM 1 FE や DOM 2 では言及がありませんが、 SE では上記以外の値は W3C が予約しているとしています。 <http://www.w3.org/TR/2000/WD-DOM-Level-1-20000929/level-one-core.html#ID-17189187>
- [3] >>2 DOM 2 にもありました <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF>。
@


1.1
log
@auto-commited
@
text
@d32 1
@

