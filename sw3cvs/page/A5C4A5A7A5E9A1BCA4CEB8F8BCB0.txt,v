head	1.6;
access;
symbols
	suikawiki3-final:1.6
	before-db-leaffile:1.5
	after-upgrade-to-suikawiki-3:1.5
	before-fork-suikawiki3:1.5
	after-restore-20040122:1.5;
locks; strict;
comment	@# @;


1.6
date	2004.05.08.02.05.09;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.24.09.25.43;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.25.13.25.59;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.09.01.24.25;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.25.10.24.12;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.21.10.24.17;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.6
log
@auto-committed
@
text
@#?SuikaWiki/0.9
Zeller's formula。[[曜日]]を求める公式。

(([VAR[year]] + [ [VAR[year]] / 4] - [ [VAR[year]] / 100]
+ [ [VAR[year]] / 400] + [(13 * [VAR[month]] + 8) / 5] + [VAR[day]]) % 7)
という計算で、結果が [CODE[0]] なら日曜日、[CODE[6]] なら土曜日になります。
但し、 [VAR[month]] は1月, 2月を [CODE[13]], [CODE[14]] としておきます。

(ここで、 [ [VAR[n]] ] は[[ガウス記号]]で [VAR[n]] を超えない最大の整数を表し,
[CODE[%]] は剰余演算子です。)

[[グレゴリオ暦]]改暦の後の日付に対して有効です。

- 2002-08-25 (Sun) 15:08:56 ''[[和]]'' : 昨日の[[北日本新聞]]の中学生なんとかにも載ってました。
- 2002-08-25 (Sun) 15:09:56 ''[[和]]'' : だけど、この公式、みんな必ず違う式使ってるんですよ。 (同値なんでしょうけどさ。)
- 2002-10-09 (Wed) 08:54:09 ''[[名無しさん]]'' : [[RFC 3339]] に載ってる式は間違ってるんじゃないかと思います。実際実行してみても正しい[[曜日]]が出てきません。

- [1] ツェラーの公式は日付から曜日を求める式です。
- [2] ところで、単に曜日を求めたいだけなら、わざわざツェラーの公式を使って自分で計算する必要はないかもしれません。たとえば [[perl]] では、 [[localtime]] 関数や [[gmtime]] 関数の[[配列文脈]]での返し値に曜日が含まれています。
@


1.5
log
@*** empty log message ***
@
text
@d4 2
a5 2
(([VAR[year]] + [[VAR[year]] / 4] - [[VAR[year]] / 100]
+ [[VAR[year]] / 400] + [(13 * [VAR[month]] + 8) / 5] + [VAR[day]]) % 7)
d9 1
a9 1
(ここで、 [[VAR[n]]] は[[ガウス記号]]で [VAR[n]] を超えない最大の整数を表し,
d16 1
a16 1
- 2002-10-09 (Wed) 08:54:09 ''[[名無しさん]]'' : [[RFC3339]] に載ってる式は間違ってるんじゃないかと思います。実際実行してみても正しい[[曜日]]が出てきません。
@


1.4
log
@Updated.
@
text
@d1 2
a2 1
Zeller's formula。
d4 4
a7 4
(year + [year / 4] - [year / 100]
+ [year / 400] + [(13 * month + 8) / 5] + day) % 7
という計算で、結果が 0 なら日曜日、6なら土曜日になります。
但し、 month は1月, 2月を13月, 14月としておきます。
d9 2
a10 2
(ここで、 [n] は[[ガウス記号]]で n を超えない最大の整数を表し,
% は剰余演算子です。)
d16 4
a19 3
- 2002-10-09 (Wed) 08:54:09 ''[[名無しさん]]'' : [[RFC3339]] に載ってる式は間違ってるんじゃないかと思います。実際実行してみても正しい[[曜日]]が出てきません。
- [1] ツェラーの公式は日付から曜日を求める式です。
- [2] ところで、単に曜日を求めたいだけなら、わざわざツェラーの公式を使って自分で計算する必要はないかもしれません。たとえば [[perl]] では、 [[localtime]] 関数や [[gmtime]] 関数の[[配列文脈]]での返し値に曜日が含まれています。
@


1.3
log
@Updated.
@
text
@d16 2
@


1.2
log
@Updated.
@
text
@d13 3
a15 3
- 2002-08-25 (Sun) 15:08:56 ''[[和]]'' : 昨日の[[北日本新聞]]の中学生なんとかにも載ってました。
- 2002-08-25 (Sun) 15:09:56 ''[[和]]'' : だけど、この公式、みんな必ず違う式使ってるんですよ。 (同値なんでしょうけどさ。)
[[#comment]]@


1.1
log
@Updated.
@
text
@d12 4
@

