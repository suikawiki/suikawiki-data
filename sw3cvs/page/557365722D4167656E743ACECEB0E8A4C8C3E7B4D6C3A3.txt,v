head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.2
	after-upgrade-to-suikawiki-3:1.2
	before-fork-suikawiki3:1.2
	after-restore-20040122:1.2;
locks; strict;
comment	@# @;


1.2
date	2003.03.27.07.24.58;	author make;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.29.12.01.58;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@pre-namespace
@
text
@*List-Software: 領域

[[ML]] agent の情報が入れられる。非標準。
とりあえず [[User-Agent:領域]]と同じ様に扱っておけばよさげ。

*MIME-Version: 領域

MIME 担当ソフトウェア(謎)についての情報がしばしば comment として
入れられる。 See [[MIME-Version:領域]]

**例
-Mime-Version: 1.0 (generated by WREMI 1.14.1 - =?ISO-8859-1?Q?=22Mushigawa?= =?ISO-8859-1?Q?=F2sugi=22?=)
*Server: 欄
→[[Server:]] 欄
*[[User-Agent:領域]]

[[HTTP]] で定義され、 [[HTTP要求]]で使われているが、
電子メイルや電子ニュースでも、
特に[[emacsen]]系 User Agents がつけてる。構造化領域。

[[draft-usefor-article]] もこれを定義。


*X-Face-Version: 領域

X-Face を生成したソフトウェアについての非構造化領域。

**SEE ALSO
-[[X-Face]]

*X-Fowarded: 領域

転送ソフトウェアについての非構造化領域

**例
-X-Forwarded: by - (DeleGate/5.9.12)

*X-HTTP-User-Agent: 領域

[[draft-usefor-article]]の UA: 領域の参考に載ってる。

*X-Gnus-Offline-Backend: 領域

読んで字の如くの非構造化領域。

*X-Mailer: 領域

(主に) [[MUA]] についての非構造化領域。

*X-MimeOLE: 領域

Microsoft 社の [[OLE]] 部品を使って送信されたメッセージに
つけられる頭領域。非構造化領域。

**例
-X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

*X-Newsreader: 領域

メッセージが送信された電子ニュースを読み書きするソフトウェア
についての情報欄。非構造化領域。

*X-Posting-Agent: 領域

[[draft-usefor-article]]の UA: 領域の参考に載ってる。*X-Posting-Software: 領域

メッセージが投稿されたソフトウェアについての情報欄。
非構造化領域。

*RFC 2616 3.8 Product Tokens 製品字句

Product tokens are used to allow communicating applications to
identify themselves by software name and version. Most fields using
product tokens also allow sub-products which form a significant part
of the application to be listed, separated by white space. By
convention, the products are listed in order of their significance
for identifying the application.

product (製品)字句は通信応用をソフトウェア名及び版により識別することが
出来るように使用します。 product 字句を使うほとんどの領域は
応用の重要な位置をしめる亜製品を空白間隔で区切って列することができます。
慣習上、製品は応用の識別に重要な順に並べられます。

       product         = token ["/" product-version]
       product-version = token

Examples:

例:

       User-Agent: CERN-LineMode/2.15 libwww/2.17b3
       Server: Apache/0.8.4

Product tokens SHOULD be short and to the point. They MUST NOT be
used for advertising or other non-essential information. Although any
[[token]] character MAY appear in a product-version, this token SHOULD
only be used for a version identifier (i.e., successive versions of
the same product SHOULD only differ in the product-version portion of
the product value).

product 字句は短く的を付いたものにする''べき''です。
広告やその他の非本質的情報のために使っては''いけません''。
どんな token 文字も product-version (製品の版)に使うことが出来ますが、
この字句は版識別子にのみ使う''べき''です (すなわち、
同じ製品の連続した版は product 値の product-version 部分だけが
異なるようにする''べき''です)。

**SEE ALSO
-[[HTTP]]
-Server:領域
-[[Upgrade:領域]]
-User-Agent:領域
-[[Via:領域]]

*SEE ALSO
-[[電子メイル]]
-[[電子ニュース]]
-[[HTTP]]
-[[RFC822と仲間達の頭領域名]]
-[[MIME]]
-[[Windozeの版を調べる]]

*LICENSE

See [[RFCのライセンス]]


@


1.1
log
@Updated.
@
text
@a0 1

d13 2
a14 34

*Server: 領域

[[HTTP応答]]でサーバーのソフトウェアについての情報を入れる欄。
構造化領域。構文は User-Agent: 領域と同じ。

**RFC 2616 14.38 Server

The Server response-header field contains information about the
software used by the origin server to handle the request. The field
can contain multiple product tokens (section 3.8) and comments
identifying the server and any significant subproducts. The product
tokens are listed in order of their significance for identifying the
application.

       Server         = "Server" ":" 1*( product | comment )

Example:

例:

       Server: CERN/3.0 libwww/2.17

   If the response is being forwarded through a proxy, the proxy
   application MUST NOT modify the Server response-header. Instead, it
   SHOULD include a Via field (as described in section 14.45).

      Note: Revealing the specific software version of the server might
      allow the server machine to become more vulnerable to attacks
      against software that is known to contain security holes. Server
      implementors are encouraged to make this field a configurable
      option.


@

