head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2005.07.03.02.11.28;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.24.07.19.40;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@
[1] 【[[XSLT]]】 [CODE(XSLTe)[[VAR[xslt:]][[stylesheet]]]]
要素の[[子要素]]のことを、[DFN[最上位要素]]
(top‐level element) といいます
<http://www.w3.org/TR/xslt#dt-top-level>。

[2] 最上位要素になれる要素型は、
- [CODE(XSLTe)[[VAR[xslt:]][[import]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[attribute-set]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[decimal-format]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[include]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[key]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[namespace-alias]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[output]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[param]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[preserve-space]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[strip-space]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[template]]]]
- [CODE(XSLTe)[[VAR[xslt:]][[variable]]]]
- 非 null 名前空間の任意の要素型 (拡張要素)

です。

[3] [CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素内のこれらの要素の順序は意味を持ちません。但し、
[CODE(XSLTe)[[VAR[xslt:]]import]] 要素だけは意味を持ちますし、
必ず他の型の要素より前に来ないといけません。
また、その他の要素も、[[誤り回復]]の時には順序が意味を持ちます。

[4] 拡張要素によって XSLT 要素の意味を変えることは出来ません。
拡張要素の用途としては、
- 拡張要素・拡張関数で使う情報の提供
- [[結果木]]に何をするかについての情報の提供
- [[原始木]]をどう得るかについての情報の提供
- [[スタイル・シート]]についての[[メタ・データ]]の提供
- スタイル・シートの構造化した文書化物の提供

が挙げられています。


[5]
[CITE[Glossary creator]] <http://www.w3.org/2004/07/def-to-glossary.xsl>

この [[XSLT]] [[スタイル・シート]]は [[Webブラウザ]]を介した読者向けの説明で
[[XHTML 1]] の [CODE(HTMLe)[[[html]]]] 要素を最上位要素にしています。
([[名無しさん]])

@


1.1
log
@semi-auto committed
@
text
@d1 42
a42 5
#?SuikaWiki/0.9
[1] 【[[XSLT]]】 [CODE(XSLTe)[[VAR[xslt:]][[stylesheet]]]]
要素の[[子要素]]のことを、[DFN[最上位要素]]
(top‐level element) といいます
<http://www.w3.org/TR/xslt#dt-top-level>。
d44 4
a47 32
[2] 最上位要素になれる要素型は、
-[CODE(XSLTe)[[VAR[xslt:]][[import]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[attribute-set]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[decimal-format]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[include]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[key]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[namespace-alias]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[output]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[param]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[preserve-space]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[strip-space]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[template]]]]
-[CODE(XSLTe)[[VAR[xslt:]][[variable]]]]
-非 null 名前空間の任意の要素型 (拡張要素)

です。

[3] [CODE(XSLTe)[[VAR[xslt:]]stylesheet]]
要素内のこれらの要素の順序は意味を持ちません。但し、
[CODE(XSLTe)[[VAR[xslt:]]import]] 要素だけは意味を持ちますし、
必ず他の型の要素より前に来ないといけません。
また、その他の要素も、[[誤り回復]]の時には順序が意味を持ちます。

[4] 拡張要素によって XSLT 要素の意味を変えることは出来ません。
拡張要素の用途としては、
- 拡張要素・拡張関数で使う情報の提供
- [[結果木]]に何をするかについての情報の提供
- [[原始木]]をどう得るかについての情報の提供
- [[スタイル・シート]]についての[[メタ・データ]]の提供
- スタイル・シートの構造化した文書化物の提供

が挙げられています。
@

