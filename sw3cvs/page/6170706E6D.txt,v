head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.05.31.02.04.16;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9


* appnm 属性 (特性集合定義体系)

[1] [[特性集合定義体系]]の[[要素型]]
([[要素形式]])
[CODE(SGMLe)[[[classdef]]]],
[CODE(SGMLe)[[[enumdef]]]],
[CODE(SGMLe)[[[normdef]]]],
[CODE(SGMLe)[[[propdef]]]],
[CODE(SGMLe)[[[psmodule]]]]
の属性 [DFN[[CODE(SGMLa)[rcsnm]]]]
は、その要素で表される[[特性集合部品]]の[RUBYB[応用名][application name]]を指定します。

仕様書: [[ISO/IEC 10477]]:1997 A.4.2.1.1
<http://www.y12.doe.gov/sgml/wg8/docs/n1920/html/clause-A.4.2.html#clause-A.4.2.1.1>

[2] この属性の値は
[CODE(SGML)[[[CDATA]]]] です。
部品名空間中で固有でなければなりません。

応用名は
[CODE(SGMLa)[[[rcsnm]]]]
属性の値 (規格参照具象構文名)
より制限が緩いですが、
プログラム言語に束縛できる名前である必要があります。

例えば応用名
[SAMP[processing instruction]]
は、プログラム言語に束縛する時、
プログラム言語により、
[SAMP[ProcessingInstruction]],
[SAMP[processing-instruction]],
[SAMP[PROCESSING_INSTRUCTION]]
などとなります。

という程度の説明しか ISO/IEC 10744:1997 
にはありません。つまり、機械的制限は無い模様です。

[3]
この属性は省略可能です。
省略した場合は
[CODE(SGMLa)[rcsnm]] 属性と同じ値になります。

([CODE(SGMLe)[classdef]] 要素には
[CODE(SGMLa)[rcsnm]] 属性が無いのですが、
その場合既定値はどうなるのかはわかりません。)

[[#comment]]


* メモ@
