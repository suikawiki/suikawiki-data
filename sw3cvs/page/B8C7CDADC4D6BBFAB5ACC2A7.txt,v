head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.03.31.02.00.54;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9

[1] [[UCS]] の [[BMP]] の[[区]] [CODE[09]]〜[CODE[0D]],
[CODE[0F]], [CODE[10]] の [CODE[MYANMAR]] [[ブロック]]では、
幾つかの[[文字]]は、他の二つの文字の[[図形記号]]の[[合成]]であるように[[表現]]されます。

たとえば、 [CODE(char)[[[U+0D4A]]]]
([CODE(char)[[[MALAYALAM VOWEL SIGN O]]]]) =
[CODE(char)[[[U+0D46]]]] ([CODE(char)[[[MALAYALAM VOWEL SIGN E]]]]) +
[CODE(char)[[[U+0D3E]]]] ([CODE(char)[[[MALAYALAM VOWEL SIGN AA]]]])
です。

> そのような場合、[[合成列]]と同様に、
単独の[[符号化文字]]が、合成されると、
その単独の符号化文字の図形記号と視覚的に似るような図形記号をもつ二つの符号化文字の列と同等であるとして、
[[利用者]]に対して現れてもよい。
> 「独自のつづり規則」 (unique‐spelling rule) を、
次のように定める。この規則では、区 [CODE[09]]〜[CODE[0D]]
若しくは [CODE[0F]] の表又は区 [CODE[10]]
の [CODE(char)[MYANMAR]] ブロックの表においては、
いかなる符号化文字も、同じ表の他の符号化文字の長さ 2
以上の列と同等であると、見なさない。
水準 1 及び水準 2 では、独自のつづり規則を適用しなければならない。
> 備考 水準 1 及び水準 2 では、 [[CCデータ要素]]中にそのような列が現れた場合、
その列は、それぞれの文字の名前に従って、
常に二つの異なる文字として利用者に渡される。
([[JIS X 0221]]‐1:2001 25.2)

[2]
[[結合文字]]でもないのに結合してしまう文字の結合処理を[[実装水準]] 1 と 2 では行わなくてもよいというのがこの固有綴字規則の目的のようです。 (こんな回りくどい言い方をせずに処理モデルをもう少し整理してはどうかと思うけど。)
([[名無しさん]])
@
