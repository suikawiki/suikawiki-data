head	1.2;
access;
symbols
	suikawiki3-final:1.2
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2005.03.13.02.06.01;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.03.13.03.27.27;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@auto-committed
@
text
@[[#comment]]
* 仕様書から
**RFC 3230 (実現値要約)
*** 4.1.1 Digest algorithms
>   Digest algorithm values are used to indicate a specific digest
computation.  For some algorithms, one or more parameters may be supplied.

要約算法値は特定要約計算を示すために使用します。
算法によっては、一つ以上の引数を供給するかもしれません。

>
-      digest-algorithm = token

>   The BNF for "parameter" is as is used in RFC 2616 [4].  All digest-algorithm values are case-insensitive.

[CODE(ABNF)[[[parameter]]]] の [[BNF]] は [[RFC 2616]]
で使われているものの通りです。すべての [CODE(ABNF)[digest-algorithm]]
値は大文字・小文字を区別しません。

>   The Internet Assigned Numbers Authority (IANA) acts as a registry for
digest-algorithm values.  Initially, the registry contains the
following tokens:

インターネット割り当て番号事務局 ([[IANA]])
が [CODE(ABNF)[digest-algorithm]] 値の登録簿として働きます。
最初に、登録簿は次の字句を含みます。

>
:   MD5               :
The MD5 algorithm, as specified in RFC 1321 [15].
The output of this algorithm is encoded using the
base64 encoding [1].
:   SHA               :
The SHA-1 algorithm [12].  The output of this
algorithm is encoded using the base64 encoding [1].
:   UNIXsum           :
The algorithm computed by the UNIX "sum" command,
as defined by the Single UNIX Specification,
Version 2 [13].  The output of this algorithm is an
ASCII decimal-digit string representing the 16-bit
checksum, which is the first word of the output of
the UNIX "sum" command.
:   UNIXcksum         :
The algorithm computed by the UNIX "cksum" command,
as defined by the Single UNIX Specification,
Version 2 [13].  The output of this algorithm is an
ASCII digit string representing the 32-bit CRC,
which is the first word of the output of the UNIX
"cksum" command.

: [CODE(HTTP)[[[MD5]]]] : [[RFC 1321]] で規定されている MD5 算法。
この算法の出力は [[base64]] 符号化を使って符号化する。
: [CODE(HTTP)[[[SHA]]]] : SHA-1 算法。この算法の出力は
base64 符号化を使って符号化する。
: [CODE(HTTP)[[[UNIXsum]]]] : [[単一UNIX仕様書]]第2版で定義されている
[[UNIX]] [KBD[[[sum]]]] 命令で計算される算法。
この算法の出力は16ビット検査和を表現する [[ASCII]]
十進数文字列で、 UNIX [KBD[sum]] 命令の出力の最初の語である。
: [CODE(HTTP)[[[UNIXchecksum]]]] : 単一 UNIX 仕様書第2版で定義されている
UNIX [KBD[[[cksum]]]] 命令で計算される算法。
この算法の出力は32ビット [[CRC]] を表現する [[ASCII]]
数値文字列で、 UNIX [KBD[cksum]] 命令の出力の最初の語である。

>   If other digest-algorithm values are defined, the associated encoding
MUST either be represented as a quoted string, or MUST NOT include
";" or "," in the character sets used for the encoding.

他の [CODE(ABNF)[digest-algorithm]] 値が定義される時は、
関連付けられる符号化は[[引用文字列]]として表現されるものであるか、
もしくは符号化に用いられる[[文字集合]]中に [CODE(char)[[[;]]]]
または [CODE(char)[[[,]]]] を含んでは'''ならない'''かでなければ'''なりません'''。
*** 6 IANA Considerations
> The Internet Assigned Numbers Authority (IANA) administers the name
space for digest-algorithm values.  Values and their meaning must be
documented in an RFC or other peer-reviewed, permanent, and readily
available reference, in sufficient detail so that interoperability
between independent implementations is possible.  Subject to these
constraints, name assignments are First Come, First Served (see RFC 2434 [11]).

インターネット割り当て番号事務局 ([[IANA]])
は [CODE(ABNF)[[[digest-algorithm]]]] 値の名前空間を管理します。
値とその意味は、 [[RFC]] または他のよく評価された、持続的で、
既に入手可能な参照物で、独立な実装が相互運用可能である程度十分詳細に文書化されていなければなりません。
この制約の元、名前割り当ては[[先来先給]]とします
([[RFC 2434]] を参照)。

* IANA 登録簿

[1] [CITE[HTTP Digest Algorithm Values]] 
<http://www.iana.org/assignments/http-dig-alg>

[2] [Q[(last updated 2002-01-14)]] の時点で [[RFC 3230]]
の4種類のみ登録されています。

[[#comment]]

* メモ
@


1.1
log
@auto-committed
@
text
@a0 1
#?SuikaWiki/0.9 page-icon="HTTP"
d3 2
a4 1
**RFC 3230 (実現値要約) 4.1.1 Digest algorithms
d53 1
a53 1
: [CODE(HTTP)[[[SHA-1]]]] : SHA-1 算法。この算法の出力は
d72 25
a96 2
** RFC の部分の License
[[RFCのライセンス]]
@

