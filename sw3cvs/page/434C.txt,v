head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;


1.3
date	2005.07.03.02.08.19;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.23.02.02.57;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.16.14.24.02;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@[4] 
[[7ビット符号]]や[[8ビット符号]]において、
[[列]] [CODE(char)[00]] および [CODE(char)[01]]
(すなわち [CODE(char)[0x00]]〜[CODE(char)[0x1F]]) のことを、
[DFN[CL 領域]]といいます。 CL 領域は[[符号化制御機能基本集合]]
([[C0]] 集合) に使います。
[SRC[[[JIS X 0202]]:1998 8.1, 9.1]]

[1] [[ISO/IEC 2022]] 近辺の言葉で、 
[CODE(char)[0/0]]〜[CODE(char)[1/15]] 
([CODE(char)[0x00]]〜[CODE(char)[0x1F]]) のこと。 
Control Left の略。

通常は [[C0]] 制御文字集合がここに来る。というかそれしかない。
これ (と、歴史的事情) によって、しばしば用語 CL と C0 は混用される。
([[CR]] と [[C1]] も同様。)

[2]
[[C0]] に[[符号化制御機能基本集合]]がまだ[[指示]]されていなくても、
[[ビット組合せ]] [CODE(char)[01/11]] は[[制御文字]]
[CODE(charname)[[[ESCAPE]]]] を[[表現]]します。
[SRC[[[JIS X 0202]]:1998 8.5.1, 9.5.1]]

[[#comment]]

* 呼出し

[3] [[符号要素]] [[C0]] に[[符号化制御機能基本集合]]を[[指示]]すると、
同時に [[CL]] に[[呼出]]したことにもなります。
すなわち、 [CODE(char)[00]] 列と [CODE(char)[01]] 列
([CODE(char)[0x00]]〜[CODE(char)[0x1F]]) の[[制御文字]]として使用できるようになります。
[SRC[[[JIS X 0202]]:1998 8.5.1, 9.5.1]]

[[#comment]]

* メモ@


1.2
log
@auto-committed
@
text
@d1 8
d19 4
a22 3
どの C0 制御文字集合も呼び出されていない時には、
[CODE(char)[1/11]] に制御文字 [CODE(char)[[[ESCAPE]]]] 
があると仮定されます。 (ISO/IEC 2022:1994 8.5.1 参照。)
d28 5
a32 2
[3] CL に制御文字集合を[[指示]]すると、
(C0 と CL は直結しているので) 自動的に使える状態になります。
@


1.1
log
@Updated.
@
text
@d1 4
a4 2
ISO/IEC 2022 近辺の言葉で、 0x00-0x1F のこと。 Control Left
の略。
d7 2
a8 2
これ (と、歴史的事情) によって、しばしば CL と C0 は混用される。
(CR と C1 も同様。)
d10 4
a13 2
どのC0制御文字集合も呼び出されていない時には、
01/11 に [[ESCAPE]] があると仮定されます。 ([[ISO/IEC2022]] 1994 8.5.1)
d15 10
a24 1
See also [[CR]], [[GL]], [[GR]], [[C0]], [[C1]]
@

