head	1.1;
access;
symbols
	suikawiki3-final:1.1
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2003.12.03.02.03.40;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@#?SuikaWiki/0.9
[[#comment]]
* 仕様書から
**RFC 2068・2616 (HTTP/1.1) 9.8 TRACE
> The TRACE method is used to invoke a remote, application-layer loop-back of the request message. The final recipient of the request
SHOULD reflect the message received back to the client as the
entity-body of a 200 (OK) response. The final recipient is either the
origin server or the first proxy or gateway to receive a Max-Forwards
value of zero (0) in the request (see section 14.31). A TRACE request
MUST NOT include an entity.

[CODE(HTTP)[TRACE]] 方式は、要求メッセージの遠隔の[[応用層]] [[loop‐back]]
を呼出すのに使います。要求の最終受信者は、受信したメッセージをクライアントに
[CODE(HTTP)[[[200]]]] (了解) 応答の [CODE(ABNF)[[[entity-body]]]]
として反映させる'''べきです'''。
最終受信者は、[[起源サーバー]]か、または要求で
[CODE(HTTP)[[[Max-Forwards]]]] 値零 ([CODE(HTTP)[0]])
を受信した最初の[[串]]または[[関門]]です。
[CODE(HTTP)[TRACE]] 要求は[[実体]]を含んでは'''なりません'''。

> TRACE allows the client to see what is being received at the other
end of the request chain and use that data for testing or diagnostic
information. The value of the Via header field (section [DEL[14.44]] [INS[14.45]]) is of
particular interest, since it acts as a trace of the request chain.
Use of the Max-Forwards header field allows the client to limit the
length of the request chain, which is useful for testing a chain of
proxies forwarding messages in an infinite loop.

[CODE(HTTP)[TRACE]] は、クライアントが、[[要求鎖]]の反対側で何を受信したかを見て、
そのデータを検査や診断情報として使うことを可能とします。
[CODE(HTTP)[[[Via]]]] 頭欄の値は、要求鎖の追跡として働きますから、
特に興味深いです。 [CODE(HTTP)[Max-Forwards]]]]
頭欄を使用することでクライアントは要求鎖の長さを制限できますが、
これは無限循環するメッセージ転送串鎖を検査するのに有用です。

> If [DEL[successful]] [INS[the request is valid]], the response SHOULD contain the entire request message
in the entity-body, with a Content-Type of "message/http". Responses
to this method MUST NOT be cached.

要求が[[妥当]]であれば、応答は要求メッセージ全体を
[CODE(ABNF)[[[entity-body]]]] に含め、 [CODE(HTTP)[[[Content-Type]]]]
を [CODE(MIME)[[[message/http]]]] とする'''べきです'''。
この方式への応答は[[キャッシュ]]しては'''なりません'''。

** RFC の部分の License
[[RFCのライセンス]]
* メモ
@
