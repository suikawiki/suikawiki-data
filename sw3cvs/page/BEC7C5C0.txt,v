head	1.1;
access;
symbols
	suikawiki3-final:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2004.09.27.02.08.16;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@auto-committed
@
text
@


* 焦点 (HTML)

[1] [Q[HTML 文書では、[[要素]]は活性化してその仕事を行うために利用者から[DFN[焦点]]を受取らなければなりません。例えば、利用者は [CODE(HTMLe)[[[a]]]] 要素で指定されたリンクをたどるためにリンクを活性化しなければなりません。同様に、利用者は文章を入力するためには [CODE(HTMLe)[[[textarea]]]] に焦点を与えなければなりません。]<IW:HTML4:"interact/forms.html#focus">]

というのが HTML における[DFN[[RUBYB[焦点] [focus]]]]です。
フォームの章で規定されており、フォーム[[制御子]]に関して特に重要な意味を持ちますが、
[CODE(HTMLe)[a]] 要素が例に挙げられている通り、フォーム特有の概念ではないようです。

[2] 仕様書:
- [[HTML 4]]
-- [CITE[17.11 focusGiving focus to an element]]
<IW:HTML4:"interact/forms.html#focus">

[3] 要素に焦点を与える方法は幾つもあります [SRC[HTML 4]]。
- 指示装置で要素を指定する。
- 鍵盤である要素から次の要素に移動する。
-- 著者は、[DFN[タブ順]] (要素が焦点を受取る順) を指定できる ([CODE(HTMLa)[[[tabindex]]]])。
-- 要素は、ひとたび選択されれば、何か他の打鍵で活性化できるかもしれない。
- アクセス鍵 ([CODE(HTMLa)[[[accesskey]]]]) によって要素を選択する。
-- [Q[鍵盤近道]]とか[Q[鍵盤アクセス子]]とか言うこともある。

仕様書にはちゃんと書いてありませんが、当然、
どのような方法が利用可能であるかや、具体的にどう操作するかは、
その UA や使用する環境その他に大きく左右されることになります。
特に、多くの利用者界面システムは元々[Q[焦点]]のような概念を持っていますから、
普通 UA はその概念の元で表示した HTML 文書を操作できるようにしています。

[4] HTML 4 仕様書は[Q[[RUBYB[活性化] [activate]]]]と[Q[[RUBYB[焦点] [focus]]]]についての概念が少々混乱しているように見受けられます。
[Q[焦点]]は 17.11 節で
[Q[an element must receive [DFN[focus]] from the user in order to become active and perform its tasks]<IW:HTML4:"interact/forms.html#focus">]
と定義されています。つまり、焦点を受取ると要素は活性になり、
定められた仕事を行います。

それでは焦点を受取ることと活性化が実際上同じなのかと思うと、
次の 17.11.1 節の[Q[[RUBYB[タブ順序] [tabbing order]]]]と矛盾します。
[Q[The tabbing order defines the order in which elements will receive focus when navigated by the user via the keyboard.]<IW:HTML4:"interact/forms.html#didx-tabbing_order">]
ですから、タブ移動は焦点移動です。
しかし、 [Q[users must activate a link specified by the [CODE(HTMLe)[A]] element in order to follow the specified link]<IW:HTML4:"interact/forms.html#focus">]
ですから、焦点受領と活性化が同じことであるなら、
リンクにタブ移動すると他の頁に飛ばされてしまいます。そのような解釈は不適切でしょう。

また、 Note として、
[Q[The actual key sequence that causes tabbing navigation or element activation depends on the configuration of the user agent (e.g., the "tab" key is used for navigation and the "enter" key is used to activate a selected element).]<IW:HTML4:"interact/forms.html#tabbing-navigation">]
とあります。どうやら、[Q[タブ navigation]] と[Q[要素活性化]]の2つの操作があるようです。
[Q[タブ順序]]の定義より、前者が焦点を受取ることと解するのが自然でしょう。
また、 [Q[tabbing navigation]] の結果要素は[Q[選択]]されるようです。
17.11 節にも、タブで要素を選択してから活性化するというようなことが同じような感じで書かれています。

ここまでで、どうやら少なくてもタブ移動に関しては、焦点の移動と活性化は別の操作であり、
焦点を受取る (選択する) と活性化できるらしいことが分かりました
(最初の定義に少々疑問が残りますが)。では、更に読み進めて、 17.11.2 節
([CODE(HTMLa)[accesskey]]) をみてみましょう。

> Pressing an access key assigned to an element gives focus to the element. The action that occurs when an element receives focus depends on the element. For example, when a user activates a link defined by the [CODE(HTMLe)[A]] element, the user agent generally follows the link. When a user activates a radio button, the user agent changes the value of the radio button. When the user activates a text field, it allows input, etc.

[Q[アクセス鍵を押すと要素は焦点を受取ります。焦点を受取った際の挙動は要素依存です。]]
ここまで最初の2文は何ら問題ありません。ところが、次の [Q[For example]]
以降が、なぜか突然活性化の話題になっています。
ここに書かれえているラジオ・ボタンや文章入力の挙動は焦点を受取った時の挙動として実装しても問題はなさそうですが、
リンクを飛んでしまうのは困ります。

更に、次の段落では例を挙げつつ [Q[Typing the access key gives focus to the label which in turn gives it to the associated control. The user may then enter text into the [CODE(HTMLe)[INPUT]] area.]<IW:HTML4:"interact/forms.html#idx-focus-2">]
と言っています。仕様書著者の脳内 UA では、
文章入力欄が焦点を受取ると既に利用者が入力可能な状態になっているようです。
また、その次の [CODE(HTMLe)[a]] 要素の例では、
[Q[Typing this access key takes the user to another document]<IW:HTML4:"interact/forms.html#idx-focus-2">]
とされています。ここでも、アクセス鍵を打鍵しただけでリンクは活性化して飛んでいくようです。

というわけで、どうやら、[Q[焦点を受取る]] ([Q[要素を選択する]])
ことと[Q[活性化する]]ことは、同時に起こることもあれば別々に起こることもある、
とでもまとめるしかなさそうです。

[5] 実際の UA は、 [CODE(HTMLe)[a]] によるリンクや押しボタン制御子に関連付けられたアクセス鍵を打鍵した時に焦点を受取るだけのものもあれば、
活性化してしまうものもあります。そのような実装の違いも、
仕様書の分かりにくい記述のせいかもしれません。 
(あるいは仕様書が混乱しているのは当時の実装のせいかもしれません。)


[6]
[Q[活性]]というのが既存の GUI システム類で[Q[焦点]]に近い意味でも使われているのも混乱の原因かも。
([[名無しさん]])


[[#comment]]


* メモ@
