head	1.4;
access;
symbols
	suikawiki3-final:1.4;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2007.09.18.02.37.07;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.08.02.33.45;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.13.02.17.08;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.13.02.06.00;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.4
log
@auto-committed
@
text
@

* XML DTD 入門編


** 導入

XML では著者が自由に要素や属性を使えるわけですが、
その自由さはともすれば無秩序を招くことになります。
たとえば「段落」要素の子供に「章」要素があるとか、
「人名」要素の子供に「電話番号」要素があるとか、
「本」要素に「敬称」属性がついているとかいうようなことは、
普通は認められるべきではないでしょう。しかし XML
の構文自体はこのような意味的判断とは独立していますから、
ここで挙げた例もすべて認められてしまいます。

そこで、要素や属性の関係の制約を記述する方法が幾つも
考えられています。その記述を一般に「schema (スキーマ)」
と呼びまして、特に XML 用のものとして「XML DTD」や「XML Schema」
などがあります。このような schema を使って文書の正当性を検査することを
「妥当性検証 (validation)」といいます。検査に合格すれば
「妥当 (valid)」、不合格なら「非妥当 (invalid)」です。
データの入力を人間が行う場合には特に間違いが起こりやすいですから、
schema を用意して機械的に検証することは非常に重要です。

今回取り上げるのはそのうちの XML DTD です。「DTD」は「文書型定義
(document type definition)」の略です。 DTD 
は設計が古いので既に色々な問題点がわかっています
(から他の schema 言語が色々と考案されたのです) が、比較的単純で簡単ですし、
現時点で他の schema 言語よりもずっと広く使用・実装されています。

今後の予定

2. 要素型宣言
3. 内容モデル
4. 属性定義並び宣言
5. 実体宣言
6. 補足

各回の最後には演習問題を用意する予定です。


* メモ

[1]
[CITE[ANN: Web 2.0 Mashup Ajax JavaScript Json Web Standards Validator Poniez <3 from Bjoern Hoehrmann on 2006-11-01 (www-qa@@w3.org from November 2006)]] <http://lists.w3.org/Archives/Public/www-qa/2006Nov/0000.html>
([[名無しさん]] [WEAK[2006-11-12 09:59:34 +00:00]])

[2]
[CITE[Don’t call me DOM &#187; Generating HTML documentation from DTD]] ([CODE[2007-08-04 11:19:37 +09:00]] 版) <http://people.w3.org/~dom/archives/2007/07/generating-html-documentation-from-dtd/>
([[名無しさん]] [WEAK[2007-08-04 02:21:17 +00:00]])

[3]
[CITE[Don’t call me DOM &#187; DTD comparison]] ([TIME[2007-09-13 21:14:26 +09:00]] 版) <http://people.w3.org/~dom/archives/2007/09/dtd-comparison/>
([[名無しさん]])

@


1.3
log
@auto-committed
@
text
@d50 1
a50 1
[CITE[Don’t call me DOM &#187; Generating HTML documentation from DTD]] ([TIME[2007-08-04 11:19:37 +09:00]] 版) <http://people.w3.org/~dom/archives/2007/07/generating-html-documentation-from-dtd/>
d52 4
@


1.2
log
@auto-committed
@
text
@d49 4
@


1.1
log
@auto-committed
@
text
@d1 48
a48 38
*XML DTD 入門編
**導入

XML では著者が自由に要素や属性を使えるわけですが、
その自由さはともすれば無秩序を招くことになります。
たとえば「段落」要素の子供に「章」要素があるとか、
「人名」要素の子供に「電話番号」要素があるとか、
「本」要素に「敬称」属性がついているとかいうようなことは、
普通は認められるべきではないでしょう。しかし XML
の構文自体はこのような意味的判断とは独立していますから、
ここで挙げた例もすべて認められてしまいます。

そこで、要素や属性の関係の制約を記述する方法が幾つも
考えられています。その記述を一般に「schema (スキーマ)」
と呼びまして、特に XML 用のものとして「XML DTD」や「XML Schema」
などがあります。このような schema を使って文書の正当性を検査することを
「妥当性検証 (validation)」といいます。検査に合格すれば
「妥当 (valid)」、不合格なら「非妥当 (invalid)」です。
データの入力を人間が行う場合には特に間違いが起こりやすいですから、
schema を用意して機械的に検証することは非常に重要です。

今回取り上げるのはそのうちの XML DTD です。「DTD」は「文書型定義
(document type definition)」の略です。 DTD 
は設計が古いので既に色々な問題点がわかっています
(から他の schema 言語が色々と考案されたのです) が、比較的単純で簡単ですし、
現時点で他の schema 言語よりもずっと広く使用・実装されています。

今後の予定

2. 要素型宣言
3. 内容モデル
4. 属性定義並び宣言
5. 実体宣言
6. 補足

各回の最後には演習問題を用意する予定です。

* メモ@

