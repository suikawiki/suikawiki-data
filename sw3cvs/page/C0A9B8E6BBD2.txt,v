head	1.3;
access;
symbols
	suikawiki3-final:1.3;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2005.03.23.02.05.28;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.10.31.02.07.14;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.08.02.05.52;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@* 制御子 (Web Forms)
[1] フォーム[DFN[[RUBY[制御子][コントロール][control]]]]は、
[[フォーム]]の構成要素のひとつです。[[利用者]]は、
制御子を通じてフォームと[RUBYB[対話][interact]]します。

[2] 仕様書:
- [[HTML 4]] ([[Web Forms 1.0]])
--[CITE[17.2 Controls]]
<IW:HTML4:"interact/forms.html#form-controls">
--[CITE[18.2.3 Intrinsic events]]
<IW:HTML4:"interact/scripts.html#idx-control">

[3]
:制御子の[DFN[[RUBYB[名前][name]]]]:制御子の名前は [CODE(HTMLa)[[[name]]]]
属性で指定します。制御子名の適用範囲は当該フォームです。
:制御子の[DFN[[RUBYB[初期値][initial value]]]]:
制御子の初期値は、普通 [CODE(HTMLa)[[[value]]]]
属性で指定します。
:制御子の[DFN[[RUBYB[現在値][current value]]]]:
制御子の現在値は、最初初期値ですが、
利用者や[[スクリプト]]が変更できます。

[4] [[Web Forms 1.0]] では、次の種類の制御子が定義されています。
: [RUBYB[ボタン][button]] :
ボタンは、活性化されると何らかの動作を行います。
[[提出]]ボタン、[[再設定]]ボタン、押しボタンの3種類があります。
[CODE(HTMLe)[[[input]]]] 要素型または [CODE(HTMLe)[[[input]]]]
要素型の要素で定義します。
: [RUBYB[チェック箱][checkbox]] :
入・切の状態から選びます。 [CODE(HTMLe)[[[input]]]]
要素型の要素で定義します。
: [RUBYB[ラジオ・ボタン][radio button]]:
複数の選択肢から1つを選びます。 [CODE(HTMLe)[[[input]]]]
要素型の要素で定義します。
: [RUBYB[メニュー][menu]]:
複数の選択肢から1つを選びます。 [CODE(HTMLe)[[[select]]]]
要素型の要素で定義します。
: [RUBYB[文章入力][text input]]:
文章を入力します。単一行の [CODE(HTMLe)[[[input]]]]
と複数行の [CODE(HTMLe)[[[textarea]]]] があります。
: [RUBYB[ファイル選択][file select]]:
ファイルを選択します。 [CODE(HTMLe)[[[input]]]]
要素型の要素で定義します。
: [RUBYB[隠し][hidden]]制御子:
レンダリングしない制御子です。 [CODE(HTMLe)[[[input]]]]
要素型の要素で定義します。
: [RUBYB[物体][object]]制御子:
一般の物体です。 [CODE(HTMLe)[[[object]]]] 要素型の要素で定義します。

[[#comment]]

** フォーム外の制御子

[5] 制御子に使う要素型は、通常 [CODE(HTMLe)[[[form]]]]
内でフォーム制御子を作成するために使いますが、
[[利用者界面]]を作成するためにフォーム外で使うこともできます。
但し、フォーム外の制御子は[[成功]]しません。 [SRC[HTML 4 17.2.1]]

[6] 制御子要素 ([CODE(HTMLe)[input]], [CODE(HTMLe)[select]],
[CODE(HTMLe)[button]], [CODE(HTMLe)[textarea]], [CODE(HTMLe)[label]])
はフォーム外では [[GUI]] を補うために使うことができます。
[SRC[HTML 4 18.2.3]] ([CODE(HTMLe)[fieldset]] は?)

[[#comment]]

** 実装

[[#comment]]

*** フォーム制御子と他の文書の部分との統合

[7] 多くの [[Webブラウザ]]では、フォーム制御子にその [[GUI]]
環境の標準の制御子を使用したり、非常によく似せていたりします。

[8] 古い [[Webブラウザ]]はフォーム制御子の部分とその他の部分のレンダリングや操作性をうまく統一できていませんでした。
例えば [[WinIE 3]] は文書の他の部分
[WEAK[(画面に収まっていない部分も含みます。)]] 
の読込みとレンダリングが済んでからフォーム制御子を [[Windows]]
標準のものを使って追加していました。
このため長い文書は読み終わるまでフォームに関する操作を[[利用者]]が行うことができませんでしたし、
みっともないことにフォーム制御子が画面表示に追加される直前に一瞬、
表示領域の左上隅 [WEAK[(座標原点に相当します。)]]
にこれから配置される制御子が表示されたりもしました。

[9]
[[Netscape Navigator 2]] ([[Windows 95]] 版) はフォーム制御子に [[Windows]]
標準のものを使っていましたが、例えば文章入力制御子の[[文脈メニュー]]
[WEAK[([[鼠]]の[[補助ボタン]]の[[かちっ]]により出てくるメニュー]])]]
を表示している間に頁の遷移が行われると制御子は破棄されてそのメニューだけが取り残されてしまい、
何の操作もできなくなって Netscape Navigator 
自体を終了するまで[[画面]]の最前面
[WEAK[(他のプログラムの[[窓]]よりも前)]] に居座り続けました。
(Netscape 側の制御子の処理に問題があったのか、
Windows 側で不具合があったのかはわかりませんが・・・。)

[10] [[WinIE 6]] や [[Gecko]] [WEAK[(環境や版にもよります。)]]
などの [[Webブラウザ]]では [[CSS]] による指定がフォーム制御子では反映されないことがあったりします。
この問題の背景にはその環境の標準のフォーム制御子を利用することによって生じる制限があると思われます。
元々フォーム制御子は[[利用者界面]]としての性質が強く、
[[著者]]がどこまで制御できるべきかという問題があります。
[[Webブラウザ]]の実装に使われる [[GUI]] toolkit
の類が提供している機能も様々です。 [[CSS 2]]
もフォーム制御子のレンダリングに関しては触れていません
[WEAK[([[CSS 3]] は扱っています)]]。

[[#comment]]

** メモ

* メモ@


1.2
log
@auto-committed
@
text
@d66 42
@


1.1
log
@auto-committed
@
text
@d8 1
a8 1
--17.2 Controls
d10 2
d58 5
@

