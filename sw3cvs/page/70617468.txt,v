head	1.3;
access;
symbols
	suikawiki3-final:1.3
	before-db-leaffile:1.1
	after-upgrade-to-suikawiki-3:1.1
	before-fork-suikawiki3:1.1
	after-restore-20040122:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2007.01.08.02.28.01;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.03.02.07.47;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.13.02.02.15;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@auto-committed
@
text
@
- [1] [CODE(ABNF)[[DFN[path]]        = [[fsegment]] *( "/" [[segment]] ) ;; [[RFC 1808]]]]
- [5] [CODE(ABNF)[[DFN[path]] := [ abs_path / opaque_part ] ;; [[RFC 2396]]]]

[4] RFC 1808 の [CODE(ABNF)[path]] は、 2396 では [CODE(ABNF)[[[path_segments]]]] に当たります。

[2] >>1 [CODE(ABNF)[[DFN[fsegment]] := 1*[[pchar]]]], [CODE(ABNF)[[DFN[segment]] := *pchar]] です。
最初の部分が必ず1文字ないといけないのは、
空を許すとすると [CODE(ABNF)[[[abs_path]]]] で 
[SAMP(URI)[//foo]] のようなものが認められることなり、 
[CODE(ABNF)[[[net_path]]]] と区別できなくなってしまうからでしょう。

[3] [[RFC 2396]] では、 [CODE[<path>]] は 
[CODE(ABNF)[[[abs_path]]]] 又は [CODE(ABNF)[[[opaque_part]]]]
のことを指します。これらは排他的なので曖昧なく区別できます。
(RFC 2396 3.)

[6] 2396 によれば、 path segment では [CODE(regex)[ [/;=?] ]] 
が[[予約]]されています。 [CODE(URI)[=]] 
は[[引数]]で使われるのですが、
最初の引数のセミコロンより前では意味を持たないはずです。
それでも予約されています。

あ、よくみると、引数でも [CODE(URI)[=]] は定義されていませんね。
つまり、引数だろうがなかろうが、経路 segment 内では 
[CODE(URI)[=]] と [CODE(URI)[%3D]] は必ずしも等価ではなく、
うかつに (un)escape してはいけないということです。

[7]
[CITE[The Path URN Specification]] ([CODE[1999-03-16 02:27:52 +09:00]] 版) <http://www.hypernews.org/~liberte/www/path.html>
([[名無しさん]])

[8]
<urn:ietf:id:draft-ietf-uri-urn-path-01>
([[名無しさん]])


[9]
<urn:ietf:id:draft-ietf-uri-urn-path-01>
([[名無しさん]])

@


1.2
log
@auto-committed
@
text
@d1 41
a41 28
#?SuikaWiki/0.9

- [1] [CODE(ABNF)[[DFN[path]]        = [[fsegment]] *( "/" [[segment]] ) ;; [[RFC 1808]]]]
- [5] [CODE(ABNF)[[DFN[path]] := [ abs_path / opaque_part ] ;; [[RFC 2396]]]]

[4] RFC 1808 の [CODE(ABNF)[path]] は、 2396 では [CODE(ABNF)[[[path_segments]]]] に当たります。

[2] >>1 [CODE(ABNF)[[DFN[fsegment]] := 1*[[pchar]]]], [CODE(ABNF)[[DFN[segment]] := *pchar]] です。
最初の部分が必ず1文字ないといけないのは、
空を許すとすると [CODE(ABNF)[[[abs_path]]]] で 
[SAMP(URI)[//foo]] のようなものが認められることなり、 
[CODE(ABNF)[[[net_path]]]] と区別できなくなってしまうからでしょう。

[3] [[RFC 2396]] では、 [CODE[<path>]] は 
[CODE(ABNF)[[[abs_path]]]] 又は [CODE(ABNF)[[[opaque_part]]]]
のことを指します。これらは排他的なので曖昧なく区別できます。
(RFC 2396 3.)

[6] 2396 によれば、 path segment では [CODE(regex)[ [/;=?] ]] 
が[[予約]]されています。 [CODE(URI)[=]] 
は[[引数]]で使われるのですが、
最初の引数のセミコロンより前では意味を持たないはずです。
それでも予約されています。

あ、よくみると、引数でも [CODE(URI)[=]] は定義されていませんね。
つまり、引数だろうがなかろうが、経路 segment 内では 
[CODE(URI)[=]] と [CODE(URI)[%3D]] は必ずしも等価ではなく、
うかつに (un)escape してはいけないということです。
@


1.1
log
@auto-committed
@
text
@d1 28
a28 8
#?SuikaWiki/0.9

- [1] [CODE(ABNF)[[DFN[path]]        = [[fsegment]] *( "/" [[segment]] ) ;; [[RFC1808]]]]
- [2] [CODE(ABNF)[[DFN[fsegment]] := 1*[[pchar]]]], [CODE(ABNF)[[DFN[segment]] := *pchar]] です。最初の部分が必ず1文字ないといけないのは、空を許すとすると [CODE(ABNF)[[[abs_path]]]] で [SAMP(URI)[//foo]] のようなものが認められることなり、 [CODE(ABNF)[[[net_path]]]] と区別できなくなってしまうからでしょう。
- [3] [[RFC2396]] では、 [CODE[<path>]] は [CODE(ABNF)[[[abs_path]]]] 又は [CODE(ABNF)[[[opaque_part]]]] のことを指します。これらは排他的なので曖昧なく区別できます。 (RFC 2396 3.)
- [4] RFC 1808 の [CODE(ABNF)[path]] は、 2396 では [CODE(ABNF)[[[path_segments]]]] に当たります。
- [5] [CODE(ABNF)[[DFN[path]] := [ abs_path / opaque_part ] ;; RFC 2396]]
- [6] 2396 によれば、 path segment では [CODE(regex)[ [/;=?] ]] が[[予約]]されています。 [CODE(URI)[=]] は[[引数]]で使われるのですが、最初の引数のセミコロンより前では意味を持たないはずです。それでも予約されています。あ、よくみると、引数でも [CODE(URI)[=]] は定義されていませんね。つまり、引数だろうがなかろうが、経路 segment 内では [CODE(URI)[=]] と [CODE(URI)[%3D]] は必ずしも等価ではなく、うかつに (un)escape してはいけないということです。
@

