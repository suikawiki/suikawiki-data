head	1.7;
access;
symbols
	suika-20100509:1.2
	before-graph-20090923:1.2;
locks; strict;
comment	@# @;
expand	@b@;


1.7
date	2013.01.05.04.43.20;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2012.12.27.16.02.40;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2012.12.19.13.26.14;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.17.13.00.36;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2012.12.15.13.41.47;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.08.12.12.20;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.15.15.08.12;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.7
log
@updated by (anon)
@
text
@[[Attr]]@


1.6
log
@updated by (anon)
@
text
@d1 1
a1 67

[1] [[DOM1]] で[RUBYB[属性節] [[CODE(DOM)[Attr]] node]]が持つことが出来る子[[節]]の種類は、
[[Text]] と [[EntityReference]] の2種類です。

[2] [[DOM]] の文書木・節モデルの中では、[[属性]]はやや特殊な位置づけになっています。
- [CODE(DOM)[Attr]] 節は、文書木の中には現れません。
- 親節・兄弟節はありません。 (取出す method の結果は [CODE(DOM)[null]]。)
- [[DTD]] で既定値が宣言されている場合には、その要素の属性値が明示されていない場合に常にその既定値が設定されていることとなります。
- [CODE(DOM)[[[DocumentFragment]]]] 節の直接の子要素にはできません。
- [CODE(DOMattr)[[[nodeValue]]]] では属性値文字列が、 [CODE(DOMa)[[[childNodes]]]] では [CODE(DOM)[[[Text]]]] 節及び [CODE(DOM)[[[EntityReference]]]] 節の組合せによる属性値の表現が得られます。

[3] [CODE(DOMi)[[[Node]]]] を継承して、
,読取専用属性	,[CODE(DOMa)[[[name]]]]	,名前	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[specified]]]]	,指定されているか	,[DOM1]
,属性	,[CODE(DOMa)[[[value]]]]	,値	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[ownerElement]]]]	,親要素節	,[DOM2]

- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-637646024>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-637646024>
- [4] 親節になれるのは [CODE(DOM)[[[Element]]]] 節だけです。
- [5] DOM 1 は、属性の型は分からないかもしれないから字句化値を扱う機能は提供しないといっています。ですから、例えば [CODE(XML)[IDREFS]] 型属性値の3番目の [CODE(XML)[ID]] を取り出したい、という場合には、属性値全体を受け取ってそれを勝手に解析する必要があります。

[6]
[CODE(DOMi)[Attr]] 節点の子孫である [CODE(DOMi)[[[EntityReference]]]] 節点の子供は
[CODE(DOMi)[[[EntityReference]]]] または
[CODE(DOMi)[[[Text]]]] しか認められない・・・はずですが、
[[DOM]] の仕様書にはそんなこと一言も書いてないな。

[7]
[[DOM]] の仕様書には [CODE(DOMi)@@en[[[Attr]]]]
は他の種類の [CODE(DOMi)@@en[[[Node]]]] とは違って
[CODE(DOMi)@@en[[[Element]]]] と切り離せないものだとかなんとか説明がありますが、
それでいてなぜか [CODE(DOMi)@@en[[[Attr]]]]
が単独で存在できたりします。
それ自体は値を持たずに[[子孫]]がいたり。

[8] 
[PRE[
Interface AttrExtended
  IDL Definition
    attribute boolean type;
  Attributes
    isClassAttribute of type boolean
      Whether the attribute is a class attribute or not.
      If it is a class attribute, the value is "true"; otherwise, "false".
      Note that not all attributes whose local name is "class"
      is a class attribute.
]PRE]

[9] [[Chrome]] は [[DOM3]] の規定通り [CODE(DOMi)@@en[[[Attr]]]] の[[子供]]に [CODE(DOMi)@@en[[[Text]]]]
が来る構造になっていて、通常の [CODE(DOMi)@@en[[[Node]]]] として操作できます。
しかし [[WinIE]] や [[Gecko]] は [[DOM4]] の規定のように [CODE(DOMi)@@en[[[Attr]]]]
の値を[[節点]]としては扱っていません。 [CODE(DOMa)@@en[[[childNodes]]]] は空ですし、
[CODE(DOMm)@@en[[[appendChild]]]] は [CODE(DOMe)@@en[[[HierarchyRequestError]]]] になります。
[TIME[2012-12-15T13:41:44.200Z]]

[10] [CITE[IRC logs: freenode / #whatwg / 20121213]]
( ([TIME[2012-12-17 21:09:20 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20121213#l-339>

[11] [CITE@@en[Re: ''''''[''''''DOMCore'''''']'''''' Attr]]
( ([[Jonas Sicking]] 著, [TIME[2010-09-11 01:28:14 +09:00]] 版))
<http://lists.w3.org/Archives/Public/public-webapps/2010JulSep/0797.html>

[12] [CITE@@en-US[Attr - Document Object Model (DOM) | MDN]]
( ([TIME[2012-09-30 03:37:57 +09:00]] 版))
<https://developer.mozilla.org/en/docs/DOM/Attr>@


1.5
log
@updated by (anon)
@
text
@d63 5
a67 1
<http://lists.w3.org/Archives/Public/public-webapps/2010JulSep/0797.html>@


1.4
log
@updated by (anon)
@
text
@d59 5
a63 1
<http://krijnhoetmer.nl/irc-logs/whatwg/20121213#l-339>@


1.3
log
@updated by (anon)
@
text
@d55 5
a59 1
[TIME[2012-12-15T13:41:44.200Z]]@


1.2
log
@updated by (anon)
@
text
@a1 3

* Attr 節・Attr 界面 (DOM)

a28 3
([[名無しさん]])


d49 7
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/41747472.txt>
@
text
@d1 35
a35 35


* Attr 節・Attr 界面 (DOM)

[1] [[DOM1]] で[RUBYB[属性節] [[CODE(DOM)[Attr]] node]]が持つことが出来る子[[節]]の種類は、
[[Text]] と [[EntityReference]] の2種類です。

[2] [[DOM]] の文書木・節モデルの中では、[[属性]]はやや特殊な位置づけになっています。
- [CODE(DOM)[Attr]] 節は、文書木の中には現れません。
- 親節・兄弟節はありません。 (取出す method の結果は [CODE(DOM)[null]]。)
- [[DTD]] で既定値が宣言されている場合には、その要素の属性値が明示されていない場合に常にその既定値が設定されていることとなります。
- [CODE(DOM)[[[DocumentFragment]]]] 節の直接の子要素にはできません。
- [CODE(DOMattr)[[[nodeValue]]]] では属性値文字列が、 [CODE(DOMa)[[[childNodes]]]] では [CODE(DOM)[[[Text]]]] 節及び [CODE(DOM)[[[EntityReference]]]] 節の組合せによる属性値の表現が得られます。

[3] [CODE(DOMi)[[[Node]]]] を継承して、
,読取専用属性	,[CODE(DOMa)[[[name]]]]	,名前	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[specified]]]]	,指定されているか	,[DOM1]
,属性	,[CODE(DOMa)[[[value]]]]	,値	,[DOM1]
,読取専用属性	,[CODE(DOMa)[[[ownerElement]]]]	,親要素節	,[DOM2]

- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-637646024>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-637646024>
- [4] 親節になれるのは [CODE(DOM)[[[Element]]]] 節だけです。
- [5] DOM 1 は、属性の型は分からないかもしれないから字句化値を扱う機能は提供しないといっています。ですから、例えば [CODE(XML)[IDREFS]] 型属性値の3番目の [CODE(XML)[ID]] を取り出したい、という場合には、属性値全体を受け取ってそれを勝手に解析する必要があります。

[6]
[CODE(DOMi)[Attr]] 節点の子孫である [CODE(DOMi)[[[EntityReference]]]] 節点の子供は
[CODE(DOMi)[[[EntityReference]]]] または
[CODE(DOMi)[[[Text]]]] しか認められない・・・はずですが、
[[DOM]] の仕様書にはそんなこと一言も書いてないな。

([[名無しさん]])


[7]
d42 13
a54 8

([[名無しさん]])


[[#comment]]


* メモ@

