head	1.8;
access;
symbols
	suika-20100509:1.4
	before-graph-20090923:1.4;
locks; strict;
comment	@# @;
expand	@b@;


1.8
date	2013.11.13.11.27.08;	author wakaba;	state Exp;
branches;
next	1.7;

1.7
date	2013.07.27.10.42.50;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2013.07.27.10.41.23;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.21.14.38.56;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.15.11.18.27;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2009.02.10.11.43.44;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.08.12.05.35;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.18.11.55.16;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.8
log
@updated by (anon)
@
text
@
[1]
Returns a duplicate of the node, i.e. serves as a generic
[PRE[
      copy constructor for nodes.
]PRE]

[PRE[
      - The duplicate node has no parent, i.e. <A::Node.parentNode>
        is <DOM::null>.  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - The duplicate node has no user data, i.e. user data
        associated to the node is not carried over.  However,
        if any <IF::UserDataHandlers> has been specified along with
        the associated data, those handlers will be called with
        the appropriate parameters before the method returns.  <SRC::DOM3>
]PRE]

[PRE[
      - If the node is an <IF::Element>, all attributes and their values,
        including those representing defaulted attributes (i.e.
        attributes whose <A::Attr.specified> are <DOM::false>),
but the method does not copy any children it contains
        unless it is a deep clone (i.e. <P::deep> is <DOM::true>).
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> directly, as oppsed to be cloned
        as part of an <IF::Element> cloning operation, returns
        a specified attribute (i.e. its <A::Attr.specified> is
        set to <DOM::true>).  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
- Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning any other type of node simply returns a copy of the node.
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
- Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
]PRE]

[PRE[
      - Cloning a node does not copy the event listeners attached to it.
        <SRC::DOM2 Events, DOM3 Events>
]PRE]

[PRE[
      {NOTE:: <IF::UserDataHandler>s are prohibitted to throw exceptions;
              if a <IF::UserDataHandler> that is registered to the node
              being cloned throws an exception, then the result of
              the method is undefined.
]PRE]

([[名無しさん]])

[2]
[CODE(DOMc)@@en[[[NOT_SUPPORTED_ERR]]]]:
The node is of type <IF::Document>, <IF::tx|DocumentType>,
[PRE[
          <IF::tx|Entity>, or <IF::tx|Notation> and the implementation
          does not support cloning that type of node.  <SRC::DOM1SE>
]PRE]

[PRE[
          Only in DOM1SE; they are implementation dependent
          in DOM1SE, DOM2, and DOM3.
]PRE]

([[名無しさん]])

[3]
[CODE(DOMi)@@en[[[Element]]]] を [CODE(DOMp)@@en[[[deep]]]] = [CODE(IDL)@@en[[[false]]]]
で [CODE(DOMm)@@en[[[cloneNode]]]] すると、[[既定属性]]が自動的に作られるのかは明確ではありません。

([[名無しさん]])


[4]
[CODE(DOMi)@@en[[[UserDataHandler]]]] がいつ呼び出されるのかはよくわかりません。
各[[節点]]が複製される度に呼ばれるのか、それとも全[[節点]]が複製されてから順に呼んでもいいのか。

[5] [CITE@@en-us[Firefox 3.1 for developers - MDC]] ([TIME[2009-02-08 18:25:06 +09:00]] 版) <https://developer.mozilla.org/ja/Firefox_3.1_for_developers#.E6.96.B0.E3.81.97.E3.81.8F.E3.82.B5.E3.83.9D.E3.83.BC.E3.83.88.E3.81.95.E3.82.8C.E3.81.9F.E6.A9.9F.E8.83.BD_2>

>HTML ノードでの cloneNode ( bug 42976 )。

[6] [CITE[IEにおけるcloneNodeの問題点 - dhrnameの開発日誌]] ([TIME[2009-01-27 20:59:01 +09:00]] 版) <http://d.hatena.ne.jp/dhrname/20080621/p1>

>DOMのcloneNodeはノードを複製できますし、IEもそれに従っています。しかしながら、IEでは、setAttributeなどで、後から付け足された属性は複製しない特徴を持っています。




[7] [CITE@@en[(X)HTML5 Tracking]]
([TIME[2009-09-15 20:16:30 +09:00]] 版)
<http://html5.org/tools/web-apps-tracker?from=3853&to=3854>

[8] [CITE[IRC logs: freenode / #whatwg / 20120514]]
( ([TIME[2012-05-21 23:32:11 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20120514#l-223>

[9] [CITE[''''''[''''''whatwg'''''']'''''' cloneNode and HTML elements]]
( ([TIME[2009-09-27 11:33:07 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-September/022960.html>

[10] [CITE[''''''[''''''whatwg'''''']'''''' cloneNode and HTML elements]]
( ([TIME[2009-09-27 11:33:07 +09:00]] 版))
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-September/022969.html>

[11] [CITE[Sadness. (Default importNode() and cloneNode() to false.) https://www.w3... · 70fdc5f · whatwg/dom]]
( ([TIME[2013-11-13 11:27:00 +09:00]] 版))
<https://github.com/whatwg/dom/commit/70fdc5f9030c22c5ceca9e875e06f8b305529ef8>@


1.7
log
@updated by (anon)
@
text
@d149 5
a153 1
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-September/022969.html>@


1.6
log
@updated by (anon)
@
text
@d145 5
a149 1
<http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-September/022960.html>@


1.5
log
@updated by (anon)
@
text
@d141 5
a145 1
<http://krijnhoetmer.nl/irc-logs/whatwg/20120514#l-223>@


1.4
log
@updated by (anon)
@
text
@d137 5
a141 1
<http://html5.org/tools/web-apps-tracker?from=3853&to=3854>@


1.3
log
@updated by (anon)
@
text
@d133 5
@


1.2
log
@updated by (anon)
@
text
@d128 4
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/636C6F6E654E6F6465.txt>
@
text
@d1 120
a120 120

[1]
Returns a duplicate of the node, i.e. serves as a generic
[PRE[
      copy constructor for nodes.
]PRE]

[PRE[
      - The duplicate node has no parent, i.e. <A::Node.parentNode>
        is <DOM::null>.  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - The duplicate node has no user data, i.e. user data
        associated to the node is not carried over.  However,
        if any <IF::UserDataHandlers> has been specified along with
        the associated data, those handlers will be called with
        the appropriate parameters before the method returns.  <SRC::DOM3>
]PRE]

[PRE[
      - If the node is an <IF::Element>, all attributes and their values,
        including those representing defaulted attributes (i.e.
        attributes whose <A::Attr.specified> are <DOM::false>),
but the method does not copy any children it contains
        unless it is a deep clone (i.e. <P::deep> is <DOM::true>).
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> directly, as oppsed to be cloned
        as part of an <IF::Element> cloning operation, returns
        a specified attribute (i.e. its <A::Attr.specified> is
        set to <DOM::true>).  <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
- Cloning an <IF::Attr> always clones its children, since
        they represent its value, no matter whether this is a
        deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning an <IF::tx|EntityReference> automatically constructs
        its subtree if a corresponding <IF::tx|Entity> is available,
        no matter whether this is a deep clone or not.  <SRC::DOM3>
]PRE]

[PRE[
      - Cloning any other type of node simply returns a copy of the node.
        <SRC::DOM1, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
- Cloning <IF::Document>, <IF::tx|DocumentType>, <IF::tx|Entity>,
        <IF::tx|Notation> nodes is implementation dependent.
        <SRC::DOM1SE, DOM2, DOM3>
]PRE]

[PRE[
      - Cloning an immutable subtree results in a mutable copy, but
        the children of an <IF::tx|EntityReference> clone are
        read-only.  <SRC::DOM2, DOM3>
]PRE]

[PRE[
      - Cloning a node does not copy the event listeners attached to it.
        <SRC::DOM2 Events, DOM3 Events>
]PRE]

[PRE[
      {NOTE:: <IF::UserDataHandler>s are prohibitted to throw exceptions;
              if a <IF::UserDataHandler> that is registered to the node
              being cloned throws an exception, then the result of
              the method is undefined.
]PRE]

([[名無しさん]])

[2]
[CODE(DOMc)@@en[[[NOT_SUPPORTED_ERR]]]]:
The node is of type <IF::Document>, <IF::tx|DocumentType>,
[PRE[
          <IF::tx|Entity>, or <IF::tx|Notation> and the implementation
          does not support cloning that type of node.  <SRC::DOM1SE>
]PRE]

[PRE[
          Only in DOM1SE; they are implementation dependent
          in DOM1SE, DOM2, and DOM3.
]PRE]

([[名無しさん]])

[3]
[CODE(DOMi)@@en[[[Element]]]] を [CODE(DOMp)@@en[[[deep]]]] = [CODE(IDL)@@en[[[false]]]]
で [CODE(DOMm)@@en[[[cloneNode]]]] すると、[[既定属性]]が自動的に作られるのかは明確ではありません。

([[名無しさん]])


[4]
d122 7
a128 3
各[[節点]]が複製される度に呼ばれるのか、それとも全[[節点]]が複製されてから順に呼んでもいいのか。
([[名無しさん]])

@

