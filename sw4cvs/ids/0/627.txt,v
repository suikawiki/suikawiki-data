head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.10.23.32.05;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/6D616E616B6169.ns/A5E1A5E2.ns/323030342D30352D3331.txt>
@
text
@#?SuikaWiki/0.9

[1]
Message::Markup::XML::Parser::Base の parse_document_entity を実装。

残るは外部部分集合実体の読込みのところと一般実体参照の展開。
([[名無しさん]] [WEAK[2004-05-31 07:32:36 +00:00]])


[2]
XML では展開できない(しない)引数実体参照に出くわした後は[[実体宣言]]と[[属性定義並び宣言]]を処理しないことになっていたはずですが、
この処理しないというのは、意味的に無視するということで、
構造的に、つまり引数実体参照を展開するのはやらないといけないということなのでしょうかねぇ。
といいますのは、マーク宣言の中で実体宣言と属性定義並び宣言だけがこの規定の対象になっていて、その理由はこの2つの宣言だけ同じ名前に対して複数個あってもよいことになっていますから、
参照の展開による意味の変化を抑えるためにこの規定はあるのではないかと思えるのです。

とかなんとか考えていたのですが、
仕様書 <http://www.w3.org/TR/xml11/#proc-types>
を見たら、ちゃんと[Q[処理する]]の定義も2種類の宣言だけの理由も書いてあるではないですか。
([[名無しさん]] [WEAK[2004-05-31 07:39:18 +00:00]])

@
