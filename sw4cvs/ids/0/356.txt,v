head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.10.17.33.40;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/5850617468.ns/BCB0.txt>
@
text
@#?SuikaWiki/0.9
[1] [DFN[式]] (expression, 構文規則 [CODE(XML)[[[Expr]]]])
は、 [[XPath]] の基本的な構造です。
式を評価すると[[物体]]が得られます。

式の評価には[[文脈]]が影響します。
同じ式でも、文脈が異なれば違った結果が得られるかもしれません。
文脈は XPath の[[応用]]に依存しますから、
式の結果も応用 ([[XSLT]] とか [[XPointer]]
とか) に依存することとなります。

[2] 式を構文解析するときは、まず最初に字句に分割して、更にそれぞれの字句を構文解析します。字句の間には[[空白]]が自由に挿入できます。

[3] 式の構文の定義は 
<http://www.w3.org/TR/xpath#section-Expressions>
にあります。[[再帰]]とかなんだとか色々あって随分物騒な定義です。

整理して [[WSP]] を追加するとこんな簡単になっちゃいました:
-[CODE(ABNF)[式 := UnaryExpr *(演算子 UnaryExpr) ]]
-[CODE(ABNF)[UnaryExpr := *([WSP] '-') PathExpr *("|" PathExpr) ]]
-[CODE(ABNF)[PathExpr := 位置経路 / PrimaryExpr *述語 [([WSP] ("/" / "//")) 相対位置経路] ]]
-[CODE(ABNF)[PrimaryExpr := 変数参照 / [WSP] '(' 式 ')' [WSP] / 表記 / 数値 / 関数呼出]]
-[CODE(ABNF)[演算子 := [WSP] ('or' / 'and' / '=' / '!=' / '<' / '>' / '<=' / '>=' / '+' / '-' / '*' / 'div' / 'mod') [WSP] ]]

@
