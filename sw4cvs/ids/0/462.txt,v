head	1.6;
access;
symbols
	suika-20100509:1.2
	before-graph-20090923:1.2;
locks; strict;
comment	@# @;
expand	@b@;


1.6
date	2014.04.12.00.48.17;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2013.12.27.09.32.10;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2013.12.27.09.28.27;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2013.02.16.12.42.39;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.27.06.06.58;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.10.19.33.32;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.6
log
@updated by (anon)
@
text
@* 用法

[11] [CODE(DOMi)@@en[[[DocumentFragment]]]] [[節点]]は [CODE(DOMm)@@en[[[createDocumentFragment]]]]
[[メソッド]]により自由に作ることができます。

[12] [CODE(HTMLe)@@en[[[template]]]] [[要素]]を作ると、[[雛形内容]]として自動的に関連付けられた
[CODE(DOMi)@@en[[[DocumentFragment]]]] [[オブジェクト]]が作られます。

[13] [CODE(DOMi)@@en[[[ShadowRoot]]]] [[インターフェイス]]は [CODE(DOMi)@@en[[[DocumentFragment]]]]
[[インターフェイス]]を継承しています。

[14] 仕様書上の技法として、複数の[[節点]]を挿入する操作を記述するために (架空の) [CODE(DOMi)@@en[[[DocumentFragment]]]]
[[節点]]を使うことがあり、 [[DOM Standard]] や [[HTML Standard]] で使われています。

* メモ

[3] [RUBYB[文書素片] [Document fragment]]は、
その名の通り[[文書]]の[[素片]]です。

[[XML]] の ([[内容]]から参照されている) 
[[整形式]][[外部解析対象実体]]に丁度相当します。

[6]
[RUBYB[文書] [[[Document]]]][RUBY[節] [ノード]]は、
[[要素節]]を1つしか持てません。
それに対して、文書断片節は複数の要素節を持てますし、
その節の外側に[[文節]]などを自由に配置できます。

[1] [RUBYB[文書断片節] [[CODE(DOM)[DocumentFragment]] node]]は、
次の種類の[[節]]を子供に持てます:
- [CODE(DOM)[[[Element]]]] (要素節) [DOM1]
- [CODE(DOM)[[[ProcessingInstruction]]]] (処理指令節) [DOM1]
- [CODE(DOM)[[[Comment]]]] (注釈節) [DOM1]
- [CODE(DOM)[[[Text]]]] (文節) [DOM1]
- [CODE(DOM)[[[CDATASection]]]] (文字データ節) [DOM1]
- [CODE(DOM)[[[EntityReference]]]] (実体参照節) [DOM1]

[2] [CODE(DOMi)[DocumentFragment]] 界面 (Interface)
は、 [CODE(DOMi)[[[Node]]]] 界面を継承します。
(DOM 1 では追加の[RUBY[構成員] [メンバー]]の定義はありません。)

[4] 文書素片[RUBY[物体] [オブジェクト]]を
[WEAK[([CODE(DOMmethod)[[[appendChild]]]] などにより)]]
他の節のどこかに挿入すると、 
[WEAK[(他の節物体ならその節がそのままその位置に挿入されるのに対し、)]]
当該文書断片の''子節''がその位置に挿入されます。
その文書断片は空 (子節なし) になります。

[5] 文書の一部を用意しておいて、それを組立てるのに便利です。
例えば、次の架空の言語の DOM 束縛を使って書いた code
は、見出し要素節と段落群(文書断片)節から章要素節を作ります。

[PRE[
 my $heading := $document.createElement ('h');
 $heading.appendChild ($document.createTextNode ('Heading'));
 my $paragraphs := $document.createDocumentFragment ();
 for my $i (1..10) {
   my $paragraph := $document.createElement ('p');
   $paragraph.appendChild ($document.createTextNode ("Paragraph $i");
   $paragraphs.appendChild ($paragraph);
 }
 ;; ここで、 $heading 節は
 ;;   <h>:$heading
 ;;    +-- "Heading"
 ;;  $paragraphs 節は
 ;;   {断片}:$paragraphs
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 1"
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 2"
 ;;    :
 ;;    +-- <p>
 ;;         +-- "Paragraph 10"
 ;; という構造になっている。
 
 my $section = makeSection ($heading, $paragraphs);
 
 function makeSection ($heading, $paragraphs) {
   my $section = $document.createElement ('section');
   $section.appendChild ($heading);
   $section.appendChild ($paragraph);
   return $section;
 }
 
 ;; 最終的に、 $section 節は次のような構造となる。
 ;;   <section>
 ;;     +-- <h>:$heading
 ;;     |    +-- "Heading"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 1"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 2"
 ;;     :
 ;;     +-- <p>
 ;;          +-- "Paragraph 10"
 ;; {断片} の節そのものは消滅したことに注意。
]PRE]

[7] 仕様書:
- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-B63ED1A3>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3>

[8]
[CITE[文書ツリーを多数回変更するときはDocument Fragmentを経由する (agenda)]] ([TIME[2008-02-20 02:55:06 +09:00]] 版) <http://jintrick.net/agenda/2008/02/document-fragment.html>

[9] [CITE[Opera9.5+ DocumentFragment 経由でノードを追加すると再描画しない - uupaaの開発日記]] ([TIME[2008-12-27 15:05:25 +09:00]] 版) <http://d.hatena.ne.jp/uupaa/20081022/1224674908>

[10] [CITE[Add constructors for DocumentFragment, Text, and Comment. (DocumentType ... · a2f1e18 · whatwg/dom]]
( ([TIME[2013-02-16 12:38:10 +09:00]] 版))
<https://github.com/whatwg/dom/commit/a2f1e18ff56ecc12643dc54fcf50f0c335beec71>

[15] [CITE@@en[XQuery and XPath Data Model 3.0]]
( ([TIME[2014-04-08 07:00:06 +09:00]] 版))
<http://www.w3.org/TR/xpath-datamodel-3/#dt-fragment>@


1.5
log
@updated by (anon)
@
text
@d110 5
a114 1
<https://github.com/whatwg/dom/commit/a2f1e18ff56ecc12643dc54fcf50f0c335beec71>@


1.4
log
@updated by (anon)
@
text
@d12 3
@


1.3
log
@updated by (anon)
@
text
@d1 1
d3 2
d6 7
a12 1
* DocumentFragment 節・ DocumentFragment 界面 (DOM)
d105 2
a106 5

* メモ

[10] [CITE[Add constructors for DocumentFragment, Text, and Comment. (DocumentType ... · a2f1e18 · whatwg/dom]]
( ([TIME[2013-02-16 12:38:10 +09:00]] 版))
@


1.2
log
@updated by (anon)
@
text
@d97 5
a101 1
* メモ@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/446F63756D656E74467261676D656E74.txt>
@
text
@d1 96
a96 97


* DocumentFragment 節・ DocumentFragment 界面 (DOM)

[3] [RUBYB[文書素片] [Document fragment]]は、
その名の通り[[文書]]の[[素片]]です。

[[XML]] の ([[内容]]から参照されている) 
[[整形式]][[外部解析対象実体]]に丁度相当します。

[6]
[RUBYB[文書] [[[Document]]]][RUBY[節] [ノード]]は、
[[要素節]]を1つしか持てません。
それに対して、文書断片節は複数の要素節を持てますし、
その節の外側に[[文節]]などを自由に配置できます。

[1] [RUBYB[文書断片節] [[CODE(DOM)[DocumentFragment]] node]]は、
次の種類の[[節]]を子供に持てます:
- [CODE(DOM)[[[Element]]]] (要素節) [DOM1]
- [CODE(DOM)[[[ProcessingInstruction]]]] (処理指令節) [DOM1]
- [CODE(DOM)[[[Comment]]]] (注釈節) [DOM1]
- [CODE(DOM)[[[Text]]]] (文節) [DOM1]
- [CODE(DOM)[[[CDATASection]]]] (文字データ節) [DOM1]
- [CODE(DOM)[[[EntityReference]]]] (実体参照節) [DOM1]

[2] [CODE(DOMi)[DocumentFragment]] 界面 (Interface)
は、 [CODE(DOMi)[[[Node]]]] 界面を継承します。
(DOM 1 では追加の[RUBY[構成員] [メンバー]]の定義はありません。)

[4] 文書素片[RUBY[物体] [オブジェクト]]を
[WEAK[([CODE(DOMmethod)[[[appendChild]]]] などにより)]]
他の節のどこかに挿入すると、 
[WEAK[(他の節物体ならその節がそのままその位置に挿入されるのに対し、)]]
当該文書断片の''子節''がその位置に挿入されます。
その文書断片は空 (子節なし) になります。

[5] 文書の一部を用意しておいて、それを組立てるのに便利です。
例えば、次の架空の言語の DOM 束縛を使って書いた code
は、見出し要素節と段落群(文書断片)節から章要素節を作ります。

[PRE[
 my $heading := $document.createElement ('h');
 $heading.appendChild ($document.createTextNode ('Heading'));
 my $paragraphs := $document.createDocumentFragment ();
 for my $i (1..10) {
   my $paragraph := $document.createElement ('p');
   $paragraph.appendChild ($document.createTextNode ("Paragraph $i");
   $paragraphs.appendChild ($paragraph);
 }
 ;; ここで、 $heading 節は
 ;;   <h>:$heading
 ;;    +-- "Heading"
 ;;  $paragraphs 節は
 ;;   {断片}:$paragraphs
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 1"
 ;;    +-- <p>
 ;;    |    +-- "Paragraph 2"
 ;;    :
 ;;    +-- <p>
 ;;         +-- "Paragraph 10"
 ;; という構造になっている。
 
 my $section = makeSection ($heading, $paragraphs);
 
 function makeSection ($heading, $paragraphs) {
   my $section = $document.createElement ('section');
   $section.appendChild ($heading);
   $section.appendChild ($paragraph);
   return $section;
 }
 
 ;; 最終的に、 $section 節は次のような構造となる。
 ;;   <section>
 ;;     +-- <h>:$heading
 ;;     |    +-- "Heading"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 1"
 ;;     +-- <p>
 ;;     |    +-- "Paragraph 2"
 ;;     :
 ;;     +-- <p>
 ;;          +-- "Paragraph 10"
 ;; {断片} の節そのものは消滅したことに注意。
]PRE]

[7] 仕様書:
- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-B63ED1A3>
- [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3>

[8]
[CITE[文書ツリーを多数回変更するときはDocument Fragmentを経由する (agenda)]] ([TIME[2008-02-20 02:55:06 +09:00]] 版) <http://jintrick.net/agenda/2008/02/document-fragment.html>
([[名無しさん]])

[[#comment]]


@

