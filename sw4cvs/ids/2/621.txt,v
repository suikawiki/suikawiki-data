head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.12.21.13.21;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/4558.txt>
@
text
@#?SuikaWiki/0.9
[1] [[認知様相]] [CODE(SGML)[[[MD]]]] では、
[CODE(SGML)[[[grpo]]]] が直後に続く[[文脈依存区切子]]の最初としてだけ[[認知]]します。
認知様相 [CODE(SGML)[[[GRP]]]] では無制約です。
([[JISX4151]]-1992 8.6.2 参照。)

[2] この制約は [CODE(SGML)[[[minus]]]] と [CODE(SGML)[[[plus]]]] 
に課されます。
このうち、 [CODE(SGML)[minus]] は認知様相 
[CODE(SGML)[MD]] でのみ認知されます。

従って、まとめると、 [CODE(SGML)[plus]] または [CODE(SGML)[minus]]
が[[マーク宣言]]中で [CODE(SGML)[grpo]]
のすぐ前にあるときには認知されます。
これは[[添加要素]]や[[排除要素]]の指定の開始です。

[CODE(SGML)[plus]] はこれに加えて、[[群]]の中でも認知されます。
この場合は文脈に依りません。
これは[[出現標識]]とみなされるはずのものです。

[3] [CODE(SGML)[minus]] は[[要素型宣言]]におけるタグ省略最小化の可否を指定する引数として使えますが、
この場合には文脈上の制約なしに区切子として認知することになっています。
(JIS X 4151-1992 10.2.2 参照。)

[4] [[ENR]] を使うと [[SGML宣言]]で[[文字番号]]の範囲指定を
[CODE(SGML)[minus]] を使って行えるようになりますが、
認知関連の規定が追加されていません。これじゃあ ENR'ed
SGML 宣言を処理できなくて困ってしまう気がします。@
