head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.21.22.39.20;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/A4DBA4C8A4F3A4C9B7F9A4ACA4E9A4BB.txt>
@
text
@#?SuikaWiki/0.9
[1] 【[[不思議マーク付け]]】
[[HTML]] で[[文字]]を大きくする2種類の[[タグ]]のうち、
[CODE(HTML)[<[[hn]]>]] では [CODE(HTML)[[VAR[n]]]]
を大きくすると文字が小さくなるのに対し、
[CODE(HTML)[<[[font]] [[size]]=[VAR[n]]>]]
では [CODE(HTML)[[VAR[n]]]]
を大きくすると文字が大きくなる現象。

某新聞の記事 (2003) 
でこの現象を指摘して
「ほとんど嫌がらせのようにもおもえますが」
などと述べられていて、
話題になった。

[2] [CODE(HTML)[font]]
要素型は不適切だとか、
[CODE(HTML)[h[VAR[n]]]]
は文字の大きさを指定するための要素型ではないとか、
そういうことは置いておくにしても
(でも [CODE(HTML)[h[VAR[n]]]]
が[[見出し]]要素型であることまでは置いておいては行けませんよ)、
確かに一見不整合のように見えるこの数字の順にはそれなりの合理性があります。

見出しは、大見出しが存在することは
(その文章に見出しがあるなら)
確実ですが、小見出しが幾つまであるかは不確定です。
[SAMP[1.1]] の水準までかもしれないし、
[SAMP[1.1.1]] の水準までかもしれないし、
[SAMP[1.1.1.1.1.1.1]]
の水準まであるかもしれない
[WEAK[(一般に無意味に階層が深い文書は不適当と思われますが、それはまた別の話)]]。
だから、大見出しの水準を
[CODE[1]] として、
水準が小さくなるほど数を大きくしていくのが適当です。

一方、文字の大きさは、
小さい方には限界がありますが、
大きな方には無制限です
[WEAK[(実際には紙や画面の制限がありますが、それも別の話)]]。
それに文字の大きさは[[ポイント]]や[[号]]のような伝統的単位を見れば分かるように、
大きさと数字に正の相関がある指定法方が使われてきました。
そもそも、一般に長さの単位が長いほど大きくなるように設定されていることは言うまでもないでしょう。
だから文字の大きさを大きいほど大きな数であらわすのは合理的です。

[3] そもそも両者は「見出し」の大きさと「文字」の大きさという2つの異なる概念にそれぞれ対応しています。
それを混同して「ほとんど嫌がらせ」
などと感じるのは、
まったく表面的にしか理解していないことの何よりの証拠です。

実際にはこの混同は数年前からよくあったことで、
ちょっと調べればその事情はわかりそうなものです。
それなのにその努力さえも放棄し、
無遠慮にも [WEAK[(いや、これでも遠慮しているのかもしれませんが)]]
「嫌がらせ」などとのたまうことこそ、
何よりも読者と HTML
に対する嫌がらせではないでしょうか。
しかも、そのような態度の筆者が夏休みだから[[ホームページ]]を作ろうなどと称して明らかに誤った知識を教え込もうとすることに至っては、
HTML に対する冒涜でなければいったいなんでしょう。


[5]
>見出しと本文の数字の指示の仕方が逆というのは、
ほとんど嫌がらせかとも思えますが、ここは淡々と行きましょう。

<http://www.be.asahi.com/20030719/W16/0033.html> より。
@
