head	1.2;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2014.04.08.02.57.36;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.13.16.37.03;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated by (anon)
@
text
@[1] [CODE(DOMi)[CharacterData]] 界面は、 [CODE(DOMi)[[[Node]]]]
界面を継承し、文字データの操作に関わる機能を提供します。

この界面そのものは [[XML]] の[[節]]には対応せず、
この界面を継承した節界面を通して利用します。

なお、文字位置は [CODE(DOM)[0]] から数えます。

[2]
,属性	,[[data]]	,文字データ	,[DOM1]
,読取専用属性	,[[length]]	,文字データ長	,[DOM1]
,method	,[[substringData]]	,文字データの一部を取出す	,[DOM1]
,method	,[[appendData]]	,文字データに付加	,[DOM1]
,method	,[[insertData]]	,文字データを挿入	,[DOM1]
,method	,[[deleteData]]	,文字データを削除	,[DOM1]
,method	,[[replaceData]]	,文字データを置換	,[DOM1]

[3] >>2 特定言語の作法に強く影響されている気がしないでもありませんが(w

- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-FF21A306>
- [4] [CODE(DOMi)[CharacterData]] は、任意の長さの文字列を扱えなければなりません。しかしながら、束縛によっては [CODE(DOM)[[[DOMString]]]] で扱える長さの制限があって、よって [CODE(DOM)[data]] 属性で値全体を取出すことが出来ないかもしれません (その時は [CODE(DOM)[DOMSTRING_SIZE_ERR]] 例外が発生します)。そのような場合には、 [CODE(DOMmethod)[substringData]] method を使うように、と仕様書は言っています。
- [5] [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-FF21A306>
- [6] >>3 実際、 method の多くは [CODE(DOMp)[offset]] パラメーターを持ってますが、これは UTF-16 で表した時のオクテット列中の文字の位置 (16ビット1単位) です。だから [CODE(DOM)[DOMString]] を勝手に UTF-8 とかにして実装すると、面倒なことになります。だから、言語中立なはずの界面としての DOM で [CODE(DOMi)[CharacterData]] は駄目すぎます。
- [7] >>6 変な見栄?はってどんな言語でも使えますよ〜なんていわずに、最初から文字列型を UTF-16 に出来るどんな言語でも使えますよ〜と言っとけばいいのにねぇ。
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/43686172616374657244617461.txt>
@
text
@d1 24
a24 56



* CharacterData 界面 (DOM)

[1] [CODE(DOMi)[CharacterData]] 界面は、 [CODE(DOMi)[[[Node]]]]
界面を継承し、文字データの操作に関わる機能を提供します。

この界面そのものは [[XML]] の[[節]]には対応せず、
この界面を継承した節界面を通して利用します。

なお、文字位置は [CODE(DOM)[0]] から数えます。

[2]
,属性	,[[data]]	,文字データ	,[DOM1]
,読取専用属性	,[[length]]	,文字データ長	,[DOM1]
,method	,[[substringData]]	,文字データの一部を取出す	,[DOM1]
,method	,[[appendData]]	,文字データに付加	,[DOM1]
,method	,[[insertData]]	,文字データを挿入	,[DOM1]
,method	,[[deleteData]]	,文字データを削除	,[DOM1]
,method	,[[replaceData]]	,文字データを置換	,[DOM1]

[3] >>2 特定言語の作法に強く影響されている気がしないでもありませんが(w

- [DOM1] ''Document Object Model (Core) Level 1'' <http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-FF21A306>
- [4] [CODE(DOMi)[CharacterData]] は、任意の長さの文字列を扱えなければなりません。しかしながら、束縛によっては [CODE(DOM)[[[DOMString]]]] で扱える長さの制限があって、よって [CODE(DOM)[data]] 属性で値全体を取出すことが出来ないかもしれません (その時は [CODE(DOM)[DOMSTRING_SIZE_ERR]] 例外が発生します)。そのような場合には、 [CODE(DOMmethod)[substringData]] method を使うように、と仕様書は言っています。
- [5] [DOM2] ''Document Object Model Core'' <http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-FF21A306>
- [6] >>3 実際、 method の多くは [CODE(DOMp)[offset]] パラメーターを持ってますが、これは UTF-16 で表した時のオクテット列中の文字の位置 (16ビット1単位) です。だから [CODE(DOM)[DOMString]] を勝手に UTF-8 とかにして実装すると、面倒なことになります。だから、言語中立なはずの界面としての DOM で [CODE(DOMi)[CharacterData]] は駄目すぎます。
- [7] >>6 変な見栄?はってどんな言語でも使えますよ〜なんていわずに、最初から文字列型を UTF-16 に出来るどんな言語でも使えますよ〜と言っとけばいいのにねぇ。

[8]
fsdfsd
([[名無しさん]] [WEAK[2004-08-13 01:55:37 +00:00]])

[9]
fsdfsd
([[名無しさん]] [WEAK[2004-08-13 01:55:39 +00:00]])

[10]
fsdfsd
([[fsdf]] [WEAK[2004-08-13 01:55:41 +00:00]])

[11]
fsdfsd
([[fsdf]] [WEAK[2004-08-13 01:55:42 +00:00]])


[12]
fsdfsd
([[fsdf]] [sdfsd] [WEAK[2004-08-13 01:55:43 +00:00]])


[[#comment]]


* メモ@

