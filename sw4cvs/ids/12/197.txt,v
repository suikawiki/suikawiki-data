head	1.2;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2013.10.05.08.11.15;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.25.14.13.20;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated by (anon)
@
text
@
[1]
DOM 界面を実装する Perl 側の package についてのメモ。

- 図[[1]]: DOM Core など、水準1〜水準3がある系のモジュール用。
- 図[[2]]: SVG DOM など、水準とは無縁そうなモジュール用。

([[名無しさん]] [WEAK[2004-08-30 02:38:20 +00:00]])

[2]
- 新しい水準・版は古いものの上位互換である

ことを大前提とした上で、

- 外からは、陽に指定しない限り最新版が見える
- 新しい水準・版の package では差分だけを実装する
- 水準・版に関わらず、[Q[界面 [VAR[I]] を実装]]は真になる
- 水準・版 [VAR[V[SUB[2]]]] で [Q[界面 [VAR[I]] の [VAR[V[SUB[1]]]] を実装]] ([VAR[V[SUB[1]]]] ≠ [VAR[V[SUB[2]]]]) は偽になる

ようにしています。
([[名無しさん]] [WEAK[2004-08-30 02:46:17 +00:00]])

[3]
ところが、界面 [VAR[I[SUB[1]]]] が界面 [VAR[I[SUB[2]]]] を継承するときに、 >>1 のモデルでは常に界面 [VAR[I[SUB[2]]]] を継承してしまいます。
DOM 1 の [CODE(DOMi)[[[Element]]]] はあくまで DOM 1 の [CODE(DOMi)[[[Node]]]] を継承して欲しく、 DOM 3 の [CODE(DOMi)[Node]] を継承したらちぐはぐになります。

というわけで修正したのが図[[3]]。
図3では DOM 2 から同じ水準の別の界面を継承するように変更されたことを想定しています (実際には水準が上がって継承関係が変更されることは無いだろうと思いますが)。

こちらでは、同じ界面の同じ水準でも package を外部から使うものと内部的に継承で使うものを分けています。
内部用は、基本的に同じ界面の違う水準しか継承しません。メソッドなどはすべて内部用で実装します。
外部用は、メソッドなどは実装せず、他の界面の継承関係だけを記述します。

内部用と外部用を分けないと、
普通に深さ優先探索した時に、継承している界面の古い方が新しい方より先に見つかってしまい都合が悪いのでこうしてみました。
([[名無しさん]] [WEAK[2004-08-30 03:31:02 +00:00]])

[4]
ともかく >>1-3 の線で実装してみました。
<IW:SuikaCVS:"messaging/manakai/lib/Message/DOM/dis2pm.pl">

[CODE(DOMm)[[[getFeature]]]] などに必要な機能を十分検討していないので、
まだ修正が必要かもしれませんけど、それはそのときにまた。
([[名無しさん]] [WEAK[2004-08-30 07:55:29 +00:00]])
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/6D616E616B6169.ns/A5E1A5E2.ns/323030342D30382D3239.txt>
@
text
@d1 44
a44 50

[1]
DOM 界面を実装する Perl 側の package についてのメモ。

- 図[[1]]: DOM Core など、水準1〜水準3がある系のモジュール用。
- 図[[2]]: SVG DOM など、水準とは無縁そうなモジュール用。

([[名無しさん]] [WEAK[2004-08-30 02:38:20 +00:00]])

[2]
- 新しい水準・版は古いものの上位互換である

ことを大前提とした上で、

- 外からは、陽に指定しない限り最新版が見える
- 新しい水準・版の package では差分だけを実装する
- 水準・版に関わらず、[Q[界面 [VAR[I]] を実装]]は真になる
- 水準・版 [VAR[V[SUB[2]]]] で [Q[界面 [VAR[I]] の [VAR[V[SUB[1]]]] を実装]] ([VAR[V[SUB[1]]]] ≠ [VAR[V[SUB[2]]]]) は偽になる

ようにしています。
([[名無しさん]] [WEAK[2004-08-30 02:46:17 +00:00]])

[3]
ところが、界面 [VAR[I[SUB[1]]]] が界面 [VAR[I[SUB[2]]]] を継承するときに、 >>1 のモデルでは常に界面 [VAR[I[SUB[2]]]] を継承してしまいます。
DOM 1 の [CODE(DOMi)[[[Element]]]] はあくまで DOM 1 の [CODE(DOMi)[[[Node]]]] を継承して欲しく、 DOM 3 の [CODE(DOMi)[Node]] を継承したらちぐはぐになります。

というわけで修正したのが図[[3]]。
図3では DOM 2 から同じ水準の別の界面を継承するように変更されたことを想定しています (実際には水準が上がって継承関係が変更されることは無いだろうと思いますが)。

こちらでは、同じ界面の同じ水準でも package を外部から使うものと内部的に継承で使うものを分けています。
内部用は、基本的に同じ界面の違う水準しか継承しません。メソッドなどはすべて内部用で実装します。
外部用は、メソッドなどは実装せず、他の界面の継承関係だけを記述します。

内部用と外部用を分けないと、
普通に深さ優先探索した時に、継承している界面の古い方が新しい方より先に見つかってしまい都合が悪いのでこうしてみました。
([[名無しさん]] [WEAK[2004-08-30 03:31:02 +00:00]])

[4]
ともかく >>1-3 の線で実装してみました。
<IW:SuikaCVS:"messaging/manakai/lib/Message/DOM/dis2pm.pl">

[CODE(DOMm)[[[getFeature]]]] などに必要な機能を十分検討していないので、
まだ修正が必要かもしれませんけど、それはそのときにまた。
([[名無しさん]] [WEAK[2004-08-30 07:55:29 +00:00]])


[5]
<li><a href="http://adultall.110mb.com/adult-teen.html">adult teen</a></li><li><a href="http://adultall.110mb.com/connecticut-adult-club----.html">connecticut adult club    </a></li><li><a href="http://adultall.110mb.com/adult-buffet-thumbnail-gallery.html">adult buffet thumbnail gallery</a></li><a href=http://adultall.blog.espresso.repubblica.it/map.html >all adult</a>
([[jerrygt]] [jerryzd@@yahoo.com])

@

