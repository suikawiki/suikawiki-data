head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.29.18.00.24;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/5375696B6157696B6933.ns/A5E1A5E2.ns/323030352D30332D3233.txt>
@
text
@[1] [[SuikaWiki2]] と [[SuikaWiki3]] は [[WikiResource]]
と称して[[利用者界面]]に当たる部分を [[wiki]]
の管理者と利用者が柔軟に設定できる仕組みを採用してきました。
はじめは[[内容折衝]]による[[局所化]]のための単純な[[メッセージ型録]]のための簡易データベースでしたが、
適切な局所化のためには[[変数]]のような仕組みや簡単な[[マーク付け]]が必要なことから単純な[[文字列]]ではなく [CODE(perl)[[[Message::Util::Formatter]]]]
の書式を当初より用いており、その柔軟性から (安全のため) [[wiki]]
のシステムに大きく関わらない部分の customize 
のための仕組みとして使うようになりました。

[2] 現在の実装には幾つかの問題が見つかっています。

'''[CODE(perl)[Message::Util::Formatter]] による処理が何度行われるのか分からない'''。
基本的にはソース・コードを調べるしかありません。また、
評価の文脈によって使える規則も違ってきますが、
それも分かりません。 [[SuikaWiki3]] では原則として文脈
[CODE[view-resource]] で一度だけ評価するように統一しましたが、
例外もあります。

'''言語情報が保存されない'''。メッセージ型録は[[言語]]毎に用意され、
閲覧者の指定した優先度で選択が行われますが、
言語の情報が資源の選択の段階で捨てられてしまうので出力の
[CODE(XMLa)[[[xml]]:[[lang]]]] 属性などに反映させることができません。

'''Wiki 内の一部分のみの適用ができない'''。
Wiki 内の一部の分類に属する頁だけとか、
一部の階層に属する頁だけとかに対するメッセージ型録が使えません。
実装の深い部分は比較的柔軟な実装になっているので、
[[SuikaWiki2]] の頃から [[BugTrack]] [[WikiPlugin]]
は独自のメッセージ型録を使えるようになっていますが、
全面的にこれを採用するためには浅い部分でいくらかの修正が必要です。

'''資源名の管理'''。資源名は現在使用する [[WikiPlugin]]
を接頭辞として使うことで大域性を確保していますが、
やたらと名前が長くなる割に命名方法に統一性がありません。
以前に決めた名前は [[WikiPlugin]] 
の再編などがあっても変えずに使っているので余計にばらばらです。

'''キャッシュ付け'''。一度処理した資源の値は効率のためできるだけ再利用したいところですが、
あまりうまくいっていません。[[内容折衝]]の時に言語の優先順位が様々なのでキャッシュがうまく働きそうに無いことと、
[[変数]]的な部分を含むものや含まないもの、
特定の出力形式 ([[HTML]] や [[RSS]] など) に依存するものとしないものなどの切り分けのための情報がないことが問題です。

他に使える規則の種類が分からないとか、
資源名が分からないとかの問題があります。 [[SuikaWiki3]]
ではソース・コードから説明を機械的に生成できるように設計されていますが、
生成のためのプログラムは実用レベルに至らずに放置されています。

[3] '''改良版実装の概要''':

'''SuikaWikiConfig/2.1 の採用'''。 [[SuikaWiki3]] では設定ファイル的記述に
[[SuikaWikiConfig/2.0]] を採用していますが、 [[WikiResource]]
だけは [[SuikaWiki2]] 以来 [[SuikaWikiConst/0.9]]
を使っています。 [[SuikaWikiConfig/2.0]] は [[SuikaWikiConst/0.9]]
の名前と値の間に必ず改行が必要という欠点や階層化された指定ができないという問題を解決しています。
[[SuikaWikiConfig/2.1]] は [[SuikaWikiConfig/2.0]]
の継続行の[[空白]]の扱いに関する問題に対処すると共に[[名前空間URI]]
や書きやすさのための[Q[要素束縛]]機能を導入しています。

ただし、 [[SuikaWikiConfig/2.1]] にもまだ残された課題が幾つかありますし、
実装が遅いのが欠点です。遅さはデータベースの採用でカバーできますが、
更に改良した記述形式を規定する必要があるかもしれません。

'''中間データベースの採用'''。 [[SuikaWikiConfig/2.1]]
で管理者・利用者が直接記述した[Q[ソース]]を毎回読み込まずに、
ある程度の解釈・評価を行った中間データベースを使います。

元の記述のうち、静的な部分 (単なるマーク付けなど)
は評価し、その結果の[[木]]をそのまま保存しておきます。
実際に使用する時には必要に応じて動的な部分を決定して出力します。
このためにはマーク付けの性質を判定できるような仕組みが必要です。

1つの元の記述に対して [[HTML]] 用と [[DocBook]]
用のように複数の木を保存しておけるとよいかもしれませんが、
当然その分複雑になってしまいます。

分類や階層に応じた複数のメッセージ型録の利用についての配慮も必要です。

'''新しいマーク付け形式''':
現在の [CODE(perl)[[[Message::Util::Formatter]]]]
の書式に代わる新たなマーク付けの書式が必要です。

-語彙は[[名前空間URI]] 
と[[局所名]]により大域的に識別でき'''なければなりません'''。
-語彙の情報が無くても構文解析できなければ'''なりません'''。
語彙の情報によって構文解析の結果が変わっては'''なりません'''。
-[[要素]]は入れ子にできなければ'''なりません'''。
-[[属性]]を扱えなければ'''なりません'''。
[[要素]]の一形態としてであっても'''構いません'''。
属性は更に構造を持てる'''べきです'''。
-[[空白]]はできるだけどこにでも自由に挿入できる'''べきです'''。
-[[マーク]]に使う文字は少なくする'''べきです'''。
-[[妥当性]]の検証は行える'''べきです'''が、
構文解析や通常の使用のために必要であっては'''なりません'''。
@
