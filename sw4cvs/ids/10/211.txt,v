head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.19.08.22.41;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/5850617468.ns/BCB4.txt>
@
text
@#?SuikaWiki/0.9
[1] [[XPath]] の軸 ([[axis]];
<http://www.w3.org/TR/xpath#axes>) について。

[2] 軸は、[[現在節]]から見て、次に選択する[[節]]のある方向を示します。

[PRE[
      ancestor-or-self <==
  /           ancestor <--
  +-- 曽祖父  
        +-- 祖父
        |     +-- 父の兄
        |     | parent               preceding
        |     +-- 父 preceding           /\
        |          | :-sibling           |
        |          +-:- 兄1 :            |
        |          +-:- 兄2 :            |
        |          | ~~~↑~~~
        |          |         ==> descendant-or-self
        |          |   self  --> descendant
        |          +-- 自分  :child:
        |          |     +---: 子1 :
        |          |     +---: 子2 :
        |          |         :  +--:- 孫
        |          |    ↓   ~~~~~~~   +-- 曽孫
        |          | following
        |          | :-sibling           |
        |          +-:- 弟  :            |
        |          | :   +---- 弟の子    |
        |          +-:- 弟2 :            \/
        +-- 祖父の弟 ~~~~~~~~         following
]PRE]

[4] 軸には、[[順軸]] (forward axis)
と[[逆軸]] (reverse axis) があります。
[[文脈節]]からみて[[文書順]]に後ろの節を含みうる軸が順軸、
前の節を含みうる軸が逆軸です
<http://www.w3.org/TR/xpath#predicates>。

[3]
,[[child]]        ,(直接の) [[子節]]               ,順軸
,[[descendant]]   ,[[子孫節]]                      ,順軸
,[[parent]]       ,(直接の) [[親節]]               ,逆軸
,[[ancestor]]     ,[[先祖節]]                      ,逆軸
,[[following-sibling]],弟妹節                      ,順軸
,[[preceding-sibling]],兄姉節                      ,逆軸
,[[following]]    ,自分よりも後の節 (子孫は含まれない。),順軸
,[[preceding]]    ,自分よりも前の節 (先祖を除く。) ,逆軸
,[[attribute]]    ,[[属性節]]                      ,順軸
,[[namespace]]    ,[[名前空間節]]                  ,順軸
,[[self]]         ,自節 (文脈節自身)               ,順軸
,[[descendant-or-self]],自節及び子孫節             ,順軸
,[[ancestor-or-self]],自節及び先祖節               ,逆軸

[5] 軸が省略されている時は、
[CODE(XPath)[child]] とみなされます。
たとえば、位置段階 [SAMP(XPath)[foo]]
は [SAMP(XPath)[child::foo]] と同義です。

[6] [[位置経路]]ではない[[式]]であるために軸が存在しないとき
(で必要な場合において) も、軸 [CODE(XPath)[child]]
が仮定されます。
例えば、 [SAMP(XPath)[foo:function()[ [[position]]() = 5] ]]で、関数 [CODE[foo:function]] が文脈節の子の [SAMP[e]]
要素の孫要素である [SAMP[f]] 要素
([CODE(XPath)[child::e/child::[[node]]()/child::f]])
を選択して返すとすると、[CODE(XPath)[child::e/child::[[node]]()/child::f[ position() = 5] ]]
と同義になります。

この例ではそのままなのであまり面白くありませんが、
[CODE[foo:function()]]
の代わりに [SAMP(XPath)[(preceding::e)[position() = 5] ]]
にするともしかすると予想外かもしれないことが起こります。
[CODE(XPath)[[[preceding]]]] は[[逆軸]]なので、
文書順とは逆の順序になっています。
だから [SAMP(XPath)[preceding::e[position() = 5] ]]
は文書順で最後から5番目の節が選ばれます。
ところが、 [SAMP(XPath)[(preceding::e)[position() = 5] ]]
では [CODE(XPath)[([VAR[式]])]] が順軸扱いなので、
文書順で最初から5番目の節が選ばれます。
@
