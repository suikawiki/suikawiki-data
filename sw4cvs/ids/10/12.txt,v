head	1.1;
access;
symbols
	suika-20100509:1.1
	before-graph-20090923:1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2008.11.18.18.18.37;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/6D616E616B6169.ns/A5E1A5E2.ns/323030362D30342D3330.txt>
@
text
@
[1]
[CODE(DOMi)@@en[[[TreeWalker]]]]を実装してみた。

;; <http://suika.fam.cx/gate/cvs/messaging/manakai/lib/Message/DOM/Traversal.dis>

[CODE(DOMi)@@en[[[NodeIterator]]]] は[[木]]の[[変異]]を監視していないと実装不可能な気がする。

;; 特に[[部分木]]の位置を移動して場所が入れ替わっている場合。

([[名無しさん]] [WEAK[2006-04-30 10:40:31 +00:00]])

[2]
[CODE(DOMi)@@en[[[NodeIterator]]]] の実装について。

[[参照節点]] (仕様書では四角い括弧) と、[[位置]] (仕様書では星印)
が[[参照節点]]の右か左かを覚えておけば実装できそうな気がする。
[[木]]が変化しない場合はもちろん、[[部分木]]が挿入されてもうまく動く。
[[参照節点]]''以外''の[[部分木]]の削除があってもいい。

([[名無しさん]])


[3]

問題は[[参照節点]]を''含む''[[部分木]]が削除された場合で、
このときは[[位置]]が固定されて[[参照節点]]の方が変更される。
([[参照節点]]は常に[[根]]と同じ[[部分木]]に属する。)

;; [[位置]]に対するもとの[[参照節点]]の方向にもう[[節点]]がなくなってしまった場合は、逆方向の[[節点]]が新しい[[参照節点]]になる。
[[根]]だけは最後まで残るので、[[位置]]のどちら側にも[[節点]]がなくなってしまうことはない。

([[名無しさん]])

@
