head	1.2;
access;
symbols;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2010.12.26.03.47.20;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.26.03.45.51;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated by (anon)
@
text
@[1] [[MathML]] の [CODE(XMLe)@@en[[[math]]]] [[要素]]の [CODE(XMLa)@@en[[[scroll]]]]
[[属性]]の値 [DFN[[CODE(XML)@@en[[[elide]]]]]] は、[[数式]]が収まりきらないときに「[CODE(math)[[[...]]]]」
などによって省略するべきことを表します。

* 仕様書

- [2] [CITE[MathML Fundamentals]] ([TIME[2010-10-21 05:51:46 +09:00]] 版) <http://www.w3.org/TR/2010/REC-MathML3-20101021/chapter2.html#interf.toplevel.atts>

* レンダリング

[3] [CODE(XML)@@en[[[elide]]]] が指定された場合、[[数式]]は与えられた領域に収まるのに十分な程度に途中を省略するのがよいことになっています。
例えば、長い[[多項式]]であれば、最初と最後の[[項]]を残して、間に「[CODE(math)[+ [[...]] +]]」
を挟んで[[レンダリング]]するとよいかもしれません。 [SRC[>>2]]

[4] 高度な[[レンダリング器]]であれば、省略された部分を[[拡大]]する機能があってもよいかもしれません。 [SRC[>>2]]

[5] このように、仕様上どう省略するかは規定されていないので、[[レンダリング器]]の性能と実装によって省略の仕方は変わってくるでしょうし、
[CODE(XML)@@en[[[elide]]]] 自体に対応しない[[レンダリング器]]もあるでしょう。

* 関連

[6] [[CSS]] の [CODE(CSS)@@en['[[text-overflow]]': [[ellipsis]]]] と似ていますが、
[[CSS]] の方は普通の文章、 [[MathML]] の方は[[数式]]と、対象が違っているので省略の方法も違っています。
@


1.1
log
@created by (anon)
@
text
@d18 6
a23 1
[CODE(XML)@@en[[[elide]]]] 自体に対応しない[[レンダリング器]]もあるでしょう。@

