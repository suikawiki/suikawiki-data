head	1.7;
access;
symbols
	suika-20100509:1.4
	before-graph-20090923:1.4;
locks; strict;
comment	@# @;
expand	@b@;


1.7
date	2012.08.04.02.58.48;	author wakaba;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.02.04.45.04;	author wakaba;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.09.03.19.50;	author wakaba;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.04.03.07.05;	author wakaba;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.04.03.03.53;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.04.02.56.00;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.14.04.19.20;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.7
log
@updated by (anon)
@
text
@
- [1] 【[[数学]]・[[計算機]]】 [[関数]]。
- [2] [[機能]]。


[3] [CITE@@en[Chakra: Interoperability Means More Than Just Standards - IEBlog - Site Home - MSDN Blogs]]
( ([TIME[2010-10-03 15:12:01 +09:00]] 版))
<http://blogs.msdn.com/b/ie/archive/2010/08/25/chakra-interoperability-means-more-than-just-standards.aspx>

[4] [CITE[JavaScriptの無名関数の実行 (function(){})() と (function(){}()) の違い | 圧縮電子精神音楽浮遊構造体]]
( ([TIME[2011-12-18 18:13:16 +09:00]] 版))
<http://polygon-planet.blogspot.com/2011/12/javascript-function-function.html>

[5] [CITE[IRC logs: freenode / #whatwg / 20120726]]
( ([TIME[2012-08-02 21:01:50 +09:00]] 版))
<http://krijnhoetmer.nl/irc-logs/whatwg/20120726#l-185>@


1.6
log
@updated by (anon)
@
text
@d12 5
a16 1
<http://polygon-planet.blogspot.com/2011/12/javascript-function-function.html>@


1.5
log
@updated by (anon)
@
text
@d8 5
a12 1
<http://blogs.msdn.com/b/ie/archive/2010/08/25/chakra-interoperability-means-more-than-just-standards.aspx>@


1.4
log
@updated by (anon)
@
text
@d4 5
@


1.3
log
@updated by (anon)
@
text
@a3 59

[3]
[CITE@@ja[無限リストと遅延評価: Days on the Moon]] ([TIME[2008-10-19 11:36:30 +09:00]] 版) <http://nanto.asablo.jp/blog/2008/02/02/2596496>

[4] [CITE[Hawk's W3 Laboratory : JavaScript Notes : JavaScript 深層 : 関数の生成とオブジェクトの結合]] ([TIME[2009-01-04 11:54:28 +09:00]] 版) <http://web.archive.org/web/20061018193747/www.hawk.34sp.com/stdpls/jsnotes/jssinso/07_functions.html>

[6] 
>関数式は関数宣言に似ていますが「式(Expression)」なので、式を書くことが出来るあらゆる場所に書くことが出来ます。また関数名は省略可能です。
>関数名を指定した場合、その名前はその関数の中からしかアクセスできません。 
>;;「スコープに関するその他の話題」で解説したcatchと同じく、一時的なオブジェクトをスコープチェーンに追加することで実現されます。もっともIEやNN 4.Xでは外部からもアクセスできてしまうようですが…。 

[5] 
>私が調べた限りオブジェクトの結合を実装しているのはNN4.XとGeckoベースのブラウザだけでした。これらは「関数本体が同等で、かつスコープチェーンが全く同じ」場合に限り複数の関数を結合(恐らく実際には関数を再利用)しています。以下が確認のコードです。
>
[PRE(JS example code)[
var fs = new Array();
for(var i=0; i<2; i++) {
   fs[i] = function(){ alert(i); };
}

if(fs[0]==fs[1]) {
   alert('結合されています');
} else {
   alert('結合されていません');
}
]PRE]
>
NN4.XやGeckoベースのブラウザで実行すると「結合されています」と表示され、IEやOpera,KHTMLなどでは「結合されていません」と表示されます。また以下の2例は仕様上結合が認められているが、実際に結合を行う実装が見あたらない例です。いずれも対象となる関数にはスコープチェインの差異があります(差異が外部から観察できるか=実行結果が異なるかどうかとは無関係)。
>
[PRE(JS example code)[
function A() {
   return function (){ alert('hoge'); };
}

var f1 = A();
var f2 = A();

if(f1==f2) {
   alert('結合されています');
} else {
   alert('結合されていません');
}
]PRE]
>
[PRE(JS example code)[
var objects = [{'foo':'bar'}, {'foo':'hoge'}];
var fs = [];
for(var i=0; i<2; i++) {
   with(objects[i]) {
      fs[i] = function(){ alert(foo); };
   }
}

if(fs[0]==fs[1]) {
   alert('結合されています');
} else {
   alert('結合されていません');
}
]PRE]
@


1.2
log
@updated by (anon)
@
text
@d10 1
d15 8
d24 39
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/66756E6374696F6E.txt>
@
text
@d1 14
a14 8

- [1] 【[[数学]]・[[計算機]]】 [[関数]]。
- [2] [[機能]]。

[3]
[CITE@@ja[無限リストと遅延評価: Days on the Moon]] ([TIME[2008-10-19 11:36:30 +09:00]] 版) <http://nanto.asablo.jp/blog/2008/02/02/2596496>
([[名無しさん]])

@

