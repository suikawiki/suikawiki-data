head	1.2;
access;
symbols
	suika-20100509:1.2
	before-graph-20090923:1.2;
locks; strict;
comment	@# @;
expand	@b@;


1.2
date	2009.02.10.11.45.36;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.08.22.41.00;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated by (anon)
@
text
@[1] [CITE[excanvas.js のバグ/不具合とその解決方法 - uupaaの開発日記]] ([TIME[2009-01-09 07:38:03 +09:00]] 版) <http://d.hatena.ne.jp/uupaa/20080729/1217260505>

[2] [CITE@@ja-JP[VML で colors を設定すると opacity の意味が逆になる - れぶろぐ (2008-09-23)]] ([[revulo]] 著, [TIME[2009-01-27 20:55:38 +09:00]] 版) <http://www.revulo.com/blog/20080923.html#p01>

>
まず、上の2つの図を見て下さい。
[PRE(XML example code)[
<v:fill color="red" color2="blue" ... />

<v:fill colors="0% red, 100% blue" ... />
]PRE]
これは赤から青に変化するグラデーションを、2通りの方法で設定しています。当然のことながら、表示結果は同じになります。
>
次に、色の変化と共に、不透明度も 0.5 から 1.0 に徐々に変化するよう設定してみます。
[PRE(XML example code)[
<v:fill color="red" color2="blue" opacity="0.5" o:opacity2="1" ... />

<v:fill colors="0% red, 100% blue" opacity="0.5" o:opacity2="1" ... />
]PRE]
こうすると、グラデーションは薄い赤から濃い青に変化するはずですが、奇妙なことに colors を用いて設定した方は違う結果になります。 opacity="0.5" が、赤でなく青の方に作用したような表示になってしまうのです。
[PRE(XML example code)[
<v:fill colors="0% red, 100% blue" opacity="1" o:opacity2="0.5" ... />
]PRE]
のように opacity と o:opacity2 の設定をひっくり返してやると、ようやく意図した通りの表示になります。
>
ということで、VML のグラデーション機能を使う場合には、たとえ2色のグラデーションであっても、必ず colors を設定するように統一した方がいいです。そうしないと、この意味不明なバグに悩まされることになります。
@


1.1
log
@created by (anon)
@
text
@d1 26
a26 1
[1] [CITE[excanvas.js のバグ/不具合とその解決方法 - uupaaの開発日記]] ([TIME[2009-01-09 07:38:03 +09:00]] 版) <http://d.hatena.ne.jp/uupaa/20080729/1217260505>@

