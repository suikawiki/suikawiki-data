head	1.3;
access;
symbols
	suika-20100509:1.3
	before-graph-20090923:1.3;
locks; strict;
comment	@# @;
expand	@b@;


1.3
date	2009.09.12.09.02.48;	author wakaba;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.21.09.46.22;	author wakaba;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.13.01.12.56;	author wakaba;	state Exp;
branches;
next	;


desc
@@


1.3
log
@updated by (anon)
@
text
@[[内容符号化]]@


1.2
log
@updated by (anon)
@
text
@d1 1
a1 165
#?SuikaWiki/0.9 page-icon="HTTP"
[3] [DFN[内容符号化]]は、 HTTP や派生プロトコルで[[実体]]に施されている符号化です。

[[MIME]] 的には[[媒体型]]に含まれてしまいますが、
媒体型を包含する別の媒体型とでも言うべき、独立したものであることが求められます。
[WEAK[例えば圧縮なら、「[[PNG]] で使っている圧縮」のような特定の媒体型に依存したものではなく、「gzip」のように圧縮対象に依存しないものでないといけません。]]

[[ホップ間]]の転送のための必要から行う変形は[[転送符号化]]というまた別のものになります。
HTTP の転送符号化は MIME の[[内容転送符号化]]にほぼ相当しますが、
これもやはり内容符号化とは別のものです。 (名前が似ているので注意。)

[4] 内容符号化の値として使うものの話や、転送符号化・内容転送符号化との比較などは、
[CODE(WikiPage)[[[内容転送符号化]]]]を参照されたし。

[[#comment]]

* 仕様書から
**RFC 1945 (HTTP/1.0); RFC 2068・2616 (HTTP/1.1) 3.5 Content Codings
[2]
> Content coding values [DEL[are used to]]
indicate an encoding transformation that has been [INS[or can be]]
applied to a[INS[n]] [DEL[resource]] [INS[entity]].
Content codings are primarily used to allow a document to be compressed or [DEL[encrypted]] [INS[otherwise usefully transformed]]
without losing the identity of its underlying media type [INS[and without loss of information]]. [DEL[Typically]] [INS[Frequently]], the [DEL[resource]] [INS[entity]] is stored in [DEL[this encoding]] [INS[coded form, transmitted directly,]] and only decoded [DEL[before rendering or analogous usage]] [INS[by the recipient]].

内容符号化値は、[[実体]]に適用されている、またはすることのできる符号化変形を示します。
内容符号化は、主として、もとの[[媒体型]]の識別を失うことなく、[INS[そして情報を失うことなく、]]文書を圧縮したり[DEL[暗号化したり]][INS[その他有用に変形したり]]するために使います。
多くの場面では、実体は符号化形で蓄積され、直接転送され、[DEL[レンダリングや同様の使用の前に]][INS[受信者によって]]のみ復号されます。

>
- content-coding = [DEL["x-gzip" | "x-compress" |]] token

[DEL[
> Note: For future compatibility, HTTP/1.0 applications should
consider "gzip" and "compress" to be equivalent to "x-gzip"
and "x-compress", respectively.

注意 : 将来との互換性のため、 HTTP/1.0 応用は
[CODE(HTTP)[gzip]] および [CODE(HTTP)[compress]] をそれぞれ
[CODE(HTTP)[x-gzip]] および [CODE(HTTP)[x-compress]]
と同等とみなすべきです。
]DEL]

> All content-coding values are case-insensitive. [DEL[HTTP/1.0]] [INS[HTTP/1.1]] uses
content-coding values in the [INS[Accept-Encoding (section 14.3) and]] Content-Encoding ([DEL[[INS[{1945}]] Section 10.3]] [INS[section [DEL[[INS[{2068}]] 14.12]] [INS[[INS[{2616}]] 14.11]]]]) header field[INS[s]].
Although the value describes the content-coding, what is more
important is that it indicates what decoding mechanism will be
required to remove the encoding. [DEL[Note that a single program may be capable of decoding multiple content-coding formats. Two values are defined by this specification:]]

すべての [CODE(ABNF)[content-coding]] 値は大文字・小文字を区別しません。
HTTP は内容符号化値を [INS[[CODE(HTTP)[[[Accept-Encoding]]]] 頭欄と]]
[CODE(HTTP)[[[Content-Encoding]]]] 頭欄で使います。
この値は [CODE(ABNF)[content-coding]] を記述しますが、
より重要なことは、この値が符号化を取り除くためにどの復号機構が必要であるかを示しているのだということです。[DEL[単一のプログラムに複数の [CODE(ABNF)[content-coding]] 書式を復号する能力があるかもしれないことに注意してください。この仕様書では2つの値を定義します:]]

[INS[
> The Internet Assigned Numbers Authority (IANA) acts as a registry for
content-coding value tokens. Initially, the registry contains the
following tokens:

[[IANA]] が [CODE(ABNF)[content-coding]] 値字句の登録簿として機能します。
はじめに、登録簿は次の字句を含みます :
]INS]

>
: [DEL[x-]]gzip :
An encoding format produced by the file compression program "gzip"
(GNU zip) [DEL[developed by Jean-loup Gailly]] [INS[as described in RFC 1952 [25] ]]. This format is [DEL[typically]] a Lempel-Ziv coding (LZ77) with a 32 bit CRC.
: [DEL[x-]]compress :
> The encoding format produced by the [INS[common UNIX]] file compression
program "compress". This format is an adaptive Lempel-Ziv-Welch
coding (LZW).

: [CODE(HTTP)[[DEL[x-]]gzip]] : [DEL[Jean‐loup Gailly が開発した]]ファイル圧縮プログラム [CODE[gzip]] (GNU zip)
が生成する符号化書式[INS[で、 [[RFC1952]] で説明されている]]。
この書式は[DEL[典型的には]] Lempel‐Ziv 符号化 ([[LZ77]])
に32ビット [[CRC]] を加えたものである。
: [CODE(HTTP)[[DEL[x-]]compress]] : [DEL[共通 UNIX]] ファイル圧縮プログラム
[CODE[compress]] が生成する符号化書式。この書式は Lempel‐Ziv‐Welch
符号化 ([[LZW]]) を使っている。

> [DEL[[INS[{1945,2068}]] Note:]] Use of program names for the identification of encoding
formats is not desirable and [DEL[[INS[{1945,2068}]] should be]] [INS[is]] discouraged for future
encodings. Their use here is representative of historical practice,
not good design. [INS[[INS[{2068,2616}]] For compatibility with previous implementations of HTTP, applications [DEL[should]] [INS[SHOULD]] consider "x-gzip" and "x-compress" to be equivalent to "gzip" and "compress" respectively.]]

符号化書式の識別にプログラム名を使うことは望ましくなく、
将来の符号化では非推奨[DEL[とするべき]]です。
ここでそうしているのは歴史的なものであって、良い設計ではありません。[INS[HTTP の以前の実装との互換性のために、[[応用]]は [CODE(HTTP)[x-gzip]] と [CODE(HTTP)[x-compress]] をそれぞれ [CODE(HTTP)[gzip]] と [CODE(HTTP)[compress]] に等しいものとみなす'''べきです'''。]]

[INS[
> [INS[{2068,2616}]]
: deflate : The "zlib" format defined in RFC 1950[31] in combination with
the "deflate" compression mechanism described in RFC 1951[29].

: [CODE(HTTP)[deflate]] : [[RFC1950]] で定義されている [CODE[zlib]]
書式と [[RFC1951]] で説明されている [CODE[deflate]] 圧縮機構の組合せ。

[INS[
>[INS[{2616}]]
: identity:
The default (identity) encoding; the use of no transformation
whatsoever. This content-coding is used only in the Accept-Encoding
header, and SHOULD NOT be used in the Content-Encoding header.

: [CODE(HTTP)[identity]] : 既定 (ママ) 符号化 — 特に何も変形していない。
この [CODE(ABNF)[content-coding]] は [CODE(HTTP)[[[Accept-Encoding]]]]
頭でのみ使用し、 [CODE(HTTP)[[[Content-Encoding]]]] 頭では使用する'''べきではない'''。
]INS]

> New content-coding value tokens [DEL[should]] [INS[SHOULD]] be registered; to allow
interoperability between clients and servers, specifications of the
content coding algorithms needed to implement a new value [DEL[should]] [INS[SHOULD]] be
publicly available and adequate for independent implementation, and
conform to the purpose of content coding defined in this section.

新しい [CODE(ABNF)[content-coding]] 値字句は登録する'''べきです'''。
[[クライアント]]と[[サーバー]]の間の相互運用性のために、
新しい値を実装するのに必要な内容符号化算法の仕様書が公開で利用可能であり、独立した実装に適当であり、この節で定義した内容符号化の目的に適合するものである'''べきです'''。
]INS]

[INS[
注 : 注記なき修正点は RFC 1945 → RFC 2068 における変更。
]INS]
**RFC 2295 (HTTP 透過内容折衝) 10.8 Negotiation on content encoding
[1]
> Negotiation on the content encoding of a response is orthogonal to
transparent content negotiation.  The rules for when a content
encoding may be applied are the same as in HTTP/1.1: servers MAY
content-encode responses that are the result of transparent content
negotiation whenever an Accept-Encoding header in the request allows
it.  When negotiating on the content encoding of a cacheable
response, servers MUST add the accept-encoding header name to the
Vary header of the response, or add `Vary: *'.

応答の[[内容符号化]]に関する折衝は[[透過内容折衝]]とは直交します。
内容符号化を適用しても良い場合についての規則は HTTP/1.1
にあるのと同じで、サーバーは要求の [CODE(HTTP)[[[Accept-Encoding]]]]
頭が認めているときはいつでも透過内容折衝の結果の応答を内容符号化しても'''構いません'''。
[[キャッシュ可能]]応答の内容符号化の折衝の時には、
サーバーは [CODE(HTTP)[accept-encoding]] 頭名を応答の [CODE(HTTP)[[[Vary]]]]
頭に追加するか、 [CODE(HTTP)[Vary: *]] を追加するかしなければ'''なりません'''。

> Servers SHOULD always be able to provide unencoded versions of every
transparently negotiated response.  This means in particular that
every variant in the variant list SHOULD at least be available in an unencoded form.

サーバーは、各[[透過折衝可能応答]]の符号化されていない版を提供することが常に可能である'''べきです'''。
これは、特に[[変種目録]]にある各変種は少なくても符号化されていない形式で利用可能である'''べきである'''ことを意味します。

> Like HTTP/1.1, this specification allows proxies to encode or decode
relayed or cached responses on the fly, unless explicitly forbidden
by a Cache-Control directive.  The encoded or decoded response still
contains the same variant as far as transparent content negotiation
is concerned.  Note that HTTP/1.1 requires proxies to add a Warning
header if the encoding of a response is changed.

HTTP/1.1 同様に、この仕様書は、 [CODE(HTTP)[[[Cache-Control]]]]
指令が陽に禁じていない限り、中継あるいはキャッシュする応答を串が自動で符号化したり復号したりすることを認めます。
符号化あるいは復号した応答は、透過内容折衝に関する限りは依然として同じ変種を含んでいます。
HTTP/1.1 は串が応答の符号化を変更した時には [CODE(HTTP)[[[Warning]]]]
頭を追加することを要求しているのに注意してください。
** RFC の部分の License
[[RFCのライセンス]]
* メモ
@


1.1
log
@converted from SuikaWiki3 <http://suika.fam.cx/gate/cvs/suikawiki/wikidata/page/C6E2CDC6C9E4B9E6B2BD.txt>
@
text
@d161 1
a161 1
HTTP/1.1 は串が応答の符号化を変更した時には [CODE(HTTP)[[[Warnings]]]]
@

